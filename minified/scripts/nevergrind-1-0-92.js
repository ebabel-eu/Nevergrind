(function($,Math,document,location){if(location.pathname.indexOf("nevergrounds")===-1){nevergrounds=false;}else{nevergrounds=true;}
var g={oldExp:0,lostGold:0,lostExp:0,view:"Main",difficulty:1,subjugateStatus:1,autoAttackStatus:1,amplifyDamageStatus:false,coldBloodBonus:0,gaspingFrenzyStatus:false,petAlive:false,blindStatus:1,speed:.5,showPortal:false,lastDrop:'',draggingWindows:false,familiarName:''}
g.hardcoreDeathStatus=false;var monsterID=0,mob=[];var my;function initMob(){tlMob=[];tlMobSh=[];mobEnvenomTimer=[];mobEngulfingDarknessTimer=[];mobStaticFieldTimer=[];mobBlizzardTimer=[];mobConflagrationTimer=[];mobsEnvenomTimer=[];mobsEngulfingDarknessTimer=[];mobsStaticFieldTimer=[];mobsBlizzardTimer=[];mobsConflagrationTimer=[];mobFearTimers=[];mobGlobeOfDarknessTimers=[];mobMindNumbTimers=[];mobWeakenTimers=[];mobYawnTimers=[];MthornsTimers=[];MlavaTimers=[];MenrageTimers=[];MflurryTimers=[];MamplifyMagicTimers=[];MsanctuaryTimers=[];MbarrierTimers=[];MironMaidenTimers=[];mobsSilenceTimer=[];for(var i=0;i<=5;i++){mob[i]={name:"",level:0,maxHp:0,hp:0,xp:0,str:0,def:0,intel:0,tc:0,gold:0,item1:"",item2:"",skill1:"",skill2:"",skill3:"",skill4:"",poison:0,magic:0,lightning:0,fire:0,cold:0,image:"",mp:20,envenomTicks:0,engulfingDarknessTicks:0,staticFieldTicks:0,blizzardTicks:0,conflagrationTicks:0,castFreq:0,harmTouch:false,rune:false,runeHp:0,skeleton:false,elemental:false,thorns:false,lavaShield:false,resolution:false,resolutionStatus:false,weaken:false,attackNow:false,imageWidth:0,speed:0,castSpeed:0,rare:1,dotDamage:0,castingStatus:false,attack:TDC(),doubleAttack:false,rootStatus:0,snareStatus:false,blindStatus:false,stunStatus:false,fearStatus:false,dazeStatus:false,dazeTimer:TDC(),hemorrhageTickCount:0,hemorrhageTickDamage:0,hemorrhageInterval:TDC(),furiousScorn:0,lacerate:0,widowStrikeDamage:0,widowStrikeTickCount:0,widowStrikeInterval:TDC(),afflictionTickInterval:TDC(),chillStatus:false,riftStatus:false,faerieFlameTick:0,igniteBloodTickInterval:TDC(),cascadingDarknessTickInterval:TDC(),faerieFlameTickCount:0,faerieFlameTickInterval:TDC(),scourgeTickInterval:TDC(),doomingDarknessTickCount:0,doomingDarknessTick:0,doomingDarknessInterval:TDC(),siphonStrength:0,heatBloodTickCount:0,heatBloodTick:0,heatBloodInterval:TDC(),thornsActive:1,lavaShieldActive:1,resolutionActive:1,dotActive:TDC(),thornsTimer:TDC(),lavaShieldTimer:TDC(),spellActive:TDC(),stunTimer:TDC(),blindTimer:TDC(),fearTimer:TDC(),rootTimer:TDC(),sleepStatus:false,sleepTimer:TDC(),consonantChain:0,slowTimer:TDC(),euphonicHymn:0,euphonicHymnTimer:TDC(),petDot:false,charmStatus:false,wolf:true,fearAnimate:TDC(),silenceStatus:false,silenced:false,animateStun:TDC(),enrageStatus:false,enrageTimer:TDC(),flurryStatus:false,flurryTimer:TDC(),ampMagicStatus:false,ampMagicTimer:TDC(),sanctuaryStatus:false,sanctuaryTimer:TDC(),barrierStatus:false,barrierTimer:TDC(),drainStatus:false,ironMaidenStatus:false,ironMaidenTimer:TDC(),fleeStatus:0,fleeNow:false,coldTimer:TDC(),enrage:false,flurry:false,ampMagic:false,sanctuary:false,barrier:false,ironMaiden:false,layHands:false,martyr:false,martyrTiming:TDC(),silenceTimer:TDC(),dronesOfDoomTick:0,dronesOfDoomTickCount:0,dronesOfDoomTickInterval:TDC(),sylvanCreepInterval:TDC(),driftingDeathTick:0,driftingDeathTickCount:0,driftingDeathInterval:0,scourgeTick:0,scourgeTickCount:0,scourgeInterval:0,scourgeStatus:false,slowStatus:false,togorsInsectsTimeout:TDC(),regenStatus:true,afflictionTick:0,afflictionTickCount:0,afflictionInterval:0,afflictionStatus:false,frozenStatus:false,frozenTimer:TDC(),shiftlessDeedsTimeout:TDC(),devouringPlagueTick:0,devouringPlagueTickCount:0,devouringPlagueInterval:TDC(),cascadingDarknessTick:0,cascadingDarknessTickCount:0,cascadingDarknessInterval:0,igniteBloodTick:0,igniteBloodTickCount:0,igniteBloodInterval:0,bondOfDeathTick:0,bondOfDeathTickCount:0,bondOfDeathInterval:TDC(),asystoleTickInterval:TDC(),gaspingEmbraceTickInterval:TDC(),driftingDeathTickInterval:TDC(),asystoleTick:0,asystoleTickCount:0,asystoleInterval:0,asystoleStatus:false,ImageBaseY:0,ImageBaseX:0,shiftlessStatus:0,gaspingEmbraceTick:0,gaspingEmbraceTickCount:0,gaspingEmbraceInterval:0,gaspingEmbraceStatus:false,fallingStatus:false,shatterStatus:false,stasisFieldStatus:false,traits:"",ID:0,shreddingAura:false,tashaniaStatus:false,attackStatus:1};tlMob[i]=TM();tlMobSh[i]=TM();mobEnvenomTimer[i]=TDC();mobEngulfingDarknessTimer[i]=TDC();mobStaticFieldTimer[i]=TDC();mobBlizzardTimer[i]=TDC();mobConflagrationTimer[i]=TDC();mobsEnvenomTimer[i]=TDC();mobsEngulfingDarknessTimer[i]=TDC();mobsStaticFieldTimer[i]=TDC();mobsBlizzardTimer[i]=TDC();mobsConflagrationTimer[i]=TDC();mobFearTimers[i]=TDC();mobGlobeOfDarknessTimers[i]=TDC();mobMindNumbTimers[i]=TDC();mobWeakenTimers[i]=TDC();mobYawnTimers[i]=TDC();MthornsTimers[i]=TDC();MlavaTimers[i]=TDC();MenrageTimers[i]=TDC();MflurryTimers[i]=TDC();MamplifyMagicTimers[i]=TDC();MsanctuaryTimers[i]=TDC();MbarrierTimers[i]=TDC();MironMaidenTimers[i]=TDC();mobsSilenceTimer[i]=TDC();}}
initMob();function TM(){return new TimelineMax({repeat:0,repeatDelay:1});}
function TDC(){return new TweenMax.delayedCall(0,'');}
var strBuff=0,staBuff=0,intelBuff=0,wisBuff=0,dexBuff=0,agiBuff=0,chaBuff=0,maxHpBuff=0,maxMpBuff=0,attackPowerBuff=0,armorBuff=0,hasteBuff=0,svpoisonBuff=0,svmagicBuff=0,svlightningBuff=0,svcoldBuff=0,svfireBuff=0,cooldownDurationBuff=0,spellHasteBuff=0,phyMitBuff=0,magMitBuff=0,attackStatus=1,familiar=[],familiarId=0,hoverItemStatus=false,Cstr=10,Csta=10,Cwis=0,Cint=0,Cdex=0,Ccha=0,Cagi=0,Gstr=5,Gsta=5,meditateStatus=false,newSlotNumber=1,cajolingWhispersTicking=TDC(),mySingingSword=false,mySingingSwordTimer=TDC(),myFrenzy=false,myFrenzyTimer=TDC(),myCounter=false,invincibleTimer=TDC(),enteredWorldOnce=false,nameFocus=false,trainSkill="",cost=0,flashingCityBorder=TDC(),ambushCooldown=false,monsterFound=false,enteredWorld=false,weatherStatus=0,weatherStatusMessage=0,flashingBorderTimer=TDC(),dropClass="",dropID="",dragID="",dragSlot=0,dropSlot=0,dropHtml="",dragClass="",dragHtml="",runTimer=TDC(),runTimer2=TDC(),myBashTimer=TDC(),runBonus=0,animateMobNameTimeout0=0,animateMobNameTimeout1=0,animateMobNameTimeout2=0,animateMobNameTimeout3=0,checkZoneTrigger=0,toggleAttackBorder=false,ambushStatus=1,cobraStrikeBonus=1,stoneFistStatus=1,innerPeaceStatus=1,myAttack=TDC(),myAttack2=TDC(),toggleAttack=1,spellCooldown=0,toggleNameFlash=false,myHpTick=0,myMpTick=0,doubletimer1=TDC(),doubletimer2=TDC(),refreshSkill=0,refreshGlobal=0;function fix(foo){foo=(foo+0).toFixed(1);if(foo[foo.length-1]==0){foo=foo.split("");foo.pop();foo.pop();foo=foo.join("");return foo;}else{foo=foo-0;return foo.toFixed(1);}}
function green(s){return"<span class='green'>"+s+"</span>";}
function red(s){return"<span class='redfont'>"+s+"</span>";}
function red2(s){return"<span class='red'>"+s+"</span>";}
function yellow(s){return"<span class='yellow'>"+s+"</span>";}
function gold(s){return"<span class='gold'>"+s+"</span>";}
function blue1(s){return"<span class='blue1'>"+s+"</span>";}
function blue2(s){return"<span class='blue2'>"+s+"</span>";}
function blue3(s){return"<span class='blue3'>"+s+"</span>";}
function darkgreen(s){return"<span class='darkgreen'>"+s+"</span>";}
function green3(s){return"<span class='green3'>"+s+"</span>";}
function magenta(s){return"<span class='magenta'>"+s+"</span>";}
function grey(s){return"<span class='grey'>"+s+"</span>";}
function normal(foo){return'<span class="normal">'+foo+'</span>';}
function magical(foo){return'<span class="magical">'+foo+'</span>';}
function rare(foo){return'<span class="rare">'+foo+'</span>';}
function unique(foo){return'<span class="unique">'+foo+'</span>';}
function set(foo){return'<span class="set">'+foo+'</span>';}
function legendary(foo){return'<span class="legendary">'+foo+'</span>';}
function showTooltip(that,z){var x="#4169e1";var S=dropSlot;if(!nevergrounds){var Z=P[z][S];}else{var Z=P['eq'][S];}
var J=my.job;if(Z.rarity===0){NG.ttItemName.innerHTML=normal(Z.name);}else if(Z.rarity===1){NG.ttItemName.innerHTML=magical(Z.name);}else if(Z.rarity===2){NG.ttItemName.innerHTML=rare(Z.name);}else if(Z.rarity===3){NG.ttItemName.innerHTML=unique(Z.name);}else if(Z.rarity===4){NG.ttItemName.innerHTML=set(Z.name);}else if(Z.rarity===5){NG.ttItemName.innerHTML=legendary(Z.name);}
var foo="<div id='itemIcon'><div id='itemIconImg'></div></div>";if(!nevergrounds){if(z==="item"){if(S>23){var kek=itemSellValue((that.parent().index())+24);foo+=("Cost: "+kek+" Gold<br><br>").fontcolor("#00aa00");}
if(S<=23&&cityStatus===true){var kek=itemSellValue(that.parent().index());foo+=("Sale Value: "+kek+" Gold<br><br>").fontcolor("#00aa00");}}}
if(Z.quality===1){foo+="<span class='exceptionalItem'>Exceptional Quality</span><br>";}
if(Z.quality===2){foo+="<span class='eliteItem'>Elite Quality</span><br>";}
if(Z.req){if(Z.req>my.level){foo+=("Required Level: "+Z.req+"<br><br>").fontcolor("#ff0000");}else{foo+=("Required Level: "+Z.req+"<br><br>").fontcolor("#ffffff");}}
if(!nevergrounds){foo+=itemType(z,S)+"<br>";}else{foo+=itemType('eq',S)+"<br>";}
hoverType=Z.itemSlot;if(Z.type==="shield"){foo+=~~(setShieldBlockChance(Z.yPos)*100)+"% Block Rate<br>";}
if(Z.type==="cloth"){foo+="Cloth Armor<br>";}
if(Z.type==="leather"){if((J==="Necromancer"&&!Z.weight)||(J==="Enchanter"&&!Z.weight)||(J==="Magician"&&!Z.weight)||(J==="Wizard"&&!Z.weight)){var bar=yellow("Leather Armor<br>");}else{var bar="Leather Armor<br>";}
foo+=bar;}
if(Z.type==="chain"){if(J==="Necromancer"||J==="Enchanter"||J==="Magician"||J==="Wizard"||(J==="Monk"&&!Z.weight)||(J==="Druid"&&!Z.weight)){var bar=yellow("Chain Armor<br>");}else{var bar="Chain Armor<br>";}
foo+=bar;}
if(Z.type==="plate"){if(J==="Druid"||J==="Monk"||J==="Necromancer"||J==="Enchanter"||J==="Magician"||J==="Wizard"||(J==="Rogue"&&!Z.weight)||(J==="Ranger"&&!Z.weight)||(J==="Shaman"&&!Z.weight)){var bar=yellow("Plate Armor<br>");}else{var bar="Plate Armor<br>";}
foo+=bar;}
if(Z.type==="slashed"){if(my.oneHandSlash>=1){foo+="One-Hand Slashing<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}else{foo+=yellow("One-Hand Slashing")+"<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}}
if(Z.type==="cleaved"){if(my.twoHandSlash>=1){foo+="Two-Hand Slashing<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}else{foo+=yellow("Two-Hand Slashing")+"<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}}
if(Z.type==="crushed"){if(my.oneHandBlunt>=1){foo+="One-Hand Blunt<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}else{foo+=yellow("One-Hand Blunt")+"<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}}
if(Z.type==="smashed"||Z.type==="staff"){if(my.twoHandBlunt>=1){foo+="Two-Hand Blunt<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}else{foo+=yellow("Two-Hand Blunt")+"<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}}
if(Z.type==="pierced"){if(my.piercing>=1){foo+="Piercing<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}else{foo+=yellow("Piercing")+"<br>Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}}
if(Z.type==="range"){foo+="Damage: "+Z.damage+" Delay: "+(Z.delay/100).toPrecision(2)+"<br>";}
foo+="<br>";if(Z.armor){foo+=("+"+Z.armor+" Armor<br>").fontcolor(x);}
if(Z.rarity===2){if(Z.enhancedArmor){foo+=("+"+Z.enhancedArmor+"% Enhanced Armor<br>").fontcolor(x);}
if(Z.ias){foo+=("+"+Z.ias+"% Increased Attack Speed<br>").fontcolor(x);}}
if(Z.weight){foo+=("Reduced Weight<br>").fontcolor(x);}
if(Z.hp){foo+=("+"+Z.hp+" Maximum Health<br>").fontcolor(x);}
if(Z.mp){foo+=("+"+Z.mp+" Maximum Mana<br>").fontcolor(x);}
if(Z.str>0){foo+=("+"+Z.str+" Strength<br>").fontcolor(x);}
if(Z.str<0){foo+=(Z.str+" Strength<br>").fontcolor(x);}
if(Z.sta){foo+=("+"+Z.sta+" Stamina<br>").fontcolor(x);}
if(Z.agi){foo+=("+"+Z.agi+" Agility<br>").fontcolor(x);}
if(Z.dex){foo+=("+"+Z.dex+" Dexterity<br>").fontcolor(x);}
if(Z.intel){foo+=("+"+Z.intel+" Intelligence<br>").fontcolor(x);}
if(Z.wis){foo+=("+"+Z.wis+" Wisdom<br>").fontcolor(x);}
if(Z.cha>0){foo+=("+"+Z.cha+" Charisma<br>").fontcolor(x);}
if(Z.cha<0){foo+=(Z.cha+" Charisma<br>").fontcolor(x);}
if(Z.allStats){foo+=("+"+Z.allStats+" All Attributes<br>").fontcolor(x);}
if(Z.hpRegen){foo+=("+"+Z.hpRegen+" Health Per Tick<br>").fontcolor(x);}
if(Z.mpRegen){foo+=("+"+Z.mpRegen+" Mana Per Tick<br>").fontcolor(x);}
if(Z.attack){foo+=("+"+Z.attack+" Attack<br>").fontcolor(x);}
if(Z.oneHandSlash){foo+=("+"+Z.oneHandSlash+" One-Hand Slashing<br>").fontcolor(x);}
if(Z.twoHandSlash){foo+=("+"+Z.twoHandSlash+" Two-Hand Slashing<br>").fontcolor(x);}
if(Z.oneHandBlunt){foo+=("+"+Z.oneHandBlunt+" One-Hand Blunt<br>").fontcolor(x);}
if(Z.twoHandBlunt){foo+=("+"+Z.twoHandBlunt+" Two-Hand Blunt<br>").fontcolor(x);}
if(Z.piercing){foo+=("+"+Z.piercing+" Piercing<br>").fontcolor(x);}
if(Z.handtohand){foo+=("+"+Z.handtohand+" Hand to Hand<br>").fontcolor(x);}
if(Z.offense){foo+=("+"+Z.offense+" Offense<br>").fontcolor(x);}
if(Z.dualWield){foo+=("+"+Z.dualWield+" Dual Wield<br>").fontcolor(x);}
if(Z.doubleAttack){foo+=("+"+Z.doubleAttack+" Double Attack<br>").fontcolor(x);}
if(Z.defense){foo+=("+"+Z.defense+" Defense<br>").fontcolor(x);}
if(Z.dodge&&J!=="Monk"){foo+=("+"+Z.dodge+" Dodge<br>").fontcolor(x);}
if(Z.dodge&&J==="Monk"){foo+=("+"+Z.dodge+" Block<br>").fontcolor(x);}
if(Z.parry){foo+=("+"+Z.parry+" Parry<br>").fontcolor(x);}
if(Z.riposte){foo+=("+"+Z.riposte+" Riposte<br>").fontcolor(x);}
if(Z.alteration&&J!=="Bard"){foo+=("+"+Z.alteration+" Alteration<br>").fontcolor(x);}
if(Z.abjuration&&J!=="Bard"){foo+=("+"+Z.abjuration+" Abjuration<br>").fontcolor(x);}
if(Z.evocation&&J!=="Bard"){foo+=("+"+Z.evocation+" Evocation<br>").fontcolor(x);}
if(Z.conjuration&&J!=="Bard"){foo+=("+"+Z.conjuration+" Conjuration<br>").fontcolor(x);}
if(Z.channeling&&J!=="Bard"){foo+=("+"+Z.channeling+" Channeling<br>").fontcolor(x);}
if(Z.alteration&&J==="Bard"){foo+=("+"+Z.alteration+" Singing<br>").fontcolor(x);}
if(Z.evocation&&J==="Bard"){foo+=("+"+Z.evocation+" Percussion<br>").fontcolor(x);}
if(Z.conjuration&&J==="Bard"){foo+=("+"+Z.conjuration+" Wind<br>").fontcolor(x);}
if(Z.abjuration&&J==="Bard"){foo+=("+"+Z.abjuration+" String<br>").fontcolor(x);}
if(Z.channeling&&J==="Bard"){foo+=("+"+Z.channeling+" Brass<br>").fontcolor(x);}
if(Z.allSkills){foo+=("+"+Z.allSkills+" All Skills<br>").fontcolor(x);}
if(Z.critChance){foo+=("+"+Z.critChance+" Critical Chance<br>").fontcolor(x);}
if(Z.critDamage){foo+=("+"+Z.critDamage+"% Critical Damage<br>").fontcolor(x);}
if(Z.phyMit){foo+=("+"+Z.phyMit+" Maximum Physical Reduction<br>").fontcolor(x);}
if(Z.magMit){foo+=("+"+Z.magMit+" Maximum Magic Reduction<br>").fontcolor(x);}
if(Z.resistPoison){foo+=("+"+Z.resistPoison+" Resist Poison<br>").fontcolor(x);}
if(Z.resistMagic){foo+=("+"+Z.resistMagic+" Resist Arcane<br>").fontcolor(x);}
if(Z.resistLightning){foo+=("+"+Z.resistLightning+" Resist Lightning<br>").fontcolor(x);}
if(Z.resistCold){foo+=("+"+Z.resistCold+" Resist Cold<br>").fontcolor(x);}
if(Z.resistFire){foo+=("+"+Z.resistFire+" Resist Fire<br>").fontcolor(x);}
if(Z.allResist){foo+=("+"+Z.allResist+" All Resistances<br>").fontcolor(x);}
if(Z.goldFind){foo+=("+"+Z.goldFind+"% Gold Gain<br>").fontcolor(x);}
if(Z.expFind){foo+=("+"+Z.expFind+"% Exp Gain<br>").fontcolor(x);}
if(Z.lightRadius>0){foo+=("+"+Z.lightRadius+" Magic Find<br>").fontcolor(x);}
if(Z.thorns){foo+=("+"+Z.thorns+" Thorn Damage<br>").fontcolor(x);}
if(Z.absorbPoison&&Z.absorbMagic&&Z.absorbLightning&&Z.absorbCold&&Z.absorbFire){foo+=("Absorb "+Z.absorbPoison+"% of All Magic Damage<br>").fontcolor(x);}else{if(Z.absorbPoison){foo+=("Absorb "+Z.absorbPoison+"% of Poison Damage<br>").fontcolor(x);}
if(Z.absorbMagic){foo+=("Absorb "+Z.absorbMagic+"% of Arcane Damage<br>").fontcolor(x);}
if(Z.absorbLightning){foo+=("Absorb "+Z.absorbLightning+"% of Lightning Damage<br>").fontcolor(x);}
if(Z.absorbCold){foo+=("Absorb "+Z.absorbCold+"% of Cold Damage<br>").fontcolor(x);}
if(Z.absorbFire){foo+=("Absorb "+Z.absorbFire+"% of Fire Damage<br>").fontcolor(x);}}
if(Z.hpKill){foo+=("+"+Z.hpKill+" Health Per Kill<br>").fontcolor(x);}
if(Z.mpKill){foo+=("+"+Z.mpKill+" Mana Per Kill<br>").fontcolor(x);}
if(Z.physicalDamage){foo+=("+"+Z.physicalDamage+" Physical Damage<br>").fontcolor(x);}
if(Z.poisonDamage){foo+=("+"+Z.poisonDamage+" Poison Damage<br>").fontcolor(x);}
if(Z.magicDamage){foo+=("+"+Z.magicDamage+" Arcane Damage<br>").fontcolor(x);}
if(Z.lightningDamage){foo+=("+"+Z.lightningDamage+" Lightning Damage<br>").fontcolor(x);}
if(Z.coldDamage){foo+=("+"+Z.coldDamage+" Cold Damage<br>").fontcolor(x);}
if(Z.fireDamage){foo+=("+"+Z.fireDamage+" Fire Damage<br>").fontcolor(x);}
if(Z.enhancePhysical){foo+=("+"+Z.enhancePhysical+"% Physical Damage<br>").fontcolor(x);}
if(Z.enhancePoison){foo+=("+"+Z.enhancePoison+"% Poison Damage<br>").fontcolor(x);}
if(Z.enhanceMagic){foo+=("+"+Z.enhanceMagic+"% Arcane Damage<br>").fontcolor(x);}
if(Z.enhanceLightning){foo+=("+"+Z.enhanceLightning+"% Lightning Damage<br>").fontcolor(x);}
if(Z.enhanceCold){foo+=("+"+Z.enhanceCold+"% Cold Damage<br>").fontcolor(x);}
if(Z.enhanceFire){foo+=("+"+Z.enhanceFire+"% Fire Damage<br>").fontcolor(x);}
if(Z.enhanceAll){foo+=("+"+Z.enhanceAll+"% All Magical Damage<br>").fontcolor(x);}
if(Z.fear&&Z.stun&&Z.cold&&Z.silence){foo+=("-"+Z.fear+"% All Status Effect Durations<br>").fontcolor(x);}else{if(Z.fear){foo+=("-"+Z.fear+"% Fear Duration<br>").fontcolor(x);}
if(Z.stun){foo+=("-"+Z.stun+"% Stun Duration<br>").fontcolor(x);}
if(Z.cold){foo+=("-"+Z.cold+"% Chill Duration<br>").fontcolor(x);}
if(Z.silence){foo+=("-"+Z.silence+"% Silence Duration<br>").fontcolor(x);}}
if(Z.leech){foo+=("+"+Z.leech+" Life Leech<br>").fontcolor(x);}
if(Z.wraith){foo+=("+"+Z.wraith+" Mana Leech<br>").fontcolor(x);}
if(Z.runSpeed){foo+=("+"+Z.runSpeed+"% Run Speed<br>").fontcolor(x);}
if(Z.haste){var bar=(Z.haste/10)*-1;foo+=("Attack Haste +"+bar+"<br>").fontcolor(x);}
if(Z.globalHaste){var bar=(Z.globalHaste/10)*-1;foo+=("Skill Haste +"+bar+"<br>").fontcolor(x);}
if(Z.castingHaste){var bar=(Z.castingHaste/10)*-1;foo+=("Casting Haste +"+bar+"<br>").fontcolor(x);}
if(Z.upgrade>0){foo+=("<br>Upgrade Status: "+Z.upgrade+"/10<br>");}
if(Z.proc){foo+=(("<br>"+Z.proc+"<br>").fontcolor("#fff5aa"));}
if(Z.flavorText){foo+='<div class="flavorText">'+Z.flavorText+'</div>';}
if(Z.rarity===4){foo+="<div class='setTip'>"+setTip(Z)+"</div>";foo+="<div class='setList'>"+setList(Z)+"</div>";}
NG.ttItemMsg.innerHTML=foo;document.getElementById('itemIconImg').style.backgroundPosition=Z.xPos+"px "+Z.yPos+'px';}
function hpEquipTotal(){var foo=0;if(Set.Golem>=3){foo+=50;}
if(Set.Duke>=3){foo+=80;}
if(Set.Augur>=2){foo+=60;}
if(Set.Baron>=2){foo+=75;}
if(Set.Mendicant>=4){foo+=120;}
if(Set.Satyr>=4){foo+=125;}
for(var i=0;i<=14;i++){foo+=P.eq[i].hp;}
return foo;}
function mpEquipTotal(){var foo=0;if(Set.Vagrant>=3){foo+=35;}
for(var i=0;i<=14;i++){foo+=P.eq[i].mp;}
return foo;}
function strEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].str;}
if(Set.Minotaur>=3){foo+=30;}
if(Set.Warlord>=3){foo+=60;}
return foo;}
function staEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].sta;}
if(Set.Malefactor>=2){foo+=35;}
return foo;}
function agiEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].agi;}
if(Set.Bloodletter>=5){foo+=60;}
if(Set.Assassin>=5){foo+=100;}
return foo;}
function dexEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].dex;}
if(Set.Warlord>=2){foo+=45;}
if(Set.Warder>=5){foo+=100;}
return foo;}
function intelEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].intel;}
if(Set.Augur>=4){foo+=40;}
if(Set.Satyr>=3){foo+=45;}
if(Set.Warlock>=5){foo+=100;}
return foo;}
function wisEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].wis;}
if(Set.Bishop>=2){foo+=12;}
if(Set.Crusader>=2){foo+=50;}
if(Set.HighPriest>=2){foo+=55;}
return foo;}
function chaEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].cha;}
if(Set.Virtuoso>=6){foo+=150;}
return foo;}
function allStatsEquipTotal(){var foo=0;if(Set.Sage>=4){foo+=25;}
if(Set.Willow>=5){foo+=20;}
if(Set.Virtuoso>=2){foo+=20;}
if(Set.Phantasmist>=6){foo+=60;}
for(var i=0;i<=14;i++){foo+=P.eq[i].allStats;}
return foo;}
function hpRegenEquipTotal(){var foo=0;if(Set.Sage>=2){foo+=4;}
if(Set.Guardian>=3){foo+=13;}
if(Set.Mendicant>=5){foo+=10;}
if(Set.Grandmaster>=4){foo+=25;}
if(Set.Hierophant>=3){foo+=24;}
for(var i=0;i<=14;i++){foo+=P.eq[i].hpRegen;}
if(my.race=="Troll"){foo+=(my.maxHp*.01);}
if(my.gender==="female"){foo+=M.ceil(my.level / 30);}
if(skinLikeNatureStatus===true){foo+=(my.level / 12)+1;}
if(phantomPlateStatus===true){foo+=(my.level / 10)+2;}
var enh=0;if(Set.Oracle>=6){enh+=.75;}
foo=(foo*(1+enh));return M.round(foo);}
function mpRegenEquipTotal(){var foo=0;if(Set.Bishop>=3){foo+=4;}
if(Set.Wraith>=2){foo+=7;}
if(Set.Crusader>=3){foo+=14;}
if(Set.Virtuoso>=4){foo+=20;}
if(Set.ArchMage>=4){foo+=20;}
for(var i=0;i<=14;i++){foo+=P.eq[i].mpRegen;}
var enh=0;if(Set.Oracle>=6){enh+=.75;}
foo=(foo*(1+enh));return foo;}
function armorEquipTotal(){var x=0;for(var i=0;i<=14;i++){x+=P.eq[i].armor;}
return x;}
function attackEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].attack;}
return foo;}
function oneHandSlashEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].oneHandSlash;}
return foo;}
function twoHandSlashEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].twoHandSlash;}
return foo;}
function oneHandBluntEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].oneHandBlunt;}
return foo;}
function twoHandBluntEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].twoHandBlunt;}
return foo;}
function piercingEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].piercing;}
return foo;}
function handtohandEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].handtohand;}
if(Set.Vagabond>=3){foo+=15;}
return foo;}
function offenseEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].offense;}
if(Set.Samurai>=2){foo+=6;}
if(Set.GraveLord>=2){foo+=12;}
return foo;}
function dualWieldEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].dualWield;}
if(Set.Bloodletter>=3){foo+=10;}
return foo;}
function doubleAttackEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].doubleAttack;}
if(Set.Friar>=3){foo+=20;}
return foo;}
function defenseEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].defense;}
if(Set.Golem>=2){foo+=5;}
if(Set.Guardian>=2){foo+=10;}
return foo;}
function dodgeEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].dodge;}
return foo;}
function parryEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].parry;}
return foo;}
function riposteEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].riposte;}
if(Set.Friar>=4){foo+=25;}
if(Set.Warder>=2){foo+=20;}
return foo;}
function alterationEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].alteration;}
if(Set.Orator>=2){foo+=6;}
if(Set.Venova>=6){foo+=50;}
return foo;}
function evocationEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].evocation;}
if(Set.Malefactor>=3){foo+=10;}
if(Set.Sorcerer>=3){foo+=20;}
return foo;}
function conjurationEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].conjuration;}
if(Set.Magnate>=4){foo+=20;}
if(Set.Wraith>=5){foo+=15;}
if(Set.Summoner>=6){foo+=50;}
if(Set.ArchMage>=3){foo+=20;}
return foo;}
function abjurationEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].abjuration;}
return foo;}
function channelingEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].channeling;}
return foo;}
function allSkillsEquipTotal(){var foo=0;if(Set.Emissary>=4){foo+=7;}
if(Set.Baron>=3){foo+=2;}
if(Set.Willow>=3){foo+=2;}
if(Set.Wraith>=6){foo+=25;}
if(Set.Grandmaster>=2){foo+=5;}
if(Set.Crusader>=6){foo+=35;}
if(Set.Warlock>=2){foo+=4;}
for(var i=0;i<=14;i++){foo+=P.eq[i].allSkills;}
return foo;}
function critChanceEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].critChance;}
if(Set.Wyvern>=4){foo+=15;}
if(Set.Augur>=6){foo+=40;}
if(Set.Martyr>=4){foo+=15;}
if(Set.Assassin>=6){foo+=55;}
if(Set.HighPriest>=5){foo+=45;}
if(Set.Sorcerer>=4){foo+=35;}
return foo;}
function critDamageEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].critDamage;}
if(Set.Vagabond>=2){foo+=8;}
if(Set.Augur>=5){foo+=25;}
if(Set.Daimyo>=6){foo+=60;}
if(Set.Summoner>=2){foo+=12;}
if(Set.Warlord>=6){foo+=80;}
return foo;}
function phyMitEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].phyMit;}
if(Set.Golem>=4){foo+=25;}
if(Set.Satyr>=2){foo+=15;}
if(Set.Assassin>=3){foo+=24;}
return foo;}
function magMitEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].magMit;}
if(Set.Duke>=5){foo+=15;}
if(Set.Assassin>=2){foo+=15;}
if(Set.Phantasmist>=3){foo+=32;}
return foo;}
function resistPoisonEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].resistPoison;}
if(Set.Chancellor>=2){foo+=35;}
return foo;}
function resistMagicEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].resistMagic;}
if(Set.Venova>=5){foo+=60;}
return foo;}
function resistLightningEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].resistLightning;}
return foo;}
function resistColdEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].resistCold;}
if(Set.Mendicant>=2){foo+=75;}
return foo;}
function resistFireEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].resistFire;}
if(Set.Wyvern>=3){foo+=50;}
return foo;}
function allResistEquipTotal(){var foo=0;if(Set.Miner>=3){foo+=25;}
if(Set.Bishop>=4){foo+=30;}
if(Set.Emissary>=2){foo+=12;}
if(Set.Guardian>=4){foo+=15;}
if(Set.Satyr>=5){foo+=32;}
if(Set.Assassin>=4){foo+=35;}
if(Set.Hierophant>=2){foo+=20;}
if(Set.Warlock>=4){foo+=35;}
if(Set.ArchMage>=5){foo+=45;}
for(var i=0;i<=14;i++){foo+=P.eq[i].allResist;}
if(g.difficulty===2){foo-=30;}
if(g.difficulty===3){foo-=75;}
if(my.job==="Monk"){if(my.talent8>=20){foo+=30;}}
return foo;}
function goldFindEquipTotal(){var foo=0;if(Set.Daimyo>=3){foo+=25;}
if(Set.Virtuoso>=3){foo+=40;}
for(var i=0;i<=14;i++){foo+=P.eq[i].goldFind;}
return foo;}
function expFindEquipTotal(){var foo=0;if(Set.Emissary>=3){foo+=15;}
for(var i=0;i<=14;i++){foo+=P.eq[i].expFind;}
return foo;}
function thornsEquipTotal(){var foo=0;if(Set.Vagrant>=2){foo+=12;}
if(Set.Daimyo>=4){foo+=25;}
if(Set.Hierophant>=4){foo+=150;}
for(var i=0;i<=14;i++){foo+=P.eq[i].thorns;}
return foo;}
function absorbPoisonEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].absorbPoison;}
if(Set.Hierophant>=5){foo+=10;}
if(foo>50){foo=50;}
return foo;}
function absorbMagicEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].absorbMagic;}
if(Set.Crusader>=4){foo+=15;}
if(Set.Hierophant>=5){foo+=10;}
if(Set.Phantasmist>=4){foo+=25;}
if(foo>50){foo=50;}
return foo;}
function absorbLightningEquipTotal(){var foo=0;if(Set.Daimyo>=2){foo+=8;}
if(Set.Hierophant>=5){foo+=10;}
for(var i=0;i<=14;i++){foo+=P.eq[i].absorbLightning;}
if(my.job==="Druid"){if(my.talent4>=20){foo+=15;}}
if(foo>50){foo=50;}
return foo;}
function absorbColdEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].absorbCold;}
if(Set.GraveLord>=3){foo+=12;}
if(Set.Hierophant>=5){foo+=10;}
if(Set.Sorcerer>=2){foo+=10;}
if(my.job==="Druid"){if(my.talent4>=20){foo+=15;}}
if(foo>50){foo=50;}
return foo;}
function absorbFireEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].absorbFire;}
if(Set.Warder>=4){foo+=25;}
if(Set.Hierophant>=5){foo+=10;}
if(Set.ArchMage>=2){foo+=10;}
if(my.job==="Druid"){if(my.talent4>=20){foo+=15;}}
if(foo>50){foo=50;}
return foo;}
function physicalDamageEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].physicalDamage;}
return foo;}
function poisonDamageEquipTotal(){var foo=0;if(Set.Bloodletter>=4){foo+=75;}
if(Set.GraveLord>=6){foo+=315;}
for(var i=0;i<=14;i++){foo+=P.eq[i].poisonDamage;}
if(my.job==="Rogue"){if(my.talent11>=20){foo+=~~(attackFunct()/ 12);}}
return foo;}
function magicDamageEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].magicDamage;}
if(my.job==="Paladin"){if(my.talent3>=20){foo+=~~(attackFunct()/ 18);}}
if(my.job==="Bard"&&chantOfBattleStatus){if(my.talent1>=20){foo+=~~(attackFunct()/ 20);}}
return foo;}
function lightningDamageEquipTotal(){var foo=0;if(Set.Samurai>=3){foo+=24;}
for(var i=0;i<=14;i++){foo+=P.eq[i].lightningDamage;}
return foo;}
function coldDamageEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].coldDamage;}
return foo;}
function fireDamageEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].fireDamage;}
return foo;}
function enhancePhysicalEquipTotal(){var foo=0;if(Set.Minotaur>=4){foo+=12;}
if(Set.Baron>=6){foo+=15;}
if(Set.Grandmaster>=5){foo+=15;}
if(Set.Warder>=3){foo+=10;}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhancePhysical;}
return foo;}
function enhancePoisonEquipTotal(){var foo=0;if(Set.Chancellor>=4){foo+=12;}
if(Set.Mendicant>=6){foo+=30;}
if(Set.Oracle>=4){foo+=20;}
if(Set.Warlock>=6){foo+=~~(attackEquipTotal()*.4);}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhancePoison;}
return foo;}
function enhanceMagicEquipTotal(){var foo=0;if(Set.Orator>=4){foo+=12;}
if(Set.Duke>=6){foo+=30;}
if(Set.Satyr>=6){foo+=30;}
if(Set.Virtuoso>=5){foo+=30;if(Set.Virtuoso>=6){foo+=~~(expFindEquipTotal()*.3);}}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhanceMagic;}
return foo;}
function enhanceLightningEquipTotal(){var foo=0;if(Set.Magnate>=3){foo+=5;}
if(Set.Summoner>=5){foo+=12;}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhanceLightning;}
return foo;}
function enhanceColdEquipTotal(){var foo=0;if(Set.Summoner>=3){foo+=10;}
if(Set.Oracle>=4){foo+=20;}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhanceCold;}
return foo;}
function enhanceFireEquipTotal(){var foo=0;if(Set.Wyvern>=2){foo+=4;}
if(Set.Vagrant>=4){foo+=12;}
if(Set.Willow>=2){foo+=5;}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhanceFire;}
return foo;}
function enhanceAllEquipTotal(){var foo=0;if(Set.Malefactor>=6){foo+=20;}
if(Set.Baron>=6){foo+=15;}
if(Set.HighPriest>=6){foo+=30;}
if(Set.Warlock>=6){foo+=30;}
if(Set.Sorcerer>=5){foo+=20;}
if(Set.Hierophant>=6){foo+=~~(thornsEquipTotal()*.16);}
for(var i=0;i<=14;i++){foo+=P.eq[i].enhanceAll;}
return foo;}
function hpKillEquipTotal(){var foo=0;if(Set.Martyr>=3){foo+=10;}
if(Set.Bloodletter>=2){foo+=12;}
if(Set.Oracle>=2){foo+=20;}
for(var i=0;i<=14;i++){foo+=P.eq[i].hpKill;}
return foo;}
function mpKillEquipTotal(){var foo=0;if(Set.Sage>=3){foo+=7;}
if(Set.Wraith>=3){foo+=15;}
for(var i=0;i<=14;i++){foo+=P.eq[i].mpKill;}
return foo;}
function lightRadiusEquipTotal(){var foo=0;if(Set.Venova>=3){foo+=15;}
if(Set.Grandmaster>=3){foo+=40;}
for(var i=0;i<=14;i++){foo+=P.eq[i].lightRadius;}
return foo;}
function runSpeedEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].runSpeed;}
return foo;}
function hasteEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].haste;}
if(Set.Vagabond>=4){foo-=150;}
if(Set.Baron>=4){foo-=150;}
if(Set.Friar>=6){foo-=500;}
if(Set.Warlord>=5){foo-=400;}
if(Set.GraveLord>=5){foo-=400;}
return foo;}
function globalHasteEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].globalHaste;}
if(Set.Samurai>=4){foo-=150;}
if(Set.Duke>=4){foo-=150;}
if(Set.Daimyo>=5){foo-=250;}
if(Set.Friar>=5){foo-=250;}
if(Set.Warder>=6){foo-=500;}
return foo;}
function castingHasteEquipTotal(){var foo=0;for(var i=0;i<=14;i++){foo+=P.eq[i].castingHaste;}
if(Set.Magnate>=2){foo-=80;}
if(Set.Venova>=4){foo-=150;}
if(Set.Baron>=5){foo-=200;}
if(Set.Mendicant>=3){foo-=150;}
if(Set.Willow>=6){foo-=500;}
if(Set.Wraith>=4){foo-=200;}
if(Set.Summoner>=4){foo-=240;}
if(Set.Malefactor>=5){foo-=210;}
if(Set.Phantasmist>=5){foo-=500;}
if(Set.Sorcerer>=6){foo-=600;}
return foo;}
function fearEquipTotal(){var foo=0;if(Set.Chancellor>=3){foo+=30;}
if(Set.Duke>=2){foo+=40;}
if(Set.Guardian>=6){foo+=75;}
if(Set.Willow>=4){foo+=15;}
if(Set.Crusader>=5){foo+=80;}
if(Set.HighPriest>=3){foo+=70;}
if(my.job==="Bard"){if(P.eq[13].name==="March of Vithe"){foo+=125;}}
if(my.job==="Paladin"){if(my.talent1>=20){foo+=50;}}
for(var i=0;i<=14;i++){foo+=P.eq[i].fear;}
if(g.difficulty===2){foo-=20;}
if(g.difficulty===3){foo-=50;}
if(foo>75){foo=75;}
return foo;}
function stunEquipTotal(){var foo=0;if(Set.Orator>=3){foo+=25;}
if(Set.Guardian>=6){foo+=75;}
if(Set.Willow>=4){foo+=15;}
if(Set.Crusader>=5){foo+=80;}
for(var i=0;i<=14;i++){foo+=P.eq[i].stun;}
if(my.job==="Shadow Knight"){if(my.talent5>=20){foo+=50;}}
if(g.difficulty===2){foo-=20;}
if(g.difficulty===3){foo-=50;}
if(foo>75){foo=75;}
return foo;}
function chillEquipTotal(){var foo=0;if(Set.Guardian>=6){foo+=75;}
if(Set.Willow>=4){foo+=15;}
if(Set.Crusader>=5){foo+=80;}
if(Set.Oracle>=3){foo+=90;}
for(var i=0;i<=14;i++){foo+=P.eq[i].cold;}
if(g.difficulty===2){foo-=20;}
if(g.difficulty===3){foo-=50;}
if(foo>75){foo=75;}
return foo;}
function silenceEquipTotal(){var foo=0;if(Set.Venova>=2){foo+=25;}
if(Set.Malefactor>=4){foo+=40;}
if(Set.Guardian>=6){foo+=75;}
if(Set.Willow>=4){foo+=15;}
if(Set.Crusader>=5){foo+=80;}
if(Set.Phantasmist>=2){foo+=45;}
for(var i=0;i<=14;i++){foo+=P.eq[i].silence;}
if(g.difficulty===2){foo-=20;}
if(g.difficulty===3){foo-=50;}
if(foo>75){foo=75;}
return foo;}
function leechEquipTotal(){var foo=0;if(Set.Miner>=2){foo+=6;}
if(Set.Guardian>=5){foo+=7;}
if(Set.Bloodletter>=6){foo+=40;}
if(Set.Grandmaster>=6){foo+=50;}
if(Set.GraveLord>=4){foo+=24;}
for(var i=0;i<=14;i++){foo+=P.eq[i].leech;}
return foo / 100;}
function wraithEquipTotal(){var foo=0;if(Set.Miner>=2){foo+=6;}
if(Set.Augur>=3){foo+=8;}
for(var i=0;i<=14;i++){foo+=P.eq[i].wraith;}
return foo;}
function checkSetItems(){for(var key in Set){Set[key]=0;}
var s=0;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Minotaur's Horns"){Set.Minotaur++;}
if(N==="Samurai's Devotion"){Set.Samurai++;}
if(N==="Sage's Vision"){Set.Sage++;}
if(N==="Orator's Shout"){Set.Orator++;}
if(N==="Guardian's Merlon"){Set.Guardian++;}
if(N==="Duke's Adoration"){Set.Duke++;}
if(N==="Augur's Skull"){Set.Augur++;}
if(N==="Venova's Halo"){Set.Venova++;}
if(N==="Daimyo's Enso"){Set.Daimyo++;}
if(N==="Willow's Flare"){Set.Willow++;}
if(N==="Satyr's Turban"){Set.Satyr++;}
if(N==="Malefactor's Terminal"){Set.Malefactor++;}
if(N==="Phantasmist's Acumen"){Set.Phantasmist++;}
if(N==="Warlock's Doom"){Set.Warlock++;}
if(N==="High Priest's Abstention"){Set.HighPriest++;}
if(N==="Grave Lord's Deceit"){Set.GraveLord++;}
if(N==="Grandmaster's Symmetry"){Set.Grandmaster++;}
if(N==="Warlord's Scowl"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Miner's Memento"){Set.Miner++;}
if(N==="Martyr's Manifesto"){Set.Martyr++;}
if(N==="Chancellor's Remorse"){Set.Chancellor++;}
if(N==="Magnate's Token"){Set.Magnate++;}
if(N==="Wyvern's Scale"){Set.Wyvern++;}
if(N==="Duke's Laurel"){Set.Duke++;}
if(N==="Baron's Cadenza"){Set.Baron++;}
if(N==="Bloodletter's Vial"){Set.Bloodletter++;}
if(N==="Mendicant's Agimat"){Set.Mendicant++;}
if(N==="Satyr's Opulence"){Set.Satyr++;}
if(N==="Sorcerer's Zodiac"){Set.Sorcerer++;}
if(N==="Oracle's Sibyl"){Set.Oracle++;}
if(N==="High Priest's Mastery"){Set.HighPriest++;}
if(N==="Warder's Zephyr"){Set.Warder++;}
if(N==="Crusader's Cathexis"){Set.Crusader++;}
if(N==="Assassin's Guile"){Set.Assassin++;}}
s++;var minerShard=0;var minerGlimmer=0;var celestial=0;var vagabond=0;var fallen=0;var magnate=0;var lurid=0;var venova=0;var daimio1=0;var bloodletter1=0;var mephitic=0;var willow1=0;var condemned=0;var occult=0;var hierophant=0;var archmage=0;var sorcerer=0;var warlock1=0;var highpriest1=0;var gravelord=0;var crusader=0;var assassin=0;function ringCheck(s){var N=P.eq[s].name;if(N==="Vagabond's Seal"){vagabond=1;}
if(N==="Miner's Shard"){minerShard=1;}
if(N==="Miner's Glimmer"){minerGlimmer=1;}
if(N==="Bishop's Faith"){celestial=1;}
if(N==="Samurai's Fidelity"){fallen=1;}
if(N==="Magnate's Curio"){magnate=1;}
if(N==="Augur's Pustule"){lurid=1;}
if(N==="Venova's Eternity"){venova=1;}
if(N==="Daimyo's Miyabi"){daimio1=1;}
if(N==="Bloodletter's Clot"){bloodletter1=1;}
if(N==="Mendicant's Clover"){mephitic=1;}
if(N==="Willow's Seed"){willow1=1;}
if(N==="Wraith's Lesion"){condemned=1;}
if(N==="Summoner's Gyre"){occult=1;}
if(N==="Hierophant's Holocaust"){hierophant=1;}
if(N==="High Priest's Piety"){highpriest1=1;}
if(N==="Arch Mage's Periapt"){archmage=1;}
if(N==="Sorcerer's Pulsar"){sorcerer=1;}
if(N==="Warlock's Carnage"){warlock1=1;}
if(N==="Grave Lord's Perfidy"){gravelord=1;}
if(N==="Crusader's Allegiance"){crusader=1;}
if(N==="Assassin's Helix"){assassin=1;}}
if(P.eq[s].rarity===4){ringCheck(s);}
s++;if(P.eq[s].rarity===4){ringCheck(s);}
if(minerShard){Set.Miner++;}
if(vagabond){Set.Vagabond++;}
if(minerGlimmer){Set.Miner++;}
if(celestial){Set.Bishop++;}
if(fallen){Set.Samurai++;}
if(magnate){Set.Magnate++;}
if(lurid){Set.Augur++;}
if(venova){Set.Venova++;}
if(daimio1){Set.Daimyo++;}
if(bloodletter1){Set.Bloodletter++;}
if(mephitic){Set.Mendicant++;}
if(willow1){Set.Willow++;}
if(condemned){Set.Wraith++;}
if(occult){Set.Summoner++;}
if(hierophant){Set.Hierophant++;}
if(highpriest1){Set.HighPriest++;}
if(warlock1){Set.Warlock++;}
if(archmage){Set.ArchMage++;}
if(sorcerer){Set.Sorcerer++;}
if(gravelord){Set.GraveLord++;}
if(crusader){Set.Crusader++;}
if(assassin){Set.Assassin++;}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Golem's Shelf"){Set.Golem++;}
if(N==="Minotaur's Sprawl"){Set.Minotaur++;}
if(N==="Vagrant's Timber"){Set.Vagrant++;}
if(N==="Guardian's Bastion"){Set.Guardian++;}
if(N==="Duke's Proclamation"){Set.Duke++;}
if(N==="Mendicant's Albatross"){Set.Mendicant++;}
if(N==="Willow's Frost"){Set.Willow++;}
if(N==="Summoner's Residue"){Set.Summoner++;}
if(N==="Arch Mage's Debacle"){Set.ArchMage++;}
if(N==="Hierophant's Blizzard"){Set.Hierophant++;}
if(N==="Oracle's Ailment"){Set.Oracle++;}
if(N==="Virtuoso's Orotund"){Set.Virtuoso++;}
if(N==="Crusader's Fervor"){Set.Crusader++;}
if(N==="Warlord's Disdain"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Samurai's Ardor"){Set.Samurai++;}
if(N==="Vagrant's Copse"){Set.Vagrant++;}
if(N==="Wyvern's Wing"){Set.Wyvern++;}
if(N==="Duke's Ascension"){Set.Duke++;}
if(N==="Venova's Wings"){Set.Venova++;}
if(N==="Daimyo's Wabi"){Set.Daimyo++;}
if(N==="Wraith's Pall"){Set.Wraith++;}
if(N==="Hierophant's Cyclone"){Set.Hierophant++;}
if(N==="Grave Lord's Treachery"){Set.GraveLord++;}
if(N==="Grandmaster's Peace"){Set.Grandmaster++;}
if(N==="Phantasmist's Catharsis"){Set.Phantasmist++;}
if(N==="Warlock's Demise"){Set.Warlock++;}
if(N==="Assassin's Slander"){Set.Assassin++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Golem's Ore"){Set.Golem++;}
if(N==="Samurai's Duty"){Set.Samurai++;}
if(N==="Chancellor's Ceremony"){Set.Chancellor++;}
if(N==="Orator's Whisper"){Set.Orator++;}
if(N==="Guardian's Fortress"){Set.Guardian++;}
if(N==="Venova's Silks"){Set.Venova++;}
if(N==="Bloodletter's Spleen"){Set.Bloodletter++;}
if(N==="Friar's Sacrifice"){Set.Friar++;}
if(N==="Wraith's Husk"){Set.Wraith++;}
if(N==="Satyr's Delusion"){Set.Satyr++;}
if(N==="Summoner's Furnace"){Set.Summoner++;}
if(N==="Sorcerer's Nebula"){Set.Sorcerer++;}
if(N==="Warlock's Abomination"){Set.Warlock++;}
if(N==="High Priest's Reverence"){Set.HighPriest++;}
if(N==="Virtuoso's Bombast"){Set.Virtuoso++;}
if(N==="Grave Lord's Cozen"){Set.GraveLord++;}
if(N==="Assassin's Deception"){Set.Assassin++;}
if(N==="Warlord's Blitzkrieg"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Martyr's Agony"){Set.Martyr++;}
if(N==="Emissary's Dispute"){Set.Emissary++;}
if(N==="Orator's Entreat"){Set.Orator++;}
if(N==="Guardian's Parapet"){Set.Guardian++;}
if(N==="Baron's Coda"){Set.Baron++;}
if(N==="Daimyo's Honne"){Set.Daimyo++;}
if(N==="Bloodletter's Serum"){Set.Bloodletter++;}
if(N==="Friar's Candor"){Set.Friar++;}
if(N==="Summoner's Cinder"){Set.Summoner++;}
if(N==="Arch Mage's Squall"){Set.ArchMage++;}
if(N==="Phantasmist's Sagacity"){Set.Phantasmist++;}
if(N==="High Priest's Humility"){Set.HighPriest++;}
if(N==="Warder's Reclaim"){Set.Warder++;}
if(N==="Crusader's Fealty"){Set.Crusader++;}
if(N==="Warlord's Defiance"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Sage's Acumen"){Set.Sage++;}
if(N==="Vagabond's Survey"){Set.Vagabond++;}
if(N==="Duke's Amity"){Set.Duke++;}
if(N==="Baron's Sonata"){Set.Baron++;}
if(N==="Friar's Epiphany"){Set.Friar++;}
if(N==="Wraith's Flesh"){Set.Wraith++;}
if(N==="Satyr's Satin"){Set.Satyr++;}
if(N==="Malefactor's Ballast"){Set.Malefactor++;}
if(N==="Arch Mage's Calamity"){Set.ArchMage++;}
if(N==="Phantasmist's Serendipity"){Set.Phantasmist++;}
if(N==="Oracle's Contagion"){Set.Oracle++;}
if(N==="Virtuoso's Conceit"){Set.Virtuoso++;}
if(N==="Assassin's Hoax"){Set.Assassin++;}
if(N==="Warlord's Derision"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Martyr's Ideal"){Set.Martyr++;}
if(N==="Bishop's Purity"){Set.Bishop++;}
if(N==="Sage's Clamp"){Set.Sage++;}
if(N==="Vagabond's Cinch"){Set.Vagabond++;}
if(N==="Orator's Desire"){Set.Orator++;}
if(N==="Guardian's Moat"){Set.Guardian++;}
if(N==="Bloodletter's Marrow"){Set.Bloodletter++;}
if(N==="Friar's Gift"){Set.Friar++;}
if(N==="Wraith's Lust"){Set.Wraith++;}
if(N==="Malefactor's Fuse"){Set.Malefactor++;}
if(N==="Sorcerer's Equinox"){Set.Sorcerer++;}
if(N==="Phantasmist's Insight"){Set.Phantasmist++;}
if(N==="High Priest's Constraint"){Set.HighPriest++;}
if(N==="Virtuoso's Plangent"){Set.Virtuoso++;}
if(N==="Grandmaster's Affinity"){Set.Grandmaster++;}
if(N==="Assassin's Subversion"){Set.Assassin++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Emissary's Poise"){Set.Emissary++;}
if(N==="Bishop's Merit"){Set.Bishop++;}
if(N==="Chancellor's Qualm"){Set.Chancellor++;}
if(N==="Wyvern's Tail"){Set.Wyvern++;}
if(N==="Duke's Rule"){Set.Duke++;}
if(N==="Augur's Rancor"){Set.Augur++;}
if(N==="Baron's Tenor"){Set.Baron++;}
if(N==="Friar's Penance"){Set.Friar++;}
if(N==="Willow's Gust"){Set.Willow++;}
if(N==="Golem's Crust"){Set.Golem++;}
if(N==="Sorcerer's Quasar"){Set.Sorcerer++;}
if(N==="Oracle's Malady"){Set.Oracle++;}
if(N==="Hierophant's Cataclysm"){Set.Hierophant++;}
if(N==="Grave Lord's Chicane"){Set.GraveLord++;}
if(N==="Grandmaster's Consonance"){Set.Grandmaster++;}
if(N==="Warlord's Ferocity"){Set.Warlord++;}}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Minotaur's Hooves"){Set.Minotaur++;}
if(N==="Emissary's Finesse"){Set.Emissary++;}
if(N==="Vagabond's Voyage"){Set.Vagabond++;}
if(N==="Augur's Sludge"){Set.Augur++;}
if(N==="Baron's Rhythm"){Set.Baron++;}
if(N==="Mendicant's Horseshoe"){Set.Mendicant++;}
if(N==="Friar's Grace"){Set.Friar++;}
if(N==="Willow's Mildew"){Set.Willow++;}
if(N==="Malefactor's Resistor"){Set.Malefactor++;}
if(N==="Warlock's Nightmare"){Set.Warlock++;}
if(N==="Hierophant's Cascade"){Set.Hierophant++;}
if(N==="Warder's Preserve"){Set.Warder++;}
if(N==="Crusader's Vehemence"){Set.Crusader++;}
if(N==="Grandmaster's Balance"){Set.Grandmaster++;}}
s++;var minotaur=0;var golem=0;var tragic=0;var vagrant=0;var baron=0;var daimio2=0;var bloodletter2=0;var willow2=0;var venerable=0;var arcane=0;var warder1=0;var warder2=0;var warlock2=0;function weaponCheck(s){var N=P.eq[s].name;if(N==="Minotaur's Gore"){minotaur=1;}
if(N==="Golem's Crag"){golem=1;}
if(N==="Martyr's Shiv"){tragic=1;}
if(N==="Vagrant's Branch"){vagrant=1;}
if(N==="Baron's Glissando"){baron=1;}
if(N==="Daimyo's Giri"){daimio2=1;}
if(N==="Bloodletter's Lancet"){bloodletter2=1;}
if(N==="Willow's Calamity"){willow2=1;}
if(N==="Satyr's Artifice"){venerable=1;}
if(N==="Malefactor's Coil"){arcane=1;}
if(N==="Warder's Hailrend"){warder1=1;}
if(N==="Warder's Magmahew"){warder2=1;}
if(N==="Warlock's Nemesis"){warlock2=1;}}
if(P.eq[s].rarity===4){weaponCheck(s);var N=P.eq[s].name;if(N==="Venova's Martel"){Set.Venova++;}
if(N==="Bishop's Justice"){Set.Bishop++;}
if(N==="Sage's Wit"){Set.Sage++;}
if(N==="Augur's Harvester"){Set.Augur++;}
if(N==="Summoner's Conduit"){Set.Summoner++;}
if(N==="Arch Mage's Catastrophe"){Set.ArchMage++;}
if(N==="Grave Lord's Crescent"){Set.GraveLord++;}}
s++;if(P.eq[s].rarity===4){weaponCheck(s);var N=P.eq[s].name;if(N==="Vagrant's Slab"){Set.Vagrant++;}
if(N==="Chancellor's Bias"){Set.Chancellor++;}
if(N==="Magnate's Sapphire"){Set.Magnate++;}
if(N==="Wyvern's Eye"){Set.Wyvern++;}
if(N==="Guardian's Wall"){Set.Guardian++;}
if(N==="Mendicant's Effigy"){Set.Mendicant++;}
if(N==="Satyr's Chalice"){Set.Satyr++;}
if(N==="Malefactor's Yttrium"){Set.Malefactor++;}
if(N==="Sorcerer's Pleiades"){Set.Sorcerer++;}
if(N==="Phantasmist's Kismet"){Set.Phantasmist++;}
if(N==="Oracle's Fetish"){Set.Oracle++;}
if(N==="Hierophant's Cloudburst"){Set.Hierophant++;}
if(N==="Virtuoso's Resonance"){Set.Virtuoso++;}
if(N==="Crusader's Aegis"){Set.Crusader++;}}
if(minotaur){Set.Minotaur++;}
if(golem){Set.Golem++;}
if(tragic){Set.Martyr++;}
if(vagrant){Set.Vagrant++;}
if(baron){Set.Baron++;}
if(daimio2){Set.Daimyo++;}
if(bloodletter2){Set.Bloodletter++;}
if(willow2){Set.Willow++;}
if(venerable){Set.Satyr++;}
if(arcane){Set.Malefactor++;}
if(warder1){Set.Warder++;}
if(warder2){Set.Warder++;}
if(warlock2){Set.Warlock++;}
s++;if(P.eq[s].rarity===4){var N=P.eq[s].name;if(N==="Emissary's Craft"){Set.Emissary++;}
if(N==="Magnate's Lamp"){Set.Magnate++;}
if(N==="Augur's Enmity"){Set.Augur++;}
if(N==="Daimyo's Yugen"){Set.Daimyo++;}
if(N==="Venova's Ascent"){Set.Venova++;}
if(N==="Mendicant's Sarimanok"){Set.Mendicant++;}
if(N==="Wraith's Envy"){Set.Wraith++;}
if(N==="Summoner's Ember"){Set.Summoner++;}
if(N==="Arch Mage's Mojo"){Set.ArchMage++;}
if(N==="Oracle's Presage"){Set.Oracle++;}
if(N==="Virtuoso's Fanfare"){Set.Virtuoso++;}
if(N==="Warder's Tempest"){Set.Warder++;}
if(N==="Grandmaster's Comity"){Set.Grandmaster++;}}}
var Set={Miner:0,Minotaur:0,Golem:0,Martyr:0,Bishop:0,Samurai:0,Emissary:0,Sage:0,Vagabond:0,Vagrant:0,Chancellor:0,Magnate:0,Orator:0,Wyvern:0,Guardian:0,Duke:0,Augur:0,Venova:0,Baron:0,Daimyo:0,Bloodletter:0,Mendicant:0,Friar:0,Willow:0,Wraith:0,Satyr:0,Summoner:0,Malefactor:0,Warlord:0,Assassin:0,Grandmaster:0,Crusader:0,GraveLord:0,Warder:0,Virtuoso:0,Hierophant:0,HighPriest:0,Oracle:0,Warlock:0,Phantasmist:0,ArchMage:0,Sorcerer:0}
function setEquipValues(){if(g.view==="Game"){checkSetItems();g.hpEquip=hpEquipTotal();g.mpEquip=mpEquipTotal();g.strEquip=strEquipTotal();g.staEquip=staEquipTotal();g.agiEquip=agiEquipTotal();g.dexEquip=dexEquipTotal();g.intelEquip=intelEquipTotal();g.wisEquip=wisEquipTotal();g.chaEquip=chaEquipTotal();g.allStatsEquip=allStatsEquipTotal();g.hpRegenEquip=hpRegenEquipTotal();g.mpRegenEquip=mpRegenEquipTotal();g.armorEquip=armorEquipTotal();g.attackEquip=attackEquipTotal();g.oneHandSlashEquip=oneHandSlashEquipTotal();g.twoHandSlashEquip=twoHandSlashEquipTotal();g.oneHandBluntEquip=oneHandBluntEquipTotal();g.twoHandBluntEquip=twoHandBluntEquipTotal();g.piercingEquip=piercingEquipTotal();g.handtohandEquip=handtohandEquipTotal();g.offenseEquip=offenseEquipTotal();g.dualWieldEquip=dualWieldEquipTotal();g.doubleAttackEquip=doubleAttackEquipTotal();g.defenseEquip=defenseEquipTotal();g.dodgeEquip=dodgeEquipTotal();g.parryEquip=parryEquipTotal();g.riposteEquip=riposteEquipTotal();g.alterationEquip=alterationEquipTotal();g.evocationEquip=evocationEquipTotal();g.conjurationEquip=conjurationEquipTotal();g.abjurationEquip=abjurationEquipTotal();g.channelingEquip=channelingEquipTotal();g.allSkillsEquip=allSkillsEquipTotal();g.critChanceEquip=critChanceEquipTotal();g.critDamageEquip=critDamageEquipTotal();g.phyMitEquip=phyMitEquipTotal();g.magMitEquip=magMitEquipTotal();g.resistPoisonEquip=resistPoisonEquipTotal();g.resistMagicEquip=resistMagicEquipTotal();g.resistLightningEquip=resistLightningEquipTotal();g.resistColdEquip=resistColdEquipTotal();g.resistFireEquip=resistFireEquipTotal();g.allResistEquip=allResistEquipTotal();g.goldFindEquip=goldFindEquipTotal();g.expFindEquip=expFindEquipTotal();g.thornsEquip=thornsEquipTotal();g.absorbPoisonEquip=absorbPoisonEquipTotal();g.absorbMagicEquip=absorbMagicEquipTotal();g.absorbLightningEquip=absorbLightningEquipTotal();g.absorbColdEquip=absorbColdEquipTotal();g.absorbFireEquip=absorbFireEquipTotal();g.hpKillEquip=hpKillEquipTotal();g.mpKillEquip=mpKillEquipTotal();g.physicalDamageEquip=physicalDamageEquipTotal();g.poisonDamageEquip=poisonDamageEquipTotal();g.magicDamageEquip=magicDamageEquipTotal();g.lightningDamageEquip=lightningDamageEquipTotal();g.coldDamageEquip=coldDamageEquipTotal();g.fireDamageEquip=fireDamageEquipTotal();g.enhancePhysicalEquip=enhancePhysicalEquipTotal();g.enhancePoisonEquip=enhancePoisonEquipTotal();g.enhanceMagicEquip=enhanceMagicEquipTotal();g.enhanceLightningEquip=enhanceLightningEquipTotal();g.enhanceColdEquip=enhanceColdEquipTotal();g.enhanceFireEquip=enhanceFireEquipTotal();g.enhanceAllEquip=enhanceAllEquipTotal();g.lightRadiusEquip=lightRadiusEquipTotal();g.runSpeedEquip=runSpeedEquipTotal();g.hasteEquip=hasteEquipTotal();g.globalHasteEquip=globalHasteEquipTotal();g.castingHasteEquip=castingHasteEquipTotal();g.fearEquip=fearEquipTotal();g.stunEquip=stunEquipTotal();g.chillEquip=chillEquipTotal();g.silenceEquip=silenceEquipTotal();g.leechEquip=leechEquipTotal();g.wraithEquip=wraithEquipTotal();}
if(g.view==="Game"){if(!nevergrounds){CStat();}}}
setEquipValues();function armorPenalty(){var bar=1;if(my.job==="Ranger"||my.job==="Shaman"||my.job==="Rogue"){if(P.eq[0].type==="plate"&&P.eq[0].weight===0){bar+=.05;}
if(P.eq[4].type==="plate"&&P.eq[4].weight===0){bar+=.03;}
if(P.eq[6].type==="plate"&&P.eq[6].weight===0){bar+=.05;}
if(P.eq[7].type==="plate"&&P.eq[7].weight===0){bar+=.02;}
if(P.eq[8].type==="plate"&&P.eq[8].weight===0){bar+=.02;}
if(P.eq[9].type==="plate"&&P.eq[9].weight===0){bar+=.02;}
if(P.eq[10].type==="plate"&&P.eq[10].weight===0){bar+=.03;}
if(P.eq[11].type==="plate"&&P.eq[11].weight===0){bar+=.02;}}else if(my.job==="Monk"||my.job==="Druid"){if(P.eq[0].type==="chain"&&P.eq[0].weight===0){bar+=.05;}
if(P.eq[4].type==="chain"&&P.eq[4].weight===0){bar+=.03;}
if(P.eq[6].type==="chain"&&P.eq[6].weight===0){bar+=.05;}
if(P.eq[7].type==="chain"&&P.eq[7].weight===0){bar+=.02;}
if(P.eq[8].type==="chain"&&P.eq[8].weight===0){bar+=.02;}
if(P.eq[9].type==="chain"&&P.eq[9].weight===0){bar+=.02;}
if(P.eq[10].type==="chain"&&P.eq[10].weight===0){bar+=.03;}
if(P.eq[11].type==="chain"&&P.eq[11].weight===0){bar+=.02;}
if(P.eq[0].type==="plate"){bar+=.11;if(P.eq[0].weight===1){bar-=.06;}}
if(P.eq[4].type==="plate"){bar+=.07;if(P.eq[4].weight===1){bar-=.04;}}
if(P.eq[6].type==="plate"){bar+=.11;if(P.eq[6].weight===1){bar-=.06;}}
if(P.eq[7].type==="plate"){bar+=.05;if(P.eq[7].weight===1){bar-=.03;}}
if(P.eq[8].type==="plate"){bar+=.05;if(P.eq[8].weight===1){bar-=.03;}}
if(P.eq[9].type==="plate"){bar+=.05;if(P.eq[9].weight===1){bar-=.03;}}
if(P.eq[10].type==="plate"){bar+=.07;if(P.eq[10].weight===1){bar-=.04;}}
if(P.eq[11].type==="plate"){bar+=.05;if(P.eq[11].weight===1){bar-=.03;}}}else if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){if(P.eq[0].type==="leather"&&P.eq[0].weight===0){bar+=.05;}
if(P.eq[4].type==="leather"&&P.eq[4].weight===0){bar+=.03;}
if(P.eq[6].type==="leather"&&P.eq[6].weight===0){bar+=.05;}
if(P.eq[7].type==="leather"&&P.eq[7].weight===0){bar+=.02;}
if(P.eq[8].type==="leather"&&P.eq[8].weight===0){bar+=.02;}
if(P.eq[9].type==="leather"&&P.eq[9].weight===0){bar+=.02;}
if(P.eq[10].type==="leather"&&P.eq[10].weight===0){bar+=.03;}
if(P.eq[11].type==="leather"&&P.eq[11].weight===0){bar+=.02;}
if(P.eq[0].type==="chain"){bar+=.11;if(P.eq[0].weight===1){bar-=.06;}}
if(P.eq[4].type==="chain"){bar+=.07;if(P.eq[4].weight===1){bar-=.04;}}
if(P.eq[6].type==="chain"){bar+=.11;if(P.eq[6].weight===1){bar-=.06;}}
if(P.eq[7].type==="chain"){bar+=.05;if(P.eq[7].weight===1){bar-=.03;}}
if(P.eq[8].type==="chain"){bar+=.05;if(P.eq[8].weight===1){bar-=.03;}}
if(P.eq[9].type==="chain"){bar+=.05;if(P.eq[9].weight===1){bar-=.03;}}
if(P.eq[10].type==="chain"){bar+=.07;if(P.eq[10].weight===1){bar-=.04;}}
if(P.eq[11].type==="chain"){bar+=.05;if(P.eq[11].weight===1){bar-=.03;}}
if(P.eq[0].type==="plate"){bar+=.18;if(P.eq[0].weight===1){bar-=.07;}}
if(P.eq[4].type==="plate"){bar+=.12;if(P.eq[4].weight===1){bar-=.05;}}
if(P.eq[6].type==="plate"){bar+=.18;if(P.eq[6].weight===1){bar-=.07;}}
if(P.eq[7].type==="plate"){bar+=.09;if(P.eq[7].weight===1){bar-=.04;}}
if(P.eq[8].type==="plate"){bar+=.09;if(P.eq[8].weight===1){bar-=.04;}}
if(P.eq[9].type==="plate"){bar+=.09;if(P.eq[9].weight===1){bar-=.04;}}
if(P.eq[10].type==="plate"){bar+=.12;if(P.eq[10].weight===1){bar-=.05;}}
if(P.eq[11].type==="plate"){bar+=.09;if(P.eq[11].weight===1){bar-=.04;}}}
return bar;}
function min70(x){x=x-70;if(x<0){x=0;}
return x;}
function checkCrit(){if(M.random()<criticalChance()){return true;}else{return false;}}
function convertCritValue(x){var foo=0;var ber=0;if(x>.3&&x<=.8){foo=.3;ber=x-foo;ber=ber*.5;foo=foo+ber;}else if(x>.8&&x<=1.3){foo=.55;ber=x-foo;ber=ber*.2;foo=foo+ber;}else if(x>1.3){foo=.65;ber=x-foo;ber=ber*.1;foo=foo+ber;}else{foo=x;}
if(foo>.8){foo=.8;}
return foo;}
function armorFunct(){var equipped=g.armorEquip;var foo=false;for(var i=0;i<=4;i++){if(mob[i].conflagrationTicks>0){foo=true;}}
if(foo===true){equipped*=.25;}
var myArmor=((defenseTotal()*3.5)+(equipped))+armorBuff;if(my.job==="Monk"){myArmor=((defenseTotal()*3.5)+(equipped*1.5))+armorBuff;}
if(myArmor<1){myArmor=1;}
return M.round(myArmor);}
function armorPercent(Slot){var armorReduction=(1-((armorFunct()*2)/ mobStrength(Slot))/ 100);return armorReduction;}
function armorPercentSelf(){var x=(((armorFunct()*2)/((1+(my.level*2.2))+(my.level / 20)))/ 100);x=(x*1000)/ 10;if(my.name===""){x="";return x;}
if(x>80){x=80;}
return M.round(x);}
function attackFunct(){var x=0;var e1=P.eq[12];if(e1.type==="slashed"){x=(oneHandSlashTotal()*2.5);}else if(e1.type==="cleaved"){x=(twoHandSlashTotal()*2.5);}else if(e1.type==="pierced"){x=(piercingTotal()*2.5);}else if(e1.type==="punched"){x=(handToHandTotal()*2.5);}else if(e1.type==="crushed"){x=(oneHandBluntTotal()*2.5);}else{x=(twoHandBluntTotal()*2.5);}
x=(x+(offenseTotal()*1.5)+(min70(strTotal())*2.2)+g.attackEquip+attackPowerBuff);if(Set.Minotaur>=2){x+=15;}
if(Set.Friar>=2){x+=50;}
if(Set.HighPriest>=4){x+=150;}
if(Set.Warlock>=3){x+=125;}
var atkEnh=0;if(sowStatus===true){atkEnh+=15;if(my.job==="Shaman"){if(my.talent11>=1){atkEnh+=(15*((talent11()*5.8)/ 100));}}}
if(my.job==="Bard"){if(anthemDeArmsStatus===true){atkEnh+=(talent3()*1.68);}}
if(Set.Crusader>=6){if(symbolOfRyltanStatus){atkEnh+=30;}}
x=(x+(x*(atkEnh / 100)));return M.round(x);}
g.maxHpFunct=function(){var x=my.level;var x1=my.job;var foo=(((((staTotal())*JOB.hpTier)*(x / 50))+(x*13)+20))+g.hpEquip+maxHpBuff;if(x1==="Ranger"){if(thistlecoatStatus===true){foo=(foo*(1+((talent2()/ 100)*1.42)));}}
if(x1==="Bard"){foo=(foo*(1+(talent2()*1.55)/ 100));}
if(Set.Warlord>=4){foo+=300;}
var enh=0;if(Set.Hierophant>=6){enh+=.3;}
if(Set.ArchMage>=6){enh+=.15;}
foo=~~(foo*(1+enh));my.maxHp=foo;return foo;}
g.maxMpFunct=function(){var x=100;var x1=my.level;var x2=g.mpEquip;var x3=JOB.mpClass;var x4=JOB.mpTier;if(x3==="intCaster"){x=M.ceil((((((intTotal())*x4)*(x1 / 50))+(x1*13)+15))+x2+125);}else if(x3==="intHybrid"){x=M.ceil((((((intTotal())*x4)*(x1 / 50))+((x1-8)*13)+15))+x2+75);}else if(x3==="wisCaster"){x=M.ceil((((((wisTotal())*x4)*(x1 / 50))+(x1*13)+15))+x2+125);}else if(x3==="wisHybrid"){x=M.ceil((((((wisTotal())*x4)*(x1 / 50))+((x1-8)*13)+15))+x2+75);}
if(JOB.jobType==="hybrid"){if(x1<=8){x=0;}}
if(JOB.mpClass!=='melee'){var enh=0;if(Set.ArchMage>=6){enh+=.15;}
x=~~(x*(1+enh));}
return x;}
function strTotal(){var foo=my.str+g.strEquip+strBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function staTotal(){var foo=my.sta+g.staEquip+staBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function agiTotal(){var foo=my.agi+g.agiEquip+agiBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function dexTotal(){var foo=my.dex+g.dexEquip+dexBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function wisTotal(){var foo=my.wis+g.wisEquip+wisBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function intTotal(){var foo=my.intel+g.intelEquip+intelBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function chaTotal(){var foo=my.cha+g.chaEquip+chaBuff+g.allStatsEquip;if(foo<1){foo=1;}
return foo;}
function poisonTotal(){var foo=my.svpoison+g.resistPoisonEquip+svpoisonBuff+g.allResistEquip;if(foo>0){if((mob[0].name&&mob[0].convictionAura===true)||(mob[1].name&&mob[1].convictionAura===true)||(mob[2].name&&mob[2].convictionAura===true)||(mob[3].name&&mob[3].convictionAura===true)||(mob[4].name&&mob[4].convictionAura===true)){foo=foo*.5;}}
if(foo>300){foo=300;}
if(divineAegisStatus){foo=350;}
return M.round(foo);}
function magicTotal(){var foo=my.svmagic+g.resistMagicEquip+svmagicBuff+g.allResistEquip;if(foo>0){if((mob[0].name&&mob[0].convictionAura===true)||(mob[1].name&&mob[1].convictionAura===true)||(mob[2].name&&mob[2].convictionAura===true)||(mob[3].name&&mob[3].convictionAura===true)||(mob[4].name&&mob[4].convictionAura===true)){foo=foo*.5;}}
var max=300;if(my.job==="Bard"){if(my.talent6>=20){max=340;}}
if(foo>max){foo=max;}
if(divineAegisStatus){foo=350;}
return M.round(foo);}
function lightningTotal(){var foo=my.svlightning+g.resistLightningEquip+svlightningBuff+g.allResistEquip;if(foo>0){if((mob[0].name&&mob[0].convictionAura===true)||(mob[1].name&&mob[1].convictionAura===true)||(mob[2].name&&mob[2].convictionAura===true)||(mob[3].name&&mob[3].convictionAura===true)||(mob[4].name&&mob[4].convictionAura===true)){foo=foo*.5;}}
var max=300;if(my.job==="Bard"){if(my.talent6>=20){max=340;}}
if(foo>max){foo=max;}
if(divineAegisStatus){foo=350;}
return M.round(foo);}
function coldTotal(){var foo=my.svcold+g.resistColdEquip+svcoldBuff+g.allResistEquip;if(foo>0){if((mob[0].name&&mob[0].convictionAura===true)||(mob[1].name&&mob[1].convictionAura===true)||(mob[2].name&&mob[2].convictionAura===true)||(mob[3].name&&mob[3].convictionAura===true)||(mob[4].name&&mob[4].convictionAura===true)){foo=foo*.5;}}
var max=300;if(my.job==="Bard"){if(my.talent6>=20){max=340;}}
if(foo>max){foo=max;}
if(divineAegisStatus){foo=350;}
return M.round(foo);}
function fireTotal(){var foo=my.svfire+g.resistFireEquip+svfireBuff+g.allResistEquip;if(foo>0){if((mob[0].name&&mob[0].convictionAura===true)||(mob[1].name&&mob[1].convictionAura===true)||(mob[2].name&&mob[2].convictionAura===true)||(mob[3].name&&mob[3].convictionAura===true)||(mob[4].name&&mob[4].convictionAura===true)){foo=foo*.5;}}
var max=300;if(my.job==="Bard"){if(my.talent6>=20){max=340;}}
if(foo>max){foo=max;}
if(divineAegisStatus){foo=350;}
return M.round(foo);}
function convertHasteValue(x){var foo=0;var ber=0;if(x<-.3&&x>=-.8){foo=-.3;ber=x-foo;ber=ber*.5;foo=foo+ber;}else if(x<-.8&&x>=-1.3){foo=-.55;ber=x+.8;ber=ber*.2;foo=foo+ber;}else if(x<-1.3){foo=-.65;ber=x+1.3;ber=ber*.1;foo=foo+ber;}else{foo=x;}
if(foo<-.8){foo=-.8;}
return foo;}
function totalHaste1(){var qq=attackHaste();var foo=P.eq[12].delay*(qq+1);if(foo<minimumWeaponSpeed){foo=minimumWeaponSpeed;}
if(yaulpStatus===true){foo=500;}
return foo;}
function totalHaste2(){var qq=attackHaste();var foo=P.eq[13].delay*(qq+1);if(foo<minimumWeaponSpeed){foo=minimumWeaponSpeed;}
if(yaulpStatus===true){foo=500;}
return foo;}
function attackHaste(display){var qq=(hasteBuff+g.hasteEquip)/ 1000;if(alacrityStatus===true){qq-=.4;}
if(my.job==="Cleric"){if(armorOfFaithStatus===true){qq-=(talent7()*1.6 / 100);}}
if(my.job==="Shaman"){if(callOfTheAncientsStatus===true){qq-=(talent9()*1.75 / 100);}}
if(mySingingSword===true&&my.job==="Bard"){qq=~~(qq*1.5);}
if(chillStatus===true){qq=qq / 2;}
if(display){return qq;}else{qq=convertHasteValue(qq);return qq;}}
function phyGlobalTotal(display){var qq=(cooldownDurationBuff+g.globalHasteEquip)/ 1000;if(my.job==="Paladin"){if(my.talent8>=20){qq-=.2;}}else if(my.job==="Ranger"){if(my.talent10>=20){qq-=((talent10()*.75)/ 100);}}
if(!display){qq=convertHasteValue(qq);}
var foo=(1500*g.speed)*(qq+1);foo=foo*armorPenalty();var enh=100;var zug;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].concussiveAura==true){if(mob[i].charmStatus===false){zug=1;continue;}}}
if(zug){enh+=30;}
if(chillStatus===true){enh+=30;}
if(enh>150){enh=150;}
foo=foo*(enh / 100);return foo;}
function castSpeedTotal(spellSpeed,display){spellSpeed*=g.speed;var qq=(spellHasteBuff+g.castingHasteEquip)/ 1000;if(bloodlustStatus===true){spellSpeed=spellSpeed*.4;}
if(my.job==="Cleric"){if(my.talent2>=1){qq-=((talent2()*1.4)/ 100);}
if(markOfJudgementStatus===true){spellSpeed=spellSpeed / 2;}}else if(my.job==="Enchanter"){if(my.talent10>=20){qq-=.35;}}else if(my.job==="Magician"){if(my.talent11>=20){qq-=.35;}}else if(my.job==="Wizard"){if(my.talent9>=20){qq-=.35;}}
if(!display){qq=convertHasteValue(qq);}
var foo=spellSpeed*(qq+1);var bar=armorPenalty();foo=foo*armorPenalty();var zug=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].disruptionAura==true){if(mob[i].charmStatus===false){zug=true;continue;}}}
if(zug==true){foo=foo*1.3;}
return foo;}
function criticalChance(display){var foo=g.critChanceEquip / 100;foo+=.05+((min70(dexTotal()))/ 800);if(eagleStrikeStatus){foo+=.5;}
if(!display){foo=convertCritValue(foo)+g.coldBloodBonus;return foo;}else{return(foo*100);}}
g.criticalDamage=function(){var foo=50;foo+=(dexTotal()/ 25)+g.critDamageEquip+0;return foo / 100;}
function physicalMitigation(){var phyMit=M.round((min70(agiTotal()))/ 9);phyMit+=phyMitBuff+g.phyMitEquip;return phyMit;}
function magicMitigation(){var magMit=M.round((min70(wisTotal()))/ 11);magMit+=magMitBuff+g.magMitEquip;return magMit;}
function oneHandSlashTotal(){var foo=my.oneHandSlash;if(foo>0){foo+=g.oneHandSlashEquip+g.allSkillsEquip;}
return foo;}
function twoHandSlashTotal(){var foo=my.twoHandSlash;if(foo>0){foo+=g.twoHandSlashEquip+g.allSkillsEquip;}
return foo;}
function oneHandBluntTotal(){var foo=my.oneHandBlunt;if(foo>0){foo+=g.oneHandBluntEquip+g.allSkillsEquip;}
return foo;}
function twoHandBluntTotal(){var foo=my.twoHandBlunt;if(foo>0){foo+=g.twoHandBluntEquip+g.allSkillsEquip;}
return foo;}
function piercingTotal(){var foo=my.piercing;if(foo>0){foo+=g.piercingEquip+g.allSkillsEquip;if(Set.Martyr>=2){foo+=6;}}
return foo;}
function handToHandTotal(){var foo=my.handtohand;if(foo>0){foo+=g.handtohandEquip+g.allSkillsEquip;}
return foo;}
function offenseTotal(){var foo=my.offense;if(foo>0){foo+=g.offenseEquip+g.allSkillsEquip;}
return foo;}
function dualWieldTotal(){var foo=my.dualWield;if(foo>0){foo+=g.dualWieldEquip+g.allSkillsEquip;}
return foo;}
function doubleAttackTotal(){var foo=my.doubleAttack;if(foo>0){foo+=g.doubleAttackEquip+g.allSkillsEquip;}
return foo;}
function defenseTotal(){var foo=my.defense;if(foo>0){foo+=g.defenseEquip+g.allSkillsEquip;}
var zug=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].shreddingAura===true){if(mob[i].charmStatus===false){zug=true;continue;}}}
if(zug==true){foo=~~(foo*.2);}
return foo;}
function dodgeTotal(){var foo=my.dodge;if(foo>0){foo+=g.dodgeEquip+g.allSkillsEquip;}
return foo;}
function parryTotal(){var foo=my.parry;if(foo>0){foo+=g.parryEquip+g.allSkillsEquip;}
return foo;}
function riposteTotal(){var foo=my.riposte;if(foo>0){foo+=g.riposteEquip+g.allSkillsEquip;}
return foo;}
function alterationTotal(){var foo=my.alteration;if(foo>0){foo+=g.alterationEquip+g.allSkillsEquip;}
return foo;}
function evocationTotal(){var foo=my.evocation;if(foo>0){foo+=g.evocationEquip+g.allSkillsEquip;}
return foo;}
function conjurationTotal(){var foo=my.conjuration;if(foo>0){foo+=g.conjurationEquip+g.allSkillsEquip;}
return foo;}
function abjurationTotal(){var foo=my.abjuration;if(foo>0){foo+=g.abjurationEquip+g.allSkillsEquip;}
return foo;}
function channelingTotal(){var foo=my.channeling;if(foo>0){foo+=g.channelingEquip+g.allSkillsEquip;}
return foo;}
function setTip(item){var s='';var D="<div>";var d="</div>";var t="<div class='setTitle'>";var n=item.name;if(n.indexOf("Miner")===0){var x=Set.Miner;if(x>=2){s+=D+"+6 Life Leech"+d;s+=D+"+6 Mana Leech"+d;}
if(x>=3){s+=D+"+25% All Resists"+d;}
s+=t+"Miner's Infamy"+d;}else if(n.indexOf("Minotaur")===0){var x=Set.Minotaur;if(x>=2){s+=D+"+15 Attack"+d;}
if(x>=3){s+=D+"+30 Strength"+d;}
if(x>=4){s+=D+"+12% Physical Damage"+d;}
s+=t+"Minotaur's Assault"+d;}else if(n.indexOf("Golem")===0){var x=Set.Golem;if(x>=2){s+=D+"+5 Defense"+d;}
if(x>=3){s+=D+"+50 Maximum Health"+d;}
if(x>=4){s+=D+"+25 Maximum Physical Reduction"+d;}
s+=t+"Golem's Avarice"+d;}else if(n.indexOf("Martyr")===0){var x=Set.Martyr;if(x>=2){s+=D+"+6 Piercing"+d;}
if(x>=3){s+=D+"+10 Health Per Kill"+d;}
if(x>=4){s+=D+"+15 Critical Chance"+d;}
s+=t+"Martyr's Sacrifice"+d;}else if(n.indexOf("Bishop")===0){var x=Set.Bishop;if(x>=2){s+=D+"+12 Wisdom"+d;}
if(x>=3){s+=D+"+4 Mana Per Tick"+d;}
if(x>=4){s+=D+"+30 All Resistances"+d;}
s+=t+"Bishop's Virtue"+d;}else if(n.indexOf("Samurai")===0){var x=Set.Samurai;if(x>=2){s+=D+"+6 Offense"+d;}
if(x>=3){s+=D+"+24 Lightning Damage"+d;}
if(x>=4){s+=D+"Skill Haste +15"+d;}
s+=t+"Samurai's Honor"+d;}else if(n.indexOf("Emissary")===0){var x=Set.Emissary;if(x>=2){s+=D+"+12 All Resistances"+d;}
if(x>=3){s+=D+"+15 Exp Gain"+d;}
if(x>=4){s+=D+"+7 All Skills"+d;}
s+=t+"Emissary's Judgment"+d;}else if(n.indexOf("Sage")===0){var x=Set.Sage;if(x>=2){s+=D+"+4 Health Per Tick"+d;}
if(x>=3){s+=D+"+7 Mana Per Kill"+d;}
if(x>=4){s+=D+"+25 All Attributes"+d;}
s+=t+"Eternal Sage"+d;}else if(n.indexOf("Vagabond")===0){var x=Set.Vagabond;if(x>=2){s+=D+"+8% Critical Damage"+d;}
if(x>=3){s+=D+"+15 Hand to Hand"+d;}
if(x>=4){s+=D+"Attack Haste +15"+d;}
s+=t+"Vagabond's Fate"+d;}else if(n.indexOf("Vagrant")===0){var x=Set.Vagrant;if(x>=2){s+=D+"+12 Thorn Damage"+d;}
if(x>=3){s+=D+"+35 Maximum Mana"+d;}
if(x>=4){s+=D+"+12% Fire Damage"+d;}
s+=t+"Vagrant's Weald"+d;}else if(n.indexOf("Chancellor")===0){var x=Set.Chancellor;if(x>=2){s+=D+"+35 Resist Poison"+d;}
if(x>=3){s+=D+"-30% Fear Duration"+d;}
if(x>=4){s+=D+"+12% Poison Damage"+d;}
s+=t+"Chancellor's Vestige"+d;}else if(n.indexOf("Magnate")===0){var x=Set.Magnate;if(x>=2){s+=D+"Casting Haste +8"+d;}
if(x>=3){s+=D+"+5% Lightning Damage"+d;}
if(x>=4){s+=D+"+20 Conjuration"+d;}
s+=t+"Magnate's Relic"+d;}else if(n.indexOf("Orator")===0){var x=Set.Orator;if(x>=2){s+=D+"+6 Alteration"+d;}
if(x>=3){s+=D+"-25% Stun Duration"+d;}
if(x>=4){s+=D+"+12% Arcane Damage"+d;}
s+=t+"Orator's Passion"+d;}else if(n.indexOf("Wyvern")===0){var x=Set.Wyvern;if(x>=2){s+=D+"+4% Fire Damage"+d;}
if(x>=3){s+=D+"+50 Resist Fire"+d;}
if(x>=4){s+=D+"+15 Critical Chance"+d;}
s+=t+"Wyvern's Heart"+d;}else if(n.indexOf("Guardian")===0){var x=Set.Guardian;if(x>=2){s+=D+"+10 Defense"+d;}
if(x>=3){s+=D+"+13 Health Per Tick"+d;}
if(x>=4){s+=D+"+15 All Resistances"+d;}
if(x>=5){s+=D+"+7 Life Leech"+d;}
if(x>=6){s+=D+"-75% All Status Effect Durations"+d;s+=D+"Pummel:"+d;s+=D+"Hits 5 Times"+d;}
s+=t+"Stalwart Guardian"+d;}else if(n.indexOf("Duke")===0){var x=Set.Duke;if(x>=2){s+=D+"-40% Fear Duration"+d;}
if(x>=3){s+=D+"+80 Maximum Health"+d;}
if(x>=4){s+=D+"Skill Haste +15"+d;}
if(x>=5){s+=D+"+15 Maximum Magic Reduction"+d;}
if(x>=6){s+=D+"+30% Arcane Damage"+d;s+=D+"Yaulp:"+d;s+=D+"Duration Increased 4 Seconds"+d;}
s+=t+"Duke of Prentia"+d;}else if(n.indexOf("Augur")===0){var x=Set.Augur;if(x>=2){s+=D+"+60 Maximum Health"+d;}
if(x>=3){s+=D+"+8 Mana Leech"+d;}
if(x>=4){s+=D+"+40 Intelligence"+d;}
if(x>=5){s+=D+"+25% Critical Damage"+d;}
if(x>=6){s+=D+"+40 Critical Chance"+d;s+=D+"Harm Touch:"+d;s+=D+"Cooldown Reduced 40 Seconds"+d;}
s+=t+"Lurid Augur"+d;}else if(n.indexOf("Venova")===0){var x=Set.Venova;if(x>=2){s+=D+"-25% Silence Duration"+d;}
if(x>=3){s+=D+"+15 Magic Find"+d;}
if(x>=4){s+=D+"Casting Haste +15"+d;}
if(x>=5){s+=D+"+60 Resist Arcane"+d;}
if(x>=6){s+=D+"+50 Alteration"+d;s+=D+"Guardian Angel:"+d;s+=D+"Angel Casts Expel Corruption"+d;}
s+=t+"Venova's Will"+d;}else if(n.indexOf("Baron")===0){var x=Set.Baron;if(x>=2){s+=D+"+75 Maximum Health"+d;}
if(x>=3){s+=D+"+2 All Skills"+d;}
if(x>=4){s+=D+"Attack Haste +15"+d;}
if(x>=5){s+=D+"Casting Haste +20"+d;}
if(x>=6){s+=D+"+15% All Damage"+d;s+=D+"Consonant Chain:"+d;s+=D+"All Damage Enhanced 15% On Chained Mobs"+d;}
s+=t+"Baron's Symphony"+d;}else if(n.indexOf("Daimyo")===0){var x=Set.Daimyo;if(x>=2){s+=D+"Absorb 8% of Lightning Damage"+d;}
if(x>=3){s+=D+"+25% Gold Gain"+d;}
if(x>=4){s+=D+"+25 Thorn Damage"+d;}
if(x>=5){s+=D+"Skill Haste +25"+d;}
if(x>=6){s+=D+"+60% Critical Damage"+d;s+=D+"Trueshot Arrow:"+d;s+=D+"Cooldown Reduced 6 Seconds"+d;}
s+=t+"Daimyo's Decree"+d;}else if(n.indexOf("Bloodletter")===0){var x=Set.Bloodletter;if(x>=2){s+=D+"+12 Health Per Kill"+d;}
if(x>=3){s+=D+"+10 Dual Wield"+d;}
if(x>=4){s+=D+"+75 Poison Damage"+d;}
if(x>=5){s+=D+"+60 Agility"+d;}
if(x>=6){s+=D+"+40 Life Leech"+d;s+=D+"Mirage Strike:"+d;s+=D+"Reduce Cooldown 3 Seconds"+d;}
s+=t+"Bloodletter's Pact"+d;}else if(n.indexOf("Mendicant")===0){var x=Set.Mendicant;if(x>=2){s+=D+"+75 Resist Cold"+d;}
if(x>=3){s+=D+"Casting Haste +15"+d;}
if(x>=4){s+=D+"+120 Maximum Health"+d;}
if(x>=5){s+=D+"+10 Health Per Tick"+d;}
if(x>=6){s+=D+"+30% Poison Damage"+d;s+=D+"Glacial Impact:"+d;s+=D+"Freezes Target For 5 Additional Seconds"+d;}
s+=t+"Mephitic Mendicant"+d;}else if(n.indexOf("Friar")===0){var x=Set.Friar;if(x>=2){s+=D+"+50 Attack"+d;}
if(x>=3){s+=D+"+20 Double Attack"+d;}
if(x>=4){s+=D+"+25 Riposte"+d;}
if(x>=5){s+=D+"Skill Haste +25"+d;}
if(x>=6){s+=D+"Attack Haste +50"+d;s+=D+"Windmill Kick:"+d;s+=D+"Cooldown Reduced 13 Seconds"+d;}
s+=t+"Solemn Friar"+d;}else if(n.indexOf("Willow")===0){var x=Set.Willow;if(x>=2){s+=D+"+5% Fire Damage"+d;}
if(x>=3){s+=D+"+2 All Skills"+d;}
if(x>=4){s+=D+"-15% All Status Effect Durations"+d;}
if(x>=5){s+=D+"+20 All Attributes"+d;}
if(x>=6){s+=D+"Casting Haste +50"+d;s+=D+"Root:"+d;s+=D+"Rooted Targets Take 30% Additional Damage"+d;}
s+=t+"Willow's Heart"+d;}else if(n.indexOf("Wraith")===0){var x=Set.Wraith;if(x>=2){s+=D+"+7 Mana Per Tick"+d;}
if(x>=3){s+=D+"+15 Mana Per Kill"+d;}
if(x>=4){s+=D+"Casting Haste +20"+d;}
if(x>=5){s+=D+"+15 Conjuration"+d;}
if(x>=6){s+=D+"+25 All Skills"+d;s+=D+"Drain Soul:"+d;s+=D+"Cooldown Reduced 6 Seconds"+d;}
s+=t+"Condemned Wraith"+d;}else if(n.indexOf("Satyr")===0){var x=Set.Satyr;if(x>=2){s+=D+"+15 Maximum Physical Reduction"+d;}
if(x>=3){s+=D+"+45 Intelligence"+d;}
if(x>=4){s+=D+"+125 Maximum Health"+d;}
if(x>=5){s+=D+"+32 All Resistances"+d;}
if(x>=6){s+=D+"+30% Arcane Damage"+d;s+=D+"Mystic Rune:"+d;s+=D+"Cooldown Reduced 10 Seconds"+d;}
s+=t+"Venerable Satyr"+d;}else if(n.indexOf("Summoner")===0){var x=Set.Summoner;if(x>=2){s+=D+"+12% Critical Damage"+d;}
if(x>=3){s+=D+"+10% Cold Damage"+d;}
if(x>=4){s+=D+"Casting Haste +24"+d;}
if(x>=5){s+=D+"+12% Lightning Damage"+d;}
if(x>=6){s+=D+"+50 Conjuration"+d;s+=D+"Psionic Storm:"+d;s+=D+"Cooldown Reduced 13 Seconds"+d;}
s+=t+"Occult Summoner"+d;}else if(n.indexOf("Malefactor")===0){var x=Set.Malefactor;if(x>=2){s+=D+"+35 Stamina"+d;}
if(x>=3){s+=D+"+10 Evocation"+d;}
if(x>=4){s+=D+"-40% Silence Duration"+d;}
if(x>=5){s+=D+"Casting Haste +21"+d;}
if(x>=6){s+=D+"+20% All Magical Damage"+d;s+=D+"Chain Lightning:"+d;s+=D+"Damage Enhanced 50%"+d;}
s+=t+"Arcane Malefactor"+d;}else if(n.indexOf("Warlord")===0){var x=Set.Warlord;if(x>=2){s+=D+"+45 Dexterity"+d;}
if(x>=3){s+=D+"+60 Strength"+d;}
if(x>=4){s+=D+"+300 Maximum Health"+d;}
if(x>=5){s+=D+"Attack Haste +40"+d;}
if(x>=6){s+=D+"+80% Critical Damage"+d;s+=D+"Intrepid Might:"+d;s+=D+"Invincibility Duration Doubled"+d;}
s+=t+"Mighty Warlord"+d;}else if(n.indexOf("Assassin")===0){var x=Set.Assassin;if(x>=2){s+=D+"+15 Maximum Magic Reduction"+d;}
if(x>=3){s+=D+"+24 Maximum Physical Reduction"+d;}
if(x>=4){s+=D+"+35 All Resistances"+d;}
if(x>=5){s+=D+"+100 Agility"+d;}
if(x>=6){s+=D+"+55 Critical Chance"+d;s+=D+"Sonic Strike:"+d;s+=D+"Stuns All Targets"+d;}
s+=t+"Deadly Assassin"+d;}else if(n.indexOf("Grandmaster")===0){var x=Set.Grandmaster;if(x>=2){s+=D+"+5 All Skills"+d;}
if(x>=3){s+=D+"+40 Magic Find"+d;}
if(x>=4){s+=D+"+25 Health Per Tick"+d;}
if(x>=5){s+=D+"+15% Physical Damage"+d;}
if(x>=6){s+=D+"+50 Life Leech"+d;s+=D+"Flying Kick:"+d;s+=D+"Stuns Target"+d;}
s+=t+"Honored Grandmaster"+d;}else if(n.indexOf("Crusader")===0){var x=Set.Crusader;if(x>=2){s+=D+"+50 Wisdom"+d;}
if(x>=3){s+=D+"+14 Mana Per Tick"+d;}
if(x>=4){s+=D+"Absorb 15% of Arcane Damage"+d;}
if(x>=5){s+=D+"-80% All Status Effect Durations"+d;}
if(x>=6){s+=D+"+35 All Skills"+d;s+=D+"Symbol of Marshan:"+d;s+=D+"Buffs Attack 30%"+d;}
s+=t+"Righteous Crusader"+d;}else if(n.indexOf("Grave Lord")===0){var x=Set.GraveLord;if(x>=2){s+=D+"+12 Offense"+d;}
if(x>=3){s+=D+"Absorb 12% of Cold Damage"+d;}
if(x>=4){s+=D+"+24 Life Leech"+d;}
if(x>=5){s+=D+"Attack Haste +40"+d;}
if(x>=6){s+=D+"+315 Poison Damage"+d;s+=D+"Slam:"+d;s+=D+"Double Swing"+d;}
s+=t+"Infernal Grave Lord"+d;}else if(n.indexOf("Warder")===0){var x=Set.Warder;if(x>=2){s+=D+"+20 Riposte"+d;}
if(x>=3){s+=D+"+10% Physical Damage"+d;}
if(x>=4){s+=D+"Absorb 25% of Fire Damage"+d;}
if(x>=5){s+=D+"+100 Dexterity"+d;}
if(x>=6){s+=D+"Skill Haste +50"+d;s+=D+"Blade Shield:"+d;s+=D+"Parry and Riposte Magic Attacks"+d;}
s+=t+"Deft Warder"+d;}else if(n.indexOf("Virtuoso")===0){var x=Set.Virtuoso;if(x>=2){s+=D+"+20 All Attributes"+d;}
if(x>=3){s+=D+"+40% Gold Gain"+d;}
if(x>=4){s+=D+"+20 Mana Per Tick"+d;}
if(x>=5){s+=D+"+30% Arcane Damage"+d;}
if(x>=6){s+=D+"+150 Charisma"+d;s+=D+"Great Leader:"+d;s+=D+"+Exp Find Enhances Arcane Damage 30%"+d;}
s+=t+"Adroit Virtuoso"+d;}else if(n.indexOf("Hierophant")===0){var x=Set.Hierophant;if(x>=2){s+=D+"+20 All Resistances"+d;}
if(x>=3){s+=D+"+24 Health Per Tick"+d;}
if(x>=4){s+=D+"+150 Thorn Damage"+d;}
if(x>=5){s+=D+"Absorb 10% of All Damage"+d;}
if(x>=6){s+=D+"+30% Maximum Health"+d;s+=D+"Treant Form:"+d;s+=D+"+Thorns Enhances All Damage 16%"+d;}
s+=t+"Floruit Hierophant"+d;}else if(n.indexOf("High Priest")===0){var x=Set.HighPriest;if(x>=2){s+=D+"+55 Wisdom"+d;}
if(x>=3){s+=D+"-70% Fear Duration"+d;}
if(x>=4){s+=D+"+150 Attack"+d;}
if(x>=5){s+=D+"+45 Critical Chance"+d;}
if(x>=6){s+=D+"+30% All Magical Damage"+d;s+=D+"The Prophet:"+d;s+=D+"+Attack Reduces Mob Resists 50%"+d;}
s+=t+"Extolled High Priest"+d;}else if(n.indexOf("Oracle")===0){var x=Set.Oracle;if(x>=2){s+=D+"+20 Health Per Kill"+d;}
if(x>=3){s+=D+"-90% Cold Duration"+d;}
if(x>=4){s+=D+"+20% Poison Damage"+d;}
if(x>=5){s+=D+"+30% Cold Damage"+d;}
if(x>=6){s+=D+"+30% All Healing Power"+d;s+=D+"The Cannibal:"+d;s+=D+"+HP Kill Increases All Regeneration 75%"+d;}
s+=t+"Mystical Oracle"+d;}else if(n.indexOf("Warlock")===0){var x=Set.Warlock;if(x>=2){s+=D+"+4 All Skills"+d;}
if(x>=3){s+=D+"+125 Attack"+d;}
if(x>=4){s+=D+"+35 All Resistances"+d;}
if(x>=5){s+=D+"+100 Intelligence"+d;}
if(x>=6){s+=D+"+30% All Magical Damage"+d;s+=D+"Ringwraith:"+d;s+=D+"Attack Enhances All Poison Damage 40%"+d;}
s+=t+"Profane Warlock"+d;}else if(n.indexOf("Phantasmist")===0){var x=Set.Phantasmist;if(x>=2){s+=D+"-45% Silence Duration"+d;}
if(x>=3){s+=D+"+32 Maximum Magic Reduction"+d;}
if(x>=4){s+=D+"Absorb 25% of Arcane Damage"+d;}
if(x>=5){s+=D+"Casting Haste +50"+d;}
if(x>=6){s+=D+"+60 All Attributes"+d;s+=D+"Apparition:"+d;s+=D+"Physical Damage Reduced 25%"+d;}
s+=t+"Candescent Phantasmist"+d;}else if(n.indexOf("Arch Mage")===0){var x=Set.ArchMage;if(x>=2){s+=D+"Absorb 10% of Fire Damage"+d;}
if(x>=3){s+=D+"+20 Conjuration"+d;}
if(x>=4){s+=D+"+20 Mana Per Tick"+d;}
if(x>=5){s+=D+"+45 All Resistances"+d;}
if(x>=6){s+=D+"+15% Maximum Mana and Health"+d;s+=D+"Conviction Aura:"+d;s+=D+"Lowers Mobs' Resists"+d;}
s+=t+"Recondite Arch Mage"+d;}else if(n.indexOf("Sorcerer")===0){var x=Set.Sorcerer;if(x>=2){s+=D+"Absorb 10% of Cold Damage"+d;}
if(x>=3){s+=D+"+20 Evocation"+d;}
if(x>=4){s+=D+"+35 Critical Chance"+d;}
if(x>=5){s+=D+"+20% All Damage"+d;}
if(x>=6){s+=D+"Casting Haste +60"+d;s+=D+"Offhand Mastery:"+d;s+=D+"20% Shield Block"+d;}
s+=t+"Cosmic Sorcerer"+d;}
return s;}
function itemType(type,Slot){var foo='';if(type==="eq"){foo=P['eq'][Slot];}
if(type==="item"){foo=P['item'][Slot];}
if(type==="bank"){foo=P['bank'][Slot];}
if(foo.itemSlot==="neck"){return"Necklace";}else if(foo.itemSlot==="ring"){return"Ring";}else if(foo.itemSlot==="helmet"){return"Helmet";}else if(foo.itemSlot==="shoulders"){return"Shoulders";}else if(foo.itemSlot==="back"){return"Back";}else if(foo.itemSlot==="chest"){return"Chest";}else if(foo.itemSlot==="bracers"){return"Bracers";}else if(foo.itemSlot==="gloves"){return"Gloves";}else if(foo.itemSlot==="belt"){return"Belt";}else if(foo.itemSlot==="legs"){return"Legs";}else if(foo.itemSlot==="boots"){return"Boots";}else if(foo.itemSlot==="weapons"){return"Weapon";}else if(foo.itemSlot==="shield"){if(foo.type==="shield"){return"Shield";}else{return"Spellcaster Off-Hand";}}else if(foo.itemSlot==="range"){if(foo.type==="range"){return"Bow";}else{return"Trinket";}}}
function setList(item){var s='';var S='';function str(setName,itemName,Slot1,Slot2){var item=setName+itemName;if(Slot2===undefined){if(P.eq[Slot1].name===item){return"<div>"+green(item)+"</div>";}else{return"<div>"+red(item)+"</div>";}}else{if(P.eq[Slot1].name===item||P.eq[Slot2].name===item){return"<div>"+green(item)+"</div>";}else{return"<div>"+red(item)+"</div>";}}}
var n=item.name;if(n.indexOf("Miner")===0){S="Miner's ";s+=str(S,"Memento",1);s+=str(S,"Shard",2,3);s+=str(S,"Glimmer",2,3);}else if(n.indexOf("Minotaur")===0){S="Minotaur's ";s+=str(S,"Gore",12,13);s+=str(S,"Horns",0);s+=str(S,"Hooves",11);s+=str(S,"Sprawl",4);}else if(n.indexOf("Golem")===0){S="Golem's ";s+=str(S,"Crag",12,13);s+=str(S,"Ore",6);s+=str(S,"Shelf",4);s+=str(S,"Crust",10);}else if(n.indexOf("Martyr")===0){S="Martyr's ";s+=str(S,"Manifesto",1);s+=str(S,"Shiv",12,13);s+=str(S,"Agony",7);s+=str(S,"Ideal",9);}else if(n.indexOf("Bishop")===0){S="Bishop's ";s+=str(S,"Justice",12);s+=str(S,"Purity",9);s+=str(S,"Merit",10);s+=str(S,"Faith",2,3);}else if(n.indexOf("Samurai")===0){S="Samurai's ";s+=str(S,"Devotion",0);s+=str(S,"Duty",6);s+=str(S,"Ardor",5);s+=str(S,"Fidelity",2,3);}else if(n.indexOf("Emissary")===0){S="Emissary's ";s+=str(S,"Craft",14);s+=str(S,"Finesse",11);s+=str(S,"Poise",10);s+=str(S,"Dispute",7);}else if(n.indexOf("Sage")===0){S="Sage's ";s+=str(S,"Acumen",8);s+=str(S,"Vision",0);s+=str(S,"Wit",12,13);s+=str(S,"Clamp",9);}else if(n.indexOf("Vagabond")===0){S="Vagabond's ";s+=str(S,"Seal",2,3);s+=str(S,"Cinch",9);s+=str(S,"Survey",8);s+=str(S,"Voyage",11);}else if(n.indexOf("Vagrant")===0){S="Vagrant's ";s+=str(S,"Timber",4);s+=str(S,"Copse",5);s+=str(S,"Slab",13);s+=str(S,"Branch",12,13);}else if(n.indexOf("Chancellor")===0){S="Chancellor's ";s+=str(S,"Ceremony",6);s+=str(S,"Remorse",1);s+=str(S,"Qualm",10);s+=str(S,"Bias",13);}else if(n.indexOf("Magnate")===0){S="Magnate's ";s+=str(S,"Lamp",14);s+=str(S,"Curio",2,3);s+=str(S,"Token",1);s+=str(S,"Sapphire",13);}else if(n.indexOf("Orator")===0){S="Orator's ";s+=str(S,"Desire",9);s+=str(S,"Whisper",6);s+=str(S,"Shout",0);s+=str(S,"Entreat",7);}else if(n.indexOf("Wyvern")===0){S="Wyvern's ";s+=str(S,"Scale",1);s+=str(S,"Wing",5);s+=str(S,"Tail",10);s+=str(S,"Eye",13);}else if(n.indexOf("Guardian")===0){S="Guardian's ";s+=str(S,"Fortress",6);s+=str(S,"Parapet",7);s+=str(S,"Bastion",4);s+=str(S,"Wall",13);s+=str(S,"Moat",9);s+=str(S,"Merlon",0);}else if(n.indexOf("Duke")===0){S="Duke's ";s+=str(S,"Laurel",1);s+=str(S,"Adoration",0);s+=str(S,"Ascension",5);s+=str(S,"Amity",8);s+=str(S,"Proclamation",4);s+=str(S,"Rule",10);}else if(n.indexOf("Augur")===0){S="Augur's ";s+=str(S,"Skull",0);s+=str(S,"Harvester",12);s+=str(S,"Pustule",2,3);s+=str(S,"Sludge",11);s+=str(S,"Enmity",14);s+=str(S,"Rancor",10);}else if(n.indexOf("Venova")===0){S="Venova's ";s+=str(S,"Halo",0);s+=str(S,"Martel",12);s+=str(S,"Wings",5);s+=str(S,"Eternity",2,3);s+=str(S,"Ascent",14);s+=str(S,"Silks",6);}else if(n.indexOf("Baron")===0){S="Baron's ";s+=str(S,"Rhythm",11);s+=str(S,"Coda",7);s+=str(S,"Cadenza",1);s+=str(S,"Tenor",10);s+=str(S,"Sonata",8);s+=str(S,"Glissando",12,13);}else if(n.indexOf("Daimyo")===0){S="Daimyo's ";s+=str(S,"Enso",0);s+=str(S,"Honne",7);s+=str(S,"Giri",12,13);s+=str(S,"Wabi",5);s+=str(S,"Miyabi",2,3);s+=str(S,"Yugen",14);}else if(n.indexOf("Bloodletter")===0){S="Bloodletter's ";s+=str(S,"Lancet",12,13);s+=str(S,"Clot",2,3);s+=str(S,"Vial",1);s+=str(S,"Marrow",9);s+=str(S,"Spleen",6);s+=str(S,"Serum",7);}else if(n.indexOf("Mendicant")===0){S="Mendicant's ";s+=str(S,"Effigy",13);s+=str(S,"Clover",2,3);s+=str(S,"Horseshoe",11);s+=str(S,"Albatross",4);s+=str(S,"Agimat",1);s+=str(S,"Sarimanok",14);}else if(n.indexOf("Friar")===0){S="Friar's ";s+=str(S,"Penance",10);s+=str(S,"Candor",7);s+=str(S,"Gift",9);s+=str(S,"Sacrifice",6);s+=str(S,"Epiphany",8);s+=str(S,"Grace",11);}else if(n.indexOf("Willow")===0){S="Willow's ";s+=str(S,"Gust",10);s+=str(S,"Calamity",12,13);s+=str(S,"Seed",2,3);s+=str(S,"Mildew",11);s+=str(S,"Frost",4);s+=str(S,"Flare",0);}else if(n.indexOf("Wraith")===0){S="Wraith's ";s+=str(S,"Lust",9);s+=str(S,"Envy",14);s+=str(S,"Lesion",2,3);s+=str(S,"Pall",5);s+=str(S,"Flesh",8);s+=str(S,"Husk",6);}else if(n.indexOf("Satyr")===0){S="Satyr's ";s+=str(S,"Chalice",13);s+=str(S,"Artifice",12,13);s+=str(S,"Turban",0);s+=str(S,"Satin",8);s+=str(S,"Opulence",1);s+=str(S,"Delusion",6);}else if(n.indexOf("Summoner")===0){S="Summoner's ";s+=str(S,"Ember",14);s+=str(S,"Residue",4);s+=str(S,"Cinder",7);s+=str(S,"Furnace",6);s+=str(S,"Conduit",12);s+=str(S,"Gyre",2,3);}else if(n.indexOf("Malefactor")===0){S="Malefactor's ";s+=str(S,"Ballast",8);s+=str(S,"Fuse",9);s+=str(S,"Coil",12,13);s+=str(S,"Resistor",11);s+=str(S,"Yttrium",13);s+=str(S,"Terminal",0);}else if(n.indexOf("Warlord")===0){S="Warlord's ";s+=str(S,"Scowl",0);s+=str(S,"Disdain",4);s+=str(S,"Blitzkrieg",6);s+=str(S,"Defiance",7);s+=str(S,"Derision",8);s+=str(S,"Ferocity",10);}else if(n.indexOf("Assassin")===0){S="Assassin's ";s+=str(S,"Guile",1);s+=str(S,"Helix",2,3);s+=str(S,"Slander",5);s+=str(S,"Deception",6);s+=str(S,"Hoax",8);s+=str(S,"Subversion",9);}else if(n.indexOf("Grandmaster")===0){S="Grandmaster's ";s+=str(S,"Symmetry",0);s+=str(S,"Peace",5);s+=str(S,"Affinity",9);s+=str(S,"Consonance",10);s+=str(S,"Balance",11);s+=str(S,"Comity",14);}else if(n.indexOf("Crusader")===0){S="Crusader's ";s+=str(S,"Cathexis",1);s+=str(S,"Allegiance",2,3);s+=str(S,"Fervor",4);s+=str(S,"Fealty",7);s+=str(S,"Vehemence",11);s+=str(S,"Aegis",13);}else if(n.indexOf("Grave Lord")===0){S="Grave Lord's ";s+=str(S,"Deceit",0);s+=str(S,"Perfidy",2,3);s+=str(S,"Treachery",5);s+=str(S,"Cozen",6);s+=str(S,"Chicane",10);s+=str(S,"Crescent",12);}else if(n.indexOf("Warder")===0){S="Warder's ";s+=str(S,"Zephyr",1);s+=str(S,"Reclaim",7);s+=str(S,"Preserve",11);s+=str(S,"Hailrend",12,13);s+=str(S,"Magmahew",12,13);s+=str(S,"Tempest",14);}else if(n.indexOf("Virtuoso")===0){S="Virtuoso's ";s+=str(S,"Orotund",4);s+=str(S,"Bombast",6);s+=str(S,"Conceit",8);s+=str(S,"Plangent",9);s+=str(S,"Resonance",13);s+=str(S,"Fanfare",14);}else if(n.indexOf("Hierophant")===0){S="Hierophant's ";s+=str(S,"Holocaust",2,3);s+=str(S,"Blizzard",4);s+=str(S,"Cyclone",5);s+=str(S,"Cataclysm",10);s+=str(S,"Cascade",11);s+=str(S,"Cloudburst",13);}else if(n.indexOf("High Priest")===0){S="High Priest's ";s+=str(S,"Abstention",0);s+=str(S,"Mastery",1);s+=str(S,"Piety",2,3);s+=str(S,"Reverence",6);s+=str(S,"Humility",7);s+=str(S,"Constraint",9);}else if(n.indexOf("Oracle")===0){S="Oracle's ";s+=str(S,"Sibyl",1);s+=str(S,"Ailment",4);s+=str(S,"Contagion",8);s+=str(S,"Malady",10);s+=str(S,"Fetish",13);s+=str(S,"Presage",14);}else if(n.indexOf("Warlock")===0){S="Warlock's ";s+=str(S,"Doom",0);s+=str(S,"Carnage",2,3);s+=str(S,"Demise",5);s+=str(S,"Abomination",6);s+=str(S,"Nightmare",11);s+=str(S,"Nemesis",12,13);}else if(n.indexOf("Phantasmist")===0){S="Phantasmist's ";s+=str(S,"Acumen",0);s+=str(S,"Catharsis",5);s+=str(S,"Sagacity",7);s+=str(S,"Serendipity",8);s+=str(S,"Insight",9);s+=str(S,"Kismet",13);}else if(n.indexOf("Arch Mage")===0){S="Arch Mage's ";s+=str(S,"Periapt",2,3);s+=str(S,"Debacle",4);s+=str(S,"Squall",7);s+=str(S,"Calamity",8);s+=str(S,"Catastrophe",12);s+=str(S,"Mojo",14);}else if(n.indexOf("Sorcerer")===0){S="Sorcerer's ";s+=str(S,"Zodiac",1);s+=str(S,"Pulsar",2,3);s+=str(S,"Nebula",6);s+=str(S,"Equinox",9);s+=str(S,"Quasar",10);s+=str(S,"Pleiades",13);}
return s;}
function dodgeChance(){if(my.dodge>0){var x=(3+(dodgeTotal()/25))*(1+(min70(agiTotal())/330));if(my.job==="Rogue"){if(my.talent9>=20){x+=8;}}
return x;}else{return 0;}}
function parryChance(){if(my.parry>0){var foo=(3+dualWieldBonus+(parryTotal()/25))*(1+(min70(agiTotal())/330));if(my.job==="Ranger"){if(my.talent3>=20){foo+=12;}}
return foo;}else{return 0;}}
function riposteChance(){if(my.riposte>0){var foo=(3+dualWieldBonus+(riposteTotal()/25))*(1+(min70(agiTotal())/330));if(my.job==="Ranger"){if(my.talent3>=20){foo+=12;}}
return foo;}else{return 0;}}
function setShieldBlockChance(ttyPos){var x=0;if(P.eq[13].type==='shield'||ttyPos!==undefined){if(ttyPos!==undefined){var z=ttyPos;}else{var z=P.eq[13].yPos;}
x=.1;if(z===-64){x=.12;}
if(z===-128){x=.14;}
if(z===-192){x=.16;}
if(z===-256){x=.18;}
if(z===-320){x=.20;}
if(z===-384){x=.22;}
if(z===-448){x=.24;}}
if(Set.Sorcerer>=6){x=.2;}
return x;}
function setDualWieldBonus(){var x=0;if(my.dualWield>0){var i=P.eq[12].type;if(i==="smashed"||i==="crushed"){x=0;}else{x=5;}}
return x;}
function dualWieldChance(){if(my.dualWield>0){var foo=1+(dualWieldTotal()*.27);if(my.job==="Ranger"){if(my.talent11>=20){foo+=12;}}
if(foo>100){foo=100;}
return foo;}else{return 0;}}
function doubleAttackChance(){if(my.doubleAttack>0){var foo=1+(doubleAttackTotal()*.16);if(my.job==="Ranger"){if(my.talent11>=20){foo+=12;}}
if(foo>100){foo=100;}
return foo;}else{return 0;}}
function hpTier(){var hpTier=4.5;if(my.job==="Paladin"||my.job==="Shadow Knight"||my.job==="Ranger"||my.job==="Bard"||my.job==="Monk"){hpTier=3.8;}else if(my.job==="Cleric"||my.job==="Shaman"||my.job==="Druid"||my.job==="Rogue"){hpTier=2.5;}else if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){hpTier=2;}
return hpTier;}
function mpTier(){var jobMpMod=2;if(my.job==="Cleric"||my.job==="Shaman"||my.job==="Druid"){jobMpMod=3.8;}else if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){jobMpMod=4.5;}
return jobMpMod;}
function mpClass(){var foo="melee";if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"||my.job==="Bard"){foo="intCaster";}else if(my.job==="Shadow Knight"){foo="intHybrid";}else if(my.job==="Druid"||my.job==="Cleric"||my.job==="Shaman"){foo="wisCaster";}else if(my.job==="Ranger"||my.job==="Paladin"){foo="wisHybrid";}
return foo;}
function jobType(){var foo="melee";if(my.job==="Ranger"||my.job==="Shadow Knight"||my.job==="Paladin"){foo="hybrid";}
if(my.job==="Druid"||my.job==="Cleric"||my.job==="Shaman"){foo="healer";}
if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){foo="caster";}
return foo;}
function talent1(){var a=my.talent1;if(a>0){if(my.talent2>=20){a++;}
if(my.talent3>=20){a++;}
if(my.talent4>=20){a+=2;}}
return a;}
function talent2(){var a=my.talent2;if(a>0){if(my.talent1>=20){a++;}
if(my.talent3>=20){a++;}
if(my.talent4>=20){a+=2;}}
return a;}
function talent3(){var a=my.talent3;if(a>0){if(my.talent1>=20){a++;}
if(my.talent2>=20){a++;}
if(my.talent4>=20){a+=2;}}
return a;}
function talent4(){var a=my.talent4;if(a>0){if(my.talent1>=20){a++;}
if(my.talent2>=20){a++;}
if(my.talent3>=20){a+=2;}}
return a;}
function talent5(){var a=my.talent5;if(a>0){if(my.talent6>=20){a++;}
if(my.talent7>=20){a++;}
if(my.talent8>=20){a+=2;}}
return a;}
function talent6(){var a=my.talent6;if(a>0){if(my.talent5>=20){a++;}
if(my.talent7>=20){a++;}
if(my.talent8>=20){a+=2;}}
return a;}
function talent7(){var a=my.talent7;if(a>0){if(my.talent5>=20){a++;}
if(my.talent6>=20){a++;}
if(my.talent8>=20){a+=2;}}
return a;}
function talent8(){var a=my.talent8;if(a>0){if(my.talent5>=20){a++;}
if(my.talent6>=20){a++;}
if(my.talent7>=20){a+=2;}}
return a;}
function talent9(){var a=my.talent9;if(a>0){if(my.talent10>=20){a++;}
if(my.talent11>=20){a++;}
if(my.talent12>=20){a+=2;}}
return a;}
function talent10(){var a=my.talent10;if(a>0){if(my.talent9>=20){a++;}
if(my.talent11>=20){a++;}
if(my.talent12>=20){a+=2;}}
return a;}
function talent11(){var a=my.talent11;if(a>0){if(my.talent9>=20){a++;}
if(my.talent10>=20){a++;}
if(my.talent12>=20){a+=2;}}
return a;}
function talent12(){var a=my.talent12;if(a>0){if(my.talent9>=20){a++;}
if(my.talent10>=20){a++;}
if(my.talent11>=20){a+=2;}}
return a;}(function(){if(location.host==='localhost'){var e=document.getElementById('curtain');e.style.overflow="auto";}})();$.ajaxSetup({type:'POST',url:'php/master1.php'});var M=Math,T=TweenMax,D=document,C=createjs,tween={},cache={},save={},ez={},P={};ez.sin=Sine.easeIn;ez.sinout=Sine.easeInOut;ez.sout=Sine.easeOut;ez.lin=Linear.easeIn;ez.Qout=Quad.easeOut;ez.Qin=Quad.easeIn;ez.Qinout=Quad.easeInOut;ez.qout=Quart.easeOut;ez.qin=Quart.easeIn;ez.cout=Circ.easeOut;ez.cin=Circ.easeIn;ez.cinout=Circ.easeInOut;ez.xout=Expo.easeOut;ez.xin=Expo.easeIn;ez.binout=Bounce.easeInOut;ez.bout=Bounce.easeOut;ez.Bout=Back.easeOut;ez.Bin=Back.easeIn,T.defaultOverwrite="all";T.defaultEase=ez.Qout;T.globalTimeScale(1);var battleStart=0,battleEnd=0,cacheClassDrag='',cacheClassDrop='',cacheDragSlot='',cacheDragID=0,cacheDropSlot='',cacheDropID=0,battleDuration=0,battleDps=0,petTarget='',chatRow=0,talentResetNotify=false;function mobileDevice(){return /Silk|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);}
function checkXbox(){return /Xbox/i.test(navigator.userAgent);}
function checkPlaystation(){var foo=false;if(navigator.userAgent.toLowerCase().indexOf("playstation")>=0){foo=true;}
return foo;}
function checkNintendo(){return /Nintendo/i.test(navigator.userAgent);}
var isXbox=checkXbox(),isPlaystation=checkPlaystation(),isNintendo=checkNintendo(),isMobile=mobileDevice(),isOpera=!!window.opera||navigator.userAgent.indexOf(' OPR/')>=0,isFirefox=typeof InstallTrigger!=='undefined',isSafari=Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor')>0,isChrome=!!window.chrome&&!isOpera,isMSIE=/*@cc_on!@*/ false,isMSIE11=!!navigator.userAgent.match(/Trident\/7\./);function resizeWindow(){}
$(window).on('load resize orientationchange',function(){resizeWindow();});var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";var t=function(e){var i=e.nodeType,r="";if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)r+=t(e)}else if(3===i||4===i)return e.nodeValue;return r},e=function(t,e){for(var i=e.length,r="";--t>-1;)r+=e[0|Math.random()*i];return r},i=function(t){this.chars=t.split(""),this.sets=[],this.length=50;var i;for(i=0;20>i;i++)this.sets[i]=e(80,this.chars);this.grow=function(t){for(i=0;20>i;i++)this.sets[i]+=e(t-this.length,this.chars);this.length=t}},r="ABCDEFGHIJKLMNOPQRSTUVWXYZ",s=r.toLowerCase(),n={upperCase:new i(r),lowerCase:new i(s),upperAndLowerCase:new i(r+s)},a=_gsScope._gsDefine.plugin({propName:"scrambleText",version:"0.2.2",API:2,overwriteProps:["scrambleText","text"],init:function(e,r,s){if(this._prop="innerHTML"in e?"innerHTML":"textContent"in e?"textContent":0,!this._prop)return!1;this._target=e,"object"!=typeof r&&(r={text:r});var a,o,l,h;return this._delimiter=a=r.delimiter||"",this._original=t(e).replace(/\s+/g," ").split(" ").join("").split(a),this._text=(r.text||r.value||"").replace(/\s+/g," ").split(a),this._hasClass=!1,"string"==typeof r.newClass&&(this._newClass=r.newClass,this._hasClass=!0),"string"==typeof r.oldClass&&(this._oldClass=r.oldClass,this._hasClass=!0),o=this._text.length-this._original.length,this._length=this._original.join(a).length,this._lengthDif=this._text.join(a).length-this._length,this._fillChar=r.fillChar||r.chars&&-1!==r.chars.indexOf(" ")?" ":"",this._charSet=h=n[r.chars||"upperCase"]||new i(r.chars),this._speed=.016 /(r.speed||1),this._prevScrambleTime=0,this._setIndex=0|20*Math.random(),l=this._length+Math.max(this._lengthDif,0),l>h.length&&h.grow(l),this._chars=h.sets[this._setIndex],this._revealDelay=r.revealDelay||0,this._tweenLength=r.tweenLength!==!1,this._tween=s,!0},set:function(t){var e,i,r,s,n,a,o=this._text.length,l=this._delimiter,h=this._tween._time,u=h-this._prevScrambleTime;this._revealDelay&&(this._tween.vars.runBackwards&&(h=this._tween._duration-h),t=0===h?0:this._revealDelay>h?1e-6:h===this._tween._duration?1:this._tween._ease.getRatio((h-this._revealDelay)/(this._tween._duration-this._revealDelay))),0>t?t=0:t>1&&(t=1),e=0|t*o+.5,i=this._text.slice(0,e).join(l),r=this._original.slice(e).join(l),t&&((u>this._speed||-this._speed>u)&&(this._setIndex=(this._setIndex+(0|19*Math.random()))%20,this._chars=this._charSet.sets[this._setIndex],this._prevScrambleTime+=u),r=this._chars.substr(i.length,0|this._length+(this._tweenLength?1-(t=1-t)*t*t*t:1)*this._lengthDif-i.length+.5)),this._hasClass?(s=this._newClass&&0!==e,n=this._oldClass&&e!==o,a=(s?"<span class='"+this._newClass+"'>":"")+i+(s?"</span>":"")+(n?"<span class='"+this._oldClass+"'>":"")+l+r+(n?"</span>":"")):a=i+l+r,this._target[this._prop]=" "===this._fillChar&&-1!==a.indexOf("  ")?a.split("  ").join("  "):a}}),o=a.prototype;o._newClass=o._oldClass="";for(o in n)n[o.toLowerCase()]=n[o],n[o.toUpperCase()]=n[o]}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()();var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(function(t){"use strict";var e=t.GreenSockGlobals||t,i=function(t){var i,s=t.split("."),r=e;for(i=0;s.length>i;i++)r[s[i]]=r=r[s[i]]||{};return r},s=i("com.greensock.utils"),r=function(t){var e=t.nodeType,i="";if(1===e||9===e||11===e){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=r(t)}else if(3===e||4===e)return t.nodeValue;return i},n=document,a=n.defaultView?n.defaultView.getComputedStyle:function(){},o=/([A-Z])/g,h=function(t,e,i,s){var r;return(i=i||a(t,null))?(t=i.getPropertyValue(e.replace(o,"-$1").toLowerCase()),r=t||i.length?t:i[e]):t.currentStyle&&(i=t.currentStyle,r=i[e]),s?r:parseInt(r,10)||0},l=function(t){return t.length&&t[0]&&(t[0].nodeType&&t[0].style&&!t.nodeType||t[0].length&&t[0][0])?!0:!1},_=function(t){var e,i,s,r=[],n=t.length;for(e=0;n>e;e++)
if(i=t[e],l(i))
for(s=i.length,s=0;i.length>s;s++)r.push(i[s]);else r.push(i);return r},u=")eefec303079ad17405c",c=/(?:<br>|<br\/>|<br \/>)/gi,p=n.all&&!n.addEventListener,f="<div style='position:relative;display:inline-block;"+(p?"*display:inline;*zoom:1;'":"'"),m=function(t){t=t||"";var e=-1!==t.indexOf("++"),i=1;return e&&(t=t.split("++").join("")),function(){return f+(t?" class='"+t+(e?i++:"")+"'>":">")}},d=s.SplitText=e.SplitText=function(t,e){if("string"==typeof t&&(t=d.selector(t)),!t)throw"cannot split a null element.";this.elements=l(t)?_(t):[t],this.chars=[],this.words=[],this.lines=[],this._originals=[],this.vars=e||{},this.split(e)},g=function(t,e,i){var s=t.nodeType;if(1===s||9===s||11===s)
for(t=t.firstChild;t;t=t.nextSibling)g(t,e,i);else(3===s||4===s)&&(t.nodeValue=t.nodeValue.split(e).join(i))},v=function(t,e){for(var i=e.length;--i>-1;)t.push(e[i])},y=function(t,e,i,s,o){c.test(t.innerHTML)&&(t.innerHTML=t.innerHTML.replace(c,u));var l,_,p,f,d,y,T,w,x,b,P,S,C,k,R=r(t),A=e.type||e.split||"chars,words,lines",O=-1!==A.indexOf("lines")?[]:null,D=-1!==A.indexOf("words"),M=-1!==A.indexOf("chars"),L="absolute"===e.position||e.absolute===!0,z=L?"­ ":" ",I=-999,E=a(t),N=h(t,"paddingLeft",E),F=h(t,"borderBottomWidth",E)+h(t,"borderTopWidth",E),X=h(t,"borderLeftWidth",E)+h(t,"borderRightWidth",E),U=h(t,"paddingTop",E)+h(t,"paddingBottom",E),B=h(t,"paddingLeft",E)+h(t,"paddingRight",E),j=h(t,"textAlign",E,!0),Y=t.clientHeight,q=t.clientWidth,V="</div>",G=m(e.wordsClass),Q=m(e.charsClass),W=-1!==(e.linesClass||"").indexOf("++"),Z=e.linesClass,H=-1!==R.indexOf("<"),$=!0,K=[],J=[],te=[];for(W&&(Z=Z.split("++").join("")),H&&(R=R.split("<").join("{{LT}}")),l=R.length,f=G(),d=0;l>d;d++)
if(T=R.charAt(d),")"===T&&R.substr(d,20)===u)f+=($?V:"")+"<BR/>",$=!1,d!==l-20&&R.substr(d+20,20)!==u&&(f+=" "+G(),$=!0),d+=19;else if(" "===T&&" "!==R.charAt(d-1)&&d!==l-1&&R.substr(d-20,20)!==u){for(f+=$?V:"",$=!1;" "===R.charAt(d+1);)f+=z,d++;(")"!==R.charAt(d+1)||R.substr(d+1,20)!==u)&&(f+=z+G(),$=!0)}else f+=M&&" "!==T?Q()+T+"</div>":T;for(t.innerHTML=f+($?V:""),H&&g(t,"{{LT}}","<"),y=t.getElementsByTagName("*"),l=y.length,w=[],d=0;l>d;d++)w[d]=y[d];if(O||L)
for(d=0;l>d;d++)x=w[d],p=x.parentNode===t,(p||L||M&&!D)&&(b=x.offsetTop,O&&p&&b!==I&&"BR"!==x.nodeName&&(_=[],O.push(_),I=b),L&&(x._x=x.offsetLeft,x._y=b,x._w=x.offsetWidth,x._h=x.offsetHeight),O&&(D!==p&&M||(_.push(x),x._x-=N),p&&d&&(w[d-1]._wordEnd=!0),"BR"===x.nodeName&&x.nextSibling&&"BR"===x.nextSibling.nodeName&&O.push([])));for(d=0;l>d;d++)x=w[d],p=x.parentNode===t,"BR"!==x.nodeName?(L&&(S=x.style,D||p||(x._x+=x.parentNode._x,x._y+=x.parentNode._y),S.left=x._x+"px",S.top=x._y+"px",S.position="absolute",S.display="block",S.width=x._w+1+"px",S.height=x._h+"px"),D?p&&""!==x.innerHTML?J.push(x):M&&K.push(x):p?(t.removeChild(x),w.splice(d--,1),l--):!p&&M&&(b=!O&&!L&&x.nextSibling,t.appendChild(x),b||t.appendChild(n.createTextNode(" ")),K.push(x))):O||L?(t.removeChild(x),w.splice(d--,1),l--):D||t.appendChild(x);if(O){for(L&&(P=n.createElement("div"),t.appendChild(P),C=P.offsetWidth+"px",b=P.offsetParent===t?0:t.offsetLeft,t.removeChild(P)),S=t.style.cssText,t.style.cssText="display:none;";t.firstChild;)t.removeChild(t.firstChild);for(k=!L||!D&&!M,d=0;O.length>d;d++){for(_=O[d],P=n.createElement("div"),P.style.cssText="display:block;text-align:"+j+";position:"+(L?"absolute;":"relative;"),Z&&(P.className=Z+(W?d+1:"")),te.push(P),l=_.length,y=0;l>y;y++)"BR"!==_[y].nodeName&&(x=_[y],P.appendChild(x),k&&(x._wordEnd||D)&&P.appendChild(n.createTextNode(" ")),L&&(0===y&&(P.style.top=x._y+"px",P.style.left=N+b+"px"),x.style.top="0px",b&&(x.style.left=x._x-b+"px")));0===l&&(P.innerHTML=" "),D||M||(P.innerHTML=r(P).split(String.fromCharCode(160)).join(" ")),L&&(P.style.width=C,P.style.height=x._h+"px"),t.appendChild(P)}
t.style.cssText=S}
L&&(Y>t.clientHeight&&(t.style.height=Y-U+"px",Y>t.clientHeight&&(t.style.height=Y+F+"px")),q>t.clientWidth&&(t.style.width=q-B+"px",q>t.clientWidth&&(t.style.width=q+X+"px"))),v(i,K),v(s,J),v(o,te)},T=d.prototype;T.split=function(t){this.isSplit&&this.revert(),this.vars=t||this.vars,this._originals.length=this.chars.length=this.words.length=this.lines.length=0;for(var e=this.elements.length;--e>-1;)this._originals[e]=this.elements[e].innerHTML,y(this.elements[e],this.vars,this.chars,this.words,this.lines);return this.chars.reverse(),this.words.reverse(),this.lines.reverse(),this.isSplit=!0,this},T.revert=function(){if(!this._originals)throw"revert() call wasn't scoped properly.";for(var t=this._originals.length;--t>-1;)this.elements[t].innerHTML=this._originals[t];return this.chars=[],this.words=[],this.lines=[],this.isSplit=!1,this},d.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(d.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)},d.version="0.3.3"})(_gsScope),function(t){"use strict";var e=function(){return(_gsScope.GreenSockGlobals||_gsScope)[t]};"function"==typeof define&&define.amd?define(["TweenLite"],e):"undefined"!=typeof module&&module.exports&&(module.exports=e())}("SplitText");(function($){$.widget("ui.swappable",$.ui.sortable,{_mouseStart:function(event,overrideHandle,noActivation){var o=this.options,self=this;o.helper="original",this.currentContainer=this;this.helper=this._createHelper(event);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");$.extend(this.offset,{click:{left:event.pageX-this.offset.left,top:event.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(event);this.originalPageX=event.pageX;this.originalPageY=event.pageY;(o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt));this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};if(this.helper[0]!=this.currentItem[0]){this.currentItem.hide();}
this._createPlaceholder();if(o.containment)
this._setContainment();if(o.cursor){if($('body').css("cursor"))this._storedCursor=$('body').css("cursor");$('body').css("cursor",o.cursor);}
if(o.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",o.opacity);}
if(o.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",o.zIndex);}
if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!='HTML')
this.overflowOffset=this.scrollParent.offset();this._trigger("start",event,this._uiHash());if(!this._preserveHelperProportions)
this._cacheHelperProportions();if(!noActivation){for(var i=this.containers.length-1;i>=0;i--){this.containers[i]._trigger("activate",event,self._uiHash(this));}}
if($.ui.ddmanager)
$.ui.ddmanager.current=this;if($.ui.ddmanager&&!o.dropBehaviour)
$.ui.ddmanager.prepareOffsets(this,event);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(event);return true;},_mouseStop:function(event,noPropagation){if(!event)return;var o=this.options;var target=event.target;var itemPassive=$(target).closest(o.items);var itemActive=this.currentItem.closest(o.items);var itemPlaceholder=$(itemActive).next();$(itemPassive).after(itemActive);$(itemPlaceholder).after(itemPassive);if($.ui.ddmanager&&!this.options.dropBehaviour)
$.ui.ddmanager.drop(this,event);if(this.options.revert){var self=this;var cur=self.placeholder.offset();self.reverting=true;$(this.helper).animate({left:cur.left-this.offset.parent.left-self.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:cur.top-this.offset.parent.top-self.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){self._clear(event);});}else{this._clear(event,noPropagation);}
return false;},_clear:function(event,noPropagation){this.reverting=false;var delayedTriggers=[],self=this;this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS){if(this._storedCSS[i]=='auto'||this._storedCSS[i]=='static')this._storedCSS[i]='';}
this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");}else{this.currentItem.show();}
if(this.fromOutside&&!noPropagation)delayedTriggers.push(function(event){this._trigger("receive",event,this._uiHash(this.fromOutside));});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!noPropagation)delayedTriggers.push(function(event){this._trigger("update",event,this._uiHash());});if(!$.contains(this.element[0],this.currentItem[0])){if(!noPropagation)delayedTriggers.push(function(event){this._trigger("remove",event,this._uiHash());});for(var i=this.containers.length-1;i>=0;i--){if($.contains(this.containers[i].element[0],this.currentItem[0])&&!noPropagation){delayedTriggers.push((function(c){return function(event){c._trigger("receive",event,this._uiHash(this));};}).call(this,this.containers[i]));delayedTriggers.push((function(c){return function(event){c._trigger("update",event,this._uiHash(this));};}).call(this,this.containers[i]));}};};for(var i=this.containers.length-1;i>=0;i--){if(!noPropagation)delayedTriggers.push((function(c){return function(event){c._trigger("deactivate",event,this._uiHash(this));};}).call(this,this.containers[i]));if(this.containers[i].containerCache.over){delayedTriggers.push((function(c){return function(event){c._trigger("out",event,this._uiHash(this));};}).call(this,this.containers[i]));this.containers[i].containerCache.over=0;}}
if(this._storedCursor)$('body').css("cursor",this._storedCursor);if(this._storedOpacity)this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=='auto'?'':this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!noPropagation){this._trigger("beforeStop",event,this._uiHash());for(var i=0;i<delayedTriggers.length;i++){delayedTriggers[i].call(this,event);};this._trigger("stop",event,this._uiHash());}
return false;}
if(!noPropagation)this._trigger("beforeStop",event,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);if(this.helper[0]!=this.currentItem[0])this.helper.remove();this.helper=null;if(!noPropagation){for(var i=0;i<delayedTriggers.length;i++){delayedTriggers[i].call(this,event);};this._trigger("stop",event,this._uiHash());}
this.fromOutside=false;return true;}});$.extend($.ui.swappable,{version:"0.9.5"});})(jQuery);var srv={glb:false,my:false,item:false,eq:false,q:false,difficulty:1}
var lsKey=40,dev=false,itemSprite="i.imgur.com/gxfvcyu.png";if(location.pathname==='/ng/'){dev=true;}
var CLR={martyr:false}
var soundLocation=location.protocol+'//nevergrind.com/sound1/',musicLocation=location.protocol+'//nevergrind.com/music1/',timers={},portalStatus=false,loreTimer=TDC(),loreMsg=[],timescale={rate:1},GTS=TM(),chatReply='',chatVerticalDrag=false,addMonsterTimer=TDC(),paused=false,campStatus=false,floorB=80,floorT=648,activeBankTab=0,minimumWeaponSpeed=1000,inputFocus=false,viewingAct=1,noSpaceClass="Warrior",groundY=650,mpType='MP',hoverID='',hoverType='',hoverClass='',tlSpellbar=TM(),ambushChance=0,hotkeyTimer=TDC(),alacrityTimeout=TDC(),combatButtonDragMode=false,weaponBonus=0,maxBankSlots=0,bowBonus=0,asset=[],mobs=[],empowerTrueshot=0,shieldBlockChance=0,bloodlustStatus=false,miracleStatus=false,miracleTimer=0,flayTarget=0,assassinateStatus=false,resetTalentPrompt=false,warAmpDamage=false,audioChannel=1,activeTalent="talent1",frenzyRate=500,highestElement="poison",battleDamageTotal=0,battleDamageTaken=0,totalHits=0,battlePhysicalTotal=0,battlePoisonTotal=0,battleMagicTotal=0,battleLightningTotal=0,battleColdTotal=0,battleFireTotal=0,battlePetDamage=0,battleDSDamage=0,battleHealTotal=0,battleManaTotal=0,ladderStatus=false,cityStatus=false,battleExperienceTotal=0,chillStatus=false,silenceStatus=false,upgradeMode=false,trainSkillCost=0,itemUpgradeMode=false,upgradePrompt=false,upgradePhysical=true,merchantMode=false,itemSwapCount=0,buyMode=false,graveLordSlam=0,selectedZone="",selectedSubzone="",charactersFound=0,firstEmptyCharacterSlot=0,talentNotifyStatus=false,mouseTTX=0,mouseTTY=0,goldTransferMode="",imagesLoaded=0,NPCname="",cloud="",indoorStatus=true,scriptsLoaded=false,statTab="Main",questJournalBlock=1,ttTimer=TDC(),classSpriteLoaded=false,delayAdd=[],titleScreenMusicPlaying=false;for(var i=0;i<=4;i++){delayAdd[i]=TDC();}
function diff(){return g.difficulty-1;}
P.Q=[];function initQ(){if(location.protocol==="http:"){for(var i=0;i<=2;i++){P.Q[i]={ButcherblockMountains:0,CastleMistmoore:0,Crushbone:0,DagnorsCauldron:0,EstateofUnrest:0,GreaterFaydark:0,KedgeKeep:0,LesserFaydark:0,SteamfontMountains:0,Befallen:0,Beholders:0,Blackburrow:0,CazicThule:0,ClanRunnyeye:0,EastCommonlands:0,EastKarana:0,EverfrostPeaks:0,HighpassHold:0,InnothuleSwamp:0,KithicorForest:0,LakeRathetear:0,LavastormMountains:0,LowerGuk:0,MistyThicket:0,NagafensLair:0,Najena:0,NektulosForest:0,NorthKarana:0,NorthRo:0,OasisofMarr:0,OceanofTears:0,PermafrostKeep:0,QeynosHills:0,RatheMountains:0,SouthKarana:0,SouthRo:0,SoluseksEye:0,SplitpawLair:0,TheFeerrott:0,UpperGuk:0,WestCommonlands:0,WestKarana:0,ErudsCrossing:0,ToxxuliaForest:0,PlaneofFear:0,PlaneofHate:0,repeatCm3:false,repeatCt3:false,repeatKk3:false,repeatNl3:false,repeatSl3:false,repeatSe3:false,repeatLg3:false,repeatKk4:false,repeatNl4:false,repeatPk4:false,repeatCB:false,repeatER:false,CM1:0,CM2:0,CM3:0,CM4:0,CM5:0,CM6:0,CB1:0,CB2:0,CB3:0,CB4:0,CB5:0,ER1:0,ER2:0,ER3:0,ER4:0,ER5:0,GF1:0,KK1:0,KK2:0,KK3:0,KK4:0,KK5:0,LF1:0,LF2:0,BF1:0,BF2:0,BF3:0,BF4:0,BB1:0,BB2:0,BB3:0,BB4:0,CT1:0,CT2:0,CT3:0,CT4:0,CT5:0,LG1:0,LG2:0,LG3:0,LG4:0,LG5:0,LG6:0,NL1:0,NL2:0,NL3:0,NL4:0,NL5:0,NL6:0,NL7:0,NL8:0,NL9:0,NL10:0,NL11:0,NL12:0,NJ1:0,NJ2:0,NJ3:0,NJ4:0,NJ5:0,NR1:0,NR2:0,PF1:0,PF2:0,PF3:0,PF4:0,PF5:0,PF6:0,PF7:0,PF8:0,PF9:0,PF10:0,PF11:0,PF12:0,PF13:0,PF14:0,PF15:0,PF16:0,PF17:0,PF18:0,PF19:0,PF20:0,PF21:0,PF22:0,PH1:0,PH2:0,PH3:0,PH4:0,PH5:0,PH6:0,PH7:0,PH8:0,PH9:0,PH10:0,PH11:0,PH12:0,PH13:0,PK1:0,PK2:0,PK3:0,PK4:0,PK5:0,PK6:0,PK7:0,PK8:0,PK9:0,UG1:0,UG2:0,UG3:0,UG4:0};}}}
initQ();function resetRepeatableQuests(){var df=diff();if(P.Q[df].repeatCm3){P.Q[df].repeatCm3=false;for(var i=1;i<=6;i++){P.Q[df]['CM'+i]=0;}}
if(P.Q[df].repeatCt3){P.Q[df].repeatCt3=false;P.Q[df].CazicThule=4;for(var i=1;i<=3;i++){P.Q[df]['CT'+i]=0;}}
if(P.Q[df].repeatKk3){P.Q[df].repeatKk3=false;for(var i=1;i<=5;i++){P.Q[df]['KK'+i]=0;}}
if(P.Q[df].repeatKk4){P.Q[df].repeatKk4=false;for(var i=6;i<=8;i++){P.Q[df]['KK'+i]=0;}}
if(P.Q[df].repeatNl3){P.Q[df].repeatNl3=false;for(var i=1;i<=2;i++){P.Q[df]['NL'+i]=0;}}
if(P.Q[df].repeatSl3){P.Q[df].repeatSl3=false;for(var i=1;i<=6;i++){P.Q[df]['SL'+i]=0;}}
if(P.Q[df].repeatLg3){P.Q[df].repeatLg3=false;for(var i=1;i<=5;i++){P.Q[df]['LG'+i]=0;}}
if(P.Q[df].repeatNl4||P.Q[df].NL12>=2){P.Q[df].repeatNl4=false;for(var i=7;i<=12;i++){P.Q[df]['NL'+i]=0;}}
if(P.Q[df].repeatPk4){P.Q[df].repeatPk4=false;for(var i=1;i<=9;i++){P.Q[df]['PK'+i]=0;}}
if(P.Q[df]['PF22']>=1){for(var i=1;i<=22;i++){P.Q[df]['PF'+i]=0;}}
if(P.Q[df]['PH13']>=1){for(var i=1;i<=13;i++){P.Q[df]['PH'+i]=0;}}
if(P.Q[df].NagafensLair>5){P.Q[df].NagafensLair=5;}
if(P.Q[df].PermafrostKeep>5){P.Q[df].PermafrostKeep=5;}
if(P.Q[df].KedgeKeep>5){P.Q[df].KedgeKeep=5;}
if(P.Q[df].PlaneofFear>2){P.Q[df].PlaneofFear=2;}
if(P.Q[df].PlaneofHate>2){P.Q[df].PlaneofHate=2;}
if(P.Q[df].Crushbone>4||P.Q[df].repeatCB||P.Q[df].CB5>=2){P.Q[df].repeatCB=false;P.Q[df].Crushbone=4;for(var i=1;i<=5;i++){P.Q[df]['CB'+i]=0;}}
if(P.Q[df].EstateofUnrest>4||P.Q[df].repeatER){P.Q[df].repeatER=false;P.Q[df].EstateofUnrest=4;for(var i=1;i<=5;i++){P.Q[df]['ER'+i]=0;}}
if(location.protocol==='https:'){save.quests();}}
function resetBosses(){var df=g.difficulty-1;if(P.Q[df].CB4<2){P.Q[df].CB4=0;}
if(P.Q[df].CB5<2){P.Q[df].CB5=0;}
if(P.Q[df].Najena===3){if(P.Q[df].NJ4<2){P.Q[df].NJ4=0;}
if(P.Q[df].NJ5<2){P.Q[df].NJ5=0;}}
if(P.Q[df].CazicThule===2){if(P.Q[df].CT4<2){P.Q[df].CT4=0;}
if(P.Q[df].CT5<2){P.Q[df].CT5=0;}}
if(P.Q[df].CastleMistmoore>=3){if(P.Q[df].CM5<2){P.Q[df].CM5=0;}
if(P.Q[df].CM6<2){P.Q[df].CM6=0;}}
if(P.Q[df].LowerGuk<2){if(P.Q[df].LG4<2){P.Q[df].LG4=0;}
if(P.Q[df].LG5<2){P.Q[df].LG5=0;}}
if(P.Q[df].LowerGuk===2){if(P.Q[df].LG5<2){P.Q[df].LG5=0;}
if(P.Q[df].LG6<2){P.Q[df].LG6=0;}}
if(P.Q[df].LowerGuk>=3){if(P.Q[df].LG4<2){P.Q[df].LG4=0;}
if(P.Q[df].LG5<2){P.Q[df].LG5=0;}}
if(P.Q[df].NagafensLair===1){if(P.Q[df].NL5<2){P.Q[df].NL5=0;}
if(P.Q[df].NL6<2){P.Q[df].NL6=0;}}
if(P.Q[df].NagafensLair===2){if(P.Q[df].NL4<2){P.Q[df].NL4=0;}
if(P.Q[df].NL5<2){P.Q[df].NL5=0;}}
if(P.Q[df].NagafensLair>=4){if(P.Q[df].NL9<2){P.Q[df].NL9=0;}
if(P.Q[df].NL10<2){P.Q[df].NL10=0;}
if(P.Q[df].NL11<2){P.Q[df].NL11=0;}}
if(P.Q[df].PermafrostKeep===3){if(P.Q[df].PK4<2){P.Q[df].PK4=0;}
if(P.Q[df].PK5<2){P.Q[df].PK5=0;}}
if(P.Q[df].PermafrostKeep>=4){if(P.Q[df].PK7<2){P.Q[df].PK7=0;}
if(P.Q[df].PK8<2){P.Q[df].PK8=0;}}
if(P.Q[df].KedgeKeep>=3){if(P.Q[df].KK4<2){P.Q[df].KK4=0;}
if(P.Q[df].KK5<2){P.Q[df].KK5=0;}}}
function initMY(){my={name:"",lastName:"",gender:"",job:"",race:"",level:null,exp:0,hp:0,maxHp:0,mp:0,maxMp:0,str:0,sta:0,agi:0,dex:0,wis:0,intel:0,cha:0,oneHandSlash:0,offense:0,defense:0,dualWield:0,doubleAttack:0,dodge:0,parry:0,riposte:0,alteration:0,evocation:0,conjuration:0,abjuration:0,channeling:0,twoHandSlash:0,oneHandBlunt:0,piercing:0,twoHandBlunt:0,handToHand:0,svpoison:0,svmagic:0,svlightning:0,svcold:0,svfire:0,gold:0,zone:"",playtime:0,deaths:0,mobsSlain:0,championsSlain:0,escapes:0,totalGold:0,uniquesFound:0,setFound:0,raresFound:0,magicFound:0,upgrades:0,raresSlain:0,randomEvents:0,scriptedEvents:0,quests:0,comboPermafrost:0,comboKedgeKeep:0,comboSolB:0,comboMistmoore:0,comboLowerGuk:0,comboCazicThule:0,comboPlaneofFear:0,comboPlaneofHate:0,comboOverall:0,ID:false,subzone:1,zoneN:"",zoneH:"",subzoneN:1,subzoneH:1,title:"",difficulty:1,talent1:0,talent2:0,talent3:0,talent4:0,talent5:0,talent6:0,talent7:0,talent8:0,talent9:0,talent10:0,talent11:0,talent12:0,hardcoreMode:false,patch:0,story:"Intro"};}
initMY();function initLMY(){Lmy={autoAttackOption:"On",normalFilter:"None",magicFilter:"None",rareFilter:"None",uniqueFilter:"None",setFilter:"None",C0:"",C1:"",C2:"",C3:"",C4:"",C5:"",C6:"",C7:"",C8:"",C9:"",C10:"",C11:"",C12:"",C13:"",C14:"",C15:'',C16:'',C17:'',C18:'',C19:'',C20:'',window3X:0,window3Y:603,chatIdX:0,chatIdY:0,window1X:20,window1Y:20,questJournalX:20,questJournalY:20,battleReportX:490,battleReportY:0,myhpbardivX:5,myhpbardivY:5,spellbardivX:593,spellbardivY:580,mobBarX:394,mobBarY:0,pethpbardivX:5,pethpbardivY:120};}
initLMY();var GLB={musicStatus:70,soundStatus:100,tooltipMode:"Long",videoSetting:"High",hideMenu:"Off",chatMyHit:"Off",fastDestroy:"On",lastCharacter:1,showCombatLog:"On",debugMode:"Off",gold:0,ks:0};if(isMobile===true){GLB.tooltipMode="Off";GLB.musicStatus=0;GLB.soundStatus=0;GLB.showCombatLog="Off";}
function initNG(){NG={mymp:D.getElementById('mymp'),myhp:D.getElementById('myhp'),myexpbarvalue:D.getElementById('myexpbarvalue'),errorMsg:D.getElementById('errorMsg'),chatId:D.getElementById("chatId"),combatId:D.getElementById("combatId"),myexpbarId:D.getElementById("myexpbarId"),gameView:D.getElementById("gameView"),window2:D.getElementById("window2"),mob0:D.getElementById("mob0"),mob1:D.getElementById("mob1"),mob2:D.getElementById("mob2"),mob3:D.getElementById("mob3"),mob4:D.getElementById("mob4"),mob5:D.getElementById("mob5"),eWin:D.getElementById('eWin'),eWin2:D.getElementById('eWin2'),eWin3:D.getElementById('eWin3'),cWin:D.getElementById('cWin'),cWin2:D.getElementById('cWin2'),cWin3:D.getElementById('cWin3'),window2:D.getElementById('window2'),window1:D.getElementById("window1"),spellblind:D.getElementById('spellblind'),statContent:D.getElementById("statContent"),mobTraits:D.getElementById("mobTraits"),eWin2:D.getElementById("eWin2"),ttBank:D.getElementById("ttBank"),ttBankName:D.getElementById("ttBankName"),chat1:D.getElementById('chat1'),chat2:D.getElementById('chat2'),ttBankMsg:D.getElementById("ttBankMsg"),ttItem:D.getElementById("ttItem"),ttItemName:D.getElementById("ttItemName"),ttItemMsg:D.getElementById("ttItemMsg"),mobIcons0:D.getElementById("mobIcons0"),mobIcons1:D.getElementById("mobIcons1"),mobIcons2:D.getElementById("mobIcons2"),mobIcons3:D.getElementById("mobIcons3"),mobIcons4:D.getElementById("mobIcons4"),tooltip:D.getElementById("tooltip"),tooltipname:D.getElementById("tooltipname"),tooltipmsg:D.getElementById("tooltipmsg"),chatId:D.getElementById("chatId"),combatId:D.getElementById("combatId"),combatLog:D.getElementById("combatLog"),chatLog:D.getElementById("chatLog"),myexpbarId:D.getElementById("myexpbarId"),spellbardiv:D.getElementById('spellbardiv'),petImage:D.getElementById('petImage'),mobBar:D.getElementById("mobBar"),mobName:D.getElementById("mobName"),mobLevel:D.getElementById("mobLevel"),mobPlate:D.getElementById("mobPlate"),myhpbardiv:D.getElementById('myhpbardiv'),chaosflux:byIdCheck("chaosflux"),gaspingembrace:byIdCheck("gaspingembrace"),cajolingwhispers:byIdCheck("cajolingwhispers"),colorshift:byIdCheck("colorshift"),mesmerize:byIdCheck("mesmerize"),discordantbarrier:byIdCheck("discordantbarrier"),shiftlessdeeds:byIdCheck("shiftlessdeeds"),enchantweapon:byIdCheck("enchantweapon"),adorninggrace:byIdCheck("adorninggrace"),alacrity:byIdCheck("alacrity"),gravityflux:byIdCheck("gravityflux"),mysticrune:byIdCheck("mysticrune"),tashania:byIdCheck("tashania"),clarity:byIdCheck("clarity"),enthrall:byIdCheck("enthrall"),chargedbolts:byIdCheck("chargedbolts"),frostnova:byIdCheck("frostnova"),magicmissiles:byIdCheck("magicmissiles"),fireball:byIdCheck("fireball"),deepfreeze:byIdCheck("deepfreeze"),chainlightning:byIdCheck("chainlightning"),glacialspike:byIdCheck("glacialspike"),iceblock:byIdCheck("iceblock"),icecomet:byIdCheck("icecomet"),counterspell:byIdCheck("counterspell"),harnessEther:byIdCheck("harnessEther"),meteor:byIdCheck("meteor"),mirrorimages:byIdCheck("mirrorimages"),icebolt:byIdCheck("icebolt"),viziersshielding:byIdCheck("viziersshielding"),firestorm:byIdCheck("firestorm"),frozenorb:byIdCheck("frozenorb"),burnout:byIdCheck("burnout"),manashield:byIdCheck("manashield"),psionicstorm:byIdCheck("psionicstorm"),reclaimelements:byIdCheck("reclaimelements"),elementalfury:byIdCheck("elementalfury"),armageddon:byIdCheck("armageddon"),stasisfield:byIdCheck("stasisfield"),alteredstate:byIdCheck("alteredstate"),lavabolt:byIdCheck("lavabolt"),earthelemental:byIdCheck("earthelemental"),airelemental:byIdCheck("airelemental"),fireelemental:byIdCheck("fireelemental"),frostelemental:byIdCheck("frostelemental"),shieldoflava:byIdCheck("shieldoflava"),phantomplate:byIdCheck("phantomplate"),elementalarmor:byIdCheck("elementalarmor"),cascadingdarkness:byIdCheck("cascadingdarkness"),invokefear:byIdCheck("invokefear"),drainsoul:byIdCheck("drainsoul"),feigndeath:byIdCheck("feigndeath"),augmentdeath:byIdCheck("augmentdeath"),igniteblood:byIdCheck("igniteblood"),corpseexplosion:byIdCheck("corpseexplosion"),bondofdeath:byIdCheck("bondofdeath"),diamondskin:byIdCheck("diamondskin"),asystole:byIdCheck("asystole"),detonatesoul:byIdCheck("detonatesoul"),howlingterror:byIdCheck("howlingterror"),bonespirit:byIdCheck("bonespirit"),archshielding:byIdCheck("archshielding"),feigndeath:byIdCheck("feigndeath"),invokedeath:byIdCheck("invokedeath"),scourge:byIdCheck("scourge"),shmhealing:byIdCheck("shmhealing"),togorsinsects:byIdCheck("togorsinsects"),cannibalize:byIdCheck("cannibalize"),enstill:byIdCheck("enstill"),poisonnova:byIdCheck("poisonnova"),affliction:byIdCheck("affliction"),reclaimblood:byIdCheck("reclaimblood"),glacialimpact:byIdCheck("glacialimpact"),devouringplague:byIdCheck("devouringplague"),froststrike:byIdCheck("froststrike"),calloftheancients:byIdCheck("calloftheancients"),guardianspirit:byIdCheck("guardianspirit"),shmsow:byIdCheck("shmsow"),talismanofaltuna:byIdCheck("talismanofaltuna"),smite:byIdCheck("smite"),soundofforce:byIdCheck("soundofforce"),superiorhealing:byIdCheck("superiorhealing"),bindingearth:byIdCheck("bindingearth"),expelcorruption:byIdCheck("expelcorruption"),searingrevelation:byIdCheck("searingrevelation"),martyrsblessing:byIdCheck("martyrsblessing"),guardianangel:byIdCheck("guardianangel"),holywrath:byIdCheck("holywrath"),markofjudgement:byIdCheck("markofjudgement"),benediction:byIdCheck("benediction"),resolution:byIdCheck("resolution"),armoroffaith:byIdCheck("armoroffaith"),divinesanctuary:byIdCheck("divinesanctuary"),symbolofnaltron:byIdCheck("symbolofnaltron"),dronesofdoom:byIdCheck("dronesofdoom"),druhealing:byIdCheck("druhealing"),engulfingroots:byIdCheck("engulfingroots"),driftingdeath:byIdCheck("driftingdeath"),lightningblast:byIdCheck("lightningblast"),earthquake:byIdCheck("earthquake"),hurricane:byIdCheck("hurricane"),sylvangrasp:byIdCheck("sylvangrasp"),volcano:byIdCheck("volcano"),tornado:byIdCheck("tornado"),starfire:byIdCheck("starfire"),skinlikenature:byIdCheck("skinlikenature"),shieldofspikes:byIdCheck("shieldofspikes"),chloroplast:byIdCheck("chloroplast"),drusow:byIdCheck("drusow"),chordsofdissonance:byIdCheck("chordsofdissonance"),chantofbattle:byIdCheck("chantofbattle"),accelerando:byIdCheck("accelerando"),hymnofrestoration:byIdCheck("hymnofrestoration"),songofthesirens:byIdCheck("songofthesirens"),elementalrhythms:byIdCheck("elementalrhythms"),lucidlullaby:byIdCheck("lucidlullaby"),consonantchain:byIdCheck("consonantchain"),dissension:byIdCheck("dissension"),chorusofclarity:byIdCheck("chorusofclarity"),anthemdearms:byIdCheck("anthemdearms"),euphonichymn:byIdCheck("euphonichymn"),shieldofsongs:byIdCheck("shieldofsongs"),desperatedirge:byIdCheck("desperatedirge"),boastfulbellow:byIdCheck("boastfulbellow"),rangerkickId:byIdCheck("rangerkickId"),rapidshotId:byIdCheck("rapidshotId"),countershotId:byIdCheck("countershotId"),trueshotarrowId:byIdCheck("trueshotarrowId"),volleyshotId:byIdCheck("volleyshotId"),lighthealingId:byIdCheck("lighthealingId"),faerieflameId:byIdCheck("faerieflameId"),igniteId:byIdCheck("igniteId"),snareId:byIdCheck("snareId"),wardersrift:byIdCheck("wardersrift"),weaponshieldId:byIdCheck("weaponshieldId"),shieldofbramblesId:byIdCheck("shieldofbramblesId"),thistlecoatId:byIdCheck("thistlecoatId"),feetlikecatId:byIdCheck("feetlikecatId"),rangersowId:byIdCheck("rangersowId"),rangertrackId:byIdCheck("rangertrackId"),shdslamId:byIdCheck("shdslamId"),crescentcleaveId:byIdCheck("crescentcleaveId"),deathstrikeId:byIdCheck("deathstrikeId"),gaspingfrenzyId:byIdCheck("gaspingfrenzyId"),harmtouchId:byIdCheck("harmtouchId"),resistcoldId:byIdCheck("resistcoldId"),addmonsterId:byIdCheck("addmonsterId"),shdlifetapId:byIdCheck("shdlifetapId"),doomingdarknessId:byIdCheck("doomingdarknessId"),heatbloodId:byIdCheck("heatbloodId"),strengthendeadId:byIdCheck("strengthendeadId"),shdfearId:byIdCheck("shdfearId"),siphonstrengthId:byIdCheck("siphonstrengthId"),shdfeigndeathId:byIdCheck("shdfeigndeathId"),shadowvortexId:byIdCheck("shadowvortexId"),shdfeigndeathId:byIdCheck("shdfeigndeathId"),vampiricembraceId:byIdCheck("vampiricembraceId"),summondeadId:byIdCheck("summondeadId"),palslamId:byIdCheck("palslamId"),rebukeId:byIdCheck("rebukeId"),purgeId:byIdCheck("purgeId"),vengeanceId:byIdCheck("vengeanceId"),layhandsId:byIdCheck("layhandsId"),greaterhealingId:byIdCheck("greaterhealingId"),holymightId:byIdCheck("holymightId"),palrootId:byIdCheck("palrootId"),ardentjudgment:byIdCheck("ardentjudgment"),yaulpId:byIdCheck("yaulpId"),cleanseId:byIdCheck("cleanseId"),flashoflightId:byIdCheck("flashoflightId"),valorId:byIdCheck("valorId"),spiritarmorId:byIdCheck("spiritarmorId"),divineprovidenceId:byIdCheck("divineprovidenceId"),symbolofryltanId:byIdCheck("symbolofryltanId"),tigerstrikeId:byIdCheck("tigerstrikeId"),eaglestrikeId:byIdCheck("eaglestrikeId"),cheetahstrikeId:byIdCheck("cheetahstrikeId"),cobrastrikeId:byIdCheck("cobrastrikeId"),dragonstrikeId:byIdCheck("dragonstrikeId"),cranekickId:byIdCheck("cranekickId"),windmillkickId:byIdCheck("windmillkickId"),ancestralflurryId:byIdCheck("ancestralflurryId"),flyingkickId:byIdCheck("flyingkickId"),chakrablastId:byIdCheck("chakrablastId"),feigndeathId:byIdCheck("feigndeathId"),mendId:byIdCheck("mendId"),stonefistsId:byIdCheck("stonefistsId"),intimidationId:byIdCheck("intimidationId"),innerpeaceId:byIdCheck("innerpeaceId"),shadowstrikeId:byIdCheck("shadowstrikeId"),sonicstrikeId:byIdCheck("sonicstrikeId"),hyperstrikeId:byIdCheck("hyperstrikeId"),widowstrikeId:byIdCheck("widowstrikeId"),miragestrikeId:byIdCheck("miragestrikeId"),lacerateId:byIdCheck("lacerateId"),backstabId:byIdCheck("backstabId"),staggershotId:byIdCheck("staggershotId"),lobotomizeId:byIdCheck("lobotomizeId"),prowlinggashId:byIdCheck("prowlinggashId"),evadeId:byIdCheck("evadeId"),coldbloodId:byIdCheck("coldbloodId"),flashpowderId:byIdCheck("flashpowderId"),illusivemistId:byIdCheck("illusivemistId"),ancientwillId:byIdCheck("ancientwillId"),warriorkickId:byIdCheck("warriorkickId"),slamId:byIdCheck("slamId"),avengingstrikeId:byIdCheck("avengingstrikeId"),hemorrhageId:byIdCheck("hemorrhageId"),shockwaveId:byIdCheck("shockwaveId"),pummelId:byIdCheck("pummelId"),subjugateId:byIdCheck("subjugateId"),decisiveblowId:byIdCheck("decisiveblowId"),absorbspellId:byIdCheck("absorbspellId"),frenziedrampageId:byIdCheck("frenziedrampageId"),enrageId:byIdCheck("enrageId"),furiousscornId:byIdCheck("furiousscornId"),triageId:byIdCheck("triageId"),bulwarkId:byIdCheck("bulwarkId"),intrepidmightId:byIdCheck("intrepidmightId"),secondwindId:byIdCheck("secondwindId"),divineaegisId:byIdCheck("divineaegisId"),ancestralrampageId:byIdCheck("ancestralrampageId"),tunaresglowId:byIdCheck("tunaresglowId"),karanasinfusionId:byIdCheck("karanasinfusionId"),sanguinetormentId:byIdCheck("sanguinetormentId"),granitevisageId:byIdCheck("granitevisageId"),shortcircuitId:byIdCheck("shortcircuitId"),runId:byIdCheck("runId"),toggleattackId:byIdCheck("toggleattackId"),addmonsterId:byIdCheck("addmonsterId")}
$NG={window3:$("#window3"),gameView:$("#gameView"),toggleattackId:$('#toggleattackId'),chaosflux:$("#chaosflux"),gaspingembrace:$("#gaspingembrace"),cajolingwhispers:$("#cajolingwhispers"),colorshift:$("#colorshift"),mesmerize:$("#mesmerize"),discordantbarrier:$("#discordantbarrier"),shiftlessdeeds:$("#shiftlessdeeds"),enchantweapon:$("#enchantweapon"),adorninggrace:$("#adorninggrace"),alacrity:$("#alacrity"),gravityflux:$("#gravityflux"),mysticrune:$("#mysticrune"),tashania:$("#tashania"),clarity:$("#clarity"),enthrall:$("#enthrall"),chargedbolts:$("#chargedbolts"),frostnova:$("#frostnova"),magicmissiles:$("#magicmissiles"),fireball:$("#fireball"),deepfreeze:$("#deepfreeze"),chainlightning:$("#chainlightning"),glacialspike:$("#glacialspike"),iceblock:$("#iceblock"),icecomet:$("#icecomet"),counterspell:$("#counterspell"),harnessEther:$("#harnessEther"),meteor:$("#meteor"),mirrorimages:$("#mirrorimages"),icebolt:$("#icebolt"),viziersshielding:$("#viziersshielding"),firestorm:$("#firestorm"),frozenorb:$("#frozenorb"),burnout:$("#burnout"),manashield:$("#manashield"),psionicstorm:$("#psionicstorm"),reclaimelements:$("#reclaimelements"),elementalfury:$("#elementalfury"),armageddon:$("#armageddon"),stasisfield:$("#stasisfield"),alteredstate:$("#alteredstate"),lavabolt:$("#lavabolt"),earthelemental:$("#earthelemental"),airelemental:$("#airelemental"),fireelemental:$("#fireelemental"),frostelemental:$("#frostelemental"),shieldoflava:$("#shieldoflava"),phantomplate:$("#phantomplate"),elementalarmor:$("#elementalarmor"),cascadingdarkness:$("#cascadingdarkness"),invokefear:$("#invokefear"),drainsoul:$("#drainsoul"),feigndeath:$("#feigndeath"),augmentdeath:$("#augmentdeath"),igniteblood:$("#igniteblood"),corpseexplosion:$("#corpseexplosion"),bondofdeath:$("#bondofdeath"),diamondskin:$("#diamondskin"),asystole:$("#asystole"),detonatesoul:$("#detonatesoul"),howlingterror:$("#howlingterror"),bonespirit:$("#bonespirit"),archshielding:$("#archshielding"),feigndeath:$("#feigndeath"),invokedeath:$("#invokedeath"),scourge:$("#scourge"),shmhealing:$("#shmhealing"),togorsinsects:$("#togorsinsects"),cannibalize:$("#cannibalize"),enstill:$("#enstill"),poisonnova:$("#poisonnova"),affliction:$("#affliction"),reclaimblood:$("#reclaimblood"),glacialimpact:$("#glacialimpact"),devouringplague:$("#devouringplague"),froststrike:$("#froststrike"),calloftheancients:$("#calloftheancients"),guardianspirit:$("#guardianspirit"),shmsow:$("#shmsow"),talismanofaltuna:$("#talismanofaltuna"),smite:$("#smite"),soundofforce:$("#soundofforce"),superiorhealing:$("#superiorhealing"),bindingearth:$("#bindingearth"),expelcorruption:$("#expelcorruption"),searingrevelation:$("#searingrevelation"),martyrsblessing:$("#martyrsblessing"),guardianangel:$("#guardianangel"),holywrath:$("#holywrath"),markofjudgement:$("#markofjudgement"),benediction:$("#benediction"),resolution:$("#resolution"),armoroffaith:$("#armoroffaith"),divinesanctuary:$("#divinesanctuary"),symbolofnaltron:$("#symbolofnaltron"),dronesofdoom:$("#dronesofdoom"),druhealing:$("#druhealing"),engulfingroots:$("#engulfingroots"),driftingdeath:$("#driftingdeath"),lightningblast:$("#lightningblast"),earthquake:$("#earthquake"),hurricane:$("#hurricane"),sylvangrasp:$("#sylvangrasp"),volcano:$("#volcano"),tornado:$("#tornado"),starfire:$("#starfire"),skinlikenature:$("#skinlikenature"),shieldofspikes:$("#shieldofspikes"),chloroplast:$("#chloroplast"),drusow:$("#drusow"),chordsofdissonance:$("#chordsofdissonance"),chantofbattle:$("#chantofbattle"),accelerando:$("#accelerando"),hymnofrestoration:$("#hymnofrestoration"),songofthesirens:$("#songofthesirens"),elementalrhythms:$("#elementalrhythms"),lucidlullaby:$("#lucidlullaby"),consonantchain:$("#consonantchain"),dissension:$("#dissension"),chorusofclarity:$("#chorusofclarity"),anthemdearms:$("#anthemdearms"),euphonichymn:$("#euphonichymn"),shieldofsongs:$("#shieldofsongs"),desperatedirge:$("#desperatedirge"),boastfulbellow:$("#boastfulbellow"),rangerkickId:$("#rangerkickId"),rapidshotId:$("#rapidshotId"),countershotId:$("#countershotId"),trueshotarrowId:$("#trueshotarrowId"),volleyshotId:$("#volleyshotId"),lighthealingId:$("#lighthealingId"),faerieflameId:$("#faerieflameId"),igniteId:$("#igniteId"),snareId:$("#snareId"),wardersrift:$("#wardersrift"),weaponshieldId:$("#weaponshieldId"),shieldofbramblesId:$("#shieldofbramblesId"),thistlecoatId:$("#thistlecoatId"),feetlikecatId:$("#feetlikecatId"),rangersowId:$("#rangersowId"),rangertrackId:$("#rangertrackId"),shdslamId:$("#shdslamId"),crescentcleaveId:$("#crescentcleaveId"),deathstrikeId:$("#deathstrikeId"),gaspingfrenzyId:$("#gaspingfrenzyId"),harmtouchId:$("#harmtouchId"),resistcoldId:$("#resistcoldId"),addmonsterId:$("#addmonsterId"),shdlifetapId:$("#shdlifetapId"),doomingdarknessId:$("#doomingdarknessId"),heatbloodId:$("#heatbloodId"),strengthendeadId:$("#strengthendeadId"),shdfearId:$("#shdfearId"),siphonstrengthId:$("#siphonstrengthId"),shdfeigndeathId:$("#shdfeigndeathId"),shadowvortexId:$("#shadowvortexId"),shdfeigndeathId:$("#shdfeigndeathId"),vampiricembraceId:$("#vampiricembraceId"),summondeadId:$("#summondeadId"),palslamId:$("#palslamId"),rebukeId:$("#rebukeId"),purgeId:$("#purgeId"),vengeanceId:$("#vengeanceId"),layhandsId:$("#layhandsId"),greaterhealingId:$("#greaterhealingId"),holymightId:$("#holymightId"),palrootId:$("#palrootId"),ardentjudgment:$("#ardentjudgment"),yaulpId:$("#yaulpId"),cleanseId:$("#cleanseId"),flashoflightId:$("#flashoflightId"),valorId:$("#valorId"),spiritarmorId:$("#spiritarmorId"),divineprovidenceId:$("#divineprovidenceId"),symbolofryltanId:$("#symbolofryltanId"),tigerstrikeId:$("#tigerstrikeId"),eaglestrikeId:$("#eaglestrikeId"),cheetahstrikeId:$("#cheetahstrikeId"),cobrastrikeId:$("#cobrastrikeId"),dragonstrikeId:$("#dragonstrikeId"),cranekickId:$("#cranekickId"),windmillkickId:$("#windmillkickId"),ancestralflurryId:$("#ancestralflurryId"),flyingkickId:$("#flyingkickId"),chakrablastId:$("#chakrablastId"),feigndeathId:$("#feigndeathId"),mendId:$("#mendId"),stonefistsId:$("#stonefistsId"),intimidationId:$("#intimidationId"),innerpeaceId:$("#innerpeaceId"),shadowstrikeId:$("#shadowstrikeId"),sonicstrikeId:$("#sonicstrikeId"),hyperstrikeId:$("#hyperstrikeId"),widowstrikeId:$("#widowstrikeId"),miragestrikeId:$("#miragestrikeId"),lacerateId:$("#lacerateId"),backstabId:$("#backstabId"),staggershotId:$("#staggershotId"),lobotomizeId:$("#lobotomizeId"),prowlinggashId:$("#prowlinggashId"),evadeId:$("#evadeId"),coldbloodId:$("#coldbloodId"),flashpowderId:$("#flashpowderId"),illusivemistId:$("#illusivemistId"),ancientwillId:$("#ancientwillId"),warriorkickId:$("#warriorkickId"),slamId:$("#slamId"),avengingstrikeId:$("#avengingstrikeId"),hemorrhageId:$("#hemorrhageId"),shockwaveId:$("#shockwaveId"),pummelId:$("#pummelId"),subjugateId:$("#subjugateId"),decisiveblowId:$("#decisiveblowId"),absorbspellId:$("#absorbspellId"),frenziedrampageId:$("#frenziedrampageId"),enrageId:$("#enrageId"),furiousscornId:$("#furiousscornId"),triageId:$("#triageId"),bulwarkId:$("#bulwarkId"),intrepidmightId:$("#intrepidmightId"),zoneSelectButton:$(".zoneSelectButton"),cityBG:$(".cityBG"),city:$(".city"),trainingButton:$(".trainingButton"),enterWorld2:$("#worldMap, #options, #myhpbarbg, #mympbarbg, #mympbarId"),enterWorld1:$("#mympbarbg, #mympbarId, #myhpbardiv, #myhpbarbg, #pethbarId, #window2dawn, #window2zoneday, #window2scrollsky"),allChButtons:$("#enterworld, #characterslot1, #characterslot2, #characterslot3, #characterslot4, #characterslot5, #characterslot6, #characterslot7, #characterslot8, #characterslot9, #characterslot10, #characterslot11, #characterslot12, #characterslot13, #characterslot14, #characterslot15, #characterslot16"),NCbuttons:$(".NCbuttons"),spellblind:$("#spellblind"),characterslot1:$("#characterslot1"),characterslot2:$("#characterslot2"),characterslot3:$("#characterslot3"),characterslot4:$("#characterslot4"),characterslot5:$("#characterslot5"),characterslot6:$("#characterslot6"),characterslot7:$("#characterslot7"),characterslot8:$("#characterslot8"),characterslot9:$("#characterslot9"),characterslot10:$("#characterslot10"),characterslot11:$("#characterslot11"),characterslot12:$("#characterslot12"),characterslot13:$("#characterslot13"),characterslot14:$("#characterslot14"),characterslot15:$("#characterslot15"),characterslot16:$("#characterslot16"),myButtons:$(".buttons, .NCbuttons"),window2:$("#window2"),ttItem:$("#ttItem"),mobName:$("#mobName"),equipmentBG:$(".equipmentBG"),bankBG:$(".bankBG"),inventoryBG:$(".inventoryBG"),inventory:$(".inventory"),bank:$(".bank"),spacers:$(".spacers"),buttonreset:$("#window3a .NCbuttons, #window3a .nonglobal"),racelist:$(".racelist"),joblist:$(".joblist"),eWin:$("#eWin"),eWin2:$("#eWin2"),eWin3:$("#eWin3"),chatId:$("#chatId"),combatId:$("#combatId"),mob5:$("#mob5"),myexpbarId:$("#myexpbarId"),window2:$("#window2"),petImage:$("#petImage"),mobBar:$("#mobBar"),parryblock:$("#parryblock"),mptypeId:$("#mptypeId"),strId:$("#strId"),staId:$("#staId"),agiId:$("#agiId"),dexId:$("#dexId"),wisId:$("#wisId"),intId:$("#intId"),chaId:$("#chaId"),svpoisonId:$("#svpoisonId"),svmagicId:$("#svmagicId"),svlightningId:$("#svlightningId"),svcoldId:$("#svcoldId"),svfireId:$("#svfireId")}}
initNG();if(location.pathname!=='/ng/'){window.onerror=function(msg,url,line){if(GLB.debugMode==="On"){Chat("ERROR: "+msg,2);Chat("URL: "+url,2);Chat("LINE: "+line,2);}
return true;}}
function Chat(entry,fg){if(GLB.showCombatLog==="Off"){return;}
while(NG.combatLog.childNodes.length>100){NG.combatLog.removeChild(NG.combatLog.firstChild);}
var color="";if(fg!==undefined){if(fg===0){color="white";}else if(fg===1){color="red";}else if(fg===2){color="yellow";}else if(fg===3){color="blue1";}else if(fg===4){color="blue2";}else if(fg===5){color="darkgreen";}else if(fg===6){color="green3";}else if(fg===7){color="purple";}else if(fg===8){color="yellow2";}else{color="grey";}}
var z=D.createElement('div');if(color!==undefined){z.className=color;}
z.innerHTML=entry;NG.combatLog.appendChild(z);if(chatVerticalDrag===false){NG.combatLog.scrollTop=NG.combatLog.scrollHeight;}}
function Chat2(entry,fg){if(GLB.showCombatLog==="Off"){return;}
while(NG.chatLog.childNodes.length>100){NG.chatLog.removeChild(NG.chatLog.firstChild);}
var color="";if(fg!==undefined){if(fg===0){color="white";}else if(fg===1){color="red";}else if(fg===2){color="yellow";}else if(fg===3){color="blue1";}else if(fg===4){color="blue2";}else if(fg===5){color="darkgreen";}else if(fg===6){color="green3";}else if(fg===7){color="purple";}else if(fg===8){color="yellow2";}else{color="grey";}}
var z=D.createElement('div');if(color!==undefined){z.className=color;}
z.innerHTML=entry;NG.chatLog.appendChild(z);if(chatVerticalDrag===false){NG.chatLog.scrollTop=NG.chatLog.scrollHeight;}}
g.key=['hp','mp','str','sta','agi','dex','intel','wis','cha','allStats','hpRegen','mpRegen','armor','enhancedArmor','attack','oneHandSlash','twoHandSlash','oneHandBlunt','twoHandBlunt','piercing','handtohand','offense','dualWield','doubleAttack','defense','dodge','parry','riposte','alteration','evocation','conjuration','abjuration','channeling','allSkills','critChance','critDamage','phyMit','magMit','resistPoison','resistMagic','resistLightning','resistCold','resistFire','allResist','goldFind','expFind','thorns','absorbPoison','absorbMagic','absorbLightning','absorbCold','absorbFire','name','rarity','itemSlot','type','damage','delay','physicalDamage','poisonDamage','magicDamage','lightningDamage','coldDamage','fireDamage','enhancePhysical','enhancePoison','enhanceMagic','enhanceLightning','enhanceCold','enhanceFire','enhanceAll','hpKill','mpKill','lightRadius','runSpeed','xPos','yPos','haste','globalHaste','castingHaste','proc','req','flavorText','upgrade','weight','enhancedDamage','ias','stun','fear','cold','silence','leech','wraith','quality'];g.val=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',0,'','',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',0,'',0,0,0,0,0,0,0,0,0,0,0]
P.eq=[];function initEq(){for(var i=0;i<=14;i++){P.eq[i]={};for(var x=0,len=g.key.length;x<len;x++){P.eq[i][g.key[x]]=g.val[x];}}}
initEq();P.item=[];function initItem(){for(var i=0;i<=43;i++){P.item[i]={};for(var x=0,len=g.key.length;x<len;x++){P.item[i][g.key[x]]=g.val[x];}}}
initItem();P.bank=[];function initBank(){for(var i=0;i<1080;i++){P.bank[i]={};for(var x=0,len=g.key.length;x<len;x++){P.bank[i][g.key[x]]=g.val[x];}}}
initBank();var dragged=[];function initDragged(){for(var i=0;i<2;i++){dragged[i]={};for(var x=0,len=g.key.length;x<len;x++){dragged[i][g.key[x]]=g.val[x];}}}
initDragged();var dragStatus=false,classDrag="",classDrop="";function initializeEQ(foo){if(location.protocol==="http:"){if(foo!==1){initMY();}
for(var i=0;i<=14;i++){P.eq[i]={};for(var x=0,len=g.key.length;x<len;x++){P.eq[i][g.key[x]]=g.val[x];}};if(foo!==1){setEquipValues();}}}
function initializeInventory(){if(location.protocol==="http:"){for(var i=0;i<=43;i++){P.item[i]={};for(var x=0,len=g.key.length;x<len;x++){P.item[i][g.key[x]]=g.val[x];}};}}
function initializeBank(){if(location.protocol==="http:"){for(var i=0;i<=125;i++){P.bank[i]={};for(var x=0,len=g.key.length;x<len;x++){P.bank[i][g.key[x]]=g.val[x];}};}}
var MOB=[],MOBNAME=[],MOBSHADOW=[],tintTimer=[],blurTimer=[],canvas=[],stage=[],bmp=[],bmpTint=[],pulsate=[],myHpBar,myHpText,myMpBar,myMpText,myPetBar,myPetText,mySpellBar,myhpbarId,mympbarId;function initMOB(){for(var i=0;i<=5;i++){MOB[i]=D.getElementById('mob'+i);}
for(var i=0;i<=5;i++){MOBNAME[i]=D.getElementById('mobName'+i);}
for(var i=0;i<=5;i++){MOBSHADOW[i]=D.getElementById('mobShadow'+i);}
canvas=[];stage=[];bmp=[];bmpTint=[];pulsate=[];for(var i=0;i<=4;i++){canvas[i]=D.getElementById('mobPic'+i);stage[i]=new C.Stage(canvas[i]);stage[i].snapToPixelEnabled=true;TweenLite.ticker.addEventListener("tick",stage[i].update,stage[i]);bmp[i]=new C.Bitmap("images1/blank.png");tintTimer[i]={};tintTimer[i].poison=TDC();tintTimer[i].magic=TDC();tintTimer[i].lightning=TDC();tintTimer[i].fire=TDC();tintTimer[i].cold=TDC();blurTimer[i]=TDC();bmpTint[i]={};bmpTint[i].poison=new C.Bitmap("images1/blank.png");bmpTint[i].magic=new C.Bitmap("images1/blank.png");bmpTint[i].lightning=new C.Bitmap("images1/blank.png");bmpTint[i].fire=new C.Bitmap("images1/blank.png");bmpTint[i].cold=new C.Bitmap("images1/blank.png");pulsate[i]=TDC();}
var a=['cWin','cWin2','cWin3','cWin4'];for(var i=5;i<=8;i++){canvas[i]=D.getElementById(a.shift());stage[i]=new C.Stage(canvas[i]);TweenLite.ticker.addEventListener("tick",stage[i].update,stage[i]);}
spellCurtainStage=new C.Stage(D.getElementById('spellcurtain'));TweenLite.ticker.addEventListener("tick",spellCurtainStage.update,spellCurtainStage);monsterhpbarId=new C.Stage(D.getElementById('monsterhpbarId'));monsterhpbarId.snapToPixelEnabled=true;TweenLite.ticker.addEventListener("tick",monsterhpbarId.update,monsterhpbarId);var b=new C.Graphics();b.beginFill("#ee0").drawRect(0,0,300,24);monsterHpBar2=new C.Shape(b);monsterHpBar2.alpha=.5;monsterhpbarId.addChild(monsterHpBar2);var b=new C.Graphics();b.lf(["#800","#c00","#c00","#800"],[0,.3,.7,1],0,0,0,24).drawRect(0,0,300,24);monsterHpBar1=new C.Shape(b);monsterhpbarId.addChild(monsterHpBar1);monsterText=new C.Text("","13px Arial","#fff");monsterText.set({x:150,y:13,textAlign:'center',textBaseline:'middle'});monsterText.shadow=new C.Shadow("#000",1,1,0);monsterhpbarId.addChild(monsterText);myhpbarId=new C.Stage(D.getElementById('myhpbarId'));monsterhpbarId.snapToPixelEnabled=true;TweenLite.ticker.addEventListener("tick",myhpbarId.update,myhpbarId);var b=new C.Graphics();b.lf(["#800","#c00","#c00","#800"],[0,.3,.7,1],0,0,0,14).drawRect(0,0,192,14);myHpBar=new C.Shape(b);myhpbarId.addChild(myHpBar);myHpText=new C.Text("","12px Arial","#fff");myHpText.set({x:96,y:8,textAlign:'center',textBaseline:'middle'});myHpText.shadow=new C.Shadow("#000",1,1,0);myhpbarId.addChild(myHpText);pethpbarId=new C.Stage(D.getElementById('pethpbarId'));monsterhpbarId.snapToPixelEnabled=true;TweenLite.ticker.addEventListener("tick",pethpbarId.update,pethpbarId);var b=new C.Graphics();b.lf(["#800","#c00","#c00","#800"],[0,.3,.7,1],0,0,0,14).drawRect(0,0,192,14);myPetBar=new C.Shape(b);pethpbarId.addChild(myPetBar);myPetText=new C.Text("","12px Arial","#fff");myPetText.set({x:96,y:8,textAlign:'center',textBaseline:'middle'});myPetText.shadow=new C.Shadow("#000",1,1,0);pethpbarId.addChild(myPetText);mySpellBar=new C.Stage(D.getElementById('spellbarId'));monsterhpbarId.snapToPixelEnabled=true;TweenLite.ticker.addEventListener("tick",mySpellBar.update,mySpellBar);var b=new C.Graphics();b.lf(["#808","#c0c","#c0c","#808"],[0,.3,.7,1],0,0,0,14).drawRect(0,0,125,14);var s=new C.Shape(b);mySpellBar.addChild(s);}
initMOB();function resetBattleReport(){battleStart=new Date();chainCounter=0;comboRating=0;battleDamageTotal=0;battleDamageTaken=0;totalHits=0;battlePhysicalTotal=0;battlePoisonTotal=0;battleMagicTotal=0;battleLightningTotal=0;battleColdTotal=0;battleFireTotal=0;battlePetDamage=0;battleDSDamage=0;battleHealTotal=0;battleManaTotal=0;}
resetBattleReport();g.leechRatio=.25;g.wraithRatio=.15;function hide(e){if(typeof e==="string"){D.getElementById(e).style.visibility='hidden';}else{var len=e.length;for(var i=0;i<len;i++){D.getElementById(e[i]).style.visibility='hidden';}}}
function show(e){if(typeof e==="string"){D.getElementById(e).style.visibility='visible';}else{var len=e.length;for(var i=0;i<len;i++){D.getElementById(e[i]).style.visibility='visible';}}}
function none(e){if(typeof e==="string"){D.getElementById(e).style.display='none';}else{var len=e.length;for(var i=0;i<len;i++){D.getElementById(e[i]).style.display='none';}}}
function block(e){if(typeof e==="string"){D.getElementById(e).style.display='block';}else{var len=e.length;for(var i=0;i<len;i++){D.getElementById(e[i]).style.display='block';}}}
function byIdCheck(e){if(document.getElementById(e)!=null){return D.getElementById(e);}else{return false;}}
var eagleStrikeStatus=false,cheetahStrikeStatus=false,yawnActive=1,rootStatus=1,fearStatus=1,bashStatus=1,humanRacial=TDC(),eruditeRacial=TDC(),barbarianRacial=TDC(),woodElfRacial=TDC(),darkElfRacial=TDC(),halfElfRacial=TDC(),dwarfRacial=TDC(),gnomeRacial=TDC(),hideStatus=1,divineAegisStatus=true,ancestralRampageStatus=false,tunaresGlowStatus=false,sanguineTormentStatus=false,divineAegisStatus=false,secondWindStatus=false,karanasInfusionStatus=false,shortCircuitStatus=false,graniteVisageStatus=false,avengingTimer=TDC(),avengingStrikeIconTimer=TDC(),pummelStatus=1,clearPummel=TDC(),clearSubjugate=TDC(),decisiveBlowStatus=1,absorbSpellStatus=1,triageTickCount=0,triageInterval=TDC(),frenziedRampageStatus=1,frenziedRampageHasteStatus=false,frenziedRampageTimeout=TDC(),bulwarkTimeout=TDC(),bulwarkStatus=0,frenziedRampageDuration=TDC(),ancestralFlurryTimeout=TDC(),cheetahStrikeTimeout=TDC(),invincibleStatus=false,hyperStrikeValue=0,hyperStrikeCount=0,illusiveMistStatus=1,hyperStrikeTimeout=TDC(),mirageStrikeStatus=0,ancientWillTimer=TDC(),ancientWillStatus=false,evadeStatus=false,rangerTrackStatus=false,rapidShotDelay=TDC(),trueshotCD=TDC(),sowStatus=false,counterShotStatus=false,shieldOfBramblesStatus=false,weaponShieldStatus=false,thistlecoatStatus=false,shieldOfBramblesTimeout=TDC(),thistlecoatTimeout=TDC(),feetLikeCatTimeout=TDC(),feetLikeCatStatus=false,feetLikeCatBonus=0,spiritOfTheWolfTimeout=TDC(),volleyShotCount=0,volleyShotTotalHits=0,yaulpStatus=false,yaulpTimeout=TDC(),paladinBlind1=0,paladinBlind2=0,paladinBlind3=0,paladinBlind4=0,valorStatus=false,valorArmorBoost=0,valorHpBoost=0,valorTimeout=TDC(),spiritArmorStatus=true,spiritArmorArmorBoost=0,spiritArmorTimeout=TDC(),divineProvidenceStatus=false,divineProvidencePoisonBoost=0,divineProvidenceMagicBoost=0,symbolOfRyltanStatus=false,symbolOfRyltanBoost=0,symbolOfRyltanTimeout=TDC(),deathStrikeStatus=false,siphonStrengthTimeout=TDC(),siphonStrengthBonus=0,siphonStrengthStatus=false,shadowVortexTimeout=TDC(),shadowVortexBonus=0,shadowVortexStatus=false,vampiricEmbraceStatus=false,vampiricEmbraceTimeout=TDC(),resistColdStatus=false,resistColdBoost=0,resistColdTimeout=TDC(),boastfulBellowTickTimeout=TDC(),bardSingStatus=false,thisBardSongStart=0,thisBardSongStart=0,currentBardSongRefresh=0,chantOfBattleStatus=false,chantOfBattleArmor=0,chantOfBattleStr=0,chantOfBattleDex=0,chantOfBattleTick=0,chantOfBattleTicking=TDC(),chantOfBattleTimeout=TDC(),chordsOfDissonanceStatus=false,chordsOfDissonanceTicking=TDC(),chordsOfDissonanceTimeout=TDC(),accelerandoStatus=false,accelerandoTicking=TDC(),accelerandoTimeout=TDC(),hymnOfRestorationStatus=false,hymnOfRestorationTicking=TDC(),hymnOfRestorationTimeout=TDC(),anthemDeArmsStatus=false,anthemDeArmsTicking=TDC(),anthemDeArmsTimeout=TDC(),anthemDeArmsStr=0,anthemDeArmsHaste=0,boastfulBellowTimeout=TDC(),elementalRhythmsStatus=false,elementalRhythmsTicking=TDC(),elementalRhythmsTimeout=TDC(),elementalRhythmsMagic=0,elementalRhythmsLightning=0,elementalRhythmsCold=0,elementalRhythmsFire=0,lucidLullabyTimeout=TDC(),consonantChainTimeout=TDC(),dissensionTimeout=TDC(),chorusOfClarityStatus=false,chorusOfClarityTicking=TDC(),chorusOfClarityTimeout=TDC(),euphonicHymnTimeout=TDC(),shieldOfSongsTimeout=TDC(),desperateDirgeTimeout=TDC(),desperateDirgeTicking=TDC(),desperateDirgeStatus=false,songOfTheSirensTimeout=TDC(),songOfTheSirensTicking=TDC(),charmSlot=0,resolutionStatus=false,resolutionArmorBoost=0,resolutionHpBoost=0,resolutionTimeout=TDC(),armorOfFaithStatus=false,armorOfFaithArmorBoost=0,armorOfFaithTimeout=TDC(),divineSanctuaryStatus=false,divineSanctuaryPoisonBoost=0,divineSanctuaryMagicBoost=0,divineSanctuaryLightningBoost=0,divineSanctuaryColdBoost=0,divineSanctuaryFireBoost=0,divineSanctuaryTimeout=TDC(),symbolOfNaltronStatus=false,symbolOfNaltronBoost=0,symbolOfNaltronTimeout=TDC(),shieldHp=0,guardianAngelStatus=true,markOfJudgementStatus=false,markOfJudgementTiming=TDC(),skinLikeNatureStatus=false,skinLikeNatureArmorBoost=0,skinLikeNatureHpBoost=0,skinLikeNatureTimeout=TDC(),shieldOfSpikesStatus=false,chloroplastStatus=false,chloroplastTickCount=0,chloroplastInterval=TDC(),callOfTheAncientsStatus=false,callOfTheAncientsStr=0,callOfTheAncientsSta=0,callOfTheAncientsAgi=0,callOfTheAncientsDex=0,callOfTheAncientsWis=0,callOfTheAncientsTimeout=TDC(),reclaimBloodStatus=false,reclaimBloodTickCount=0,reclaimBloodInterval=TDC(),talismanOfAltunaStatus=false,talismanOfAltunaBoost=0,talismanOfAltunaTimeout=TDC(),archShieldingStatus=false,archShieldingHpBoost=0,archShieldingArmorBoost=0,archShieldingPoisonBoost=0,archShieldingMagicBoost=0,archShieldingTimeout=TDC(),corpseExplosionStatus=false,corpseExplosionTimeout=TDC(),detonateSoulTimeout=TDC(),detonateSoulStatus=false,alacrityStatus=false,discordantBarrierStatus=false,discordantBarrierHpBoost=0,discordantBarrierArmorBoost=0,discordantBarrierMagicBoost=0,discordantBarrierTimeout=TDC(),enchantWeaponStatus=false,enchantWeaponTimeout=TDC(),adorningGraceCha=0,adorningGraceIntel=0,adorningGraceWis=0,adorningGraceStatus=false,adorningGraceTimeout=TDC(),clarityTimeout=TDC(),clarityStatus=false,I={},shieldOfLavaStatus=false,phantomPlateStatus=false,phantomPlateHpBoost=0,phantomPlateArmorBoost=0,phantomPlateTimeout=TDC(),elementalArmorStatus=false,elementalArmorColdBoost=0,elementalArmorFireBoost=0,manaShieldStatus=false,manaShieldTimeout=TDC(),alteredStateStatus=false,viziersShieldingStatus=false,viziersShieldingHpBoost=0,viziersShieldingArmorBoost=0,viziersShieldingPoisonBoost=0,viziersShieldingMagicBoost=0,viziersShieldingLightningBoost=0,viziersShieldingColdBoost=0,viziersShieldingFireBoost=0,viziersShieldingTimeout=TDC(),mirrorImageStatus=0,harnessEtherStatus=false,frenziedRampageIconTimer=TDC(),hpbuffIconTimer=TDC(),armorOfFaithIconTimer=TDC(),divineSanctuaryIconTimer=TDC(),symbolOfNaltronIconTimer=TDC(),skinLikeNatureIconTimer=TDC(),shieldOfSpikesIconTimer=TDC(),spiritOfTheWolfIconTimer=TDC(),chloroplastIconTimer=TDC(),callOfTheAncientsIconTimer=TDC(),talismanOfAltunaIconTimer=TDC(),hasteIconTimer=TDC(),damageShieldIconTimer=TDC(),resistIconTimer=TDC(),enchantWeaponIconTimer=TDC(),adorningGraceIconTimer=TDC(),clarityIconTimer=TDC(),mirrorImagesIconTimer=TDC(),prowlingGashIconTimer=TDC(),yaulpIconTimer=TDC(),symbolOfRyltanIconTimer=TDC(),spiritArmorIconTimer=TDC(),siphonStrengthSelfIconTimer=TDC(),shadowVortexSelfIconTimer=TDC(),vampiricEmbraceIconTimer=TDC(),feetLikeCatIconTimer=TDC(),thistlecoatIconTimer=TDC(),accelerandoIconTimer=TDC(),mobFearTimer=TDC(),mobGlobeOfDarknessTimer=TDC(),mobRootTimer=TDC(),mobConfuseTimer=TDC(),mobMindNumbTimer=TDC(),mobWeakenTimer=TDC(),mobYawnTimer=TDC(),mobChilledTimer=TDC(),mobSilenceTimer=TDC(),chilledTimer=TDC(),silenceStatus=false,mobBashTimer=TDC(),petPosition=1,petName="",petImage="",petLevel=(my.level-~~(M.random()*(3))),petMaxHp=0,petHp=0,petStr=0,petDef=0,petPoison=0,petMagic=0,petLightning=0,petFire=0,petCold=0,petSpeed=0,petSkill1="",petSkill2="",petSkill3="",petSkill4="",petCastingFrequency=10,petAttack=TDC(),petDoubleAttackCD=false,petBashStatus=false,petFearStatus=false,petBlindStatus=false,petRootStatus=false,petParalyzeStatus=false;mob[0].petDot=false;mob[1].petDot=false;mob[2].petDot=false;mob[3].petDot=false;var petWidth=0,petHeight=0,stunCooldown2=TDC(),monsterFearCooldown2=TDC(),monsterBlindCooldown2=TDC(),monsterRootCooldown2=TDC(),petSpeedBuff=1,Mstr=0,Mlvl=0,Mname="",TGT=1,mindNumbIntelDebuff=0,mindNumbWisDebuff=0,weakenStrDebuff=0,weakenDexDebuff=0,Mdef=1,Mpoison=1,Mmagic=1,Mlightning=1,Mfire=1,Mcold=1,Mgold=1,monsterTC=1,Mint=0,Mfreq=10,Mrare=1,Mwidth=100,Mthorns=1,Mlava=1,Mresolution=0,Mskeleton=1,Melemental=1,Mwolf=1,Mrune=0,MharmTouch=1,stunCooldown=TDC(),monsterFearCooldown=TDC(),monsterBlindCooldown=TDC(),monsterRootCooldown=TDC(),monsterYawnCooldown=TDC(),monsterMindDrainCooldown=TDC(),monsterConfuseCooldown=TDC(),monsterConfuseCooldownComplete=TDC(),monsterMindNumbCooldown=TDC(),monsterWeakenCooldown=TDC(),monsterYawnCooldown=TDC(),mindNumbActive=1,weakenActive=1,mindDrainActive=1,blizzardStatus=1,confuseStatus=false,referenceDate=new Date(),referenceDate3=new Date(),spellCastTime=1,timeLeft=0,spellType="evocation",currentSpell="",spellMpCost=0,spellDamage=0,castingGlobal=1,castingSpell=1,lockoutTimer1=TDC(),cooldownTimer1=TDC(),lockoutTimer2=TDC(),cooldownTimer2=TDC(),characterslot=0,charSheetToggle=1,skillToggle=1,inventoryToggle=1,createHeroToggle=1,myhpbarToggle=1,travelStatus=1,chainCounter=0,comboRating=0,inventoryToggle=1;g.levelMax=[100,276,441,624,825,1044,1281,1536,1809,2650,3014,3396,3796,4214,5400,5904,6426,6966,7524,9100,9744,10406,11086,11784,13750,14534,15336,16156,16994,19650,20584,21536,22506,23494,26600,27684,28786,29906,31044,34600,35834,37086,38356,39644,44100,45494,46906,48336,49784,54750,56304,57876,59466,61074,67100,68824,70566,72326,74104,81300,83204,85126,87066,89024,97500,99594,101706,103836,105984,115850,118144,120456,122786,125134,135750,138244,140756,143286,145834,166800,169614,172446,175296,178164,206550,209754,212976,216216,219474,267750,271544,275356,279186,283034,676400,3775584,23652286,68686338];function setCurrentLevel(myExp){if(!myExp){myExp=my.exp;}
var x=g.levelMax;var myLevel=1;var sum=0;for(var i=0,len=x.length;i<len;i++){sum+=x[i];if(sum>myExp){continue;}else{myLevel++;if(myLevel>=99){continue;}}}
return myLevel;}
function nextLevel(level){if(level===0){return 0;}
if(!level){level=my.level;}
var x=g.levelMax;var foo=0;var next=level+1;for(var i=1;i<=98;i++){if(next>i){foo+=x[(i-1)];}}
return foo;}
function totalLevelExp(){var foo=0;var x=g.levelMax;for(var i=1;i<=98;i++){if(my.level>i){foo+=x[(i-1)];}}
return foo;}
function daysPlayed(){var days=0;var timeLeft=my.playtime;if(timeLeft>=86400000){days=Math.floor(timeLeft / 86400000);timeLeft=(timeLeft%86400000);}
return days}
function hoursPlayed(){var hours=0;var timeLeft=my.playtime;if(timeLeft>=86400000){var days=Math.floor(timeLeft / 86400000);timeLeft=(timeLeft%86400000);}
if(timeLeft>=3600000){hours=Math.floor(timeLeft / 3600000);timeLeft=(timeLeft%3600000);}
return hours;}
function minutesPlayed(){var minutes=0;var timeLeft=my.playtime;if(timeLeft>=86400000){var days=Math.floor(timeLeft / 86400000);timeLeft=(timeLeft%86400000);}
if(timeLeft>=3600000){var hours=Math.floor(timeLeft / 3600000);timeLeft=(timeLeft%3600000);}
if(timeLeft>=60000){minutes=Math.floor(timeLeft / 60000);timeLeft=(timeLeft%60000);}
return minutes;}
g.drawMonsterHp=function(Slot,instant){if(Slot===TGT){var ratio=(mob[Slot].hp / mob[Slot].maxHp);if(instant===true){T.killTweensOf(monsterHpBar1);T.killTweensOf(monsterHpBar2);T.set([monsterHpBar1,monsterHpBar2],{scaleX:ratio});}else{T.to(monsterHpBar1,.25,{scaleX:ratio,ease:ez.cout});T.to(monsterHpBar2,.5,{scaleX:ratio,ease:ez.xin});}
var foo=mob[Slot].hp+' / '+mob[Slot].maxHp+' - '+M.ceil(ratio*100)+'%';monsterText.text=foo;if(my.job==="Warrior"){checkDecisiveBlow();}}}
g.drawMyHp=function(){var max=g.maxHpFunct();if(my.hp>max){my.hp=max;}
var ratio=(my.hp / max);var element=D.getElementById('myhp');if(typeof(element)!='undefined'&&element!=null){element.textContent=my.hp;}
T.to(myHpBar,.25,{scaleX:ratio});var zog=my.hp+' / '+max+' '+M.ceil(ratio*100)+'%';myHpText.text=zog;if(my.job==="Shaman"){if(btn.d.cannibalize===false){if(my.hp<M.round(my.maxHp*.18)){BGP('cannibalize',"-700% -300%");}else{BGP('cannibalize',"-700% 0");}}}
if(g.petAlive===true){if(petHp>petMaxHp){petHp=petMaxHp;}
var ratio=(petHp / petMaxHp);T.to(myPetBar,.25,{scaleX:ratio});var foo=petHp+' / '+petMaxHp+' '+M.ceil(ratio*100)+'%';myPetText.text=foo;}else if(mob[charmSlot].charmStatus===true){if(mob[charmSlot].hp>mob[charmSlot].maxHp){mob[charmSlot].hp=mob[charmSlot].maxHp;}
var ratio=(mob[charmSlot].hp / mob[charmSlot].maxHp);T.to(myPetBar,.25,{scaleX:ratio});var foo=mob[charmSlot].hp+' / '+mob[charmSlot].maxHp+' '+M.ceil(ratio*100)+'%';myPetText.text=foo;}}
g.drawMyMp=function(gain){if(gain){my.mp=my.mp+gain;}
my.maxMp=g.maxMpFunct();if(my.mp<0){my.mp=0;}
if((my.job==="Monk"||my.job==="Rogue"||my.job==="Warrior")&&(my.mp>=100)){my.mp=100;}
if(my.mp>my.maxMp){my.mp=my.maxMp;}
var ratio=(my.mp / my.maxMp);if(my.level<=8){if(my.job==="Ranger"){ratio=0;my.mp=0;}
if(my.job==="Paladin"){ratio=0;my.mp=0;}
if(my.job==="Shadow Knight"){ratio=0;my.mp=0;}}
T.to(myMpBar,.25,{scaleX:ratio});if(my.maxMp>0){if("MP"===mpType){var foo=my.mp+' / '+my.maxMp+' '+M.ceil(ratio*100)+'%';myMpText.text=foo;}else{var foo=my.mp+' / '+my.maxMp;myMpText.text=foo;}
var element=D.getElementById('mymp');if(typeof(element)!=='undefined'&&element!==null){element.textContent=my.mp;}}
g[JOB.CheckSkills]();}
function mobsFound(){var mobHere=false;for(var i=0;i<=4;i++){if(mob[i].attackStatus===0){mobHere=true;}}
return mobHere;}
function getRegen(){if(ambushCooldown===false&&mySubzone()!==4&&imagesLoaded===0&&scriptsLoaded===true&&classSpriteLoaded===true){if(my.level>19&&cityStatus===false){if(mobsFound()===true){if(btn.d.addmonsterId===false){var bar=(ambushChance);var zil=M.random()*bar;if(zil<1&&countMobs()<3&&mob[2].rare!==3){var d=90000;var count=1;if(my.difficulty===2){d=70000;if(M.random()>.66){count=2;}}else if(my.difficulty===3){d=50000;if(M.random()>.33){count=2;}}
ambushStatus=0;meditateStatus=false;ambushCooldown=true;T.delayedCall(d / 1000,function(){ambushCooldown=false;});if(count===1){QMsg("Ambush!");delayedMonsterTimer(count);}else if(count===2){QMsg("Double Ambush!");delayedMonsterTimer(count);}}}}}}
var foundOne=mobsFound();var regenTick=(my.level / 24);if(foundOne===false){regenTick+=(g.maxHpFunct()/ 3.3);}
regenTick+=g.hpRegenEquip;if(mob[0].envenomTicks>0||mob[1].envenomTicks>0||mob[2].envenomTicks>0||mob[3].envenomTicks>0||mob[4].envenomTicks>0){regenTick=~~(regenTick / 2);}
g.popupHeal(M.ceil(regenTick));if(g.petAlive===true){if(foundOne===false){petHp+=M.ceil(petMaxHp / 3.3);}
petHp+=~~(petLevel / 3);if(petHp>petMaxHp){petHp=petMaxHp;}}
for(var i=0;i<=4;i++){if(mob[i].name!==""){if(mob[i].afflictionTickCount===0&&mob[i].widowStrikeTickCount===0&&mob[i].scourgeTickCount===0){mob[i].hp+=~~(mob[i].level / 5);}}
if(my.job==="Enchanter"){if(my.talent8>=20&&mob[charmSlot].charmStatus===true){mob[charmSlot].hp+=~~(mob[charmSlot].maxHp / 20);}}
if(mob[i].hp>mob[i].maxHp){mob[i].hp=mob[i].maxHp;}}
g.drawMyHp();if(shieldOfLavaStatus===true){if(my.talent2>=20){animateNova();var goy=false;for(var i=0;i<=4;i++){if(mob[i].name){goy=true;var dam=minMax(abjurationTotal()/ 2.6,.8);animateDot(i,"red",50,12,50,20,'easeInOutQuad');g.myMagicDamage('fire',dam,i,checkCrit(),"Magma Burst");}}
if(goy){playAudio('explode2');}}}}
function getMpRegen(){var foo=startTime;startTime=new Date();my.playtime+=(startTime-foo);for(var i=0;i<=4;i++){mob[i].mp+=1;if(mob[i].mp>20){mob[i].mp=20;}}
var z=my.job;if(z==="Monk"||z==="Rogue"){return;}
var foundOne=mobsFound();if(z==="Warrior"){if(foundOne===false){my.mp-=2;if(my.mp<0){my.mp=0;}
g.drawMyMp();}
return;}
my.maxMp=g.maxMpFunct();var x=(my.level / 16);if(foundOne===false){x=x+(g.maxMpFunct()/ 3.3);}
if(z==="Bard"){if(chorusOfClarityStatus===true){x=x+((alterationTotal()/ 35)*(1+(talent7()*5.3)/ 100));}}
if(z==="Enchanter"){if(clarityStatus===true){x=x+(alterationTotal()/ 25);}}
x=x+g.mpRegenEquip;x=x+(min70(wisTotal())/ 22);if(my.race==="High Elf"){x+=my.maxMp*.01;}
if(z==="Necromancer"){if(my.talent10>=20){x=x*1.6;}}
var enh=0;if(z==="Magician"){if(my.talent9>=20){enh=65;}}
x=x*(1+(enh / 100));g.popupMana(M.ceil(x));}
function getTpRegen(){if(my.job==="Monk"){if(secondWindStatus){my.mp+=6;}else{my.mp+=3;}}
if(my.mp>100){my.mp=100;}
g.drawMyMp();}
function getFuryRegen(damage){var y=M.ceil(M.round(damage / 6))+5;my.mp+=y;if(secondWindStatus===true){my.mp+=y;}
if(my.mp>my.maxMp){my.mp=my.maxMp;}
g.drawMyMp();}
function updatePunchDamage(){var x=handToHandTotal();if(my.job==="Monk"){if(P.eq[12].type==="punched"){P.eq[12].damage=2+~~(x*.1);P.eq[12].delay=3000-~~(x*2);}
if(P.eq[13].type==="punched"){P.eq[13].damage=2+~~(x*.1);P.eq[13].delay=3000-~~(x*2);}}else{if(P.eq[12].type==="punched"){P.eq[12].damage=1+~~(x*(.03));P.eq[12].delay=3000;}
if(P.eq[13].type==="punched"){P.eq[13].damage=1+~~(x*(.03));P.eq[13].delay=3000;}}}
function levelUpStats(){if(enteredWorld===true){my.hp=g.maxHpFunct();g.drawMyHp();if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){CStat();}else{my.mp=g.maxMpFunct();g.drawMyMp();}}}
spellCanceled=false;function clearMyWindows(){if(upgradeMode===true){return false;}
var cleared=false;if(travelStatus===0){var e=D.getElementById("travelId");e.className="buttonsManage";e.style.backgroundPosition="-80px 0";$("#worldMap").css("top",-900);travelStatus=1;cleared=true;}
if($("#bank").css("display")==="block"){$("#bank").css("display","none");cleared=true;}
if(parseInt($("#options").css("top"),10)>=0){var e=D.getElementById("optionsId");e.className="buttonsManage";e.style.backgroundPosition="-120px 0";$("#options").css("top",-900);cleared=true;}
if(questJournalBlock===0){questToggle();cleared=true;}
if(charSheetToggle==0){var e=D.getElementById("charsheetId");e.className="buttonsManage";e.style.backgroundPosition="0 0";$("#window1").css("display","none");charSheetToggle=1;cleared=true;}
if(inventoryToggle==0){var e=D.getElementById("inventoryId");e.className="buttonsManage";e.style.backgroundPosition="-40px 0";$("#inventoryWindow").css("display","none");inventoryToggle=1;cleared=true;}
if(cityStatus===true){cityMenuClick(false);}
hideBattleReport();$NG.ttItem.css("display","none");D.getElementById('goldInputWrap').style.display="none";return cleared;}
function hideBattleReport(){T.killDelayedCallsTo('#battleReport');T.to('#battleReport',.5,{scale:0,opacity:0,ease:ez.sout,onComplete:function(){D.getElementById('battleReportContent').innerHTML="";T.set('#battleReport',{visibility:'hidden'});}});}
function cancelMySpell(bypass){if(upgradeMode===true){return;}
if(!bypass){clearMyWindows();}
if(bardSingStatus===true){bardSinging();}
if(currentSpell==="Arcane Missiles"||currentSpell==="Ice Block"){return;}
if(castingSpell===0){Chat("You cancel your spell.");}
if(loreMsg.length>0){loreMsg.shift();lore();}
castingSpell=1;tlSpellbar.kill();NG.spellbardiv.style.display="none";cancelDragging();}
function cancelDragging(){flashingBorderTimer.kill();if(dragID){D.getElementById(dragID).parentNode.style.border="2px solid #111";}
dragStatus=false;classDrag='';dragID="";}
$(document).ready(function(){$("button").on('click',function(){return false;});});function saveButtonPositions(){var foo=$("#window3a li").filter(":visible");for(var i=0;i<=23;i++){Lmy['C'+i]=foo.eq(i).attr("id");}}
function sortButtons(){var foo=$("#window3a");for(var i=0;i<=23;i++){if(Lmy['C'+i]!==''){var x=Lmy['C'+i];if(x==="addmonsterId"||x==="toggleattackId"||x==="runId"||x==="halflinghideId"||x==="secondwindId"||x==="divineaegisId"||x==="ancestralrampageId"||x==="tunaresglowId"||x==="karanasinfusionId"||x==="sanguinetormentId"||x==="granitevisageId"||x==="shortcircuitId"){Lmy['C'+i]='';}else{var x=$("#"+Lmy['C'+i]).clone(true,true);$("#"+Lmy['C'+i]).remove();x.appendTo(foo);}}}
var foo=patchVersion;var a=foo.split('-');if(parseInt(a[0],10)===0&&parseInt(a[1],10)<=6){var a=[];var e1=$("#window3a");function GO(foo){a.push(foo);}
GO('addmonsterId');GO('toggleattackId');GO('runId');if(my.job==='Warrior'){GO('avengingstrikeId');GO('slamId');GO('warriorkickId');GO('hemorrhageId');GO('shockwaveId');GO('pummelId');GO('subjugateId');GO('decisiveblowId');GO('absorbspellId');GO('frenziedrampageId');GO('enrageId');GO('furiousscornId');GO('triageId');GO('bulwarkId');GO('intrepidmightId');}else if(my.job==="Monk"){GO('tigerstrikeId');GO('eaglestrikeId');GO('cheetahstrikeId');GO('cobrastrikeId');GO('dragonstrikeId');GO('cranekickId');GO('windmillkickId');GO('ancestralflurryId');GO('flyingkickId');GO('chakrablastId');GO('feigndeathId');GO('mendId');GO('stonefistsId');GO('intimidationId');GO('innerpeaceId');}else if(my.job==="Rogue"){GO('roguehideId');GO('shadowstrikeId');GO('sonicstrikeId');GO('hyperstrikeId');GO('widowstrikeId');GO('miragestrikeId');GO('lacerateId');GO('backstabId');GO('staggershotId');GO('lobotomizeId');GO('prowlinggashId');GO('evadeId');GO('coldbloodId');GO('flashpowderId');GO('illusivemistId');GO('ancientwillId');}else if(my.job==="Paladin"){GO('layhandsId');GO('purgeId');GO('palslamId');GO('rebukeId');GO('vengeanceId');GO('greaterhealingId');GO('holymightId');GO('valorId');GO('palrootId');GO('ardentjudgment');GO('spiritarmorId');GO('yaulpId');GO('cleanseId');GO('divineprovidenceId');GO('flashoflightId');GO('symbolofryltanId');}else if(my.job==="Ranger"){GO('rangertrackId');GO('rapidshotId');GO('rangerkickId');GO('countershotId');GO('trueshotarrowId');GO('volleyshotId');GO('lighthealingId');GO('faerieflameId');GO('igniteId');GO('thistlecoatId');GO('snareId');GO('feetlikecatId');GO('shieldofbramblesId');GO('wardersrift');GO('rangersowId');GO('weaponshieldId');}else if(my.job==="Shadow Knight"){GO('harmtouchId');GO('crescentcleaveId');GO('shdslamId');GO('deathstrikeId');GO('gaspingfrenzyId');GO('summondeadId');GO('shdlifetapId');GO('doomingdarknessId');GO('heatbloodId');GO('vampiricembraceId');GO('strengthendeadId');GO('resistcoldId');GO('shdfearId');GO('siphonstrengthId');GO('shdfeigndeathId');GO('shadowvortexId');}else if(my.job==="Bard"){GO('rangertrackId');GO('chordsofdissonance');GO('chantofbattle');GO('accelerando');GO('hymnofrestoration');GO('songofthesirens');GO('boastfulbellow');GO('elementalrhythms');GO('lucidlullaby');GO('consonantchain');GO('dissension');GO('chorusofclarity');GO('anthemdearms');GO('euphonichymn');GO('shieldofsongs');GO('desperatedirge');}else if(my.job==="Druid"){GO('rangertrackId');GO('starfire');GO('dronesofdoom');GO('druhealing');GO('skinlikenature');GO('tornado');GO('engulfingroots');GO('shieldofspikes');GO('driftingdeath');GO('drusow');GO('lightningblast');GO('earthquake');GO('chloroplast');GO('hurricane');GO('sylvangrasp');GO('volcano');}else if(my.job==="Cleric"){GO('smite');GO('soundofforce');GO('superiorhealing');GO('resolution');GO('bindingearth');GO('expelcorruption');GO('searingrevelation');GO('martyrsblessing');GO('armoroffaith');GO('guardianangel');GO('divinesanctuary');GO('holywrath');GO('markofjudgement');GO('symbolofnaltron');GO('benediction');}else if(my.job==="Shaman"){GO('froststrike');GO('scourge');GO('shmhealing');GO('calloftheancients');GO('guardianspirit');GO('togorsinsects');GO('cannibalize');GO('enstill');GO('poisonnova');GO('shmsow');GO('affliction');GO('reclaimblood');GO('glacialimpact');GO('talismanofaltuna');GO('devouringplague');}else if(my.job==="Necromancer"){GO('bonespirit');GO('cascadingdarkness');GO('invokefear');GO('drainsoul');GO('archshielding');GO('feigndeath');GO('augmentdeath');GO('igniteblood');GO('corpseexplosion');GO('bondofdeath');GO('diamondskin');GO('asystole');GO('detonatesoul');GO('howlingterror');GO('invokedeath');}else if(my.job==="Enchanter"){GO('chaosflux');GO('gaspingembrace');GO('cajolingwhispers');GO('colorshift');GO('mesmerize');GO('discordantbarrier');GO('shiftlessdeeds');GO('enchantweapon');GO('adorninggrace');GO('alacrity');GO('gravityflux');GO('mysticrune');GO('tashania');GO('clarity');GO('enthrall');}else if(my.job==="Magician"){GO('lavabolt');GO('earthelemental');GO('airelemental');GO('fireelemental');GO('frostelemental');GO('shieldoflava');GO('firestorm');GO('phantomplate');GO('frozenorb');GO('burnout');GO('manashield');GO('elementalarmor');GO('psionicstorm');GO('reclaimelements');GO('elementalfury');GO('armageddon');GO('stasisfield');GO('alteredstate');}else if(my.job==="Wizard"){GO('icebolt');GO('chargedbolts');GO('frostnova');GO('magicmissiles');GO('viziersshielding');GO('fireball');GO('deepfreeze');GO('chainlightning');GO('glacialspike');GO('iceblock');GO('icecomet');GO('counterspell');GO('harnessEther');GO('meteor');GO('mirrorimages');}
if(my.race==="Human"){GO('secondwindId');}else if(my.race==="Erudite"){GO('divineaegisId');}else if(my.race==="Barbarian"){GO('ancestralrampageId');}else if(my.race==="Wood Elf"){GO('tunaresglowId');}else if(my.race==="Half Elf"){GO('karanasinfusionId');}else if(my.race==="Dark Elf"){GO('sanguinetormentId');}else if(my.race==="Dwarf"){GO('granitevisageId');}else if(my.race==="Gnome"){GO('shortcircuitId');}else if(my.race==="Halfling"){GO('halflinghideId');}
if(my.job==="Shaman"||my.job==="Necromancer"||my.job==="Shadow Knight"||my.job==="Magician"){GO('togglepetattackId');}
a.reverse();for(var i=0,len=a.length;i<len;i++){var x=$("#"+a[i]).clone(true,true);$("#"+a[i]).remove();x.prependTo(e1);}}
moveLockedSkills();}
function moveLockedSkills(){var e1=$(".buttons:hidden, .NCbuttons:hidden");var e2=e1.clone();e1.remove();var e3=$(".spacers:visible").first();e2.insertBefore(e3);}
function showButtons(){$(".NCbuttons, .nonglobal").css("display","none");$(".allskill, .spacers").css("display","inline-block");$("#addmonsterId, #runId, #toggleattackId").css('display','block');function doit(foo,num){$("#"+foo).css({display:'block',float:'left'});if(num>0){if($("#window3a").filter(":visible").children().length>24){$("#Comspace"+num).css('display','none');}}}
if(my.job==="Warrior"){$(".warskill").css('display','none');doit("avengingstrikeId",0);if(my.level>=2){doit("slamId",1);}
if(my.level>=3){doit("warriorkickId",2);}
if(my.level>=5){doit("enrageId",3);}
if(my.level>=7){doit("pummelId",4);}
if(my.level>=9){doit("subjugateId",5);}
if(my.level>=11){doit("furiousscornId",6);}
if(my.level>=13){doit("triageId",7);}
if(my.level>=15){doit("decisiveblowId",8);}
if(my.level>=17){doit("hemorrhageId",9);}
if(my.level>=20){doit("absorbspellId",10);}
if(my.level>=24){doit("intrepidmightId",11);}
if(my.level>=28){doit("bulwarkId",12);}
if(my.level>=32){doit("frenziedrampageId",13);}
if(my.level>=38){doit("shockwaveId",14);}}
if(my.job==="Monk"){$(".mnkskill").css('display','none');doit("tigerstrikeId",0);if(my.level>=2){doit("cranekickId",1);}
if(my.level>=3){doit("eaglestrikeId",2);}
if(my.level>=5){doit("feigndeathId",3);}
if(my.level>=7){doit("windmillkickId",4);}
if(my.level>=9){doit("stonefistsId",5);}
if(my.level>=11){doit("mendId",6);}
if(my.level>=13){doit("intimidationId",7);}
if(my.level>=15){doit("innerpeaceId",8);}
if(my.level>=17){doit("cheetahstrikeId",9);}
if(my.level>=20){doit("cobrastrikeId",10);}
if(my.level>=24){doit("chakrablastId",11);}
if(my.level>=28){doit("flyingkickId",12);}
if(my.level>=32){doit("ancestralflurryId",13);}
if(my.level>=38){doit("dragonstrikeId",14);}}
if(my.job==="Rogue"){$(".rogskill").css('display','none');doit("shadowstrikeId",0);doit("roguehideId",1);if(my.level>=2){doit("lacerateId",2);}
if(my.level>=3){doit("evadeId",3);}
if(my.level>=5){doit("sonicstrikeId",4);}
if(my.level>=7){doit("backstabId",5);}
if(my.level>=9){doit("coldbloodId",6);}
if(my.level>=11){doit("flashpowderId",7);}
if(my.level>=13){doit("hyperstrikeId",8);}
if(my.level>=15){doit("illusivemistId",9);}
if(my.level>=17){doit("staggershotId",10);}
if(my.level>=20){doit("widowstrikeId",11);}
if(my.level>=24){doit("lobotomizeId",12);}
if(my.level>=28){doit("ancientwillId",13);}
if(my.level>=32){doit("miragestrikeId",14);}
if(my.level>=38){doit("prowlinggashId",15);}}
if(my.job==="Paladin"){$(".palskill").css('display','none');doit("purgeId",0);doit("layhandsId",1);if(my.level>=2){doit("palslamId",2);}
if(my.level>=3){doit("rebukeId",3);}
if(my.level>=6){doit("vengeanceId",4);}
if(my.level>=9){doit("greaterhealingId",5);}
if(my.level>=11){doit("holymightId",6);}
if(my.level>=13){doit("valorId",7);}
if(my.level>=15){doit("ardentjudgment",8);}
if(my.level>=17){doit("spiritarmorId",9);}
if(my.level>=19){doit("palrootId",10);}
if(my.level>=21){doit("yaulpId",11);}
if(my.level>=24){doit("cleanseId",12);}
if(my.level>=28){doit("divineprovidenceId",13);}
if(my.level>=32){doit("flashoflightId",14);}
if(my.level>=38){doit("symbolofryltanId",15);}}
if(my.job==="Ranger"){$(".rngskill").css('display','none');doit("rapidshotId",0);doit("rangertrackId",1);if(my.level>=2){doit("rangerkickId",2);}
if(my.level>=3){doit("countershotId",3);}
if(my.level>=6){doit("trueshotarrowId",4);}
if(my.level>=9){doit("lighthealingId",5);}
if(my.level>=11){doit("faerieflameId",6);}
if(my.level>=13){doit("igniteId",7);}
if(my.level>=15){doit("thistlecoatId",8);}
if(my.level>=17){doit("snareId",9);}
if(my.level>=19){doit("feetlikecatId",10);}
if(my.level>=21){doit("shieldofbramblesId",11);}
if(my.level>=24){doit("wardersrift",12);}
if(my.level>=28){doit("rangersowId",13);}
if(my.level>=32){doit("volleyshotId",14);}
if(my.level>=38){doit("weaponshieldId",15);}}
if(my.job==="Shadow Knight"){$(".shdskill").css('display','none');doit("crescentcleaveId",0);doit("harmtouchId",1);if(my.level>=2){doit("shdslamId",2);}
if(my.level>=3){doit("deathstrikeId",3);}
if(my.level>=6){doit("gaspingfrenzyId",4);}
if(my.level>=9){doit("summondeadId",5);doit('togglepetattackId',6);}
if(my.level>=11){doit("shdlifetapId",7);}
if(my.level>=13){doit("doomingdarknessId",8);}
if(my.level>=15){doit("shdfearId",9);}
if(my.level>=17){doit("siphonstrengthId",10);}
if(my.level>=19){doit("heatbloodId",11);}
if(my.level>=21){doit("vampiricembraceId",12);}
if(my.level>=24){doit("strengthendeadId",13);}
if(my.level>=28){doit("resistcoldId",14);}
if(my.level>=32){doit("shdfeigndeathId",15);}
if(my.level>=38){doit("shadowvortexId",16);}}
if(my.job==="Bard"){$(".brdskill").css('display','none');doit("chordsofdissonance",0);doit("rangertrackId",1);if(my.level>=2){doit("chantofbattle",2);}
if(my.level>=3){doit("accelerando",3);}
if(my.level>=5){doit("hymnofrestoration",4);}
if(my.level>=7){doit("songofthesirens",5);}
if(my.level>=9){doit("boastfulbellow",6);}
if(my.level>=11){doit("elementalrhythms",7);}
if(my.level>=13){doit("lucidlullaby",8);}
if(my.level>=15){doit("consonantchain",9);}
if(my.level>=17){doit("dissension",10);}
if(my.level>=20){doit("chorusofclarity",11);}
if(my.level>=24){doit("anthemdearms",12);}
if(my.level>=28){doit("euphonichymn",13);}
if(my.level>=32){doit("shieldofsongs",14);}
if(my.level>=38){doit("desperatedirge",15);}}
if(my.job==="Cleric"){$(".clrskill").css('display','none');doit("smite",0);if(my.level>=2){doit("soundofforce",1);}
if(my.level>=3){doit("superiorhealing",2);}
if(my.level>=5){doit("resolution",3);}
if(my.level>=7){doit("bindingearth",4);}
if(my.level>=9){doit("expelcorruption",5);}
if(my.level>=11){doit("searingrevelation",6);}
if(my.level>=13){doit("martyrsblessing",7);}
if(my.level>=15){doit("armoroffaith",8);}
if(my.level>=17){doit("guardianangel",9);}
if(my.level>=20){doit("divinesanctuary",10);}
if(my.level>=24){doit("holywrath",11);}
if(my.level>=28){doit("markofjudgement",12);}
if(my.level>=32){doit("symbolofnaltron",13);}
if(my.level>=38){doit("benediction",14);}}
if(my.job==="Druid"){$(".druskill").css('display','none');doit("starfire",0);doit("rangertrackId",1);if(my.level>=2){doit("dronesofdoom",2);}
if(my.level>=3){doit("druhealing",3);}
if(my.level>=5){doit("skinlikenature",4);}
if(my.level>=7){doit("tornado",5);}
if(my.level>=9){doit("engulfingroots",6);}
if(my.level>=11){doit("shieldofspikes",7);}
if(my.level>=13){doit("driftingdeath",8);}
if(my.level>=15){doit("drusow",9);}
if(my.level>=17){doit("lightningblast",10);}
if(my.level>=20){doit("earthquake",11);}
if(my.level>=24){doit("chloroplast",12);}
if(my.level>=28){doit("hurricane",13);}
if(my.level>=32){doit("sylvangrasp",14);}
if(my.level>=38){doit("volcano",15);}}
if(my.job==="Shaman"){$(".shmskill").css('display','none');doit("froststrike",0);if(my.level>=2){doit("scourge",1);}
if(my.level>=3){doit("shmhealing",2);}
if(my.level>=5){doit("calloftheancients",3);}
if(my.level>=7){doit("guardianspirit",4);doit('togglepetattackId',5);}
if(my.level>=9){doit("togorsinsects",6);}
if(my.level>=11){doit("cannibalize",7);}
if(my.level>=13){doit("poisonnova",8);}
if(my.level>=15){doit("shmsow",9);}
if(my.level>=17){doit("enstill",10);}
if(my.level>=20){doit("affliction",11);}
if(my.level>=24){doit("reclaimblood",12);}
if(my.level>=28){doit("glacialimpact",13);}
if(my.level>=32){doit("talismanofaltuna",14);}
if(my.level>=38){doit("devouringplague",15);}}
if(my.job==="Necromancer"){$(".necskill").css('display','none');doit("bonespirit",0);if(my.level>=2){doit("invokedeath",1);doit('togglepetattackId',2);}
if(my.level>=3){doit("cascadingdarkness",3);}
if(my.level>=5){doit("invokefear",4);}
if(my.level>=7){doit("drainsoul",5);}
if(my.level>=9){doit("archshielding",6);}
if(my.level>=11){doit("feigndeath",7);}
if(my.level>=13){doit("augmentdeath",8);}
if(my.level>=15){doit("igniteblood",9);}
if(my.level>=17){doit("corpseexplosion",10);}
if(my.level>=20){doit("bondofdeath",11);}
if(my.level>=24){doit("diamondskin",12);}
if(my.level>=28){doit("asystole",13);}
if(my.level>=32){doit("detonatesoul",14);}
if(my.level>=38){doit("howlingterror",15);}}
if(my.job==="Enchanter"){$(".encskill").css('display','none');doit("chaosflux",0);if(my.level>=2){doit("gaspingembrace",1);}
if(my.level>=3){doit("cajolingwhispers",2);}
if(my.level>=5){doit("colorshift",3);}
if(my.level>=7){doit("mesmerize",4);}
if(my.level>=9){doit("discordantbarrier",5);}
if(my.level>=11){doit("shiftlessdeeds",6);}
if(my.level>=13){doit("enchantweapon",7);}
if(my.level>=15){doit("adorninggrace",8);}
if(my.level>=17){doit("alacrity",9);}
if(my.level>=20){doit("gravityflux",10);}
if(my.level>=24){doit("mysticrune",11);}
if(my.level>=28){doit("tashania",12);}
if(my.level>=32){doit("clarity",13);}
if(my.level>=38){doit("enthrall",14);}}
if(my.job==="Magician"){$(".magskill").css('display','none');doit("lavabolt",0);if(my.level>=2){doit('togglepetattackId',1);doit("earthelemental",2);doit("airelemental",3);doit("fireelemental",4);doit("frostelemental",5);}
if(my.level>=3){doit("shieldoflava",6);}
if(my.level>=5){doit("firestorm",7);}
if(my.level>=7){doit("phantomplate",8);}
if(my.level>=9){doit("frozenorb",9);}
if(my.level>=11){doit("burnout",10);}
if(my.level>=13){doit("manashield",11);}
if(my.level>=15){doit("elementalarmor",12);}
if(my.level>=17){doit("psionicstorm",13);}
if(my.level>=20){doit("reclaimelements",14);}
if(my.level>=24){doit("elementalfury",15);}
if(my.level>=28){doit("armageddon",16);}
if(my.level>=32){doit("stasisfield",17);}
if(my.level>=38){doit("alteredstate",18);}}
if(my.job==="Wizard"){$(".wizskill").css('display','none');doit("icebolt",0);if(my.level>=2){doit("chargedbolts",1);}
if(my.level>=3){doit("frostnova",2);}
if(my.level>=5){doit("magicmissiles",3);}
if(my.level>=7){doit("viziersshielding",4);}
if(my.level>=9){doit("fireball",5);}
if(my.level>=11){doit("deepfreeze",6);}
if(my.level>=13){doit("chainlightning",7);}
if(my.level>=15){doit("glacialspike",8);}
if(my.level>=17){doit("iceblock",9);}
if(my.level>=20){doit("icecomet",10);}
if(my.level>=24){doit("counterspell",11);}
if(my.level>=28){doit("harnessEther",12);}
if(my.level>=32){doit("meteor",13);}
if(my.level>=38){doit("mirrorimages",14);}}
if(my.race==="Human"){doit("secondwindId",19);}
if(my.race==="Erudite"){doit("divineaegisId",19);}
if(my.race==="Barbarian"){doit("ancestralrampageId",19);}
if(my.race==="Wood Elf"){doit("tunaresglowId",19);}
if(my.race==="Half Elf"){doit("karanasinfusionId",19);}
if(my.race==="Dark Elf"){doit("sanguinetormentId",19);}
if(my.race==="Dwarf"){doit("granitevisageId",19);}
if(my.race==="Gnome"){doit("shortcircuitId",19);}
if(my.race==="Halfling"&&my.job!=="Rogue"){doit("halflinghideId",19);}
resizeButtonBackgrounds();}
$(document).ready(function(){$("img").on('dragstart',function(event){event.preventDefault();});});$(function(){$("#deathScreen").on('click','#battleReportOK',function(){resurrectMe();hideMobTooltip();});$("#intro").on('click','#resetGame',function(){serverLogout();});});function hideMobIcons(){for(var i=0;i<=4;i++){NG['mobIcons'+i].style.display='none';}}
function clearMobIcons(){hideMobIcons();for(var i=0;i<=4;i++){$("#mobIcons"+i).empty();}}
function browserTest(){var foo=false;if(isOpera||isFirefox||isChrome){foo=true;}
return foo;}
function browserTest2(){var foo=false;if(isMSIE||isMSIE11||isSafari){foo=true;}
return foo;}
function cLog(foo){if(isFirefox||isChrome){if(GLB.debugMode==="On"){if(g.view==="Game"){Chat(foo,2);}
console.log(foo);}else{console.log(foo);}}}
var browserOgg=browserTest(),browserMp3=browserTest2(),audioExt='ogg';if(browserMp3===true){audioExt='mp3';}
function fadeMusic(){if(!!D.createElement('audio').canPlayType){if((browserOgg||browserMp3)&&GLB.musicStatus>0){var baz=D.getElementById("bgmusic");var count=50;var kek=(((count / 100)*(GLB.musicStatus / 100))*1);baz.volume=kek;function doit(){if(count<=0){return;}
count-=5;baz.volume=(((count / 100)*(GLB.musicStatus / 100))*1);T.delayedCall(.4,doit);}
doit();}}}
function initMusic(){musicAssets=[];musicStrings=[];musicAssetsNumber=0;for(var i=0;i<=9;i++){musicAssets[i]='';musicStrings[i]='';}}
function musicNum(){if(musicAssetsNumber>9){musicAssetsNumber=0;}
return musicAssetsNumber++;}
function loadMusic(sound){var found=false;for(var i=0,len=musicAssets.length;i<len;i++){if(musicStrings[i].indexOf(sound)!==-1){found=true;continue;}}
if(found===false){var x=musicNum();musicStrings[x]=sound;musicAssets[x]=D.createElement('audio');musicAssets[x].src=musicLocation+sound+"."+audioExt;}}
initMusic();$("#bgmusic").on('ended',function(){var x=D.getElementById('bgmusic');x.currentTime=0;x.play();});$("#bgamb1").on('ended',function(){var x=D.getElementById('bgamb1');x.currentTime=0;x.play();});$("#bgamb2").on('ended',function(){var x=D.getElementById('bgamb2');x.currentTime=0;x.play();});function playMusic(foo){if(isMobile===false){if(audioEnabled===true){if((browserOgg===true||browserMp3===true)){loadMusic(foo);var x=D.getElementById("bgmusic");x.setAttribute('type','audio/'+audioExt);x.src=musicLocation+foo+"."+audioExt;var kek=((.5*(GLB.musicStatus / 100))*1);x.volume=kek;x.play();}}}}
function playAmbient(foo){if(isMobile===false){if(foo==="blankAudio"){return;}
if(audioEnabled===true){if((browserOgg===true||browserMp3===true)){var x=D.getElementById("bgamb1");x.setAttribute('type','audio/'+audioExt);x.src=musicLocation+foo+"."+audioExt;var kek=((.2*(GLB.musicStatus / 100))*1);x.volume=kek;x.play();setTimeout(function(){var x=D.getElementById("bgamb2");x.setAttribute('type','audio/'+audioExt);x.src=musicLocation+foo+"."+audioExt;var kek=((.2*(GLB.musicStatus / 100))*1);x.volume=kek;x.play();},4000);}}}}
var audioEnabled=!!D.createElement('audio').canPlayType;function playAudio(foo,multi,fade,volAdj){if(isMobile===false){if(foo==="blankAudio"){return;}
if(audioEnabled===true){if((browserOgg===true||browserMp3===true)){var baz=new Audio(soundLocation+foo+"."+audioExt);baz.setAttribute('type','audio/'+audioExt);baz.src=soundLocation+foo+"."+audioExt;if(!volAdj){volAdj=1;}
var kek=(M.round(((.5*(GLB.soundStatus / 100))*volAdj)*100)/ 100);baz.volume=kek;baz.play();if(fade>0){if(GLB.soundStatus>0){function doit(count){var zag=(kek*100)*(1-(count*.2));if(zag<0){zag=0;}
baz.volume=zag / 100;count++;if(zag>0){T.delayedCall(.1,doit,[count]);}}
T.delayedCall(fade / 1000,doit,[0]);}}}}}}
function playCityMusic(){var x=myZone();if(x==="Edenburg"&&g.view==="Game"){playMusic("Blackmoor Tides");}else if(x==="Aspen Grove"){playMusic("Ireland's Coast (Travelog Edition - Live)");}else if(x==="Artremia"){playMusic("Salt Marsh Birds");}else if(x==="Fenwoven"){playMusic("Snowland Loop");}}
pageDoneLoading=false;function cityMenuClick(sound){cancelDragging();upgradeMode=false;if(sound!==false){playAudio('button_2');}
var cityToggleStatus=true;dragStatus=false;dragID="";flashingCityBorder.kill();$NG.trainingButton.css("border","1px solid #111");trainSkill="";$("#trainingOptions").css("left",-700);$("#trainOK").css("left",-700);itemUpgradeMode=false;upgradePrompt=false;upgradePhysical=true;$("#upgradeConfirm").css("left",-700);$("#upgradeOK").text("Ok");$("#upgradeCANCEL").text("Cancel");$("#merchantContainer").css("left",-700);$("#questWrap").css("left",-900);merchantMode=false;buyMode=false;}
$(function(){$("#pethpbardiv, #spellbardiv").draggable({containment:"#gameView",scroll:false,stop:function(){var foo=$(this).attr("id");updateWindowPosition(foo);}});$("#myhpbardiv").draggable({containment:"#gameView",scroll:false,cancel:'#buffWindow',stop:function(){var foo=$(this).attr('id');updateWindowPosition(foo);}});$("#mobBar").draggable({containment:"#gameView",scroll:false,cancel:'.mobIcons',stop:function(){var foo=$(this).attr('id');updateWindowPosition(foo);}});$("#window1,#inventoryWindow,#questJournal").draggable({containment:"#gameView",scroll:false,handle:"#statHeader,#invHeader,#questHeader",start:function(){g.draggingWindows=true;},stop:function(){var foo=$(this).attr("id");updateWindowPosition(foo);T.delayedCall(.05,function(){g.draggingWindows=false;});}});});function updateWindowPosition(foo){if(foo==="window1"){Lmy.window1X=parseInt($("#window1").css("left"));Lmy.window1Y=parseInt($("#window1").css("top"));}
if(foo==="inventoryWindow"){Lmy.inventoryWindowX=parseInt($("#inventoryWindow").css("left"));Lmy.inventoryWindowY=parseInt($("#inventoryWindow").css("top"));}
if(foo==="questJournal"){Lmy.questJournalX=parseInt($("#questJournal").css("left"));Lmy.questJournalY=parseInt($("#questJournal").css("top"));}
if(foo==="mobBar"){Lmy.mobBarX=parseInt($("#mobBar").css("left"));Lmy.mobBarY=parseInt($("#mobBar").css("top"));}
if(foo==="myhpbardiv"){Lmy.myhpbardivX=parseInt($("#myhpbardiv").css("left"));Lmy.myhpbardivY=parseInt($("#myhpbardiv").css("top"));}
if(foo==="pethpbardiv"){Lmy.pethpbardivX=parseInt($("#pethpbardiv").css("left"));Lmy.pethpbardivY=parseInt($("#pethpbardiv").css("top"));}
if(foo==="spellbardiv"){Lmy.spellbardivX=parseInt($("#spellbardiv").css("left"));Lmy.spellbardivY=parseInt($("#spellbardiv").css("top"));}}
function setWindowPosition(){if(Lmy.window3Y<0){Lmy.window3Y=603;}
$("#window1").css({top:Lmy.window1Y,left:Lmy.window1X});$("#inventoryWindow").css({top:Lmy.inventoryWindowY,left:Lmy.inventoryWindowX});$("#questJournal").css({top:Lmy.questJournalY,left:Lmy.questJournalX});$("#mobBar").css({top:Lmy.mobBarY,left:Lmy.mobBarX});$("#myhpbardiv").css({top:Lmy.myhpbardivY,left:Lmy.myhpbardivX});$("#pethpbardiv").css({top:Lmy.pethpbardivY,left:Lmy.pethpbardivX});$("#spellbardiv").css({top:Lmy.spellbardivY,left:Lmy.spellbardivX});}
function refreshRaceButtons(){$NG.racelist.removeClass("classDisabled ccActive ccDisabled").addClass("ccDisabled");var x="humanId";if(my.race=="Human"){my.str=75;my.sta=75;my.dex=75;my.agi=75;my.intel=75;my.wis=75;my.cha=75;}
if(my.race=="Erudite"){my.str=60;my.sta=70;my.dex=70;my.agi=70;my.intel=107;my.wis=83;my.cha=70;x="eruditeId";}
if(my.race=="Barbarian"){my.str=103;my.sta=95;my.dex=70;my.agi=82;my.intel=60;my.wis=92;my.cha=55;x="barbarianId";}
if(my.race=="High Elf"){my.str=55;my.sta=65;my.dex=70;my.agi=85;my.intel=92;my.wis=95;my.cha=80;x="highelfId";}
if(my.race=="Wood Elf"){my.str=65;my.sta=65;my.dex=80;my.agi=95;my.intel=75;my.wis=80;my.cha=75;x="woodelfId";}
if(my.race=="Dark Elf"){my.str=60;my.sta=65;my.dex=75;my.agi=90;my.intel=99;my.wis=83;my.cha=60;x="darkelfId";}
if(my.race=="Half Elf"){my.str=70;my.sta=70;my.dex=85;my.agi=90;my.intel=75;my.wis=60;my.cha=75;x="halfelfId";}
if(my.race=="Dwarf"){my.str=90;my.sta=90;my.dex=90;my.agi=70;my.intel=60;my.wis=83;my.cha=45;x="dwarfId";}
if(my.race=="Gnome"){my.str=60;my.sta=70;my.dex=85;my.agi=85;my.intel=98;my.wis=67;my.cha=60;x="gnomeId";}
if(my.race=="Halfling"){my.str=70;my.sta=75;my.dex=90;my.agi=95;my.intel=67;my.wis=80;my.cha=50;x="halflingId";}
if(my.race=="Troll"){my.str=108;my.sta=109;my.dex=75;my.agi=83;my.intel=52;my.wis=60;my.cha=40;x="trollId";}
if(my.race=="Ogre"){my.str=130;my.sta=123;my.dex=70;my.agi=70;my.intel=60;my.wis=67;my.cha=37;x='ogreId';}
D.getElementById(x).className='raceClassButtonsOff racelist strongShadow ccActive';refreshClassButtons();}
function refreshClassButtons(){$NG.joblist.removeClass("classDisabled ccActive ccDisabled").addClass("ccDisabled");var r=my.race;if(r=="Erudite"){$("#warriorId, #monkId, #rogueId, #rangerId, #bardId, #druidId, #shamanId").addClass("classDisabled");}
if(r=="Barbarian"){$("#monkId, #paladinId, #rangerId, #skId, #bardId, #clericId, #druidId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="High Elf"){$("#warriorId, #monkId, #rogueId, #rangerId, #skId, #bardId, #druidId, #shamanId, #necromancerId").addClass("classDisabled");}
if(r=="Wood Elf"){$("#monkId, #paladinId, #skId, #clericId, #shamanId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="Dark Elf"){$("#monkId, #paladinId, #shamanId, #bardId, #druidId").addClass("classDisabled");}
if(r=="Half Elf"){$("#clericId, #shamanId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="Dwarf"){$("#monkId, #rangerId, #skId, #bardId, #druidId, #shamanId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="Gnome"){$("#rangerId, #bardId, #druidId, #shamanId").addClass("classDisabled");}
if(r=="Halfling"){$("#skId, #bardId, #shamanId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="Troll"){$("#monkId, #rogueId, #paladinId, #rangerId, #bardId, #clericId, #druidId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
if(r=="Ogre"){$("#monkId, #rogueId, #paladinId, #rangerId, #bardId, #clericId, #druidId, #necromancerId, #enchanterId, #magicianId, #wizardId").addClass("classDisabled");}
var j=my.job;if(j==="Warrior"&&$("#warriorId").hasClass("classDisabled")){paladinInfo();return;}
if(j==="Monk"&&$("#monkId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Rogue"&&$("#rogueId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Paladin"&&$("#paladinId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Ranger"&&$("#rangerId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Shadow Knight"&&$("#skId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Bard"&&$("#bardId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Cleric"&&$("#clericId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Druid"&&$("#druidId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Shaman"&&$("#shamanId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Necromancer"&&$("#necromancerId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Enchanter"&&$("#enchanterId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Magician"&&$("#magicianId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Wizard"&&$("#wizardId").hasClass("classDisabled")){warriorInfo();return;}
if(j==="Warrior"){warriorInfo();}
if(j==="Monk"){monkInfo();}
if(j==="Rogue"){rogueInfo();}
if(j==="Paladin"){paladinInfo();}
if(j==="Ranger"){rangerInfo();}
if(j==="Shadow Knight"){skInfo();}
if(j==="Bard"){bardInfo();}
if(j==="Cleric"){clericInfo();}
if(j==="Druid"){druidInfo();}
if(j==="Shaman"){shamanInfo();}
if(j==="Necromancer"){necromancerInfo();}
if(j==="Enchanter"){enchanterInfo();}
if(j==="Magician"){magicianInfo();}
if(j==="Wizard"){wizardInfo();}}
function humanInfo(){my.race="Human";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Humans live in the city of Edenburg. Humans are a balanced, innovative race highly regarded for their ability to adapt to any situation. As a result they can play every existing class.<br><br>"+"Racial skill: Second Wind provides an adrenaline boost, restoring your health and mana. Second Wind also  enhances all of your damage and reduces all damage received.");}
function eruditeInfo(){my.race="Erudite";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Erudites live in the city of Wexxen and are a racial offshoot of humans known for their acumen and their intellect. Despite their common ancestry with humans, generations of geographic isolation and cultural dedication to the magic have left them weaker than their human counterparts. With the largest intelligence bonus of any race, they are gifted spellcasters, but they manage to make formidable paladins and shadow knights as well.<br><br>"+"Racial skill: Surround yourself with a chromatic aegis that makes you highly resistant to all magic.");}
function barbarianInfo(){my.race="Barbarian";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Barbarians share common ancestry to humans and live in the city of Fenwoven. They evolved as a stronger, hardier race due to the harsh conditions of the frigid north, but lost some of their innovative qualities due to a strong tribal mindset. TheRenowned for their ferocity in battle, they receive a generous boost to strength, stamina, and wisdom. Barbarians are known to be excellent shaman and warriors, though they make surprisingly adept rogues as well.<br><br>"+"Racial skill: Summon the strength of your ancestors to bolster your might, increasing all damage.");}
function highelfInfo(){my.race="High Elf";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("High elves live in the city of Prentia. They are descendants of a royal elven bloodline who once ruled the Empire before the Age of Shattering. High Elves are an intrinsically spiritual race that have deep cultural commitment to their God, Altheim, the God of Light. Their commitment to the arcane arts has softened their bodies over the generations, but they have excellent intelligence and wisdom. Despite their light frames, they are known to make great Paladins due to their excellent healing skills.<br><br>"+"Racial skill: Enhanced passive mana regeneration.");}
function woodelfInfo(){my.race="Wood Elf";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Wood elves dwell in the city of Artremia. Their culture is deeply aligned with Rinara, the Goddess of nature. They spiritually hold that what is natural is considered the most holy. In turn, Rinara's providence blesses wood elves with excellent agility and dexterity. Among the elven races, their wisdom is second only to the high elves.<br><br>"+"Racial skill: Wood Elves use a skill called Camouflage to blend into their surroundings. Camouflage makes them untargetable for six seconds and their next attack benefits from enhanced damage.");}
function darkelfInfo(){my.race="Dark Elf";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Dark elves are known for their savagery compared to their elven relatives. They have long been left to their own devices deep in the subterranean city of Vedria. There they are rumored to practice summon demons and perform ritual sacrifice and worship Wenerva, the Goddess of Destruction. Their unforgiving culture have made them hostile, but deadly with both magic and steel.<br><br>"+"Racial skill: Absorb health from your target based on your damage.");}
function halfelfInfo(){my.race="Half Elf";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Half elves hail from the city of Kaedorn. They carry are a mixture of human and elven blood in their veins. Due to their multi-racial background, they have a blend of abilities and traits from both races. Since the Age of Shattering, they have managed to establish a city for themselves in an attempt to carve out their own unique identity and culture.<br><br>"+"Racial skill: Hybrid vigor snaps you free from stun and fear effects and rapidly restores health.");}
function dwarfInfo(){my.race="Dwarf";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Dwarves are a hardy race from the depths of Dunhoven, a subterranean city. Worship of Grynnhoven, the God of the Underworld, is powerfully woven into daily Dwarven life as each gem mined is seen as a divine blessing. Dwarf healers are renowned as some of the finest in all of Vandamor due to their natural wisdom. They are also stout warriors and thieves thanks to their rare gifts of strength, agility, and dexterity<br><br>"+"Racial skill: Your skin turns to granite, greatly reducing all damage taken.");}
function gnomeInfo(){my.race="Gnome";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Gnomes are a race of brilliant scholars, engineers, and tinkerers from Brindomir. Their passion for knowledge makes them excellent spellcasters, yet some are known to wield the steel on occasion. Their ingenuity always seems to yield a solution from nowhere in the thick of battle.<br><br>"+"Racial skill: All gnomes can trap their target in a Warp Field, sealing them from the field of combat. While trapped in a warp field, they are unable to fight or be fought. Gnomes are also immune to silence effects.");}
function halflingInfo(){my.race="Halfling";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Halflings are a race of pranksters, acrobats, and bandits from Aspen Grove. They are known to be among the most gifted scouts in all of Vandamor. They have a quirky ability to disappear at a moment's notice. They are also touted for their natural healing skills.<br><br>"+"Racial skill: Halflings have reduced run skill cooldown, gain experience faster, find more treasure, and have the ability to hide. While you are hidden, you may ambush targets for enhanced damage.");}
function trollInfo(){my.race="Troll";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Trolls are a race from the city of Slagnon. With very few exceptions, Trolls worship Megnemon, the God of Sacrifice, who believe that their God requires blood sacrifice in order to enjoy continued strength and prosperity as a race. They are a cannibalistic, warmongering race with astonishing resilience in battle. They are feared throughout Vandamor due to their super strength, stamina, and regeneration.<br><br>"+"Racial skill: Increased passive health regeneration.");}
function ogreInfo(){my.race="Ogre";refreshRaceButtons();D.getElementById("creationInfo").innerHTML=("Ogres are a race from the city of Gorgek in. Firm belief in might makes right makes widespread worship of Trogmaar, the God of War, very common among the Ogres. Despite their bumbling intellects, they are superb warriors and Shadow Knights. Their strength and stamina are second to none, but they lack almost everything else.<br><br>"+"Racial skill: Ogres cannot be stunned.");}
function warriorInfo(mute){if($("#warriorId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Warriors are defensive melee specialists. They have stun skills, attack debuffs, and defensive abilities that make them difficult to kill. They receive the highest natural hit point bonus among all classes. Warriors use fury as a resource to power their skills. You gain fury every time you take damage.<br><br>"+"Class orientation:<br>"+"Defensive Melee, Plate Armor<br><br>"+"Skill List:<br>"+"Kick, Slam, Avenging Blow, Enrage, Pummel, Subjugate, Furious Scorn, Triage, Decisive Blow, Hemorrhage, Absorb Spell, Intrepid Might, Bulwark, Frenzied Rampage, Shockwave");my.job="Warrior";Cstr=5;Csta=15;Cwis=0;Cint=0;Cdex=0;Cagi=5;Ccha=0;ccUpdates("warriorId",mute);}
function monkInfo(){if($("#monkId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Monks are offensive melee specialists. Monks combine attacks that generate spirit with attacks that expend spirit for deadly combinations. Their finishing moves, when executed properly, deliver overwhelming damage. Unlike most classes, monks can always rely on their bare fists in combat. Monks use spirit as a resource to power their skills. You gain spirit every time you use a skill that generates spirit.<br><br>"+"Class orientation:<br>"+"Offensive Melee, Healing, Leather Armor<br><br>"+"Skill List:<br>"+"Tiger Strike, Crane Kick, Eagle Strike, Feign Death, Windmill Kick, Stone Fist Reversal, Intimidation, Inner Peace, Cheetah Strike, Cobra Strike, Chakra Blast, Flying Kick, Ancestral Flurry, Dragon Strike");my.job="Monk";Cstr=10;Csta=10;Cwis=0;Cint=0;Cdex=5;Cagi=0;Ccha=0;ccUpdates("monkId");}
function rogueInfo(){if($("#rogueId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Rogues are offensive melee specialists. In addition to their excellent melee damage, they also have good crowd control skills that stun, blind, and silence. Rogues rely on building technique points to deliver powerful combo finishers. You gain technique points every time you use a skill that generates technique points.<br><br>"+"Class orientation:<br>"+"Offensive Melee, Control, Chain Armor<br><br>"+"Skill List:<br>"+"Shadow Strike, Lacerate, Evade, Sonic Strike, Backstab, Cold Blood, Flash Powder, Hyper Strike, Illusive Mist, Stagger Shot, Widow Strike, Lobotomize, Ancient Will, Mirage Strike, Prowling Gash");my.job="Rogue";Cstr=0;Csta=0;Cwis=0;Cint=0;Cdex=15;Cagi=10;Ccha=0;ccUpdates("rogueId");}
function paladinInfo(){if($("#paladinId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Paladins are defensive hybrids with a combination of melee and spells. Their stuns, healing, and ability to lay hands makes them difficult to kill. Several of their skills make them proficient at fighting undead mobs. Many of their skills are shared with warriors and clerics. Paladins unlock spells at level 9.<br><br>"+"Class orientation:<br>"+"Defensive Hybrid Melee, Plate Armor<br><br>"+"Skill List:<br>"+"Lay Hands, Slam, Rebuke, Purge, Vengeance, Greater Healing, Holy Might, Valor, Ardent Judgment, Spirit Armor, Root, Yaulp, Fervent Prayer, Divine Providence, Flash of Light, Symbol of Marshan");my.job="Paladin";Cstr=5;Csta=10;Cwis=10;Cint=0;Cdex=0;Cagi=5;Ccha=0;ccUpdates("paladinId");}
function rangerInfo(){if($("#rangerId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Rangers are offensive hybrids with a combination of melee and spells. Rangers rely on bows to do most of their damage, though they use swords and spells as well. Among all classes, rangers have the best tracking, which helps find rare monsters. Their spells provide added utility including some damage, healing, and some crowd control. Many of their skills are shared with warriors and druids. Rangers unlock spells at level 9.<br><br>"+"Class orientation:<br>"+"Offensive Hybrid Melee, Chain Armor<br><br>"+"Skill List:<br>"+"Track, Kick, Rapid Shot, Counter Shot, Trueshot Arrow, Light Healing, Faerie Flame, Ignite, Thistlecoat, Snare, Shield of Brambles, Warder's Rift, Spirit of the Wolf, Volley Shot, Weapon Shield");my.job="Ranger";Cstr=5;Csta=5;Cwis=10;Cint=0;Cdex=10;Cagi=0;Ccha=0;ccUpdates("rangerId");}
function skInfo(){if($("#skId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Shadow knights are balanced hybrids with pets that use a combination of melee and spells. Shadow Knights summon a skeleton pet to fight by their side. They have a skill called harm touch to instantly inflict large amounts of damage. They wield several powerful spells to aid them in battle, such as fear and life drain. Many of their skills are shared with warriors and necromancers. Shadow Knights unlock spells at level 9.<br><br>"+"Class orientation:<br>"+"Balanced Hybrid Melee, Pet, Plate Armor<br><br>"+"Skill List:<br>"+"Harm Touch, Crescent Strike, Death Strike, Gasping Frenzy, Summon Dead, Life Tap, Dooming Darkness, Fear, Siphon Strength, Heat Blood, Vampiric Embrace, Strengthen Dead, Resist Cold, Feign Death, Shadow Vortex");my.job="Shadow Knight";Cstr=5;Csta=10;Cwis=0;Cint=10;Cdex=0;Cagi=5;Ccha=0;ccUpdates("skId");}
function bardInfo(){if($("#bardId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Bards are utility hybrids that use the power of their songs to defeat their foes. Bard songs offer a lot of variety and can be used to achieve victory in a wide variety of circumstances. Their songs can lull monsters to sleep, inflict magical damage, slow your targets, and even charm a monster to fight for you. Bards also have a weak version of the tracking skill, which helps find rare monsters.<br><br>"+"Class orientation:<br>"+"Utility Hybrid, Pet, Plate Armor<br><br>"+"Skill List:<br>"+"Track, Chords of Dissonance, Chant of Battle, Accelerando, Hymn of Restoration, Song of the Sirens, Boastful Bellow, Elemental Rhythms, Lucid Lullaby, Consonant Chain, Dissension, Chorus of Clarity, Anthem De Arms, Euphonic Hymn, Shield of Songs, and Desperate Dirge");my.job="Bard";Cstr=0;Csta=5;Cwis=5;Cint=5;Cdex=5;Cagi=0;Ccha=10;ccUpdates("bardId");}
function clericInfo(){if($("#clericId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Clerics are defensive healers that have the best healing potential in the game. Clerics focus on stuns, buffs, healing, and magical damage to succeed in battle. They also have crowd control and utility spells to survive tough situations. They have several spells that punish undead and summoned minions.<br><br>"+"Class orientation:<br>"+"Defensive Healer, Plate Armor<br><br>"+"Skill List:<br>"+"Smite, Sound of Force, Superior Healing, Resolution, Binding Earth, Expel Corruption, Searing Revelation, Martyr's Blessing, Armor of Faith, Guardian Angel, Divine Sanctuary, Holy Wrath, Mark of Judgment, Symbol of Yentus, Benediction");my.job="Cleric";Cstr=0;Csta=5;Cwis=15;Cint=5;Cdex=0;Cagi=0;Ccha=0;ccUpdates("clericId");}
function druidInfo(){if($("#druidId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Druids are offensive healers that command the forces of nature to achieve victory. Though they have strong healing skills, they are known for their ability to summon earthquakes, tornados, hurricanes, volcanos, and other natural phenomenon to assist them in battle. They also have strong root spells that twist vines around your opponents' feet, leaving them unable to physically attack. Druids also have the tracking skill which helps find rare monsters.<br><br>"+"Class orientation:<br>"+"Offensive Healer, Area Effect, Leather Armor<br><br>"+"Skill List:<br>"+"Track, Starfire, Drones of Doom, Greater Healing, Skin Like Nature, Tornado, Engulfing Roots, Shield of Spikes, Drifting Death, Spirit of the Wolf, Lightning Blast, Earthquake, Chloroplast, Hurricane, Sylvan Creep, Volcano");my.job="Druid";Cstr=0;Csta=5;Cwis=15;Cint=5;Cdex=0;Cagi=0;Ccha=0;ccUpdates("druidId");}
function shamanInfo(){if($("#shamanId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Shamans are utility healers that focus on ancient voodoo magic, regeneration, poison, and disease. Among the healers they have the most vicious damage over time spells. They can summon a guardian spirit to fight by their side, though they are among the weakest pets in the game. Shamans bring a lot of utility to the table as well, with slows, freezes, and the ability to cannibalize for on-demand mana recovery.<br><br>"+"Class orientation:<br>"+"Utility Healer, Pet, Chain Armor<br><br>"+"Skill List:<br>"+"Frost Strike, Scourge, Greater Healing, Call of the Ancients, Guardian Spirit, Togor's Insects, Cannibalize, Poison Nova, Spirit of the Wolf, Enstill, Affliction, Reclaim Blood, Glacial Impact, Talisman of Trogmaar, Devouring Plague");my.job="Shaman";Cstr=0;Csta=5;Cwis=15;Cint=5;Cdex=0;Cagi=0;Ccha=0;ccUpdates("shamanId");}
function necromancerInfo(){if($("#necromancerId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Necromancer are dark spellcasters that focus on re-animating the dead and commanding them in battle. They also specialize in damage-over-time spells, which are the best among all classes. They have the best fear spells in the game and the ability to explode monsters, whether they are alive or dead.<br><br>"+"Class orientation:<br>"+"Damage-over-Time Spellcaster, Pet, Cloth Armor<br><br>"+"Skill List:<br>"+"Bone Spirit, Invoke Death, Cascading Darkness, Invoke Fear, Drain Soul, Arch Shielding, Feign Death, Augment Death, Ignite Blood, Corpse Explosion, Bond of Death, Diamond Skin, Asystole, Detonate Soul, Howling Terror");my.job="Necromancer";Cstr=0;Csta=0;Cwis=5;Cint=15;Cdex=5;Cagi=0;Ccha=0;ccUpdates("necromancerId");}
function enchanterInfo(){if($("#enchanterId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Enchanters are utility spellcasters that focus on charming monsters to fight for them in battle. They tilt the tables in battle by using mesmerize spells to control additional monsters and powerful stuns to keep them on the defensive. Slows and haste buffs help stack the odds in your favor. They can even enchant their weapon with magic to do additional damage. <br><br>"+"Class orientation:<br>"+"Utility Spellcaster, Pet, Cloth Armor<br><br>"+"Skill List:<br>"+"Chaos Flux, Gasping Embrace, Cajoling Whispers, Color Shift, Mesmerize, Discordant Barrier, Shiftless Deeds, Enchant Weapon, Adorning Grace, Alacrity, Gravity Flux, Mystic Rune, Tashania, Clarity, Enthrall");my.job="Enchanter";Cstr=0;Csta=0;Cwis=5;Cint=5;Cdex=5;Cagi=0;Ccha=10;ccUpdates("enchanterId");}
function magicianInfo(){if($("#magicianId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Magicians are offensive spellcasters that focus on pet mastery. They have the ability to summon four different elemental types: earth, air, fire, and frost. Each elemental has its own strengths and abilities. In addition, Magicians have an array of powerful spells at their disposal including firestorm, frozen orb, psionic storm, and a stasis field for crowd control.<br><br>"+"Class orientation:<br>"+"Offensive Spellcaster, Pet, Cloth Armor<br><br>"+"Skill List:<br>"+"Lava Bolt, Earth Elemental, Air Elemental, Fire Elemental, Frost Elemental, Shield of Lava, Firestorm, Phantom Plate, Frozen Orb, Burnout, Mana Shield, Elemental Armor, Psionic Storm, Reclaim Elements, Elemental Fury, Armageddon, Stasis Field, Altered State");my.job="Magician";Cstr=0;Csta=0;Cwis=5;Cint=15;Cdex=5;Cagi=0;Ccha=0;ccUpdates("magicianId");}
function wizardInfo(){if($("#wizardId").hasClass("classDisabled")===true){return;}
D.getElementById("creationInfo").innerHTML=("Wizards are offensive spellcasters that focus on directing powerful spells on single or multiple targets. Wizards have an arsenal of powerful spells including ice comet, Arcane Missiles, meteor, and chain lightning. They also have a few utility spells to help them keep their targets at bay including frost nova, mirror images, and deep freeze. Their direct spellpower is second to none, but they are the most fragile class.<br><br>"+"Class orientation:<br>"+"Offensive Spellcaster, Pure Damage, Cloth Armor<br><br>"+"Skill List:<br>"+"Ice Bolt, Charged Bolts, Frost Nova, Arcane Missiles, Vizier's Shielding, Fireball, Deep Freeze, Chain Lightning, Glacial Spike, Ice Block, Ice Comet, Counterspell, Harness Ether, Meteor, Mirror Images");my.job="Wizard";Cstr=0;Csta=0;Cwis=5;Cint=15;Cdex=5;Cagi=0;Ccha=0;ccUpdates("wizardId");}
function ccUpdates(foo,mute){statGenerate(mute);$NG.joblist.removeClass("ccActive").addClass("ccDisabled");D.getElementById(foo).className='raceClassButtonsOff joblist strongShadow ccActive';}
function maleInfo(mute){D.getElementById("creationInfo").innerHTML=("Males receive a bonus to strength and stamina.");my.gender="Male";Gstr=5;Gsta=5;Gwis=0;D.getElementById('maleId').className='genderButtonsOff strongShadow ccActive';D.getElementById('femaleId').className='genderButtonsOff strongShadow ccDisabled';statGenerate(mute);}
function femaleInfo(){D.getElementById("creationInfo").innerHTML=("Females receive a bonus to wisdom and passive health regeneration.");my.gender="Female";Gstr=0;Gsta=0;Gwis=5;D.getElementById('femaleId').className='genderButtonsOff strongShadow ccActive';D.getElementById('maleId').className='genderButtonsOff strongShadow ccDisabled';statGenerate();}
function statGenerate(){D.getElementById("ccSTR").innerHTML=(my.str+"").fontcolor("#eeeecc");D.getElementById("ccSTA").innerHTML=(my.sta+"").fontcolor("#eeeecc");D.getElementById("ccAGI").innerHTML=(my.agi+"").fontcolor("#eeeecc");D.getElementById("ccDEX").innerHTML=(my.dex+"").fontcolor("#eeeecc");D.getElementById("ccWIS").innerHTML=(my.wis+"").fontcolor("#eeeecc");D.getElementById("ccINT").innerHTML=(my.intel+"").fontcolor("#eeeecc");D.getElementById("ccCHA").innerHTML=(my.cha+"").fontcolor("#eeeecc");D.getElementById("ccStr").innerHTML=strBonus();D.getElementById("ccSta").innerHTML=staBonus();D.getElementById("ccAgi").innerHTML=agiBonus();D.getElementById("ccDex").innerHTML=dexBonus();D.getElementById("ccWis").innerHTML=wisBonus();D.getElementById("ccInt").innerHTML=intBonus();D.getElementById("ccCha").innerHTML=chaBonus();}
function strBonus(){if((parseInt(Gstr+Cstr))<=0){var strBonusString="";}
if((parseInt(Gstr+Cstr))>0){var strBonusString=" +"+parseInt(Gstr+Cstr);}
return strBonusString;}
function staBonus(){if((parseInt(Gsta+Csta))<=0){var staBonusString="";}
if((parseInt(Gsta+Csta))>0){var staBonusString=" +"+parseInt(Gsta+Csta);}
return staBonusString;}
function agiBonus(){if(Cagi<=0){var agiBonusString="";}
if(Cagi>0){var agiBonusString=" +"+Cagi;}
return agiBonusString;}
function dexBonus(){if(Cdex<=0){var dexBonusString="";}
if(Cdex>0){var dexBonusString=" +"+Cdex;}
return dexBonusString;}
function wisBonus(){if((parseInt(Gwis+Cwis))<=0){var wisBonusString="";}
if((parseInt(Gwis+Cwis))>0){var wisBonusString=" +"+parseInt(Gwis+Cwis);}
return wisBonusString;}
function intBonus(){if(Cint<=0){var intBonusString="";}
if(Cint>0){var intBonusString=" +"+Cint;}
return intBonusString;}
function chaBonus(){if(Ccha<=0){var chaBonusString="";}
if(Ccha>0){var chaBonusString=" +"+Ccha;}
return chaBonusString;}
$("#lastName").on('keydown',function(e){var key=e.keyCode;if((key>=65&&key<=90)||key===8||key===46||(key>=35&&key<=37)||key===39){var nameInput=$("#lastName");my.lastName=nameInput.val();}else{return false;}});$("#gameView").on('click','#lastNameOK',function(){if($("#lastName").val().length<2){return;}
var name=$("#lastName").val().replace(/[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]/g,'');my.lastName=name.charAt(0).toUpperCase()+name.slice(1);$("#lastNameWrap").css("display","none");Chat("You shall now be known as "+my.name+" "+my.lastName+"!",2);$("#myName").html(my.name+' '+my.lastName);});$("#gameView").on('click','#lastNameCancel',function(){$("#lastNameWrap").css("display","none");nameFocus=false;});$("#charnameinput").on('keydown',function(e){var key=e.keyCode;if((key>=65&&key<=90)||key===8||key===46||(key>=35&&key<=37)||key===39){var nameInput=$("#charnameinput");my.name=nameInput.val();}else{return false;}});function creategenderValue(genderinput){my.gender=genderinput.value;}
function pulsateMob(Slot,color,d){var anger={val:4};pulsate[Slot]=T.to(anger,.5,{val:20,onUpdate:function(){glow(bmp[Slot],color,M.random()*520)},repeat:-1,yoyo:true});T.delayedCall(d,function(){pulsate[Slot].kill();bmp[Slot].shadow=null;});}
function glow(e,color,amount){e.shadow=new C.Shadow(color,5,5,amount);var bounds=e.getBounds();e.setBounds(bounds.x,bounds.y,bounds.width,bounds.height);}
function loadingScreen(){T.set('#curtainfade',{display:'block',opacity:1});$("#bglogo").attr('src','//d3t6yj0r8qins4.cloudfront.net/ng_logo_532x428.png');T.from('#bglogo',1,{opacity:0,ease:ez.lin});var x=M.ceil(M.random()*79);if(myZone()==="Salubrin Forest"&&my.difficulty===1&&my.exp===0){x=10;}
var y="Many flying creatures enjoy increased lightning resistance and immunity to root spells.";if(x===2){y="Trolls enjoy a bonus to passive hit point regeneration, but they start with low fire resistance.";}
if(x===3){y="When you equip items with magic find, you are more likely to find rare treasures.";}
if(x===4){y="Many undead creatures are weak against fire attacks.";}
if(x===5){y="Giants are dangerous foes with a lot of hit points. They are tougher than their level indicates.";}
if(x===6){y="All halflings can hide, which prevents them from being ambushed while choosing a battle.";}
if(x===7){y="Monks are the only class that start with the ability to dual wield.";}
if(x===8){y="Beware that some foes are more deadly than their level may indicate.";}
if(x===9){y="Any class can wear any type of equipment, but there are penalties for wearing armor too heavy for your class. Run chance, casting speed, and global cooldown speed are all affected.";}
if(x===10){y="Killing multiple monsters without leaving combat yields bonus experience and increased magic find.";}
if(x===11){y="In addition to their natural super strength and stamina, ogres are also immune to stuns.";}
if(x===12){y="Dexterity affects your critical hit chance, your critical hit damage, and the weapon effect chance.";}
if(x===13){y="Stamina affects how many hit points you have. Some classes benefit more than others.";}
if(x===14){y="Agility reduces the amount of physical damage inflicted every time you are hit.";}
if(x===15){y="Males enjoy a minor boost to strength and stamina, while females have enhanced wisdom and passive health regeneration.";}
if(x===16){y="Some skills, like Shadow Knight's Gasping Frenzy, do more damage when your hit points are lower. The results may surprise you.";}
if(x===17){y="Few classes make any use of charisma in battle. Though many bards and enchanters manage to put their charm to good use.";}
if(x===18){y="You can unlock a total of 110 talent points by completing quests and leveling up. This allows for a wide variety of talent distribution strategies.";}
if(x===19){y="Some creatures will blind you in combat. When you are blind you cannot change targets and you will miss some attacks.";}
if(x===20){y="Some deadly foes know how to cast fear, a powerful spell that fills your mind with terror.";}
if(x===21){y="Many monsters cast deadly elemental magic that inflicts serious damage. Try to find armor with good resistances to aid you in such battles.";}
if(x===22){y="Conflagration will reduce your armor in addition to the damage it inflicts.";}
if(x===23){y="All passive health regeneration is reduced while you suffer from envenom.";}
if(x===24){y="Engulfing Darkness reduces your chance of successfully running from battle.";}
if(x===25){y="You receive a passive bonus to parry and riposte while dual wielding.";}
if(x===26){y="Unlike most magic spells, Static Field does damage based on your current health value.";}
if(x===27){y="Root is a deadly spell that temporarily disables running from battle.";}
if(x===28){y="If you're looking to spend your gold, improve your best equipment to +10 quality for powerful bonuses.";}
if(x===29){y="Wisdom affects healing magic power, magic regeneration, and magic damage reduction.";}
if(x===30){y="Strength affects the power of your melee attacks and skills.";}
if(x===31){y="Higher intelligence helps you learn your skills faster.";}
if(x===32){y="Your character data is automatically saved at key intervals. Camping is a surefire way to save your progress.";}
if(x===33){y="Bards play most of their songs without much strain, but some songs drain their mana due to their difficulty.";}
if(x===34){y="You can enable combat spam in the options. This allows you to see all skill damage messages in the combat log.";}
if(x===35){y="You must invest twenty points into a talent to receive its bonuses. Points from bonuses do not count.";}
if(x===36){y="Some classes have additional ways to escape from battle. Monk's Feign Death and Rogue's Evade are just two examples.";}
if(x===37){y="Some foes attack faster than others. Even though two foes may appear the same, one may be more dangerous in battle.";}
if(x===38){y="Paladins, Rangers, and Shadow Knights cannot use spells until level 9.";}
if(x===39){y="You cannot riposte, parry, or dodge special attacks like kick, backstab, bash, or shadow kick.";}
if(x===40){y="If you are casting when your target dies, most spells will automatically cancel. However, spells that do not require a primary target will continue casting.";}
if(x===41){y="Higher channeling makes it easier to complete spells while taking hits.";}
if(x===42){y="High level foes are more likely to disrupt your channeled spells.";}
if(x===43){y="Many kick abilities have a chance to disrupt channeled spells.";}
if(x===44){y="Some skills may be used when you are stunned and even feared.";}
if(x===45){y="When your pet is rooted, they are less likely to take hits for you.";}
if(x===46){y="At the merchant you can hold the CTRL key and left-click an item in your inventory to sell items more quickly.";}
if(x===47){y="Summoned pets are magical creatures that enjoy immunity to many spells.";}
if(x===48){y="If you root your target your pet will take all of the hits for you.";}
if(x===49){y="Monks generate spirit every time they land a critical hit.";}
if(x===50){y="Every button on your combat window can be dragged to a new location on your toolbar by holding left-click.";}
if(x===51){y="Higher conjuration will give your pets more hit points.";}
if(x===52){y="Intelligence increases magical damage for all classes except for Bards. Their songs are enhanced by charisma.";}
if(x===53){y="You don't have to use the mouse all the time. Try using the number keys instead! Check the options for hotkey details.";}
if(x===54){y="Some attacks hit multiple targets, like Ranger's Volley Shot or Monk's Dragon Strike. Sometimes monster positioning can affect your damage output.";}
if(x===55){y="Some bard songs have a longer duration than others. Accelerando extends the length of all songs started while it is active.";}
if(x===56){y="Bard songs take a few moments to begin. Don't change to another song until you see it begin!";}
if(x===57){y="Some bard songs drain your mana. Be careful about using these songs too often or you may become exhausted.";}
if(x===58){y="Enchanters and bards have the ability to charm a target to fight for them in battle. This skill can be dangerous, but also very rewarding.";}
if(x===59){y="Charisma extends the duration of many key bard and enchanter skills.";}
if(x===60){y="Clerics can cast a spell called Benediction, which is the most powerful stun in the game. It stuns all targets except your current target.";}
if(x===61){y="The chance to run from battle increases every time you fail.";}
if(x===62){y="Some mobs can cast Iron Maiden, a powerful short-duration damage shield. Thankfully, DoT spells are not affected.";}
if(x===63){y="It's a good idea to use a defensive skill when a foe uses enrage, frenzy, or amplify magic.";}
if(x===64){y="Some mobs will use defensive abilities like barrier and sanctuary. You may want to save your big cooldowns until it wears off.";}
if(x===65){y="Collect set items to unlock powerful bonuses.";}
if(x===66){y="Cleric's Mark of Judgement is a unique ability. While it is active, healing spells will damage all mobs. Certain other spells will benefit as well.";}
if(x===67){y="Frozen enemies take 25% more damage. Try to use your highest damage skills while your opponents are frozen.";}
if(x===68){y="The Wizard and the Magician can use a special type of freeze called an encasement. When you hit an encased mob the formation will shatter for a 50% damage bonus, though the freeze effect will end.";}
if(x===69){y="All flying mobs are immune to spells that immobilize them in place. Wizard's Frost Nova and all types of Root spells will have no effect.";}
if(x===70){y="Rangers, Paladins, Clerics, Druids, and Shaman are wisdom-based casters. This means that their mana pool is increased by their wisdom.";}
if(x===71){y="Bards, Necromancers, Enchanters, Magicians and Wizards are intelligence-based casters. This means that their mana pool is increased by their intelligence.";}
if(x===72){y="Fighting more mobs at once increases your magic find. The more mobs the better!";}
if(x===73){y="Hell and Nightmare difficulties drop your elemental and status resistances.";}
if(x===74){y="Monks automatically receive a 50% armor bonus for all armor they equip.";}
if(x===75){y="Rogues' backstab attack is unique due to its dependence on high agility for high damage.";}
if(x===76){y="Any class is free to equip any type of armor, but your run speed, skill speed, and casting speed all suffer as a result.";}
if(x===77){y="You can use the bank to swap items between characters. Rare treasures never have to go to waste.";}
if(x===78){y="To cancel a non-channeled spell, hit the space bar or simply click the cast bar. You can also use space bar to close all open windows!";}
if(x===79){y="Agility helps dodge, parry, and riposte work more often.";}
if(location.protocol==='http:'){y="You're playing the trial version. Sign up for an account for more character slots, leaderboards, more content, and reliable data storage!";}
var k=D.getElementById('loadingmessage');k.innerHTML=y;Chat(y);var tl=new TimelineLite,txt=new SplitText("#loadingmessage",{type:"words,chars"}),chars=txt.chars;var r1=M.random();if(r1>.75){tl.staggerFrom(chars,.25,{rotationX:90,ease:ez.lin},.033);}else if(r1>.5){tl.staggerFrom(chars,.25,{rotationY:90,ease:ez.lin},.033);}else if(r1>.25){tl.staggerFrom(chars,.25,{scale:0,ease:ez.lin},.033);}else{tl.staggerFrom(chars,.25,{y:40,opacity:0,ease:ez.Qout},.033);}
T.to(k,8,{startAt:{opacity:.25,visibility:"hidden",scale:.8},scale:1,visibility:"visible",force3D:"auto"});T.to(k,1,{opacity:1,});T.to(k,0,{color:"#fff",});function checkFade(){if($("#curtainfade").css('display')==='none'){T.to(k,1,{opacity:0});}else{T.delayedCall(1,checkFade);}}
T.delayedCall(4,checkFade);}
function showChar(){if(location.protocol==="http:"){if(firstEmptyCharacterSlot===0){Error("You cannot create anymore characters!");return;}}else{if($(".characterActive:visible, .characterDisabled:visible").length>=16){Error("You cannot create anymore characters!");return;}}
characterslot=firstEmptyCharacterSlot;maleInfo(true);humanInfo(true);warriorInfo();Cstr=5;Csta=15;Cwis=0;Cint=0;Cdex=0;Cagi=5;Ccha=0;statGenerate(true);D.getElementById("createWindowId").style.display='block';setNormalMode();T.to('#characterSelectScreen',0,{opacity:0,onComplete:function(){(this.target).css('display','none');$("#ccBg").css('display','block');T.to('#ccBg',1,{startAt:{opacity:0},opacity:1,ease:ez.lin,onComplete:function(){var x=$("#charnameinput")
x.focus();my.name=x.val();resetCharButtons();g.view="Create";}});}});}
function resetCharButtons(){for(var i=1;i<=15;i++){D.getElementById('characterslot'+i).className="characterDisabled ";}}
function hideChar(){playAudio('button_2');$("#ccBg").css({display:'none',opacity:0});$("#characterSelectScreen").css({display:'block',opacity:0});if(location.protocol==="http:"){loadAllCharacters();T.to("#characterSelectScreen",1,{opacity:1,ease:ez.lin,onComplete:function(){g.view="Main";}});}else{loadCharacterSlot(firstEmptyCharacterSlot);loadServerCharacters();}}
function createChar(){playAudio('button_2');if(location.protocol==='http:'){if(location.pathname!=='/ng/'){if(charactersFound>=1){QMsg("You can only have one character in local play.");QMsg("Try server mode to create more characters.");return;}}}
resetCharButtons();my.difficulty=1;my.lastName="";my.level=1;my.exp=0;my.oneHandSlash=0;my.twoHandSlash=0;my.oneHandBlunt=0;my.twoHandBlunt=0;my.piercing=0;my.handtohand=1;my.defense=1;my.offense=1;my.dualWield=0;my.doubleAttack=0;my.dodge=0;my.riposte=0;my.parry=0;my.alteration=0;my.evocation=0;my.conjuration=0;my.abjuration=0;my.channeling=0;my.svpoison=10;my.svmagic=10;my.svlightning=10;my.svcold=10;my.svfire=10;my.str+=Cstr+Gstr;my.sta+=Csta+Gsta;my.wis+=Cwis+Gwis;my.intel+=Cint;my.dex+=Cdex;my.agi+=Cagi;my.playtime=0;my.deaths=0;my.mobsSlain=0;my.escapes=0;my.totalGold=0;my.uniquesFound=0;my.raresFound=0;my.magicFound=0;my.upgrades=0;my.raresSlain=0;my.championsSlain=0;my.epicQuests=0;my.quests=0;my.comboOverall=0;my.comboPermafrost=0;my.comboKedgeKeep=0;my.comboSolB=0;my.comboMistmoore=0;my.comboLowerGuk=0;my.comboCazicThule=0;my.comboPlaneofFear=0;my.comboPlaneofHate=0;for(var i=1;i<=12;i++){my['talent'+i]=0;}
initializeEQ(1);initializeInventory();if(location.protocol==="http:"){for(var i=0;i<=14;i++){P.eq[i].req=0;P.eq[i].flavorText="";}
if(my.job!=="Monk"){P.eq[12].damage=3;P.eq[12].delay=3600;P.eq[12].type="slashed";P.eq[12].rarity=0;P.eq[12].itemSlot="weapons";P.eq[12].xPos=-576;P.eq[12].yPos=0;P.eq[12].name="Rusty Blade";}
P.eq[13].damage=1;P.eq[13].delay=3000;P.eq[13].type="punched";P.eq[13].armor=0;P.eq[14].damage=1;P.eq[14].delay=30000;my.gold=0;P.eq[6].rarity=0;P.eq[6].type="cloth";P.eq[6].itemSlot="chest";P.eq[6].xPos=-256;P.eq[6].yPos=-256;P.eq[6].name="Training Tunic";P.eq[6].armor=1;if(my.job==="Warrior"||my.job==="Paladin"||my.job==="Shadow Knight"){P.eq[13].rarity=0;P.eq[13].type="shield";P.eq[13].itemSlot="shield";P.eq[13].xPos=-768;P.eq[13].yPos=0;P.eq[13].name="Wooden Shield";P.eq[13].armor=1;}
if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"||my.job==="Rogue"){P.eq[12].damage=2;P.eq[12].delay=2600;P.eq[12].type="pierced";P.eq[12].rarity=0;P.eq[12].itemSlot="weapons";P.eq[12].xPos=-704;P.eq[12].yPos=0;P.eq[12].name="Rusty Dagger";if(my.job!=="Rogue"){P.eq[6].rarity=0;P.eq[6].itemSlot="chest";P.eq[6].xPos=-256;P.eq[6].yPos=-64;P.eq[6].name="Apprentice Robe";P.eq[6].armor=1;}}
if(my.job==="Cleric"||my.job==="Druid"||my.job==="Shaman"){P.eq[12].type="crushed";P.eq[12].damage=4;P.eq[12].delay=4400;P.eq[12].rarity=0;P.eq[12].itemSlot="weapons";P.eq[12].xPos=-640;P.eq[12].yPos=0;P.eq[12].name="Rusty Mace";}
if(my.job==="Ranger"){P.eq[14].damage=4;P.eq[14].delay=4500;P.eq[14].type="range";P.eq[14].rarity=0;P.eq[14].itemSlot="range";P.eq[14].xPos=-704;P.eq[14].yPos=-512;P.eq[14].name="Cracked Bow";}
if(my.job==="Monk"){P.eq[12].type="punched";P.eq[13].type="punched";P.eq[12].damage=3+(my.level*(7 / 50));P.eq[13].damage=3+(my.level*(7 / 50));P.eq[12].delay=3000;P.eq[13].delay=3000;}}
if(my.job==="Warrior"||my.job==="Ranger"||my.job==="Paladin"||my.job==="Shadow Knight"){my.oneHandSlash=1;my.twoHandSlash=1;my.oneHandBlunt=1;my.twoHandBlunt=1;}
if(my.job==="Rogue"||my.job==="Warrior"||my.job==="Ranger"){my.oneHandSlash=1;my.piercing=1;my.oneHandBlunt=1;}
if(my.job==="Bard"){my.oneHandSlash=1;my.piercing=1;my.oneHandBlunt=1;}
if(my.job==="Cleric"||my.job==="Shaman"||my.job==="Monk"){my.oneHandBlunt=1;my.twoHandBlunt=1;}
if(my.job==="Monk"){my.dualWield=1;}
if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){my.piercing=1;my.twoHandBlunt=1;my.oneHandBlunt=1;}
if(my.job==="Druid"){my.oneHandBlunt=1;my.twoHandBlunt=1;my.oneHandSlash=1;}
if(my.job==="Bard"||my.job==="Ranger"||my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Druid"||my.job==="Shadow Knight"||my.job==="Shaman"||my.job==="Wizard"||my.job==="Paladin"||my.job==="Cleric"){my.alteration=1;my.evocation=1;my.conjuration=1;my.abjuration=1;my.channeling=1;}
my.zone="Edenburg";if(my.race==="Human"){my.svpoison=my.svpoison+5;my.svlightning=my.svlightning+5;}
if(my.race==="Barbarian"){my.svcold=my.svcold+10;}
if(my.race==="Dwarf"){my.svpoison=my.svpoison+5;my.svmagic=my.svmagic+5;}
if(my.race==="Erudite"){my.svfire=my.svfire+5;my.svmagic=my.svmagic+5;my.svlightning=my.svlightning-5;}
if(my.race==="Halfling"){my.svpoison=my.svpoison+5;my.svlightning=my.svlightning-5;}
if(my.race==="Gnome"){my.svlightning=my.svlightning+10;}
if(my.race==="Troll"){my.svfire=my.svfire-10;}
if(my.race==="Ogre"){my.svmagic=my.svmagic-5;}
if(my.race==="High Elf"||my.race==="Wood Elf"||my.race==="Dark Elf"||my.race==="Half Elf"){my.svfire=my.svfire+5;my.svcold=my.svcold+5;}
var x=my.zone;my.zoneN=x;my.zoneH=x;my.subzone=0;my.subzoneN=0;my.subzoneH=0;levelUpStats();if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){my.maxMp=100;my.mp=0;}
for(var i=0;i<=23;i++){Lmy['C'+i]="";}
my.ID=0;if($("#normalId").hasClass('ccActive')===true){my.hardcoreMode="false";}else{my.hardcoreMode="true";}
getUniqueID();}
function getUniqueID(){function do1(){if(location.protocol==="https:"){loadServerCharacters();}
T.to('#ccBg',1,{opacity:0,onComplete:function(){(this.target).css('display','none');$("#characterSelectScreen").css({display:'block',opacity:0});T.to("#characterSelectScreen",1,{opacity:1,onComplete:function(){if(location.protocol==="http:"){loadAllCharacters();}}});}});}
QMsg("Creating Character...");D.getElementById('ccBg').style.display='none';if(location.protocol==="http:"){$.ajax({url:"php/characterID.php",data:{charID:my.ID}}).done(function(data){my.ID=data;initQ();saveGame();do1();}).fail(function(){Error('Unable to communicate with the server.<br>Please try again later.');});}else{$.ajax({data:{run:"createCharacter",my:my}}).done(function(data){if(data!==''){D.getElementById('ccBg').style.display='block';QMsg(data);}else{do1();}}).fail(function(){Error('Unable to communicate with the server.<br>Please try again later.');});}}
$('#window3').on('mouseenter','#window3a > li',function(){if(combatButtonDragMode===true){$(this).css({boxShadow:"-25px 0 rgba(112, 192, 255, .25) inset, 25px 0 rgba(112, 192, 255, .25) inset, 0 -25px rgba(112, 192, 255, .25) inset, 0 25px rgba(112, 192, 255, .25) inset"});}}).on('mouseleave','#window3a > li',function(){if(combatButtonDragMode===true){$(this).css({boxShadow:"1px 0 #000 inset, 0 1px 0 #000 inset, 0 -1px #000 inset, -1px 0 #000 inset"});}});function initSortables(){$("#window3a").swappable({items:'.buttons, .NCbuttons, .spacers',cursorAt:{top:-5},distance:12,placeholder:"placeHolder",helper:"clone",opacity:1,start:function(){playAudio('button_2');combatButtonDragMode=true;},stop:function(){saveButtonPositions();combatButtonDragMode=false;$("#window3a li").css({boxShadow:"1px 0 #000 inset, 0 1px 0 #000 inset, 0 -1px #000 inset, -1px 0 #000 inset"});moveLockedSkills();}});$("#window3a").disableSelection();};function updateCombatPanel(){var Str="";if(my.job==="Warrior"){Str='<li class="buttons nonglobal" id="avengingstrikeId"></li>'+'<li class="buttons warskill" id="slamId"></li>'+'<li class="buttons warskill" id="warriorkickId"></li>'+'<li class="buttons warskill" id="hemorrhageId"></li>'+'<li class="buttons warskill" id="shockwaveId"></li>'+'<li class="buttons nonglobal" id="pummelId"></li>'+'<li class="buttons nonglobal" id="subjugateId"></li>'+'<li class="buttons nonglobal" id="decisiveblowId"></li>'+'<li class="buttons warskill" id="absorbspellId"></li>'+'<li class="buttons nonglobal" id="frenziedrampageId"></li>'+'<li class="buttons nonglobal" id="enrageId"></li>'+'<li class="buttons warskill" id="furiousscornId"></li>'+'<li class="buttons warskill" id="triageId"></li>'+'<li class="buttons warskill" id="bulwarkId"></li>'+'<li class="buttons nonglobal" id="intrepidmightId"></li>';}
if(my.job==="Monk"){Str='<li class="buttons mnkskill" id="tigerstrikeId"></li>'+'<li class="buttons mnkskill" id="eaglestrikeId"></li>'+'<li class="buttons mnkskill" id="cheetahstrikeId"></li>'+'<li class="buttons mnkskill" id="cobrastrikeId"></li>'+'<li class="buttons mnkskill" id="dragonstrikeId"></li>'+'<li class="buttons mnkskill" id="cranekickId"></li>'+'<li class="buttons mnkskill" id="windmillkickId"></li>'+'<li class="buttons mnkskill" id="ancestralflurryId"></li>'+'<li class="buttons mnkskill" id="flyingkickId"></li>'+'<li class="buttons mnkskill" id="chakrablastId"></li>'+'<li class="buttons nonglobal" id="feigndeathId"></li>'+'<li class="buttons nonglobal" id="mendId"></li>'+'<li class="buttons nonglobal" id="stonefistsId"></li>'+'<li class="buttons nonglobal" id="intimidationId"></li>'+'<li class="buttons nonglobal" id="innerpeaceId"></li>';}
if(my.job==="Rogue"){Str='<li class="buttons rogskill" id="shadowstrikeId"></li>'+'<li class="buttons rogskill" id="sonicstrikeId"></li>'+'<li class="buttons rogskill" id="hyperstrikeId"></li>'+'<li class="buttons rogskill" id="widowstrikeId"></li>'+'<li class="buttons rogskill" id="miragestrikeId"></li>'+'<li class="buttons rogskill" id="lacerateId"></li>'+'<li class="buttons rogskill" id="backstabId"></li>'+'<li class="NCbuttons" id="roguehideId"></li>'+'<li class="buttons rogskill" id="staggershotId"></li>'+'<li class="buttons rogskill" id="lobotomizeId"></li>'+'<li class="buttons rogskill" id="prowlinggashId"></li>'+'<li class="buttons nonglobal" id="evadeId"></li>'+'<li class="buttons nonglobal" id="coldbloodId"></li>'+'<li class="buttons nonglobal" id="flashpowderId"></li>'+'<li class="buttons nonglobal" id="illusivemistId"></li>'+'<li class="buttons nonglobal" id="ancientwillId"></li>';}
if(my.job==="Paladin"){Str='<li class="buttons palskill" id="purgeId"></li>'+'<li class="buttons palskill" id="palslamId"></li>'+'<li class="buttons palskill" id="rebukeId"></li>'+'<li class="buttons palskill" id="vengeanceId"></li>'+'<li class="buttons nonglobal" id="layhandsId"></li>'+'<li class="buttons palskill" id="greaterhealingId"></li>'+'<li class="buttons palskill" id="holymightId"></li>'+'<li class="buttons palskill" id="palrootId"></li>'+'<li class="NCbuttons" id="valorId"></li>'+'<li class="NCbuttons" id="spiritarmorId"></li>'+'<li class="NCbuttons" id="divineprovidenceId"></li>'+'<li class="NCbuttons" id="symbolofryltanId"></li>'+'<li class="buttons palskill" id="ardentjudgment"></li>'+'<li class="buttons palskill" id="yaulpId"></li>'+'<li class="buttons palskill" id="cleanseId"></li>'+'<li class="buttons palskill" id="flashoflightId"></li>';}
if(my.job==="Ranger"){Str='<li class="buttons rngskill" id="rapidshotId"></li>'+'<li class="buttons rngskill" id="rangerkickId"></li>'+'<li class="buttons nonglobal" id="countershotId"></li>'+'<li class="buttons rngskill" id="trueshotarrowId"></li>'+'<li class="buttons rngskill" id="volleyshotId"></li>'+'<li class="buttons rngskill" id="lighthealingId"></li>'+'<li class="buttons rngskill" id="faerieflameId"></li>'+'<li class="NCbuttons" id="rangertrackId"></li>'+'<li class="NCbuttons" id="thistlecoatId"></li>'+'<li class="NCbuttons" id="feetlikecatId"></li>'+'<li class="NCbuttons" id="shieldofbramblesId"></li>'+'<li class="NCbuttons" id="rangersowId"></li>'+'<li class="buttons rngskill" id="igniteId"></li>'+'<li class="buttons rngskill" id="snareId"></li>'+'<li class="buttons rngskill" id="wardersrift"></li>'+'<li class="buttons nonglobal" id="weaponshieldId"></li>';}
if(my.job==="Shadow Knight"){Str='<li class="buttons shdskill" id="crescentcleaveId"></li>'+'<li class="buttons shdskill" id="shdslamId"></li>'+'<li class="buttons shdskill" id="deathstrikeId"></li>'+'<li class="buttons shdskill" id="gaspingfrenzyId"></li>'+'<li class="buttons nonglobal" id="harmtouchId"></li>'+'<li class="buttons shdskill" id="shdlifetapId"></li>'+'<li class="buttons shdskill" id="doomingdarknessId"></li>'+'<li class="buttons shdskill" id="heatbloodId"></li>'+'<li class="NCbuttons" id="summondeadId"></li>'+'<li class="NCbuttons" id="vampiricembraceId"></li>'+'<li class="NCbuttons" id="resistcoldId"></li>'+'<li class="buttons nonglobal" id="togglepetattackId"></li>'+'<li class="buttons nonglobal" id="strengthendeadId"></li>'+'<li class="buttons shdskill" id="shdfearId"></li>'+'<li class="buttons shdskill" id="siphonstrengthId"></li>'+'<li class="buttons shdskill" id="shdfeigndeathId"></li>'+'<li class="buttons shdskill" id="shadowvortexId"></li>';}
if(my.job==="Bard"){Str='<li class="buttons brdskill" id="chordsofdissonance"></li>'+'<li class="buttons brdskill" id="chantofbattle"></li>'+'<li class="buttons brdskill" id="accelerando"></li>'+'<li class="buttons brdskill" id="hymnofrestoration"></li>'+'<li class="buttons brdskill" id="songofthesirens"></li>'+'<li class="buttons brdskill" id="boastfulbellow"></li>'+'<li class="buttons brdskill" id="elementalrhythms"></li>'+'<li class="buttons brdskill" id="lucidlullaby"></li>'+'<li class="buttons brdskill" id="consonantchain"></li>'+'<li class="buttons brdskill" id="dissension"></li>'+'<li class="NCbuttons" id="rangertrackId"></li>'+'<li class="buttons brdskill" id="chorusofclarity"></li>'+'<li class="buttons brdskill" id="anthemdearms"></li>'+'<li class="buttons brdskill" id="euphonichymn"></li>'+'<li class="buttons brdskill" id="shieldofsongs"></li>'+'<li class="buttons brdskill" id="desperatedirge"></li>';}
if(my.job==="Cleric"){Str='<li class="buttons clrskill" id="smite"></li>'+'<li class="buttons clrskill" id="soundofforce"></li>'+'<li class="buttons clrskill" id="superiorhealing"></li>'+'<li class="buttons clrskill" id="bindingearth"></li>'+'<li class="buttons clrskill" id="expelcorruption"></li>'+'<li class="buttons clrskill" id="searingrevelation"></li>'+'<li class="buttons clrskill" id="martyrsblessing"></li>'+'<li class="NCbuttons" id="resolution"></li>'+'<li class="NCbuttons" id="armoroffaith"></li>'+'<li class="NCbuttons" id="divinesanctuary"></li>'+'<li class="NCbuttons" id="symbolofnaltron"></li>'+'<li class="buttons nonglobal" id="guardianangel"></li>'+'<li class="buttons clrskill" id="holywrath"></li>'+'<li class="buttons clrskill" id="markofjudgement"></li>'+'<li class="buttons clrskill" id="benediction"></li>';}
if(my.job==="Druid"){Str='<li class="buttons druskill" id="starfire"></li>'+'<li class="buttons druskill" id="dronesofdoom"></li>'+'<li class="buttons druskill" id="druhealing"></li>'+'<li class="buttons druskill" id="tornado"></li>'+'<li class="buttons druskill" id="engulfingroots"></li>'+'<li class="buttons druskill" id="driftingdeath"></li>'+'<li class="buttons druskill" id="lightningblast"></li>'+'<li class="NCbuttons" id="rangertrackId"></li>'+'<li class="NCbuttons" id="skinlikenature"></li>'+'<li class="NCbuttons" id="shieldofspikes"></li>'+'<li class="NCbuttons" id="drusow"></li>'+'<li class="NCbuttons" id="chloroplast"></li>'+'<li class="buttons druskill" id="earthquake"></li>'+'<li class="buttons druskill" id="hurricane"></li>'+'<li class="buttons druskill" id="sylvangrasp"></li>'+'<li class="buttons druskill" id="volcano"></li>';}
if(my.job==="Shaman"){Str='<li class="buttons shmskill" id="froststrike"></li>'+'<li class="buttons shmskill" id="scourge"></li>'+'<li class="buttons shmskill" id="shmhealing"></li>'+'<li class="buttons shmskill" id="togorsinsects"></li>'+'<li class="buttons nonglobal" id="togglepetattackId"></li>'+'<li class="buttons shmskill" id="cannibalize"></li>'+'<li class="buttons shmskill" id="enstill"></li>'+'<li class="buttons shmskill" id="poisonnova"></li>'+'<li class="NCbuttons" id="calloftheancients"></li>'+'<li class="NCbuttons" id="guardianspirit"></li>'+'<li class="NCbuttons" id="shmsow"></li>'+'<li class="NCbuttons" id="talismanofaltuna"></li>'+'<li class="buttons shmskill" id="affliction"></li>'+'<li class="buttons shmskill" id="reclaimblood"></li>'+'<li class="buttons shmskill" id="glacialimpact"></li>'+'<li class="buttons shmskill" id="devouringplague"></li>';}
if(my.job==="Necromancer"){Str='<li class="buttons necskill" id="bonespirit"></li>'+'<li class="buttons necskill" id="cascadingdarkness"></li>'+'<li class="buttons necskill" id="invokefear"></li>'+'<li class="buttons necskill" id="drainsoul"></li>'+'<li class="buttons necskill" id="feigndeath"></li>'+'<li class="buttons nonglobal" id="togglepetattackId"></li>'+'<li class="NCbuttons" id="invokedeath"></li>'+'<li class="NCbuttons" id="archshielding"></li>'+'<li class="buttons necskill" id="augmentdeath"></li>'+'<li class="buttons necskill" id="igniteblood"></li>'+'<li class="buttons necskill" id="corpseexplosion"></li>'+'<li class="buttons necskill" id="bondofdeath"></li>'+'<li class="buttons necskill" id="diamondskin"></li>'+'<li class="buttons necskill" id="asystole"></li>'+'<li class="buttons necskill" id="detonatesoul"></li>'+'<li class="buttons necskill" id="howlingterror"></li>';}
if(my.job==="Enchanter"){Str='<li class="buttons encskill" id="chaosflux"></li>'+'<li class="buttons encskill" id="gaspingembrace"></li>'+'<li class="buttons encskill" id="cajolingwhispers"></li>'+'<li class="buttons encskill" id="colorshift"></li>'+'<li class="buttons encskill" id="mesmerize"></li>'+'<li class="buttons encskill" id="shiftlessdeeds"></li>'+'<li class="buttons encskill" id="alacrity"></li>'+'<li class="buttons encskill" id="gravityflux"></li>'+'<li class="buttons encskill" id="mysticrune"></li>'+'<li class="buttons encskill" id="tashania"></li>'+'<li class="NCbuttons" id="discordantbarrier"></li>'+'<li class="NCbuttons" id="enchantweapon"></li>'+'<li class="NCbuttons" id="adorninggrace"></li>'+'<li class="NCbuttons" id="clarity"></li>'+'<li class="buttons encskill" id="enthrall"></li>';}
if(my.job==="Magician"){Str='<li class="buttons magskill" id="lavabolt"></li>'+'<li class="buttons magskill" id="firestorm"></li>'+'<li class="buttons magskill" id="frozenorb"></li>'+'<li class="buttons magskill" id="burnout"></li>'+'<li class="NCbuttons" id="earthelemental"></li>'+'<li class="NCbuttons" id="airelemental"></li>'+'<li class="NCbuttons" id="fireelemental"></li>'+'<li class="NCbuttons" id="frostelemental"></li>'+'<li class="NCbuttons" id="shieldoflava"></li>'+'<li class="NCbuttons" id="phantomplate"></li>'+'<li class="NCbuttons" id="elementalarmor"></li>'+'<li class="buttons magskill" id="manashield"></li>'+'<li class="buttons magskill" id="psionicstorm"></li>'+'<li class="buttons nonglobal" id="togglepetattackId"></li>'+'<li class="buttons magskill" id="reclaimelements"></li>'+'<li class="buttons magskill" id="elementalfury"></li>'+'<li class="buttons magskill" id="armageddon"></li>'+'<li class="buttons magskill" id="stasisfield"></li>'+'<li class="buttons magskill" id="alteredstate"></li>';}
if(my.job==="Wizard"){Str='<li class="buttons wizskill" id="icebolt"></li>'+'<li class="buttons wizskill" id="chargedbolts"></li>'+'<li class="buttons wizskill" id="frostnova"></li>'+'<li class="NCbuttons" id="viziersshielding"></li>'+'<li class="buttons wizskill" id="magicmissiles"></li>'+'<li class="buttons wizskill" id="fireball"></li>'+'<li class="buttons wizskill" id="deepfreeze"></li>'+'<li class="buttons wizskill" id="chainlightning"></li>'+'<li class="buttons wizskill" id="glacialspike"></li>'+'<li class="buttons wizskill" id="iceblock"></li>'+'<li class="buttons wizskill" id="icecomet"></li>'+'<li class="buttons nonglobal" id="counterspell"></li>'+'<li class="buttons nonglobal" id="harnessEther"></li>'+'<li class="buttons wizskill" id="meteor"></li>'+'<li class="buttons wizskill" id="mirrorimages"></li>';}
Str+='<li class="spacers" id="Comspace1"></li>'+'<li class="spacers" id="Comspace2"></li>'+'<li class="spacers" id="Comspace3"></li>'+'<li class="spacers" id="Comspace4"></li>'+'<li class="spacers" id="Comspace5"></li>'+'<li class="spacers" id="Comspace6"></li>'+'<li class="spacers" id="Comspace7"></li>'+'<li class="spacers" id="Comspace8"></li>'+'<li class="spacers" id="Comspace9"></li>'+'<li class="spacers" id="Comspace10"></li>'+'<li class="spacers" id="Comspace11"></li>'+'<li class="spacers" id="Comspace12"></li>'+'<li class="spacers" id="Comspace13"></li>'+'<li class="spacers" id="Comspace14"></li>'+'<li class="spacers" id="Comspace15"></li>'+'<li class="spacers" id="Comspace16"></li>'+'<li class="spacers" id="Comspace17"></li>'+'<li class="spacers" id="Comspace18"></li>'+'<li class="spacers" id="Comspace19"></li>'+'<li class="spacers" id="Comspace20"></li>';$('#window3a').append(Str);initSortables();var str2='';if(my.race==="Halfling"){if(my.job!=="Rogue"){str2+='<li class="NCbuttons racebuttons" id="halflinghideId"></li>';}}else if(my.race==="Human"){str2+='<li class="buttons nonglobal racebuttons" id="secondwindId"></li>';}else if(my.race==="Erudite"){str2+='<li class="buttons nonglobal racebuttons" id="divineaegisId"></li>';}else if(my.race==="Barbarian"){str2+='<li class="buttons nonglobal racebuttons" id="ancestralrampageId"></li>';}else if(my.race==="Wood Elf"){str2+='<li class="buttons nonglobal racebuttons" id="tunaresglowId"></li>';}else if(my.race==="Half Elf"){str2+='<li class="buttons nonglobal racebuttons" id="karanasinfusionId"></li>';}else if(my.race==="Dark Elf"){str2+='<li class="buttons nonglobal racebuttons" id="sanguinetormentId"></li>';}else if(my.race==="Dwarf"){str2+='<li class="buttons nonglobal racebuttons" id="granitevisageId"></li>';}else if(my.race==="Gnome"){str2+='<li class="buttons nonglobal racebuttons" id="shortcircuitId"></li>';}
if(str2!==''){$("#window6a").append(str2);}}
function checkTitle(){var x='';var z='PlaneofFear';if(P.Q[2][z]>1){if(my.job==="Warrior"){x="Warlord";}
if(my.job==="Rogue"){x="Assassin";}
if(my.job==="Monk"){x="Grandmaster";}
if(my.job==="Bard"){x="Virtuoso";}
if(my.job==="Ranger"){x="Warder";}
if(my.job==="Paladin"){x="Crusader";}
if(my.job==="Shadow Knight"){x="Grave Lord";}
if(my.job==="Druid"){x="Hierophant";}
if(my.job==="Cleric"){x="High Priest";}
if(my.job==="Shaman"){x="Oracle";}
if(my.job==="Necromancer"){x="Warlock";}
if(my.job==="Enchanter"){x="Phantasmist";}
if(my.job==="Magician"){x="Arch Mage";}
if(my.job==="Wizard"){x="Sorcerer";}}else if(P.Q[1][z]>1){if(my.job==="Warrior"){x="Myrmidon";}
if(my.job==="Rogue"){x="Blackguard";}
if(my.job==="Monk"){x="Master";}
if(my.job==="Bard"){x="Troubadour";}
if(my.job==="Ranger"){x="Outrider";}
if(my.job==="Paladin"){x="Knight";}
if(my.job==="Shadow Knight"){x="Revenant";}
if(my.job==="Druid"){x="Preserver";}
if(my.job==="Cleric"){x="Templar";}
if(my.job==="Shaman"){x="Luminary";}
if(my.job==="Necromancer"){x="Defiler";}
if(my.job==="Enchanter"){x="Beguiler";}
if(my.job==="Magician"){x="Conjurer";}
if(my.job==="Wizard"){x="Evoker";}}else if(P.Q[0][z]>1){if(my.job==="Warrior"){x="Champion";}
if(my.job==="Rogue"){x="Rake";}
if(my.job==="Monk"){x="Disciple";}
if(my.job==="Bard"){x="Minstrel";}
if(my.job==="Ranger"){x="Pathfinder";}
if(my.job==="Paladin"){x="Cavalier";}
if(my.job==="Shadow Knight"){x="Reaver";}
if(my.job==="Druid"){x="Wanderer";}
if(my.job==="Cleric"){x="Vicar";}
if(my.job==="Shaman"){x="Mystic";}
if(my.job==="Necromancer"){x="Heretic";}
if(my.job==="Enchanter"){x="Illusionist";}
if(my.job==="Magician"){x="Elementalist";}
if(my.job==="Wizard"){x="Channeler";}}
return x;}
function setMinimumWeaponSpeed(){var x=1000;var e=P.eq[12];if(e.type==="slashed"||e.type==="pierced"||e.type==="crushed"||e.type==="punched"){x=500;}
minimumWeaponSpeed=x;}
function setHighestElement(){var a={'poison':g.poisonDamageEquip,'magic':magicDamageEquipTotal(),'lightning':g.lightningDamageEquip,'cold':g.coldDamageEquip,'fire':g.fireDamageEquip};var high='poison';var val=a.poison;for(var prop in a){if(a[prop]>val){high=prop;val=a[prop];};}
return high;}
function increaseBank(){for(var i=900;i<1080;i++){P.bank[i]={};for(var x=0,len=g.key.length;x<len;x++){P.bank[i][g.key[x]]=g.val[x];}}}
function normalizedDamage(minDamage,skillName,multiplier){if(P.eq[12].type==="slashed"||P.eq[12].type==="crushed"||P.eq[12].type==="punched"||P.eq[12].type==="pierced"){weaponBonus=~~((P.eq[12].damage /(totalHaste1()))*12400);}else{weaponBonus=~~((P.eq[12].damage /(totalHaste1()))*6066);}
if(P.eq[14].damage<=1){bowBonus=0;}else{bowBonus=~~((P.eq[14].damage / P.eq[14].delay)*6066);}}
function updateIcebolt(){$("#icebolt").css('backgroundPosition','-300% 0');if(my.talent1>=20){mType='lightning';$("#icebolt").css('backgroundPosition','-400% 0');}
if(my.talent10>=20){mType='fire';$("#icebolt").css('backgroundPosition','-700% 0');}}
function setRacialSkillId(){racialSkillId='';if(my.race==="Human"){racialSkillId='secondwindId';}
if(my.race==="Erudite"){racialSkillId='divineaegisId';}
if(my.race==="Barbarian"){racialSkillId='ancestralrampageId';}
if(my.race==="Wood Elf"){racialSkillId='tunaresglowId';}
if(my.race==="Half Elf"){racialSkillId='karanasinfusionId';}
if(my.race==="Dark Elf"){racialSkillId='sanguinetormentId';}
if(my.race==="Dwarf"){racialSkillId='granitevisageId';}
if(my.race==="Gnome"){racialSkillId='shortcircuitId';}
if(my.race==="Halfling"){racialSkillId='halflinghideId';}}
function loadProcImage(){asset[112]=D.createElement('img');asset[113]=D.createElement('img');asset[212]=D.createElement('audio');asset[213]=D.createElement('audio');for(var i=12;i<=13;i++){var x=asset[100+i];x.src="images1/blank.png";var N=P.eq[i].name;if(N==="Ebony Blade"||N==="Spriggan's Blade"){x.src="images1/rootImage.png";}else if(N==="Baezil's Vortex"||N==="Rathmonan's Vortex"){x.src="images1/lightningNova.png";}else if(N==="Flamebellow"){x.src="images1/fireNova.png";}else if(N==="Scimitar of the Mistwalker"||N==="Scimitar of the Grovecaller"||N==="Jysin's Blade of the Darkwind"){asset[114]=D.createElement('img');asset[114].src="images1/a white wolf.png";}else if(N==="Plankton Laced Greatsword"){x.src="images1/frostNova.png";asset[200+i].src=soundLocation+"novaice."+audioExt;}else if(N==="Megnemon's Glacial Crook"){x.src="images1/glacialSpike.png";asset[200+i].src=soundLocation+"icespike1."+audioExt;}}}
function showIntro(){var canlogo=can('neverworks',8,640,384,400,161,true);canlogo.x=640;canlogo.y=384;canlogo.alpha=0;canlogo.image.onload=function(){var e=canlogo.getBounds();canlogo.cache(e.x,e.y,e.width,e.height);t1=new C.Text("presented by","15px Arial","#fff");t1.set({x:640,y:150,textAlign:"center",alpha:0});stage[8].addChild(t1);T.to(t1,1,{alpha:1});T.set(canlogo,{easel:{saturation:0},rotation:345,scaleX:1,scaleY:1});T.to(canlogo,2,{delay:1,rotation:363,onComplete:function(){T.to(canlogo,.25,{delay:1,rotation:360});}});T.to(canlogo,1,{delay:1,alpha:1,onComplete:function(){var e=canlogo.getBounds()
canlogo.cache(e.x,e.y,e.width,e.height);T.to(canlogo,1.5,{easel:{saturation:1},delay:.5,ease:ez.lin,onComplete:function(){T.to(canlogo,.5,{delay:1.5,alpha:0,onComplete:function(){cRem(8,canlogo);intro2();}});T.to(t1,.5,{delay:1.5,alpha:0,onComplete:function(){cRem(8,t1);}});}});}});function intro2(){D.getElementById('introText2').style.display='none';canWorldMap=new C.Bitmap("//i.imgur.com/d1iYz2W.jpg");canWorldMap.image.onload=function(){canWorldMap.setTransform(640,384,1,1,0,0,0,640,384);canWorldMap.alpha=0;stage[8].addChild(canWorldMap);T.to(canWorldMap,60,{scaleX:2,scaleY:2,x:1120,y:200,ease:ez.lin,repeat:-1,yoyo:true});T.to(canWorldMap,2,{alpha:1,ease:ez.sout});lore("The world of Vandamor. It has been more than 500 years since the Imperial Shattering, a period of global war throughout the world.<br><br>"+"The outcome of the Great War led to a long-standing period of relative peace, cooperation, and prosperity among all of the nations.<br><br>"+"However, in recent times, unusual levels of antagonism have concerned each nation's leaders. Some believe the chaos has been precipitated by the Gods themselves.<br><br>"+"In ancient times the Gods were known to meddle in the national affairs of Vandamor. They stood to gain by acquiring more followers. The more worshippers a deity has, the more powerful their influence becomes.<br><br>"+"Due to the period of relative calm, the people of Vandamor have been inculcated with complacency. A great hero is needed, in this chaotic time, to persevere, and re-establish peace in the world.<br><br>"+"You have enlisted in the Edenburg Training Detachment to help quell the recent incursions. Edenburg is the capital of the human nation and a key port city in the old Imperial system.<br><br>"+"Your adventure begins with Edenburg's perimeter under siege by orcs.");D.getElementById('introClick').style.display='block';}
function showText(title,name){if(g.view==="Intro"){T.to('#credits',.5,{opacity:0,onComplete:function(){$('#creditTitle').text(title);$('#creditName').text(name);T.to('#credits',.5,{delay:.5,opacity:1});}});}
if(g.view!=="Intro"||title===''){$("#credits").remove();}}
var a=["Producer","Joe Leonard","Lead Artist","Jocelyn Sarvida","Composer","Matthew Pablo","UI Artist","Tan Kwok Yeow","UI Artist","J.W. Bjerk","Programmer","Joe Leonard","Artist","Fedor Sosnin","Writer","Joe Leonard","Testing","Stephen Mullers","Consulting","Chris Chegwidden","",""];var t1=0;while(a.length>0){T.delayedCall(t1,showText,[a.shift(),a.shift()]);t1+=6;}}}}
var ng,JOB;function enterWorld(){if(my.name==""||my.name==null){QMsg("You should create a character first.");return;}
if($("#enterworld").hasClass("disabled")===true){return;}
g.view="Game";startTime=new Date();if(my.hardcoreMode==="true"){if(localStorage.getItem("HCbank4")===null){initializeBank();}else{var zig=localStorage.getItem("HCbank4");P.bank=JSON.parse(zig);if(P.bank.length<1080){increaseBank();}}}else{if(localStorage.getItem("bank4")===null){initializeBank();}else{var zig=localStorage.getItem("bank4");P.bank=JSON.parse(zig);if(P.bank.length<1080){increaseBank();}}}
if(my.job==="Bard"){D.getElementById('spellbarlabel').innerHTML="SINGING";}
noSpaceClass=my.job.replace(/ /g,'');ng={};ng.zone=myZone();ng.subZone=mySubzone();JOB={};JOB.hpTier=hpTier();JOB.mpTier=mpTier();JOB.mpClass=mpClass();JOB.jobType=jobType();JOB.DoneCD=noSpaceClass+"DoneCD";JOB.Cooldowns=noSpaceClass+"Cooldowns";JOB.SkillMap=noSpaceClass+"SkillMap";JOB.PhyEnh=noSpaceClass+"PhyEnh";JOB.MagEnh=noSpaceClass+"MagEnh";JOB.DotEnh=noSpaceClass+"DotEnh";JOB.CheckSkills="check"+noSpaceClass+"Skills";checkUndefined();loadClassSounds();loadProcImage();D.getElementById("tooltipname").style.display='block';NG.mobTraits.innerHTML="";updateCombatPanel();my.title=checkTitle();if(location.protocol==='http:'){g.difficulty=my.difficulty;}else{g.difficulty=srv.difficulty;}
indoorStatus=checkDungeon(myZone());$NG.enterWorld2.css("display","block");D.getElementById("myhpbardiv").style.visibility="visible";$("#enterworld").addClass("disabled");$NG.enterWorld1.css({display:'block',opacity:1});D.getElementById("worldMap").style.top="-900px";travelStatus=1;g.oldExp=my.exp;drawExpBar(0);classSpriteLoaded=false;var classSprite=new Image();classSprite.src="images1/sprite"+my.job+"3.png";classSprite.onload=function(){classSpriteLoaded=true;}
initNG2();loadZone();var e1=$('<div id="myName" class="strongShadow">').html(my.name+' '+my.lastName);$("#myhpbardiv").append(e1);var c1="#0066cc";var c2="#003388";if(my.job==="Monk"||my.job==="Rogue"){c1="#cc0";c2="#880";}else if(my.job==="Warrior"){c1="#cc6600";c2="#883300";}
mympbarId=new C.Stage(D.getElementById('mympbarId'));TweenLite.ticker.addEventListener("tick",mympbarId.update,mympbarId);var b=new C.Graphics();b.lf([c2,c1,c1,c2],[0,.3,.7,1],0,0,0,14).drawRect(0,0,192,14);myMpBar=new C.Shape(b);mympbarId.addChild(myMpBar);var adj=0;if(isFirefox===true){adj=1;}
myMpText=new C.Text("","12px Arial","#fff");myMpText.set({x:96,y:8,textAlign:"center",textBaseline:'middle'});myMpText.shadow=new C.Shadow("#000",1,1,0);mympbarId.addChild(myMpText);$NG.buttonreset.css("display","none");setEquipValues();highestElement=setHighestElement();setMinimumWeaponSpeed();setRacialSkillId();normalizedDamage();updatePunchDamage();dualWieldBonus=setDualWieldBonus();shieldBlockChance=setShieldBlockChance();if(my.job==="Wizard"){updateIcebolt();}
my.patch=patchVersion;if(GLB.hideMenu==="On"){D.getElementById('window5Id').style.opacity=0;}
if(location.protocol==='http:'){resetRepeatableQuests();maxBankSlots=1080;}else{keepSessionAlive();}
if(my.job==="Rogue"||my.job==="Monk"){mpType="TP";}else if(my.job==="Warrior"){mpType="Fury";}
setCurrentAct();initNG();setClassStyles();GLB.lastCharacter=characterslot;if(my.level===1&&my.exp===0){my.maxHp=g.maxHpFunct();my.hp=my.maxHp;}
if(GLB.tooltipMode!=="Long"){$("#tooltipmsg").css("display","none");}
$("#createWindowId, #characterSelectScreen, #currencyIndicator").remove();var rect=new C.Graphics();rect.beginFill('#f00').drawRect(0,0,1280,768).endFill();spellCurtain=new C.Shape(rect);spellCurtainStage.addChild(spellCurtain);spellCurtain.alpha=0;var df=P.Q[diff()].GreaterFaydark===0;if(df&&myZone()==="Edenburg"){g.view="Intro";D.getElementById('gameView').style.display='none';playMusic('Blackmoor Colossus');showIntro();}
flashTalentNotify();if(location.protocol==='http:'){loadWeaponSlashes();loadSkillImages();}
g.leechRatio=.24;g.wraithRatio=.16;if(g.difficulty===2){g.leechRatio=.12;g.wraithRatio=.08;}else if(g.difficulty===3){g.leechRatio=.04;g.wraithRatio=.025;}
$("#tooltipname, #ttItemName, .buttonsManage, .buttonsManageOff").css('display','block');$(".shadows").attr('src','//i.imgur.com/7bn79bN.png');loadMiscImages();if(location.pathname!=='/ng/'){window.onbeforeunload=function(){return"Are you sure you want to leave the game? Use /camp to save your game!";}}}
function flashTalentNotify(){if(talentsRemaining()>0){T.to('#talentNotify',.5,{startAt:{opacity:1},opacity:.5,ease:ez.lin,repeat:-1,yoyo:true});talentNotifyStatus=true;}}
function setCurrentAct(){var x=myZone();if(x==="Aspen Grove"||x==="Braxxen's Bastille"||x==="Kordata Marshlands"||x==="Arcturin's Crypt"){viewingAct=2;}else if(x==="Artremia"||x==="Fahlnir Citadel"||x==="Kordata Ruins"||x==="Temple of Prenssor"){viewingAct=3;}else if(x==="Fenwoven"||x==="Viston's Redoubt"||x==="Galeblast Fortress"||x==="Ashenflow Peak"||x==="Dire Sanctum"||x==="Nimgaul"){viewingAct=4;}}
$(function(){$("#window5Id").on('mouseenter',function(){T.to(D.getElementById('window5Id'),.2,{opacity:1});}).on('mouseleave',function(){if(GLB.hideMenu==="On"){T.to(D.getElementById('window5Id'),.2,{opacity:0});}});});function classColor(){if(location.protocol==="http:"){if(my.job!=="Shadow Knight"){return my.job;}else{return"ShadowKnight";}}else{if($("#myjob"+characterslot).text()!=="Shadow Knight"){return $("#myjob"+characterslot).text();}else{return"ShadowKnight";}}}
function parseItem(d,len,a){for(var i=0;i<len;i++){P[d][i].abjuration=a.shift()*1;P[d][i].absorbCold=a.shift()*1;P[d][i].absorbFire=a.shift()*1;P[d][i].absorbLightning=a.shift()*1;P[d][i].absorbMagic=a.shift()*1;P[d][i].absorbPoison=a.shift()*1;P[d][i].agi=a.shift()*1;P[d][i].allResist=a.shift()*1;P[d][i].allSkills=a.shift()*1;P[d][i].allStats=a.shift()*1;P[d][i].alteration=a.shift()*1;P[d][i].armor=a.shift()*1;P[d][i].attack=a.shift()*1;P[d][i].castingHaste=a.shift()*1;P[d][i].cha=a.shift()*1;P[d][i].channeling=a.shift()*1;P[d][i].cold=a.shift()*1;P[d][i].coldDamage=a.shift()*1;P[d][i].conjuration=a.shift()*1;P[d][i].critChance=a.shift()*1;P[d][i].critDamage=a.shift()*1;P[d][i].damage=a.shift()*1;P[d][i].defense=a.shift()*1;P[d][i].delay=a.shift()*1;P[d][i].dex=a.shift()*1;P[d][i].dodge=a.shift()*1;P[d][i].doubleAttack=a.shift()*1;P[d][i].dualWield=a.shift()*1;P[d][i].enhanceAll=a.shift()*1;P[d][i].enhanceCold=a.shift()*1;P[d][i].enhanceFire=a.shift()*1;P[d][i].enhanceLightning=a.shift()*1;P[d][i].enhanceMagic=a.shift()*1;P[d][i].enhancePhysical=a.shift()*1;P[d][i].enhancePoison=a.shift()*1;P[d][i].enhancedArmor=a.shift()*1;P[d][i].enhancedDamage=a.shift()*1;P[d][i].evocation=a.shift()*1;P[d][i].expFind=a.shift()*1;P[d][i].fear=a.shift()*1;P[d][i].fireDamage=a.shift()*1;P[d][i].flavorText=a.shift();P[d][i].globalHaste=a.shift()*1;P[d][i].goldFind=a.shift()*1;P[d][i].handtohand=a.shift()*1;P[d][i].haste=a.shift()*1;P[d][i].hp=a.shift()*1;P[d][i].hpKill=a.shift()*1;P[d][i].hpRegen=a.shift()*1;P[d][i].ias=a.shift()*1;P[d][i].intel=a.shift()*1;P[d][i].itemSlot=a.shift();P[d][i].leech=a.shift()*1;P[d][i].lightRadius=a.shift()*1;P[d][i].lightningDamage=a.shift()*1;P[d][i].magMit=a.shift()*1;P[d][i].magicDamage=a.shift()*1;P[d][i].mp=a.shift()*1;P[d][i].mpKill=a.shift()*1;P[d][i].mpRegen=a.shift()*1;P[d][i].name=a.shift();P[d][i].offense=a.shift()*1;P[d][i].oneHandBlunt=a.shift()*1;P[d][i].oneHandSlash=a.shift()*1;P[d][i].parry=a.shift()*1;P[d][i].phyMit=a.shift()*1;P[d][i].physicalDamage=a.shift()*1;P[d][i].piercing=a.shift()*1;P[d][i].poisonDamage=a.shift()*1;P[d][i].proc=a.shift();P[d][i].quality=a.shift()*1;P[d][i].rarity=a.shift()*1;P[d][i].req=a.shift()*1;P[d][i].resistCold=a.shift()*1;P[d][i].resistFire=a.shift()*1;P[d][i].resistLightning=a.shift()*1;P[d][i].resistMagic=a.shift()*1;P[d][i].resistPoison=a.shift()*1;P[d][i].riposte=a.shift()*1;P[d][i].runSpeed=a.shift()*1;P[d][i].silence=a.shift()*1;P[d][i].sta=a.shift()*1;P[d][i].str=a.shift()*1;P[d][i].stun=a.shift()*1;P[d][i].thorns=a.shift()*1;P[d][i].twoHandBlunt=a.shift()*1;P[d][i].twoHandSlash=a.shift()*1;P[d][i].type=a.shift();P[d][i].upgrade=a.shift()*1;P[d][i].weight=a.shift()*1;P[d][i].wis=a.shift()*1;P[d][i].wraith=a.shift()*1;P[d][i].xPos=a.shift()*1;P[d][i].yPos=a.shift()*1;}}
$(".chatLogs").on('mousedown',function(){chatVerticalDrag=true;}).on('mouseup',function(){chatVerticalDrag=false;});function reloadPage(d){if(d===undefined){d=5000;}
setTimeout(function(){window.onbeforeunload=null;location.reload();},d);}
$(function(){$("#characterSelectScreen").on('click','#enterworld',function(){if(location.protocol==="http:"){if(my.hardcoreMode==="true"){if(my.deaths>0){QMsg(my.name+" has been slain.");}else{enterWorld();}}else{enterWorld();}}else{var name=$("#characterslot"+characterslot).children().first().text();if(!name){return;}
$('#characterSelectScreen').remove();QMsg("Loading data: "+name+"");$.ajax({url:'php/loadData1.php',data:{run:"loadItem",name:name}}).done(function(data){if(data=='false'){QMsg("Your previous character has not timed out yet.",0,0,15000);QMsg("Use Camp when you're done playing your character.",0,0,15000);}else if(data==''){return;}else{var a=data.split("|");a.pop();var loops=a.length / 94;parseItem('item',loops,a);srv.item=true;$.ajax({url:'php/loadData1.php',data:{run:"loadMy",name:name,ng:'false'}}).done(function(data){if(data=="Your session has expired."){Error(data);reloadPage();return;}
if(data=='down'){Error("The server is down for maintenance. Please try again later.");reloadPage();return;}
if(data=="DEAD"){Error("This character was slain and cannot be revived.");Error("Rest in peace, "+name+".");reloadPage();return;}
if(data=="Account has been suspended."){Error(data);reloadPage();return;}
if(data=="Account has been banned."){Error(data);reloadPage();return;}
var a=data.split("|");a.pop();my.name=a.shift();my.abjuration=a.shift()*1;my.agi=a.shift()*1;my.alteration=a.shift()*1;my.cha=a.shift()*1;my.championsSlain=a.shift()*1;my.channeling=a.shift()*1;my.conjuration=a.shift()*1;my.deaths=a.shift()*1;my.defense=a.shift()*1;my.dex=a.shift()*1;my.difficulty=a.shift()*1;my.dodge=a.shift()*1;my.doubleAttack=a.shift()*1;my.dualWield=a.shift()*1;my.epicQuests=a.shift()*1;my.escapes=a.shift()*1;my.evocation=a.shift()*1;my.exp=a.shift()*1;my.gender=a.shift();my.gold=a.shift()*1;my.handtohand=a.shift()*1;my.hardcoreMode=a.shift();my.hp=a.shift()*1;my.intel=a.shift()*1;my.job=a.shift();my.lastName=a.shift();my.level=a.shift()*1;my.magicFound=a.shift()*1;my.maxHp=a.shift()*1;my.maxMp=a.shift()*1;my.mobsSlain=a.shift()*1;my.mp=a.shift()*1;my.offense=a.shift()*1;my.oneHandBlunt=a.shift()*1;my.oneHandSlash=a.shift()*1;my.parry=a.shift()*1;my.patch=a.shift();my.piercing=a.shift()*1;my.playtime=a.shift()*1;my.quests=a.shift()*1;my.race=a.shift();my.raresFound=a.shift()*1;my.riposte=a.shift()*1;my.setFound=a.shift()*1;my.sta=a.shift()*1;my.story=a.shift();my.str=a.shift()*1;my.subzone=a.shift()*1;my.subzoneN=a.shift()*1;my.subzoneH=a.shift()*1;my.svcold=a.shift()*1;my.svfire=a.shift()*1;my.svlightning=a.shift()*1;my.svmagic=a.shift()*1;my.svpoison=a.shift()*1;my.talent1=a.shift()*1;my.talent2=a.shift()*1;my.talent3=a.shift()*1;my.talent4=a.shift()*1;my.talent5=a.shift()*1;my.talent6=a.shift()*1;my.talent7=a.shift()*1;my.talent8=a.shift()*1;my.talent9=a.shift()*1;my.talent10=a.shift()*1;my.talent11=a.shift()*1;my.talent12=a.shift()*1;my.title=a.shift();my.totalGold=a.shift()*1;my.twoHandBlunt=a.shift()*1;my.twoHandSlash=a.shift()*1;my.uniquesFound=a.shift()*1;my.upgrades=a.shift()*1;my.wis=a.shift()*1;my.zone=a.shift();my.zoneH=a.shift();my.zoneN=a.shift();my.comboOverall=a.shift()*1;my.comboMistmoore=a.shift()*1;my.comboLowerGuk=a.shift()*1;my.comboCazicThule=a.shift()*1;my.comboKedgeKeep=a.shift()*1;my.comboPermafrost=a.shift()*1;my.comboSolB=a.shift()*1;my.comboPlaneofHate=a.shift()*1;my.comboPlaneofFear=a.shift()*1;my.raresSlain=a.shift()*1;my.views=a.shift()*1;my.difficulty=srv.difficulty;save.my('local');srv.my=true;checkEnterWorld();loadSkillImages();}).fail(function(){QMsg("Server Error! Failed to load character values.");});$.ajax({url:'php/loadData1.php',data:{run:"loadEq",name:name}}).done(function(data){var a=data.split("|");a.pop();var loops=a.length / 94;parseItem('eq',loops,a);srv.eq=true;checkEnterWorld();loadWeaponSlashes();}).fail(function(){QMsg("Server Error! Failed to load equipment values.");});$.ajax({url:'php/loadData1.php',data:{run:"loadQ",diff:(my.difficulty-1),name:name}}).done(function(data){var a=data.split("|");a.pop();P.Q=[];if(a.length<420){QMsg("Server Error! Failed to load quest values.");reloadPage();return;}
for(var i=0;i<=2;i++){P.Q[i]={};P.Q[i].BB1=a.shift()*1;P.Q[i].BB2=a.shift()*1;P.Q[i].BB3=a.shift()*1;P.Q[i].BB4=a.shift()*1;P.Q[i].Befallen=a.shift()*1;P.Q[i].BF1=a.shift()*1;P.Q[i].BF2=a.shift()*1;P.Q[i].BF3=a.shift()*1;P.Q[i].BF4=a.shift()*1;P.Q[i].Blackburrow=a.shift()*1;P.Q[i].CastleMistmoore=a.shift()*1;P.Q[i].CazicThule=a.shift()*1;P.Q[i].CB1=a.shift()*1;P.Q[i].CB2=a.shift()*1;P.Q[i].CB3=a.shift()*1;P.Q[i].CB4=a.shift()*1;P.Q[i].CB5=a.shift()*1;P.Q[i].CM1=a.shift()*1;P.Q[i].CM2=a.shift()*1;P.Q[i].CM3=a.shift()*1;P.Q[i].CM4=a.shift()*1;P.Q[i].CM5=a.shift()*1;P.Q[i].CM6=a.shift()*1;P.Q[i].Crushbone=a.shift()*1;P.Q[i].CT1=a.shift()*1;P.Q[i].CT2=a.shift()*1;P.Q[i].CT3=a.shift()*1;P.Q[i].CT4=a.shift()*1;P.Q[i].CT5=a.shift()*1;P.Q[i].ER1=a.shift()*1;P.Q[i].ER2=a.shift()*1;P.Q[i].ER3=a.shift()*1;P.Q[i].ER4=a.shift()*1;P.Q[i].ER5=a.shift()*1;P.Q[i].EstateofUnrest=a.shift()*1;P.Q[i].GF1=a.shift()*1;P.Q[i].GreaterFaydark=a.shift()*1;P.Q[i].KedgeKeep=a.shift()*1;P.Q[i].KK1=a.shift()*1;P.Q[i].KK2=a.shift()*1;P.Q[i].KK3=a.shift()*1;P.Q[i].KK4=a.shift()*1;P.Q[i].KK5=a.shift()*1;P.Q[i].KK6=a.shift()*1;P.Q[i].KK7=a.shift()*1;P.Q[i].KK8=a.shift()*1;P.Q[i].LesserFaydark=a.shift()*1;P.Q[i].LF1=a.shift()*1;P.Q[i].LF2=a.shift()*1;P.Q[i].LG1=a.shift()*1;P.Q[i].LG2=a.shift()*1;P.Q[i].LG3=a.shift()*1;P.Q[i].LG4=a.shift()*1;P.Q[i].LG5=a.shift()*1;P.Q[i].LG6=a.shift()*1;P.Q[i].LowerGuk=a.shift()*1;P.Q[i].NagafensLair=a.shift()*1;P.Q[i].Najena=a.shift()*1;P.Q[i].NJ1=a.shift()*1;P.Q[i].NJ2=a.shift()*1;P.Q[i].NJ3=a.shift()*1;P.Q[i].NJ4=a.shift()*1;P.Q[i].NJ5=a.shift()*1;P.Q[i].NL1=a.shift()*1;P.Q[i].NL2=a.shift()*1;P.Q[i].NL3=a.shift()*1;P.Q[i].NL4=a.shift()*1;P.Q[i].NL5=a.shift()*1;P.Q[i].NL6=a.shift()*1;P.Q[i].NL7=a.shift()*1;P.Q[i].NL8=a.shift()*1;P.Q[i].NL9=a.shift()*1;P.Q[i].NL10=a.shift()*1;P.Q[i].NL11=a.shift()*1;P.Q[i].NL12=a.shift()*1;P.Q[i].NorthRo=a.shift()*1;P.Q[i].NR1=a.shift()*1;P.Q[i].NR2=a.shift()*1;P.Q[i].PermafrostKeep=a.shift()*1;P.Q[i].PF1=a.shift()*1;P.Q[i].PF2=a.shift()*1;P.Q[i].PF3=a.shift()*1;P.Q[i].PF4=a.shift()*1;P.Q[i].PF5=a.shift()*1;P.Q[i].PF6=a.shift()*1;P.Q[i].PF7=a.shift()*1;P.Q[i].PF8=a.shift()*1;P.Q[i].PF9=a.shift()*1;P.Q[i].PF10=a.shift()*1;P.Q[i].PF11=a.shift()*1;P.Q[i].PF12=a.shift()*1;P.Q[i].PF13=a.shift()*1;P.Q[i].PF14=a.shift()*1;P.Q[i].PF15=a.shift()*1;P.Q[i].PF16=a.shift()*1;P.Q[i].PF17=a.shift()*1;P.Q[i].PF18=a.shift()*1;P.Q[i].PF19=a.shift()*1;P.Q[i].PF20=a.shift()*1;P.Q[i].PF21=a.shift()*1;P.Q[i].PF22=a.shift()*1;P.Q[i].PH1=a.shift()*1;P.Q[i].PH2=a.shift()*1;P.Q[i].PH3=a.shift()*1;P.Q[i].PH4=a.shift()*1;P.Q[i].PH5=a.shift()*1;P.Q[i].PH6=a.shift()*1;P.Q[i].PH7=a.shift()*1;P.Q[i].PH8=a.shift()*1;P.Q[i].PH9=a.shift()*1;P.Q[i].PH10=a.shift()*1;P.Q[i].PH11=a.shift()*1;P.Q[i].PH12=a.shift()*1;P.Q[i].PH13=a.shift()*1;P.Q[i].PK1=a.shift()*1;P.Q[i].PK2=a.shift()*1;P.Q[i].PK3=a.shift()*1;P.Q[i].PK4=a.shift()*1;P.Q[i].PK5=a.shift()*1;P.Q[i].PK6=a.shift()*1;P.Q[i].PK7=a.shift()*1;P.Q[i].PK8=a.shift()*1;P.Q[i].PK9=a.shift()*1;P.Q[i].PlaneofFear=a.shift()*1;P.Q[i].PlaneofHate=a.shift()*1;function convert(foo){if(foo){return true;}else{return false;}}
P.Q[i].repeatCB=convert(a.shift()*1);P.Q[i].repeatCm3=convert(a.shift()*1);P.Q[i].repeatCt3=convert(a.shift()*1);P.Q[i].repeatER=convert(a.shift()*1);P.Q[i].repeatKk3=convert(a.shift()*1);P.Q[i].repeatKk4=convert(a.shift()*1);P.Q[i].repeatLg3=convert(a.shift()*1);P.Q[i].repeatNl3=convert(a.shift()*1);P.Q[i].repeatNl4=convert(a.shift()*1);P.Q[i].repeatPk4=convert(a.shift()*1);P.Q[i].UG1=a.shift()*1;P.Q[i].UG2=a.shift()*1;P.Q[i].UG3=a.shift()*1;P.Q[i].UG4=a.shift()*1;P.Q[i].UpperGuk=a.shift()*1;}
g.difficulty=srv.difficulty;srv.q=true;resetRepeatableQuests();checkEnterWorld();}).fail(function(){QMsg("Server Error! Failed to load quest values.");reloadPage();});}}).fail(function(){QMsg("Server Error! Failed to load item values.");});function checkEnterWorld(){if(srv.my===true&&srv.item===true&&srv.eq===true&&srv.q===true){enterWorld();}}}}).on('click','#createcharacter',function(){showChar();}).on('mousedown','#characterslot1',function(){loadCharacterSlot(1);}).on('mousedown','#characterslot2',function(){loadCharacterSlot(2);}).on('mousedown','#characterslot3',function(){loadCharacterSlot(3);}).on('mousedown','#characterslot4',function(){loadCharacterSlot(4);}).on('mousedown','#characterslot5',function(){loadCharacterSlot(5);}).on('mousedown','#characterslot6',function(){loadCharacterSlot(6);}).on('mousedown','#characterslot7',function(){loadCharacterSlot(7);}).on('mousedown','#characterslot8',function(){loadCharacterSlot(8);}).on('mousedown','#characterslot9',function(){loadCharacterSlot(9);}).on('mousedown','#characterslot10',function(){loadCharacterSlot(10);}).on('mousedown','#characterslot11',function(){loadCharacterSlot(11);}).on('mousedown','#characterslot12',function(){loadCharacterSlot(12);}).on('mousedown','#characterslot13',function(){loadCharacterSlot(13);}).on('mousedown','#characterslot14',function(){loadCharacterSlot(14);}).on('mousedown','#characterslot15',function(){loadCharacterSlot(15);}).on('mousedown','#characterslot16',function(){loadCharacterSlot(16);}).on('click','#deletecharacter',function(){delChar();}).on('click','#deleteConfirm',function(){deleteCharSlot();}).on('click','#deleteCancel',function(){cancelCharDelete();}).on('click','#deletecharfade',function(){cancelCharDelete();});$("#createWindowId").on('click','#createbuttonId',function(){if(location.protocol==="http:"){createChar();}else{var name=$("#charnameinput").val().replace(/[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]/g,'');my.name=name.charAt(0).toUpperCase()+name.slice(1);if(my.name===''){$("#charnameinput").focus();$('#creationInfo').html("Enter your character's name!");return;}
if(my.name.length<2){$("#charnameinput").focus();$('#creationInfo').html("Your name must be at least two characters long!");return;}
if(buttonLock===false){g.lockScreen();QMsg("Contacting server...");$.ajax({data:{run:"addCharacterSlot"}}).done(function(data){if(data=='maxed'){QMsg("You cannot have more than 16 character slots per account.");}else if(data=='buyCrystals'){QMsg("Please purchase Never Crystals to unlock additional character slots.");}else if(data=='pay150'){playAudio("buyitem");QMsg("Character slot purchased for 150 Never Crystals.");var oldCrystals=$("#crystalCount").text()*1;$("#crystalCount").text(oldCrystals-150);createChar();}else if(data=='create'){createChar();}
g.unlockScreen();}).fail(function(){failToCommunicate();});}}}).on('click','#cancelbuttonId',function(){hideChar();}).on('click','#humanId',function(){humanInfo();}).on('click','#eruditeId',function(){eruditeInfo();}).on('click','#barbarianId',function(){barbarianInfo();}).on('click','#highelfId',function(){highelfInfo();}).on('click','#woodelfId',function(){woodelfInfo();}).on('click','#darkelfId',function(){darkelfInfo();}).on('click','#halfelfId',function(){halfelfInfo();}).on('click','#dwarfId',function(){dwarfInfo();}).on('click','#gnomeId',function(){gnomeInfo();}).on('click','#halflingId',function(){halflingInfo();}).on('click','#trollId',function(){trollInfo();}).on('click','#ogreId',function(){ogreInfo();}).on('click','#warriorId',function(){warriorInfo();}).on('click','#monkId',function(){monkInfo();}).on('click','#rogueId',function(){rogueInfo();}).on('click','#paladinId',function(){paladinInfo();}).on('click','#rangerId',function(){rangerInfo();}).on('click','#skId',function(){skInfo();}).on('click','#bardId',function(){bardInfo();}).on('click','#clericId',function(){clericInfo();}).on('click','#druidId',function(){druidInfo();}).on('click','#shamanId',function(){shamanInfo();}).on('click','#necromancerId',function(){necromancerInfo();}).on('click','#enchanterId',function(){enchanterInfo();}).on('click','#magicianId',function(){magicianInfo();}).on('click','#wizardId',function(){wizardInfo();}).on('click','#maleId',function(){maleInfo();}).on('click','#femaleId',function(){femaleInfo();}).on('click','#normalId',function(){setNormalMode();}).on('click','#hardcoreId',function(){$("#normalId").removeClass("ccActive ccDisabled").addClass("ccDisabled");$("#hardcoreId").removeClass("ccActive ccDisabled").addClass("ccActive");my.hardcoreMode=true;Error("WARNING: Hardcore death is permanent!");});$("#cityWrap").on('click','#bankId',function(){bankToggle();}).on('click','#talentsId',function(){$("#upgradeOK").text("Ok");$("#upgradeCANCEL").text("Cancel");cityMenuClick();upgradeMode=false;resetTalentPrompt=true;upgradePrompt=false;upgradePhysical=true;$("#upgradeConfirm").css("left",350);cost=M.ceil(M.pow(my.level,1.6));$("#upgradePrompt").html("Reset all talents?");var s1="<div class='cityCostAmount goldIcon'>"+cost+"</div>";$("#upgradeConfirm2").html(s1);});$("#charsheetId").on('click',function(){charToggle();});$("#inventoryId").on('click',function(){inventory();});$("#travelId").on('click',function(){travelToggle();});$("#optionsId").on('click',function(){optionsToggle();});$("#questId").on('click',function(){questToggle();});$("#campId").on('click',function(){camp();});});function setNormalMode(){$("#hardcoreId").removeClass("ccActive ccDisabled").addClass("ccDisabled");$("#normalId").removeClass("ccActive ccDisabled").addClass("ccActive");my.hardcoreMode=false;}
function checkZoneExists(){var x=myZone();if(x==="Plane of Hate"||x==="Plane of Strife"||x==="Howling Thicket"||x==="Glenmont Grove"||x==="Dagnor's Cauldron"||x==="Beholder's Maze"||x==="East Karana"||x==="Highpass Hold"||x==="Lake Rathetear"||x==="Lavastorm Mountains"||x==="North Karana"||x==="Ocean of Tears"||x==="Oasis of Marr"||x==="Rathe Mountains"||x==="South Karana"||x==="West Karana"||x==="Erud's Crossing"||x==="Kithicor Forest"||x==="South Ro"||x==="Clan Runnyeye"||x==="Solusek's Eye"||x==="Splitpaw Lair"||x==="Butcherblock Mountains"||x==="Everfrost Peaks"||x==="Steamfont Mountains"||x==="Qeynos Hills"||x==="Misty Thicket"||x==="East Commonlands"||x==="Nektulos Forest"||x==="Innothule Swamp"||x==="The Feerrott"||x==="Toxxulia Forest"||x==="Erudin"||x==="Oggok"||x==="Grobb"||x==="Kelethin"||x==="Kaladim"||x==="Ak'Anon"||x==="Neriak"||x==="Qeynos"||x==="Felwithe"||x==="Halas"||x==="Surefall Glade"||x==="Castle Mistmoore"||x==="Crushbone"||x==="Estate of Unrest"||x==="Greater Faydark"||x==="Kedge Keep"||x==="Lesser Faydark"||x==="Befallen"||x==="Blackburrow"||x==="Cazic-Thule"||x==="Upper Guk"||x==="Lower Guk"||x==="Nagafen's Lair"||x==="Najena"||x==="North Ro"||x==="Kordata Tunnels"||x==="Kordata Frontier"||x==="Ripongen Stronghold"||x==="Ripongen Redoubt"||x==="Viston Redoubt"||x==="Permafrost Keep"||x==="Plane of Fear"||x==="Kordata Stronghold"||x==="Plane of Corruption"||x==="Plane of Chaos"){if(my.difficulty===1){my.zone="Edenburg";my.subzone=0;}else if(my.difficulty===2){my.zoneN="Edenburg";my.subzoneN=0;}else{my.zoneH="Edenburg";my.subzoneH=0;}}}
function loadCharacterSlot(Slot){if($("#characterslot"+Slot).hasClass("disabled")===true){return;}
characterslot=Slot;if(localStorage.getItem("Lmy"+(lsKey+characterslot))===null){initLMY();}else{var kek=localStorage.getItem("Lmy"+(lsKey+characterslot));Lmy=JSON.parse(kek);}
if(location.protocol==="http:"){if(localStorage.getItem("my"+(lsKey+Slot))===null){}else{var foo=localStorage.getItem("my"+(lsKey+Slot));my=JSON.parse(foo);if(location.protocol==='http:'){var qux=localStorage.getItem("eq"+(lsKey+Slot));P.eq=JSON.parse(qux);}}
if(localStorage.getItem("inv"+(lsKey+Slot+10))===null){initializeInventory();}else{var bar=localStorage.getItem("inv"+(lsKey+Slot+10));P.item=JSON.parse(bar);}
if(localStorage.getItem("Q"+(lsKey+Slot))===null){initQ();}else{var bar=localStorage.getItem("Q"+(lsKey+Slot));P.Q=JSON.parse(bar);}}
for(var i=1;i<=16;i++){D.getElementById('characterslot'+i).className="characterDisabled";}
if(location.protocol==="http:"){D.getElementById("characterSelectScreen").style.display='block';}
$('#characterslot'+Slot).removeClass().addClass("characterActive "+classColor());setZoneDifficultyIndicators(true);}
function setZoneDifficultyIndicators(reset){if(mySubzone()===0){checkZoneExists();D.getElementById("zoneIndicator").textContent=myZone();}
if(reset){my.difficulty=1;srv.difficulty=1;}
updateZoneIndicator();$("#normalLabel, #nightmareLabel, #hellLabel").css({color:"#888",display:'none'});function setDiffColor(x){if(x===1){$('#normalLabel').css('color','#fff');}else if(x===2){$('#nightmareLabel').css('color','#fff');}else{$('#hellLabel').css('color','#fff');}}
if(location.protocol==="http:"){if(location.pathname==='/ng/'){if(P.Q[1].PlaneofFear>1){$("#normalLabel, #nightmareLabel,#hellLabel").css({display:'inline-block'});}else if(P.Q[0].PlaneofFear>1){$("#normalLabel, #nightmareLabel").css({display:'inline-block'});}}
setDiffColor(my.difficulty);}else{var hardcoreMode=$("#characterslot"+characterslot).data('hardcoreMode');if($("#characterslot"+characterslot).data('hell')>=2){$("#normalLabel, #nightmareLabel, #hellLabel").css('display','inline-block');}else if($("#characterslot"+characterslot).data('nightmare')>=2){$("#normalLabel, #nightmareLabel").css('display','inline-block');}
setDiffColor(srv.difficulty);}
if(hardcoreMode==="true"){D.getElementById("enterworld").className="strongShadow NGhardcore";}else{D.getElementById("enterworld").className="strongShadow NGgradient";}}
function updateZoneIndicator(){if(location.protocol==="http:"){checkZoneExists();var x=mySubzone();if(x===0){D.getElementById("zoneIndicator").innerHTML=myZone();}else{D.getElementById("zoneIndicator").innerHTML=myZone()+" "+x;}}else{var x=mySubzone();if(x===0){$("#zoneIndicator").html(myZone());}else{$("#zoneIndicator").html(myZone()+" "+x);}}}
$(document).ready(function(){$("#normalLabel").on('click',function(){my.difficulty=1;if(location.protocol==='https:'){srv.difficulty=1;}
setZoneDifficultyIndicators();});$("#nightmareLabel").on('click',function(){my.difficulty=2;if(location.protocol==='https:'){srv.difficulty=2;}
setZoneDifficultyIndicators();});$("#hellLabel").on('click',function(){my.difficulty=3;if(location.protocol==='https:'){srv.difficulty=3;}
setZoneDifficultyIndicators();});});function setClassStyles(){$NG.addmonsterId.css("background-image","url('images1/sprite"+my.job+"3.png')").css({backgroundPosition:"0 0"});$("#toggleattackId").css("background-image","url('images1/sprite"+my.job+"3.png')").css({backgroundPosition:"-100% 0"});$("#addmonsterId").css("background-image","url('images1/sprite"+my.job+"3.png')").css({backgroundPosition:"0 -200%"});$("#runId").css("background-image","url('images1/sprite"+my.job+"3.png')").css({backgroundPosition:"-100% -200%"});initTalentStyles();$NG.equipmentBG.css("background","url('//"+itemSprite+"')").css({backgroundPosition:"0 0"});}
function initTalentStyles(){var id=['warriorkickId','slamId','avengingstrikeId','hemorrhageId','shockwaveId','pummelId','subjugateId','decisiveblowId','absorbspellId','frenziedrampageId','enrageId','furiousscornId','triageId','bulwarkId','intrepidmightId'];var skillx=[];for(var i=3;i<=17;i++){skillx.push(i+'00');}
var talx=['192','512','1024','448','256','384','704','1088','320','832','576','640'];if(my.job==="Monk"){id=['tigerstrikeId','eaglestrikeId','cheetahstrikeId','cobrastrikeId','dragonstrikeId','cranekickId','windmillkickId','ancestralflurryId','flyingkickId','chakrablastId','feigndeathId','mendId','stonefistsId','intimidationId','innerpeaceId'];talx=['256','960','1088','768','576','320','704','448','192','512','640','1024'];}
if(my.job==="Rogue"){id=['shadowstrikeId','sonicstrikeId','hyperstrikeId','widowstrikeId','miragestrikeId','lacerateId','backstabId','staggershotId','lobotomizeId','prowlinggashId','evadeId','coldbloodId','flashpowderId','illusivemistId','ancientwillId','roguehideId'];skillx.push('200');talx=['512','832','256','448','192','576','896','640','320','1024','384','768'];}
if(my.job==="Paladin"){id=['palslamId','rebukeId','purgeId','vengeanceId','layhandsId','greaterhealingId','holymightId','palrootId','ardentjudgment','yaulpId','cleanseId','flashoflightId','valorId','spiritarmorId','divineprovidenceId','symbolofryltanId'];skillx.push('200');talx=['192','448','512','960','256','384','704','1088','320','576','768','896'];}
if(my.job==="Shadow Knight"){id=['shdslamId','crescentcleaveId','deathstrikeId','gaspingfrenzyId','harmtouchId','shdlifetapId','doomingdarknessId','heatbloodId','strengthendeadId','shdfearId','siphonstrengthId','shdfeigndeathId','shadowvortexId','summondeadId','vampiricembraceId','resistcoldId'];skillx.push('200');talx=['256','320','128','960','192','512','448','576','384','1024','768','640'];}
if(my.job==="Ranger"){id=['rangerkickId','rapidshotId','countershotId','trueshotarrowId','volleyshotId','lighthealingId','faerieflameId','igniteId','snareId','wardersrift','weaponshieldId','thistlecoatId','feetlikecatId','shieldofbramblesId','rangersowId','rangertrackId'];skillx.push('200');talx=['192','896','704','768','320','384','576','640','256','960','1088','448'];}
if(my.job==="Bard"){id=['chordsofdissonance','chantofbattle','accelerando','hymnofrestoration','songofthesirens','boastfulbellow','elementalrhythms','lucidlullaby','consonantchain','dissension','chorusofclarity','anthemdearms','euphonichymn','shieldofsongs','desperatedirge'];talx=['256','384','896','960','192','576','832','1088','448','512','704','1024'];}
if(my.job==="Druid"){id=['starfire','dronesofdoom','druhealing','tornado','engulfingroots','driftingdeath','lightningblast','earthquake','hurricane','sylvangrasp','volcano','skinlikenature','shieldofspikes','drusow','chloroplast'];talx=['256','320','448','896','384','640','704','768','192','512','576','832'];}
if(my.job==="Cleric"){id=['smite','soundofforce','superiorhealing','bindingearth','expelcorruption','searingrevelation','martyrsblessing','guardianangel','holywrath','markofjudgement','benediction','resolution','armoroffaith','divinesanctuary','symbolofnaltron'];talx=['192','896','384','704','256','576','960','640','448','512','768','832'];}
if(my.job==="Shaman"){id=['froststrike','scourge','shmhealing','togorsinsects','cannibalize','enstill','poisonnova','affliction','reclaimblood','glacialimpact','devouringplague','calloftheancients','guardianspirit','shmsow','talismanofaltuna'];talx=['192','384','512','768','256','576','640','832','896','960','1024','704'];}
if(my.job==="Necromancer"){id=['bonespirit','cascadingdarkness','invokefear','drainsoul','feigndeath','augmentdeath','igniteblood','corpseexplosion','bondofdeath','diamondskin','asystole','detonatesoul','howlingterror','invokedeath','archshielding'];talx=['384','576','704','960','1024','512','640','896','192','256','320','832'];}
if(my.job==="Enchanter"){id=['chaosflux','gaspingembrace','cajolingwhispers','colorshift','mesmerize','shiftlessdeeds','alacrity','gravityflux','mysticrune','tashania','enthrall','discordantbarrier','enchantweapon','adorninggrace','clarity'];talx=['192','384','896','704','320','512','960','576','256','448','640','768'];}
if(my.job==="Magician"){id=['lavabolt','firestorm','frozenorb','burnout','manashield','psionicstorm','reclaimelements','elementalfury','armageddon','stasisfield','alteredstate','shieldoflava','phantomplate','elementalarmor','earthelemental','airelemental','fireelemental','frostelemental'];skillx.push('1700');skillx.push('1700');skillx.push('1700');talx=['192','896','256','704','1088','384','576','640','960','320','1024','512'];}
if(my.job==="Wizard"){id=['icebolt','chargedbolts','frostnova','magicmissiles','fireball','deepfreeze','chainlightning','glacialspike','iceblock','icecomet','counterspell','harnessEther','meteor','mirrorimages','viziersshielding'];talx=['256','384','576','1024','192','512','640','768','1088','448','896','960'];}
var s="<style type='text/css'>";for(var i=0;i<id.length;i++){var skilly=0;var thisId=id[i];if(thisId==='countershotId'){skilly=-300;}
if(i===15){skilly=-100;}
if(i===16){skilly=-200;}
if(i===17){skilly=-300;}
s+="#"+id[i]+"{ background: url('images1/sprite"+my.job+"3.png') -"+skillx[i]+"% "+skilly+"%; }";}
if(my.job==="Bard"||my.job==="Druid"){s+="#rangertrackId{ background: url('images1/spriteTrack2.png') 0 0; }";}
if(my.job==="Rogue"&&my.race==="Halfling"){s+="#halflinghideId{ background: url('images1/spriteHalfling2.png') 0 0; }";}
for(var i=1;i<=12;i++){var taly=-192;if((i-1)%4===0){taly=0;}
if(my.job==="Magician"){if(i===5){taly=-128;}}
s+="#talent"+i+"{ background: url('images1/sprite"+my.job+"3.png') -"+talx[i-1]+"px "+taly+"px; }";}
s+="</style>";$("head").append(s);}
function checkUndefined(){if(my.hp<=0){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){my.mp=0;}}
if(my.mapX==0){delete my.mapX;delete my.mapY;}
if(my.job==="Shaman"&&my.piercing===0){my.piercing=1;}
if(Lmy.autoAttackOption===undefined){Lmy.autoAttackOption=my.autoAttackOption;}
if(Lmy.normalFilter===undefined){Lmy.normalFilter="None";}
if(Lmy.magicFilter===undefined){Lmy.magicFilter="None";}
if(Lmy.rareFilter===undefined){Lmy.rareFilter="None";}
if(Lmy.uniqueFilter===undefined){Lmy.uniqueFilter="None";}
if(Lmy.setFilter===undefined){Lmy.setFilter="None";}
if(my.comboOverall===undefined){my.comboOverall=0;}
if(my.zoneN===undefined){my.zoneN="Aspen Grove";}
if(my.zoneH===undefined){my.zoneH=my.zoneN;}
if(my.subzoneN===undefined){my.subzoneN=0;}
if(my.subzoneH===undefined){my.subzoneH=0;}
if(my.subzone===''){my.subzone=0;}
if(my.subzoneN===''){my.subzoneN=0;}
if(my.subzoneH===''){my.subzoneH=0;}
if(my.quests===undefined){my.quests=0;}
if(Lmy.C0===undefined){Lmy.C0=my.C0;}
if(Lmy.C1===undefined){Lmy.C1=my.C1;}
if(Lmy.C2===undefined){Lmy.C2=my.C2;}
if(Lmy.C3===undefined){Lmy.C3=my.C3;}
if(Lmy.C4===undefined){Lmy.C4=my.C4;}
if(Lmy.C5===undefined){Lmy.C5=my.C5;}
if(Lmy.C6===undefined){Lmy.C6=my.C6;}
if(Lmy.C7===undefined){Lmy.C7=my.C7;}
if(Lmy.C8===undefined){Lmy.C8=my.C8;}
if(Lmy.C9===undefined){Lmy.C9=my.C9;}
if(Lmy.C10===undefined){Lmy.C10=my.C10;}
if(Lmy.C11===undefined){Lmy.C11=my.C11;}
if(Lmy.C12===undefined){Lmy.C12=my.C12;}
if(Lmy.C13===undefined){Lmy.C13=my.C13;}
if(Lmy.C14===undefined){Lmy.C14=my.C14;}
if(Lmy.C15===undefined){Lmy.C15=my.C15;}
if(Lmy.C16===undefined){Lmy.C16=my.C16;}
if(Lmy.C17===undefined){Lmy.C17=my.C17;}
if(Lmy.C18===undefined){Lmy.C18=my.C18;}
if(Lmy.C19===undefined){Lmy.C19=my.C19;}
if(Lmy.C20===undefined){Lmy.C20=my.C20;}
if(Lmy.C21===undefined){Lmy.C21=my.C21;}
if(Lmy.C22===undefined){Lmy.C22=my.C22;}
if(Lmy.C23===undefined){Lmy.C23=my.C23;}
if(Lmy.window3X===undefined){Lmy.window3X=my.window3X;}
if(Lmy.window3Y===undefined){Lmy.window3Y=my.window3Y;}
if(Lmy.window6X===undefined){Lmy.window6X=my.window6X;}
if(Lmy.window6Y===undefined){Lmy.window6Y=my.window6Y;}
if(Lmy.window1X===undefined){Lmy.window1X=20;}
if(Lmy.window1Y===undefined){Lmy.window1Y=20;}
if(Lmy.questJournalX===undefined){Lmy.questJournalX=20;}
if(Lmy.questJournalY===undefined){Lmy.questJournalY=20;}
if(Lmy.inventoryWindowX===undefined){Lmy.inventoryWindowX=640;}
if(Lmy.inventoryWindowY===undefined){Lmy.inventoryWindowY=20;}
if(Lmy.bankX===undefined){Lmy.bankX=20;}
if(Lmy.bankY===undefined){Lmy.bankY=20;}
if(GLB.soundStatus===undefined){GLB.soundStatus=my.soundStatus;}
if(GLB.musicStatus===undefined){GLB.musicStatus=my.musicStatus;}
if(GLB.tooltipMode===undefined){GLB.tooltipMode=my.monsterAvoidance;}
if(GLB.videoSetting===undefined){GLB.videoSetting="High";}
if(GLB.hideMenu===undefined){GLB.hideMenu="Off";}
if(GLB.chatMyHit===undefined){GLB.chatMyHit="Off";}
if(GLB.showCombatLog===undefined){GLB.showCombatLog="On";}
if(GLB.debugMode===undefined){GLB.debugMode="Off";}
if(GLB.fastDestroy===undefined){GLB.fastDestroy="On";}
if(GLB.gold===undefined){GLB.gold=0;}
if(GLB.lastCharacter===undefined){GLB.lastCharacter=1;}
if(my.mob0!==undefined){delete my.mob0;delete my.mob1;delete my.mob2;delete my.mob3;delete my.mob4;delete my.server;}
if(my.monsterAvoidance!==undefined){delete my.monsterAvoidance;}
if(my.weatherStatus!==undefined){delete my.weatherStatus;}
if(my.soundStatus!==undefined){delete my.soundStatus;}
if(my.musicStatus!==undefined){delete my.musicStatus;}
if(my.autoAttackOption!==undefined){delete my.autoAttackOption;}
if(my.randomEvents!==undefined){delete my.randomEvents;}
if(my.scriptedEvents!==undefined){delete my.scriptedEvents;}
if(my.NC0!==undefined){delete my.NC0;}
if(my.NC1!==undefined){delete my.NC1;}
if(my.NC2!==undefined){delete my.NC2;}
if(my.NC3!==undefined){delete my.NC3;}
if(my.NC4!==undefined){delete my.NC4;}
if(my.NC5!==undefined){delete my.NC5;}
if(my.NC6!==undefined){delete my.NC6;}
if(my.NC7!==undefined){delete my.NC7;}
if(my.NC8!==undefined){delete my.NC8;}
if(my.NC9!==undefined){delete my.NC9;}
if(my.C0!==undefined){delete my.C0;}
if(my.C1!==undefined){delete my.C1;}
if(my.C2!==undefined){delete my.C2;}
if(my.C3!==undefined){delete my.C3;}
if(my.C4!==undefined){delete my.C4;}
if(my.C5!==undefined){delete my.C5;}
if(my.C6!==undefined){delete my.C6;}
if(my.C7!==undefined){delete my.C7;}
if(my.C8!==undefined){delete my.C8;}
if(my.C9!==undefined){delete my.C9;}
if(my.C10!==undefined){delete my.C10;}
if(my.C11!==undefined){delete my.C11;}
if(my.C12!==undefined){delete my.C12;}
if(my.C13!==undefined){delete my.C13;}
if(my.C14!==undefined){delete my.C14;}
if(my.C15!==undefined){delete my.C15;delete my.C16;delete my.C17;delete my.C18;delete my.C19;delete my.C20;delete my.C21;delete my.C22;delete my.C23;}
if(my.Misc0!==undefined){delete my.Misc0;}
if(my.Misc1!==undefined){delete my.Misc1;}
if(my.Misc2!==undefined){delete my.Misc2;}
if(my.Misc3!==undefined){delete my.Misc3;}
if(my.Misc4!==undefined){delete my.Misc4;}
if(my.window3X!==undefined){delete my.window3X;}
if(my.window3Y!==undefined){delete my.window3Y;}
if(my.window6X!==undefined){delete my.window6X;}
if(my.window6Y!==undefined){delete my.window6Y;}
if(P.Q[0].ButcherblockMountains!==undefined){for(var i=0;i<=2;i++){delete P.Q[i].ButcherblockMountains;delete P.Q[i].DagnorsCauldron;delete P.Q[i].SteamfontMountains;delete P.Q[i].Beholders;delete P.Q[i].ClanRunnyeye;delete P.Q[i].EastCommonlands;delete P.Q[i].EastKarana;delete P.Q[i].EverfrostPeaks;delete P.Q[i].HighpassHold;delete P.Q[i].InnothuleSwamp;delete P.Q[i].KithicorForest;delete P.Q[i].LakeRathetear;delete P.Q[i].LavastormMountains;delete P.Q[i].MistyThicket;delete P.Q[i].NektulosForest;delete P.Q[i].NorthKarana;delete P.Q[i].OasisofMarr;delete P.Q[i].OceanofTears;delete P.Q[i].QeynosHills;delete P.Q[i].RatheMountains;delete P.Q[i].SouthKarana;delete P.Q[i].SouthRo;delete P.Q[i].SoluseksEye;delete P.Q[i].SplitpawLair;delete P.Q[i].TheFeerrott;delete P.Q[i].WestCommonlands;delete P.Q[i].WestKarana;delete P.Q[i].ErudsCrossing;delete P.Q[i].ToxxuliaForest;delete P.Q[i].repeatSl3;delete P.Q[i].repeatSe3;delete P.Q[i].BBM1;delete P.Q[i].DC1;delete P.Q[i].DC2;delete P.Q[i].SM1;delete P.Q[i].BM1;delete P.Q[i].BM2;delete P.Q[i].CR1;delete P.Q[i].CR2;delete P.Q[i].CR3;delete P.Q[i].CR4;delete P.Q[i].CR5;delete P.Q[i].EC1;delete P.Q[i].EK1;delete P.Q[i].EK2;delete P.Q[i].EK3;delete P.Q[i].EK4;delete P.Q[i].EP1;delete P.Q[i].HH1;delete P.Q[i].HH2;delete P.Q[i].HH3;delete P.Q[i].HH4;delete P.Q[i].IS1;delete P.Q[i].KF1;delete P.Q[i].KF2;delete P.Q[i].LR1;delete P.Q[i].LR2;delete P.Q[i].LR3;delete P.Q[i].LM1;delete P.Q[i].LM2;delete P.Q[i].LM3;delete P.Q[i].LM4;delete P.Q[i].MT1;delete P.Q[i].NF1;delete P.Q[i].NK1;delete P.Q[i].NK2;delete P.Q[i].NK3;delete P.Q[i].NK4;delete P.Q[i].OM1;delete P.Q[i].OM2;delete P.Q[i].OM3;delete P.Q[i].OM4;delete P.Q[i].OT1;delete P.Q[i].OT2;delete P.Q[i].OT3;delete P.Q[i].OT4;delete P.Q[i].QH1;delete P.Q[i].RM1;delete P.Q[i].RM2;delete P.Q[i].RM3;delete P.Q[i].RM4;delete P.Q[i].SK1;delete P.Q[i].SK2;delete P.Q[i].SK3;delete P.Q[i].SK4;delete P.Q[i].SK5;delete P.Q[i].SR1;delete P.Q[i].SR2;delete P.Q[i].SR3;delete P.Q[i].SE1;delete P.Q[i].SE2;delete P.Q[i].SE3;delete P.Q[i].SE4;delete P.Q[i].SE5;delete P.Q[i].SL1;delete P.Q[i].SL2;delete P.Q[i].SL3;delete P.Q[i].SL4;delete P.Q[i].SL5;delete P.Q[i].SL6;delete P.Q[i].TF1;delete P.Q[i].WC1;delete P.Q[i].WC2;delete P.Q[i].WC3;delete P.Q[i].WK1;delete P.Q[i].WK2;delete P.Q[i].WK3;delete P.Q[i].ECX1;delete P.Q[i].ECX2;delete P.Q[i].ECX3;delete P.Q[i].TXF1;}}
if(GLB.autoHide!==undefined){delete GLB.autoHide;}
if(!my.hardcoreMode){my.hardcoreMode=false;}
if(my.hardcoreMode===true){my.hardcoreMode="true";}
if(my.hardcoreMode===false){my.hardcoreMode="false";}
if(my.setFound===undefined){my.setFound=0;}
if(my.story===undefined){my.story="Intro";}
if(my.patch===undefined){my.patch=patchVersion;}
if(my.talent1===undefined){my.talent1=0;}
if(my.talent2===undefined){my.talent2=0;}
if(my.talent3===undefined){my.talent3=0;}
if(my.talent4===undefined){my.talent4=0;}
if(my.talent5===undefined){my.talent5=0;}
if(my.talent6===undefined){my.talent6=0;}
if(my.talent7===undefined){my.talent7=0;}
if(my.talent8===undefined){my.talent8=0;}
if(my.talent9===undefined){my.talent9=0;}
if(my.talent10===undefined){my.talent10=0;}
if(my.talent11===undefined){my.talent11=0;}
if(my.talent12===undefined){my.talent12=0;}
if(my.lastName===undefined){my.lastName="";}
if(my.comboPlaneofFear===undefined){my.comboPlaneofFear=0;}
if(my.comboPlaneofHate===undefined){my.comboPlaneofHate=0;}
if(P.Q[0].repeatCB===undefined){for(var i=0;i<=2;i++){P.Q[i].repeatCB=false;P.Q[i].repeatER=false;}}
if(P.Q[0].PlaneofFear===undefined){for(var i=0;i<=2;i++){P.Q[i].PlaneofFear=0;P.Q[i].PlaneofHate=0;}}
if(P.Q[0].repeatCm3===undefined){for(var i=0;i<=2;i++){P.Q[i].repeatCm3=false;P.Q[i].repeatCt3=false;P.Q[i].repeatKk3=false;P.Q[i].repeatNl3=false;P.Q[i].repeatLg3=false;P.Q[i].repeatKk4=false;P.Q[i].repeatNl4=false;P.Q[i].KK6=0;P.Q[i].KK7=0;P.Q[i].KK8=0;P.Q[i].NL7=0;P.Q[i].NL8=0;P.Q[i].NL9=0;P.Q[i].NL10=0;P.Q[i].NL11=0;P.Q[i].NL12=0;}}
if(P.Q[0].KK6===undefined){for(var i=0;i<=2;i++){P.Q[i].KK6=0;P.Q[i].KK7=0;P.Q[i].KK8=0;}}
if(P.Q[0].CM1===undefined){for(var i=0;i<=2;i++){P.Q[i].CM1=0;P.Q[i].CM2=0;P.Q[i].CM3=0;P.Q[i].CM4=0;P.Q[i].CM5=0;P.Q[i].CM6=0;P.Q[i].CB1=0;P.Q[i].CB2=0;P.Q[i].CB3=0;P.Q[i].CB4=0;P.Q[i].CB5=0;P.Q[i].ER1=0;P.Q[i].ER2=0;P.Q[i].ER3=0;P.Q[i].ER4=0;P.Q[i].ER5=0;P.Q[i].GF1=0;P.Q[i].KK1=0;P.Q[i].KK2=0;P.Q[i].KK3=0;P.Q[i].KK4=0;P.Q[i].KK5=0;P.Q[i].LF1=0;P.Q[i].LF2=0;P.Q[i].BF1=0;P.Q[i].BF2=0;P.Q[i].BF3=0;P.Q[i].BF4=0;P.Q[i].BB1=0;P.Q[i].BB2=0;P.Q[i].BB3=0;P.Q[i].BB4=0;P.Q[i].CT1=0;P.Q[i].CT2=0;P.Q[i].CT3=0;P.Q[i].CT4=0;P.Q[i].CT5=0;P.Q[i].LG1=0;P.Q[i].LG2=0;P.Q[i].LG3=0;P.Q[i].LG4=0;P.Q[i].LG5=0;P.Q[i].LG6=0;P.Q[i].NL1=0;P.Q[i].NL2=0;P.Q[i].NL3=0;P.Q[i].NL4=0;P.Q[i].NL5=0;P.Q[i].NL6=0;P.Q[i].NJ1=0;P.Q[i].NJ2=0;P.Q[i].NJ3=0;P.Q[i].NJ4=0;P.Q[i].NJ5=0;P.Q[i].NR1=0;P.Q[i].NR2=0;P.Q[i].PF1=0;P.Q[i].PF2=0;P.Q[i].PF3=0;P.Q[i].PF4=0;P.Q[i].PF5=0;P.Q[i].PF6=0;P.Q[i].PF7=0;P.Q[i].PF8=0;P.Q[i].PF9=0;P.Q[i].PF10=0;P.Q[i].PF11=0;P.Q[i].PF12=0;P.Q[i].PF13=0;P.Q[i].PF14=0;P.Q[i].PF15=0;P.Q[i].PF16=0;P.Q[i].PF17=0;P.Q[i].PF18=0;P.Q[i].PF19=0;P.Q[i].PF20=0;P.Q[i].PF21=0;P.Q[i].PF22=0;P.Q[i].PH1=0;P.Q[i].PH2=0;P.Q[i].PH3=0;P.Q[i].PH4=0;P.Q[i].PH5=0;P.Q[i].PH6=0;P.Q[i].PH7=0;P.Q[i].PH8=0;P.Q[i].PH9=0;P.Q[i].PH10=0;P.Q[i].PH11=0;P.Q[i].PH12=0;P.Q[i].PH13=0;P.Q[i].PK1=0;P.Q[i].PK2=0;P.Q[i].PK3=0;P.Q[i].PK4=0;P.Q[i].PK5=0;P.Q[i].PK6=0;P.Q[i].PK7=0;P.Q[i].PK8=0;P.Q[i].PK9=0;P.Q[i].UG1=0;P.Q[i].UG2=0;P.Q[i].UG3=0;P.Q[i].UG4=0;}}
if(P.Q[0].repeatPk4===undefined){for(var i=0;i<=2;i++){P.Q[i].repeatPk4=true;}}
if(my.title===undefined){my.title="";}
if(my.difficulty===undefined){my.difficulty=1;}
if(my.ID===undefined){my.ID=0;}
for(var i=0;i<=125;i++){if(P.bank[i].cold===undefined){P.bank[i].cold=0;}
if(P.bank[i].silence===undefined){P.bank[i].silence=0;}
if(P.bank[i].leech===undefined){P.bank[i].leech=0;}
if(P.bank[i].wraith===undefined){P.bank[i].wraith=0;}
if(P.bank[i].req===undefined){P.bank[i].req=0;}
if(P.bank[i].enhanceAll===undefined||isNaN(P.bank[i].enhanceAll)){P.bank[i].enhanceAll=0;}
if(P.bank[i].quality===undefined){P.bank[i].quality=0;}
if(P.bank[i].lightRadius<0){P.bank[i].lightRadius=0;}}
for(var i=0;i<=23;i++){if(P.item[i].cold===undefined){P.item[i].cold=0;}
if(P.item[i].silence===undefined){P.item[i].silence=0;}
if(P.item[i].leech===undefined){P.item[i].leech=0;}
if(P.item[i].wraith===undefined){P.item[i].wraith=0;}
if(P.item[i].req===undefined){P.item[i].req=0;}
if(P.item[i].enhanceAll===undefined||isNaN(P.item[i].enhanceAll)){P.item[i].enhanceAll=0;}
if(P.item[i].quality===undefined){P.item[i].quality=0;}
if(P.item[i].lightRadius<0){P.item[i].lightRadius=0;}}
for(var i=0;i<=14;i++){if(P.eq[i].cold===undefined){P.eq[i].cold=0;}
if(P.eq[i].silence===undefined){P.eq[i].silence=0;}
if(P.eq[i].leech===undefined){P.eq[i].leech=0;}
if(P.eq[i].wraith===undefined){P.eq[i].wraith=0;}
if(P.eq[i].req===undefined){P.eq[i].req=0;}
if(P.eq[i].enhanceAll===undefined||isNaN(P.eq[i].enhanceAll)){P.eq[i].enhanceAll=0;}
if(P.eq[i].quality===undefined){P.eq[i].quality=0;}
if(P.eq[i].lightRadius<0){P.eq[i].lightRadius=0;}}
if(my.championsSlain===undefined){my.championsSlain=0;}
if(my.subzone===undefined){my.subzone=1;}
if(my.season!==undefined){delete my.season;}
var a=(my.patch+"").split("-");var m2=a[0]*1;var m=a[1]*1;var t=a[2]*1;if(m2<=0){if(m<=8){if(t<=67){resetTalents();talentResetNotify=true;}}}}
function itemSwapStart(){itemSwapCount++;}
function itemSwapDone(){itemSwapCount--;if(itemSwapCount<=0){itemSwapCount=0;finishItemSwap();}}
save.itemSwap=function(itemDragType,dragSlot,itemDropType,dropSlot){itemSwapStart();var item1=P[itemDragType][dragSlot];var item2=P[itemDropType][dropSlot];$.ajax({url:'php/itemSwap2.php',data:{item1:item1,item2:item2,itemDragType:itemDragType,dragSlot:dragSlot,itemDropType:itemDropType,dropSlot:dropSlot,name:my.name}}).done(function(data){itemSwapDone();}).fail(function(data){failToCommunicate();});}
save.item=function(Slot){if(location.protocol==="http:"){var item2=jQuery.extend(true,[],P.item);while(item2.length>24){item2.pop();}
localStorage.setItem('inv'+(lsKey+characterslot+10),JSON.stringify(item2));}else{itemSwapStart();$.ajax({url:'php/game1.php',data:{run:"updateItem",item:P.item[Slot],Slot:Slot,slotType:'item',name:my.name}}).done(function(data){itemSwapDone();}).fail(function(data){failToCommunicate();});}}
save.eq=function(Slot){if(location.protocol==="http:"){localStorage.setItem('eq'+(lsKey+characterslot),JSON.stringify(P.eq));}else{itemSwapStart();$.ajax({url:'php/game1.php',data:{run:"updateItem",item:P.eq[Slot],Slot:Slot,slotType:'eq',name:my.name}}).done(function(data){itemSwapDone();}).fail(function(data){failToCommunicate();});}}
save.bank=function(Slot){if(location.protocol==="http:"){if(enteredWorldOnce===true){if(my.hardcoreMode==="true"){localStorage.setItem('HCbank4',JSON.stringify(P.bank));}else{localStorage.setItem('bank4',JSON.stringify(P.bank));}}}else{itemSwapStart();var t1=new Date();$.ajax({url:'php/game1.php',data:{run:"updateItem",item:P.bank[Slot],Slot:Slot,slotType:'bank',name:my.name}}).done(function(data){itemSwapDone();}).fail(function(data){failToCommunicate();});}}
save.GLB=function(){if(location.protocol==="http:"){localStorage.setItem('GLB',JSON.stringify(GLB));}else{$.ajax({url:'php/game1.php',data:{run:"updateGLB",GLB:GLB}}).fail(function(data){failToCommunicate();});}}
function serverLogout(){$.ajax({url:'php/game1.php',data:{run:"camp"}}).done(function(data){window.onbeforeunload=null;location.reload();});}
save.my=function(loc){if(location.protocol==="http:"||loc==="local"){localStorage.setItem('my'+(lsKey+characterslot),JSON.stringify(my));}else{if(!g.hardcoreDeathStatus){$.ajax({url:'php/game1.php',data:{run:"updateMy",my:my}}).done(function(data){if(campStatus===true){QMsg("Logging out...");serverLogout();}}).fail(function(data){failToCommunicate();});}}}
save.Lmy=function(){localStorage.setItem('Lmy'+(lsKey+characterslot),JSON.stringify(Lmy));}
save.quests=function(){if(location.protocol==="https:"){function convert(foo){if(foo===true){return 1;}else{return 0;}}
var qq=jQuery.extend(true,{},P.Q[diff()]);qq.repeatCB=convert(qq.repeatCB);qq.repeatCm3=convert(qq.repeatCm3);qq.repeatCt3=convert(qq.repeatCt3);qq.repeatER=convert(qq.repeatER);qq.repeatKk3=convert(qq.repeatKk3);qq.repeatKk4=convert(qq.repeatKk4);qq.repeatLg3=convert(qq.repeatLg3);qq.repeatNl3=convert(qq.repeatNl3);qq.repeatNl4=convert(qq.repeatNl4);qq.repeatPk4=convert(qq.repeatPk4);$.ajax({url:'php/game1.php',data:{run:"updateQuests",diff:diff(),Q:qq,name:my.name}}).fail(function(data){failToCommunicate();});}else{localStorage.setItem('Q'+(lsKey+characterslot),JSON.stringify(P.Q));}}
function saveGame(){save.Lmy();save.my();if(location.protocol==="http:"){save.GLB();save.quests();save.bank();save.item();save.eq();}}
function delChar(){playAudio('button_2');if(location.protocol==="http:"){if(my.name==""||my.name==null||foundCharacter===false){return;}}else{if($("#characterslot"+characterslot).children().first().text()===""){return;}}
$("#deletecharfade").css({opacity:0,display:'block'}).animate({opacity:.66},311,"easeOutQuad");$("#deletecharconfirm,#deleteConfirm,#deleteCancel").css({opacity:0,display:'block'}).animate({opacity:1},311,"easeOutQuad");if(location.protocol==="http:"){$("#deleteconfirmmsg").html("Delete "+my.name+"?<br>Are You Sure?");}else{$("#deleteconfirmmsg").html("Delete "+$("#characterslot"+characterslot).children().first().text()+"?<br>Are You Sure?");}
$("#deleteConfirm").removeClass("disabled");}
function deleteCharSlot(){if($("#deleteConfirm").hasClass("disabled")===true){return;}
function deleteMyChar(){$("#deletecharfade").stop(true,true).animate({opacity:0},99,function(){$(this).css('display','none');});$("#deletecharconfirm,#deleteConfirm,#deleteCancel").animate({opacity:0},99,function(){$(this).css('display','none');});function do1(){localStorage.removeItem("my"+(lsKey+characterslot));localStorage.removeItem("Lmy"+(lsKey+characterslot));localStorage.removeItem("inv"+(lsKey+characterslot+10));localStorage.removeItem("eq"+(lsKey+characterslot));localStorage.removeItem("Q"+(lsKey+characterslot));T.delayedCall(.125,loadAllCharacters);}
if(location.protocol==="http:"){do1();}else{$.ajax({data:{run:"deleteCharacter",name:$("#characterslot"+characterslot).children().first().text()}}).done(function(data){D.getElementById('characterslot'+characterslot).style.display='none';for(var i=1;i<=16;i++){if(D.getElementById('characterslot'+i).style.display==="inline-block"){loadCharacterSlot(i);continue;}}
charactersFound-=1;setCharacterSelectPanel();loadServerCharacters();}).fail(function(){QMsg("Failed to contact the server.");});}}
playAudio('button_2');$("#deleteConfirm").addClass("disabled");$("#deleteconfirmmsg").html("Deleting "+my.name+". Please Wait.");T.delayedCall(.1,deleteMyChar);}
function cancelCharDelete(){T.to('#deletecharfade',.25,{opacity:0,onComplete:function(){D.getElementById('deletecharfade').style.display='none';}});$("#deletecharconfirm,#deleteConfirm,#deleteCancel").animate({opacity:0},250,function(){$(this).css('display','none');});$("#enterworld, #characterslot1, #characterslot2, #characterslot3, #characterslot4, #characterslot5, #characterslot6, #characterslot7, #characterslot8, #characterslot9, #characterslot10, #characterslot11,#characterslot12,#characterslot13,#characterslot14,#characterslot15,#characterslot16").removeClass("disabled");}
function checkDungeon(foo){var bar=false;if(foo==="Greenthorn Cavern"||foo==="Riven Grotto"||foo==="Braxxen's Bastille"||foo==="Arcturin's Crypt"||foo==="Galeblast Fortress"||foo==="Ashenflow Peak"||foo==="Dire Sanctum"||foo==="Nimgaul"||foo==="Dire Sanctum"){bar=true;}
return bar;}
function checkCity(foo){var bar=false;if(foo==="Aspen Grove"){bar=true;}
return bar;}
function loadWeaponSlashes(){if(P.eq[12].type==="slashed"){asset[109]=D.createElement('img');asset[109].src="images1/slashed.png";}else if(P.eq[12].type==="crushed"){asset[107]=D.createElement('img');asset[107].src="images1/crushed.png";}else if(P.eq[12].type==="pierced"){asset[105]=D.createElement('img');asset[105].src="images1/pierced.png";}else if(P.eq[12].type==="punched"){asset[103]=D.createElement('img');asset[103].src="images1/punched.png";}else if(P.eq[12].type==="smashed"||"staff"===P.eq[12].type){asset[101]=D.createElement('img');asset[101].src="images1/smashed.png";}else if(P.eq[12].type==="cleaved"){asset[100]=D.createElement('img');asset[100].src="images1/cleaved.png";}
if(P.eq[13].type==="crushed"){asset[106]=D.createElement('img');asset[106].src="images1/crushedL.png";}else if(P.eq[13].type==="pierced"){asset[104]=D.createElement('img');asset[104].src="images1/piercedL.png";}else if(P.eq[13].type==="punched"){asset[102]=D.createElement('img');asset[102].src="images1/punched.png";}else if(P.eq[13].type==="slashed"){asset[108]=D.createElement('img');asset[108].src="images1/slashedL.png";}}
function preload(arrayOfImages){$(arrayOfImages).each(function(){$('<img/>')[0].src=this;});}
function loadMiscImages(){asset[115]=D.createElement("img");asset[115].src='//i.imgur.com/hqFEnqI.png';asset[116]=D.createElement('img');asset[116].src="//"+itemSprite;asset[117]=D.createElement('img');asset[117].src="images1/NGbutton.png";asset[118]=D.createElement('img');asset[118].src="//d3t6yj0r8qins4.cloudfront.net/classPlate.png";asset[119]=D.createElement('img');asset[119].src="images1/rock380-430.jpg";asset[120]=D.createElement('img');asset[120].src="images1/win5.png";asset[121]=D.createElement('img');asset[121].src="//d3t6yj0r8qins4.cloudfront.net/ng_logo_532x428.png";asset[122]=D.createElement('img');asset[122].src="images1/entername.png";asset[122]=D.createElement('img');asset[122].src="images1/ccFrame.png";asset[123]=D.createElement('img');asset[123].src="images1/statFrame.png";asset[124]=D.createElement('img');asset[124].src='images1/blank.png';asset[125]=D.createElement('img');asset[125].src='//i.imgur.com/d1iYz2W.jpg';asset[126]=D.createElement('img');asset[126].src="images1/raceButtons.png";asset[127]=D.createElement('img');asset[127].src="images1/myhpbardiv.png";asset[128]=D.createElement('img');asset[128].src="images1/bossPlate.png";asset[129]=D.createElement('img');asset[129].src="images1/championPlate.png";asset[130]=D.createElement('img');asset[130].src="images1/rarePlate.png";asset[131]=D.createElement('img');asset[131].src="images1/normalPlate.png";asset[132]=D.createElement('img');asset[132].src="images1/statButton.png";asset[133]=D.createElement('img');asset[133].src="images1/greyButton.png";asset[134]=D.createElement('img');asset[134].src="images1/equipment.png";asset[135]=D.createElement('img');asset[135].src="images1/stats.png";asset[136]=D.createElement('img');asset[136].src="images1/tile.png";asset[137]=D.createElement('img');asset[137].src="images1/wideHead.png";asset[139]=D.createElement('img');asset[139].src="images1/itemtt.png";asset[140]=D.createElement('img');asset[140].src="images1/portal.png";asset[141]=D.createElement('img');asset[141].src="images1/portraits.png";asset[142]=D.createElement('img');asset[142].src='images1/greenparticle200.png';asset[143]=D.createElement('img');asset[143].src='images1/magentaparticle200.png';asset[144]=D.createElement('img');asset[144].src='images1/yellowparticle200.png';asset[145]=D.createElement('img');asset[145].src='images1/glacialSpike.png';asset[146]=D.createElement('img');asset[146].src='images1/fireball.png';asset[147]=D.createElement('img');asset[147].src='images1/bossPlate.png';asset[148]=D.createElement('img');asset[148].src='//i.imgur.com/7bn79bN.png';asset[201]=D.createElement('audio');asset[201].src=soundLocation+"button_2."+audioExt;var foo=[];var bar=['blue','purple','orange','red','magenta','green','white','teal','yellow'];for(var i=0;i<bar.length;i++){foo.push(bar[i]+"particle50");}
for(var i=150,len=foo.length+150;i<len;i++){asset[i]=D.createElement('img');asset[i].src="images1/"+foo[i-150]+".png";}}
function loadSkillImages(){var foo=[];if(my.job==="Warrior"){foo=['kick','slam','punchedRed','hemorrhage','bloodDrop','shockwave','subjugate','decisiveBlow','tremor','absorbSpell','bulwark','buffRings','intrepidMight','kick','yellowLight3','burst','blueNova'];}
if(my.job==="Monk"){foo=['fearImage2','tigerStrike','eagleStrike','whiteLight3','cheetahStrike','cobraStrike','dragonStrike','burst','burstRed','craneKick','windmillKick','tremor','ancestralFlurry','ancestralFlurry2','lineNova','burstGreen','chakraBlast','smoke','whiteRays','yellowLight3','flyingKick','frostNova','lightningBlast'];}
if(my.job==="Rogue"){foo=['blindImage','shadowStrike','widowStrike','poisonDrop','burst','burstRed','lacerate','bloodDrop','lineNovaWhite','tremorFG','tremorBG','prowlingGash','coldBlood','ancientWill','tremor','mirageStrike','poisonSpray'];}
if(my.job==="Shadow Knight"){foo=['fearImage2','slam','crescentCleave','deathStrike','harmTouch','bloodDrop','purpleLight3','orangeLight3','tealLight3','magentaLight3','lineNovaRed','lifeTap','greenLight3','darkTremor','redLight3'];}
if(my.job==="Paladin"){foo=['rootImage','slam','rebuke','retribution','purge','vengeance','lineNovaPink','vengeanceL','blueLight3','magentaLight3','greenLight3','whiteLight3','tremor','yellowLight3','tealLight3','lineNovaMagenta','ardentJudgment','buffRings','lightningBlast','benediction','benedictionFloor'];}
if(my.job==="Ranger"){foo=['orbIcon','kick','redLight3','blueLight3','greenLight3','yellowLight3','tealLight3','rngFire','rngSmoke','rngFireOut','counterShot','arrow','lineNova','ignite','snare','whiteLight3','buffRings','lightningBlast','petExplosion'];}
if(my.job==="Bard"){foo=['sleepImage','drainFG','blueLight3','greenLight3','tealLight3','redLight3','orangeLight3','yellowLight3','whiteLight3','drainBG','purpleLight3','heart','lineNovaMagenta','rngSmoke','chainFG','chainBG','benediction','benedictionFloor','tremorFG','tremorBG','burst'];}
if(my.job==="Druid"){foo=['rootImage','redLight3','purpleLight3','blueLight3','greenLight3','whiteLight3','orangeLight3','yellowLight3','tealLight3','ignite','lightningBlast','fissure','boulder','tornado','snare'];}
if(my.job==="Cleric"){foo=['rootImage','orangeLight3','yellowLight3','blueLight3','tealLight3','martyrsBlessing','greenLight3','magentaLight3','lineNovaMagenta','expelCorruption','lineNova','holyMight','buffRings','guardianAngel','benediction','benedictionFloor','tremor','lightningNova','retribution'];}
if(my.job==="Shaman"){foo=['rootImage','sleepImage','freezeRoot','tealLight3','redLight3','greenLight3','blueLight3','purpleLight3','frostStrike','poisonNova','whiteLight3'];}
if(my.job==="Necromancer"){foo=['fearImage2','greenLight3','yellowLight3','redLight3','purpleLight3','magentaLight3','boneSpirit','lifeTap','buffRings','diamondSkin','asystole','detonation','corpseExplosion','howlingTerror','lineNovaRed','orangeLight3'];}
if(my.job==="Enchanter"){foo=['blueLight3','magentaLight3','orangeLight3','whiteLight3','purpleLight3','tealLight3','heart','mysticRune','windmillKick','colorShift'];}
if(my.job==="Magician"){foo=['iceIcon','blindImage','snare','redLight3','yellowLight3','greenLight3','whiteLight3','tealLight3','orangeLight3','lavaBolt','frozenOrb','fireparticle50','manaShield','purpleRings','psionic1','psionic2','psionic3','psionic4','petExplosion','alteredState2','tremor','freezeRoot','yellowOrb'];}
if(my.job==="Wizard"){foo=['iceIcon','freezeRoot','frostNova','iceBolt','tealLight3','blueLight3','redLight3','whiteLight3','yellowLight3','orangeLight3','chargedBolts','chargedBolts2','magicMissile','fireball','glacialSpike','iceComet','meteor','fissure','chainLightning','chainFG','chainBG','fireBolt','staticBolt','tremor'];}
foo.push("bloodSpray");for(var i=0,len=foo.length;i<len;i++){asset[i]=new Image();asset[i].src="images1/"+foo[i]+".png";}}
function loadClassSounds(){var foo;var caster=false;if(charactersFound>0&&my.job!==""){if(my.job==="Warrior"){foo=['slice','tremor','flshhit6','flshhit5','flshhit3','energyshield','shoutFemale','warCry','warriorShout','spellCastHeal2','spellDoneBuff','flshhit4'];}else if(my.job==="Monk"){foo=['flshhit3','flshhit4','flshhit5','flshhit6','flshhit7','death_mb','death_fl','novaice','spellCastHeal3','quickness','lightning2','handofgod','spellCastEvoke2','sanctuary','drakesat','holylight'];}else if(my.job==="Rogue"){foo=['fade','bash','flshhit3','chillblood','spellDoneBoom','cloak','quickness','stab','handofgod','cobra','summon','slice','fall_hit'];}else if(my.job==="Shadow Knight"){foo=['slice','skeleton_die','skeleton_att','skeleton_hit'];caster=true;}else if(my.job==="Paladin"){foo=['holybolt','lightning2','zeal','handofgod','fanaticism','cleansing','spellCastHeal3'];caster=true;}else if(my.job==="Ranger"){foo=['arrow3','arrowhit','bowdraw','novaelec','explode1','explode2','explode3','lightning2'];caster=true;}else if(my.job==="Bard"){foo=['might','dissonance','quickness','prayer','fanaticism','holybolt','sanctuary','spellDoneBuff','confuse','spellDoneHeal','clarity','decrepify','shieldofsongs','dirge','spellDoneBuff','handofgod','flshhit4'];}else if(my.job==="Druid"){foo=['windcast','lightning1','lightning2','lightning3','earthquakeloop1','earthquakeloop2','blue3','explode1','explode2','explode3'];caster=true;}else if(my.job==="Cleric"){foo=['spellCastHeal3','redemption','handofgod','dirge','bolthammercast','handofgodbolt'];caster=true;}else if(my.job==="Shaman"){foo=['poisonnova','wolf_att2','wolf_die2','wolf_hit2'];caster=true;}else if(my.job==="Necromancer"){foo=['skeleton_die','skeleton_att','skeleton_hit','bonespirit','corpseexplode4','confuse','corpseexplodecast'];caster=true;}else if(my.job==="Enchanter"){foo=['fall_hit','novaice'];caster=true;}else if(my.job==="Magician"){foo=['elem_die3','elem_att3','elem_hit3','infernoloop','icespike1','icespike2','icespike3','energyshield','zap1','zap2','zap3','blue3','poisonnova','lightning1','lightning2','lightning3','explode1','explode2','explode3','novaelec','fade'];caster=true;}else if(my.job==="Wizard"){foo=['zap1','zap2','zap3','explode1','explode2','explode3','chargedbolt','novaice','icebolt1','icebolt2','icebolt3','lightning1','lightning2','lightning3','icespike1','shivers','meteorlaunch','handofgod','teleport','summon'];caster=true;}
foo.push('levelup2','button_2','equipRing','equipAccessory','equipWeapon','equipShield','equipPlate','equipChain','equipLeather','endquest','shldblk');if(my.race==="Wood Elf"){foo.push('fade');}
if(caster===true){foo.push('spellDoneSlam','spellDoneBuff','spellDoneBoom','spellDoneFlames','spellDoneHeal','spellDoneHarm','spellCastEvoke1','spellCastEvoke2','spellCastDot','spellCastAbjure');}
foo.push('flshhit1','flshhit2','kick','blockBlunt','blockSword');for(var i=0,len=foo.length;i<len;i++){asset[i+250]=D.createElement('audio');asset[i+250].src=soundLocation+foo[i]+"."+audioExt;}}}
function reportAssets(){for(var i=0;i<=300;i++){if(asset[i]!==undefined){cLog(i+': '+asset[i].src);}}}
$("#bank").on('click','.bankTabActive, .bankTabDisabled',function(){var e=document.getElementsByClassName('bankTab');for(var i=0,len=e.length;i<len;i++){e[i].className="bankTab bankTabDisabled";}
this.className="bankTab bankTabActive";activeBankTab=$(this).index();renderBank(maxBankSlots);playAudio('button_2');});function renderBank(max){var start=(activeBankTab*90);var end=start+90;if(end>max){end=max;}
var a=['I','II','III','IV','V','VI','VII','VIII','IX','X','XI','XII'];var maxTab=M.ceil(max / 90);var z='';for(var i=0;i<12;i++){var tabClass='bankTab bankTabDisabled';if(i>=maxTab){tabClass='bankTab bankTabLocked';}
if(i===activeBankTab){tabClass='bankTab bankTabActive';}
z+="<div class='"+tabClass+"'>"+a[i]+"</div>"}
D.getElementById('bankTabWrap').innerHTML=z;var z='';for(var i=start;i<end;i++){z+="<li class='bankBG' id='bank"+i+"BG'>BANK";if(P.bank[i].name){z+="<img id='bank"+i+"' src='//"+itemSprite+"' class='bank' style='left:"+P.bank[i].xPos+"px;top:"+P.bank[i].yPos+"px'>";}else{z+="<img id='bank"+i+"' src='images1/blank.png' class='bank'>";}"</li>";}
D.getElementById('bankContainer').innerHTML=z;}
function changeZoneMusic(){var m1='dungeonA';var x=myZone();if(x==="Salubrin Forest"){m1="forestA";}
if(x==="Tendolin Meadows"||x==="Kordata Marshlands"||x==="Lanfeld Outpost"){m1="forestB";}
if(x==="Viston's Redoubt"||x==="Galeblast Fortress"||x==="Kordata Ruins"||x==="Fahlnir Citadel"){m1="desertB";}
if(!cityStatus){playAmbient(m1);}else{playCityMusic();setTimeout(function(){playCityMusic();},100);}}
function travelZone(zone,sz){Mname="";$NG.mobBar.css("visibility","hidden");NG.mobName.textContent="";NG.mobLevel.textContent='';NG.mobTraits.innerHTML="";if(g.difficulty===1){my.zone=zone;my.subzone=sz;}else if(g.difficulty===2){my.zoneN=zone;my.subzoneN=sz;}else if(g.difficulty===3){my.zoneH=zone;my.subzoneH=sz;}
indoorStatus=checkDungeon(zone);if(travelStatus===0){var e=D.getElementById("travelId");e.className="buttonsManage";e.style.backgroundPosition="-80px 0";travelStatus=1;}
for(var i=0;i<=4;i++){MOB[i].style.display='none';MOB[i].style.opacity=0;stage[i].removeAllChildren();canvas[i].style.top='0px';canvas[i].style.left='0px';MOBNAME[i].style.color='#00FA9A';MOBNAME[i].innerHTML='';}
$("#window2dawn, #window2zoneday").css({display:'block',opacity:0}).animate({opacity:1},0,"easeOutQuad");travelToggle();D.getElementById('questJournal').style.display="none";questJournalBlock=1;loadZone();}
function myZone(){if(location.protocol==="http:"||g.view==="Game"||g.view==="Intro"){if(my.difficulty===1){return my.zone;}else if(my.difficulty===2){return my.zoneN;}else{return my.zoneH;}}else{var x;if(srv.difficulty===1){x=$("#characterslot"+characterslot).data('zone');}else if(srv.difficulty===2){x=$("#characterslot"+characterslot).data('zoneN');}else{x=$("#characterslot"+characterslot).data('zoneH');}
if(x===undefined){return'';}else{return x;}}}
function mySubzone(){if(location.protocol==="http:"||g.view==="Game"){if(my.difficulty===1){return my.subzone;}else if(my.difficulty===2){return my.subzoneN;}else{return my.subzoneH;}}else{var x;if(srv.difficulty===1){x=$("#characterslot"+characterslot).data('subzone');}else if(srv.difficulty===2){x=$("#characterslot"+characterslot).data('subzoneN');}else{x=$("#characterslot"+characterslot).data('subzoneH');}
if(x===undefined){return'';}else{return x;}}}
function stopMusic(){D.getElementById("bgmusic").pause();}
function stopAmbient(){D.getElementById('bgamb1').pause();D.getElementById('bgamb2').pause();}
function loadZone(){if(g.view!=="Intro"){stopMusic();}
for(var i=0;i<=4;i++){mob[i].name='';}
stopAmbient();loreMsg=[];$("#townPortal").remove();portalStatus=false;$("#lore").css('display','none');hide(['window3','chatId','combatId','window5Id','window6']);D.getElementById('errorMsg').innerHTML="";T.set("#questNotify,#mapNotify",{opacity:0});cityMenuClick();cancelMySpell();enteredWorld=false;$("#characterSelectScreen").css('display','none');Chat(("Loading... please wait."));attackStatus=1;for(var i=0;i<=4;i++){mob[i].attackStatus=1;}
var zig=[];var foo="blank.png";cityStatus=false;var _z=myZone();if(_z==="Fahlnir Citadel"){foo='fahlnir1.jpg';if(mySubzone()===2){foo='fahlnir2.jpg';}
if(mySubzone()===3){foo='fahlnir3.jpg';}
zig=['a dark elf female','a dark elf female plate','a gargoyle','a dark elf male','an imp','a shadowed man','a dark elf male plate','a dark elf matron'];}
if(_z==="Lanfeld Outpost"){foo="lanfeld1.jpg";if(mySubzone()===2){foo="lanfeld2.jpg";}
if(mySubzone()===3){foo="lanfeld3.jpg";}
zig=['an orc','grimden'];}
if(_z==="Arcturin's Crypt"){foo="arcturin1.jpg";if(mySubzone()===2){foo="arcturin2.jpg";}
if(mySubzone()===3){foo="arcturin3.jpg";}
zig=['a faerie','a werewolf','a male zombie','a terror','a ghoul','a beetle','a mummy','a skeleton','a dark skeleton','a female zombie','a fungus','garanel rucksif'];}
if(_z==="Salubrin Forest"){foo="salubrin.jpg";zig=['a wolf','an orc','a faerie','a wisp','a skeleton'];}
if(_z==="Viston's Redoubt"){foo="viston1.jpg";if(mySubzone()===2){foo="viston2.jpg";}
if(mySubzone()===3){foo="viston3.jpg";}
if(mySubzone()===4){foo="viston4.jpg";}
zig=['a gargoyle','a dhampyre','an imp','a bat','a vampire female','a werewolf','phinigel autropos','a purple dragon'];}
if(_z==="Tendolin Meadows"){foo="tendolin.jpg";zig=['a faerie','a brown spider','a wolf','a mummy','a faerie','a shadowed man','a skeleton','a heart spider','an orc'];}
if(_z==="Riven Grotto"){foo="riven1.jpg";if(mySubzone()===2){foo="riven2.jpg";}
if(mySubzone()===3){foo="riven3.jpg";}
zig=['a rat','a dark elf female plate','a human male','a human female','a wisp','a male zombie','a mummy','a dark elf male','a skeleton','a dark skeleton','a ghoul','a female zombie'];}
if(_z==="Greenthorn Cavern"){foo="greenthorn1.jpg";if(mySubzone()===2){foo="greenthorn2.jpg";}
if(mySubzone()===3){foo="greenthorn3.jpg";}
zig=['a gnoll'];}
if(_z==="Temple of Prenssor"){foo="prenssor1.jpg";if(mySubzone()===2){foo="prenssor2.jpg";}
if(mySubzone()===3){foo="prenssor3.jpg";}
zig=['a clay golem','a gorilla','a lizardman','a steel golem','a stone golem','avatar of fear'];}
if(_z==="Kordata Ruins"){foo="ruins1.jpg";if(mySubzone()===2){foo="ruins3.jpg";}
if(mySubzone()===3){foo="ruins2.jpg";}
zig=['a gargoyle','an anuran','a heart spider','a faerie','an evil eye round'];}
if(_z==="Ashenflow Peak"){foo="ashenflow1.jpg";if(mySubzone()===2){foo="ashenflow2.jpg";}
if(mySubzone()===3){foo="ashenflow3.jpg";}
if(mySubzone()===4){foo="ashenflow4.jpg";}
zig=['a kobold','an imp','a jungle spider','a bat','a beetle','a fire elemental','a brown spider','a heart spider','a red goblin','a fire giant','a red dragon'];}
if(_z==="Braxxen's Bastille"){foo="braxxen1.jpg";if(mySubzone()===2){foo="braxxen2.jpg";}
if(mySubzone()===3){foo="braxxen3.jpg";}
zig=['an anuran','a heart spider','a red goblin','a skeleton','a human male','a human female','a terror','a dark elf male','braxxen','a dark elf female'];}
if(_z==="Galeblast Fortress"){foo="galeblast1.jpg";if(mySubzone()===2){foo="galeblast2.jpg";}
if(mySubzone()===3){foo="galeblast3.jpg";}
if(mySubzone()===4){foo="galeblast4.jpg";}
zig=['a white wolf','a blue goblin','an ice giant','a white spider','a blue dragon'];}
if(_z==="Kordata Marshlands"){foo="marshland1.jpg";if(mySubzone()===2){foo="marshland2.jpg";}
if(mySubzone()===3){foo="marshland3.jpg";}
zig=['a fungus','a dark skeleton','a heart spider'];}
if(_z==="Nimgaul"){foo="nimgaul.jpg";zig=['a male zombie','a female zombie','a ghoul','an evil eye round','a faerie','an anuran','a white spider','an imp','a terror','a gorilla','a mummy','a wisp','a fungus','a vampire female','a clay golem','a stone golem','a steel golem','dracoliche','cazic'];}
if(_z==="Dire Sanctum"){foo="sanctum.jpg";zig=['a stone golem','a female zombie','a vampire female','a dhampyre','a gargoyle','a dark elf male','a mummy','a ghoul','a terror','a rat','a skeleton','dracoliche','maestro','innoruuk'];}
if(_z==="Edenburg"){var zog="a human female.png";cityStatus=true;foo="edenburg.jpg";zog="edenburg.png";zig=['edenburg'];NPCname="Miranda Crossheart";}
if(_z==="Aspen Grove"){var zog="a halfling male.png";cityStatus=true;foo="aspenGrove.jpg";zog="aspenGrove.png";zig=['aspenGrove'];NPCname="Rendo Surefoot";}
if(_z==="Artremia"){var zog="a wood elf female.png";cityStatus=true;foo="artremia.jpg";zog="artremia.png";zig=['artremia'];NPCname="Valeska Windcrest";}
if(_z==="Fenwoven"){var zog="a barbarian male.png";cityStatus=true;foo="fenwoven.jpg";zog="fenwoven.png";zig=['fenwoven'];NPCname="Arwen Reinhardt";}
if(cityStatus===true){writeCityHtml();D.getElementById('cityNPCdiv').style.display='none';var z="";for(var i=24;i<=43;i++){z+="<li class='cityBG' id='city"+(i-24)+"BG'>"+"<img src='images1/blank.png' id='inv"+i+"' class='city'>"+"</li>";}
D.getElementById('itemsForSale').innerHTML=z;initNG();initNG2();var e6=$("#cityNPCdiv");var e7=$("#cityNPC");D.getElementById('bankGoldAmount').textContent=GLB.gold;townUpdate();function doit(count){if(e7.width()<100){if(count<300){T.delayedCall(.1,doit,[++count]);}}else{e6.width(e7.width()).height(e7.height());}}
doit(0);$NG2.bankBG.css("background","url('//"+itemSprite+"')").css({backgroundPosition:"0 0"});stopMusic();}
function townUpdate(){D.getElementById('cityNPCdiv').style.display='block';D.getElementById('cityNPCname').textContent=NPCname;$("#cityWindow").css("left",10);$("#trainOK,#trainingOptions").css("left",-700);$("#cityNPC").attr("src",'images1/blank.png');$("#cityNPC").attr("src",'images1/'+zog);D.getElementById('cityNPCdiv').style.bottom="-100px";T.set("#cityNPC",{rotationY:0});}
var len=zig.length;mobs=[];for(var i=0;i<len;i++){mobs[i]=D.createElement('img');mobs[i].src='images1/'+zig[i]+'.png';}
imagesLoaded=0;$("#window2zoneday").attr("src",'backgrounds/'+foo+'?v1');if(cityStatus===true){$NG2.city.attr("src","//"+itemSprite);$NG2.cityBG.css("background","url('//"+itemSprite+"')").css({backgroundPosition:"0 0"});D.getElementById('cityGold').innerHTML="<div id='goldIcon' class='goldIcon'></div> "+my.gold;$('#inventoryGoldAmount').text(my.gold);$("#cityTitle").html(myZone());}else{$("#bankContainer,#cityWrap").empty();}
enterZoneSuccess(new Date());loadingScreen();}
function writeCityHtml(){var z="";z+='<div id="cityWindow" class="strongShadow">'+'<div id="cityTitle">SHOP</div>'+'<div id="shopList">'+'<div id="merchant" class="cityButtons">Merchant</div>'+'<div id="upgrade" class="cityButtons">Upgrade Item</div>'+'<div id="training" class="cityButtons">Training</div>'+'<div id="bankId" class="cityButtons">Bank</div>'+'<div id="talentsId" class="cityButtons">Reset Talents</div>'+'<div id="exitCity" class="cityButtons">Exit</div>'+'</div>'+'<div id="cityGold" class="strongShadow">'+'<div id="goldIcon" class="goldIcon">0</div>'+'</div>';if(location.protocol==='https:'){z+='<div id="cityCrystal" class="strongShadow">'+'<div id="cityCrystalIcon" class="crystalIcon"></div>'+'<span id="cityCrystalAmount">0</span>'+'</div>';}
z+='</div>'+'<div id="cityNPCdiv">'+'<img id="cityNPCshadow" src="//i.imgur.com/7bn79bN.png">'+'<div id="cityNPCname" class="strongShadow"></div>'+'<img id="cityNPC" src="images1/blank.png">'+'</div>'+'<div id="trainingOptions" class="strongShadow">'+'<div id="training1">'+'<div class="trainSkill2 trainingButton">One-Hand Slashing</div>'+'<div class="trainSkill2 trainingButton">Two-Hand Slashing</div>'+'<div class="trainSkill2 trainingButton">One-Hand Blunt</div>'+'<div class="trainSkill2 trainingButton">Two-Hand Blunt</div>'+'<div class="trainSkill trainingButton">Piercing</div>'+'<div class="trainSkill2 trainingButton">Hand to Hand</div>'+'<div class="trainSkill trainingButton">Offense</div>'+'<div class="trainSkill trainingButton">Dual Wield</div>'+'<div class="trainSkill2 trainingButton">Double Attack</div>'+'</div>'+'<div id="training2">'+'<div class="trainSkill trainingButton">Defense</div>'+'<div class="trainSkill trainingButton">Dodge</div>'+'<div class="trainSkill trainingButton">Parry</div>'+'<div class="trainSkill trainingButton">Riposte</div>'+'<div class="trainSkill trainingButton">Alteration</div>'+'<div class="trainSkill trainingButton">Evocation</div>'+'<div class="trainSkill trainingButton">Conjuration</div>'+'<div class="trainSkill trainingButton">Abjuration</div>'+'<div class="trainSkill trainingButton">Channeling</div>'+'</div>'+'</div>'+'<div id="trainOK" class="strongShadow">TRAIN</div>'+'<div id="upgradeConfirm" class="strongShadow">'+'<div id="upgradePrompt">Upgrade An Item</div>'+'<div id="upgradeConfirm2">'+'Attempt to upgrade?'+'</div>'+'<div id="upgradeOK">Ok</div>'+'<div id="upgradeCANCEL">CCancel</div>'+'</div>'+'<div id="blackOverlay"></div>'+'<div id="upgradeWrap">'+'<div id="upgradeBar"></div>'+'</div>'+'<div id="merchantContainer">'+'<ul id="itemsForSale"></ul>'+'<div id="buyOK" class="strongShadow">BUY</div>'+'<div id="sellOK" class="strongShadow">SELL</div>'+'</div>';D.getElementById('cityWrap').innerHTML=z;initNG();}
$(function(){$("#window2zoneday").on('load',function(){imagesLoaded++;});});function drawExpBar(d){if(d===undefined){d=2;}
var endExp=nextLevel();var startExp=nextLevel(my.level-1);var x=~~(((my.exp-startExp)/(endExp-startExp))*498);if(isMobile===false&&GLB.videoSetting==="High"){NG.myexpbarvalue.innerHTML='<span id="myexpbarvalue1">'+g.oldExp+'</span> / '+endExp+' XP';var e=D.getElementById('myexpbarvalue1');var score={};score.exp=g.oldExp;T.to(NG.myexpbarId,d,{width:x,force3D:'auto'});T.to(score,d,{exp:my.exp,onUpdate:function(){e.textContent=~~score.exp;}});}else{NG.myexpbarId.style.width=x+'px';NG.myexpbarvalue.innerHTML='<span id="myexpbarvalue1">'+my.exp+'</span> / '+endExp+' XP';}}
function checkTestData(){if(dev){}}
function QMsg(foo,quest,map,duration){if(foo.indexOf("Quest Completed")!==-1){if(myZone()==="Salubrin Forest"){if(P.Q[diff()].GreaterFaydark===3){g.showPortal=true;}}else{if(myZone()!=="Nimgaul"){g.showPortal=true;}}}
if(duration===undefined){duration=3500;}
duration /=1000;var H1=D.createElement('span');H1.className="QMsg";H1.innerHTML=foo+"<br>";NG.errorMsg.appendChild(H1);T.delayedCall(duration,function(){Remove(H1);});if(quest>0){var x=$("#questNotify");}
if(map>0){var x=$("#mapNotify");}
if(quest||map){T.to(x,.5,{startAt:{opacity:1},opacity:.5,ease:ez.lin,repeat:-1,yoyo:true});if(GLB.hideMenu==="On"){T.to(D.getElementById('window5Id'),0,{startAt:{opacity:1},delay:8,opacity:0});}}}
function loadAllCharacters(){g.view="Main";charactersFound=0;firstEmptyCharacterSlot=0;function doit(){if(pageDoneLoading===true||$("#enterworld").hasClass("disabled")===true){return;}
pageDoneLoading=true;}
T.delayedCall(1.5,doit);if(localStorage.getItem('GLB')!==null){var zig=localStorage.getItem("GLB");GLB=JSON.parse(zig);}
$("#deleteConfirm").removeClass("disabled");foundCharacter=false;var goToSlot=0;$NG.allChButtons.removeClass("disabled");resetCharButtons();var loadLastCharacter=false;if(location.protocol==="http:"){for(var i=1;i<=16;i++){characterslot=i;if(localStorage.getItem("my"+(lsKey+characterslot))!==null){var foo1=localStorage.getItem("my"+(lsKey+characterslot));my=JSON.parse(foo1);if(i===GLB.lastCharacter&&loadLastCharacter===false){loadLastCharacter=true;}
var qux=localStorage.getItem("eq"+(lsKey+characterslot));P.eq=JSON.parse(qux);}else{my.name='';}
if(localStorage.getItem("Lmy"+(lsKey+characterslot))===null){initLMY();}else{var kek=localStorage.getItem("Lmy"+(lsKey+characterslot));Lmy=JSON.parse(kek);}
if(localStorage.getItem("inv"+(lsKey+characterslot+10))===null){initializeInventory();}else{var bar=localStorage.getItem("inv"+(lsKey+characterslot+10));P.item=JSON.parse(bar);}
if(localStorage.getItem("Q"+(lsKey+characterslot))===null){initQ();}else{var bar=localStorage.getItem("Q"+(lsKey+characterslot));P.Q=JSON.parse(bar);}
if(my.name==""){D.getElementById('characterslot'+i).style.display='none';if(firstEmptyCharacterSlot===0){firstEmptyCharacterSlot=i;}}else{D.getElementById('characterslot'+i).innerHTML='<div class="yellow glowYellow nomouse">'+my.name+'</div>'+'<div class="nomouse">Level '+my.level+'</div>'+'<div class="nomouse">'+my.race+' '+my.job+'</div>';D.getElementById('characterslot'+i).style.display='inline-block';charactersFound++;if(foundCharacter===false){foundCharacter=true;goToSlot=i;}}}
if(foundCharacter===false){D.getElementById('characterSelectScreen').style.display='block';D.getElementById('createWindowId').style.display='block';D.getElementById('deletecharacter').style.display='none';D.getElementById('characterSelectScreen').style.opacity=1;}else{if(GLB.lastCharacter!==undefined&&loadLastCharacter===true&&$("#characterslot"+GLB.lastCharacter).length>0){loadCharacterSlot(GLB.lastCharacter);}else{loadCharacterSlot(goToSlot);}
D.getElementById('deletecharacter').style.display='inline-block';}
if(location.protocol==='http:'){D.getElementById('enterWorldWrap').style.display='block';}}else{T.delayedCall(.1,checkLoginStatus);}}
function checkLoginStatus(){$.ajax({data:{run:"checkLoginStatus"}}).done(function(data){function setLoginView(){D.getElementById('loginWrap').style.display='block';D.getElementById('characterSelectScreen').style.display='block';D.getElementById('createWindowId').style.display='block';D.getElementById('characterSelectScreen').style.opacity=1;none(['leftPaneBG']);}
var a=data.split("|");if(a[0]==="reset"){QMsg("Reset your password to login");setLoginView();$("#loginEmail").val(a[1]);}else if(a[0]==="present"){loadServerCharacters();block(['currencyIndicator','leftPaneBG']);}else{QMsg("Create an account or login to begin");setLoginView();}});}
function testAjax(){$.ajax({data:{run:"testAjax"}}).done(function(data){cLog(data+'');});}
function loadServerCharacters(){D.getElementById('zoneIndicator').textContent='';QMsg('Loading account data');$.ajax({data:{run:"loadAllCharacters"}}).done(function(data){var a=data.split("|");a.pop();var email=a.shift().toLowerCase();foundCharacter=false;var Slot=1;charactersFound=0;for(var i=1;i<=16;i++){D.getElementById('characterslot'+i).style.display='none';}
while(a.length>0){var foo=D.getElementById('characterslot'+Slot);var name=a.shift();var level=a.shift()*1;var race=a.shift();var job=a.shift();var difficulty=a.shift()*1;var zone=a.shift();var zoneN=a.shift();var zoneH=a.shift();var subzone=a.shift()*1;var subzoneN=a.shift()*1;var subzoneH=a.shift()*1;var hardcoreMode=a.shift();var timestamp=a.shift()*1;var s1='<div class="yellow glowYellow nomouse">'+name+'</div>'+'<div class="nomouse">'+level+' '+race+' <span id="myjob'+Slot+'">'+job+'</div>';if(timestamp===0){s1+='<div class="nomouse yellow"></div>';}else if(timestamp>0){var word="Days";if(timestamp===1){word="Day";}
if(timestamp<10){s1+='<div class="nomouse yellow">Expires in '+timestamp+' '+word+'</div>';}}
foo.innerHTML=s1
$("#characterslot"+Slot).data({difficulty:difficulty,zone:zone,zoneN:zoneN,zoneH:zoneH,subzone:subzone,subzoneN:subzoneN,subzoneH:subzoneH,hardcoreMode:hardcoreMode});foo.style.display='inline-block';charactersFound++;firstEmptyCharacterSlot=16-charactersFound;Slot++;foundCharacter=true;}
block(['leftPaneBG']);D.getElementById('createWindowId').style.display='block';D.getElementById('loginWrap').style.display='none';D.getElementById('currencyIndicator').style.display='block';D.getElementById('characterSelectScreen').style.display='block';D.getElementById('characterSelectScreen').style.opacity=1;T.to("#characterSelectScreen",1,{opacity:1,ease:ez.lin,onComplete:function(){g.view="Main";}});if(charactersFound===0){D.getElementById('enterWorldWrap').style.display='none';}else{D.getElementById('enterWorldWrap').style.display='block';}
setCharacterSelectPanel();$.ajax({url:'php/loadData1.php',data:{run:"loadGlb"}}).done(function(data){var a=data.split("|");a.pop();GLB.chatMyHit=a.shift();GLB.hideMenu=a.shift();GLB.musicStatus=a.shift()*1;GLB.soundStatus=a.shift()*1;GLB.tooltipMode=a.shift();GLB.videoSetting=a.shift();GLB.showCombatLog=a.shift();GLB.debugMode=a.shift();GLB.gold=a.shift()*1;GLB.hcgold=a.shift()*1;var bankSlots=a.shift()*1;var hcBankSlots=a.shift()*1;var characterSlots=a.shift()*1;var crystals=a.shift()*1;GLB.ks=a.shift()*1;GLB.account=a.shift();$('#globalGoldCount').text(GLB.gold+" / "+GLB.hcgold);$('#crystalCount').text(crystals);$('#bankSlots').text(bankSlots+" / "+hcBankSlots);$('#characterSlots').text(characterSlots);$('#logout').html("[ "+GLB.account.split("")[0].toUpperCase()+GLB.account.slice(1)+" Logout ]");D.getElementById('bgmusic').volume=(M.round(((.5*(GLB.musicStatus / 100))*1)*100)/ 100);if(g.view==="Main"||g.view==="Create"){playMusic("Soliloquy (2013)");}
srv.glb=true;}).fail(function(){QMsg("Server Error! Failed to load global values.");});$("#normalLabel, #nightmareLabel, #hellLabel").css('display','none');}).fail(function(){QMsg("Failed to contact server.");});$.ajax({data:{run:'checkDifficulty'}}).done(function(data){var a=data.split("|");a.pop();for(var i=1,len=a.length / 2;i<=len;i++){var nightmare=a.shift()*1;var hell=a.shift()*1;$("#characterslot"+i).data({nightmare:nightmare,hell:hell});}
setZoneDifficultyIndicators();});}
function resizeButtonBackgrounds(){$("#window3a li").css({backgroundSize:'900px 200px'});$(".spacers, .placeHolder").css({backgroundSize:'50px 50px'});if(my.race==="Human"){$("#secondwindId").css({backgroundSize:'50px 100px'});}else if(my.race==="Erudite"){$("#divineaegisId").css({backgroundSize:'50px 100px'});}else if(my.race==="Barbarian"){$("#ancestralrampageId").css({backgroundSize:'50px 100px'});}else if(my.race==="Wood Elf"){$("#tunaresglowId").css({backgroundSize:'50px 100px'});}else if(my.race==="Half Elf"){$("#karanasinfusionId").css({backgroundSize:'50px 100px'});}else if(my.race==="Dark Elf"){$("#sanguinetormentId").css({backgroundSize:'50px 100px'});}else if(my.race==="Dwarf"){$("#granitevisageId").css({backgroundSize:'50px 100px'});}else if(my.race==="Gnome"){$("#shortcircuitId").css({backgroundSize:'50px 100px'});}else if(my.race==="Halfling"){$("#halflinghideId").css({backgroundSize:'50px 100px'});}
if(my.job==="Druid"||my.job==="Bard"){$("#rangertrackId").css({backgroundSize:'50px 100px'});}
$("#togglepetattackId").css({backgroundSize:'50px 100px'});}
function enterZoneSuccess(referenceLoad){if(my.job==="Rogue"){$NG.shadowstrikeId.css("background-image","url('images1/spriteRogue3.png')").css({backgroundPosition:"-300% 0"});}
if(my.job==="Paladin"){$NG.palslamId.css("background-image","url('images1/spritePaladin3.png')").css({backgroundPosition:"-300% 0"});}
var timeDifference=new Date()-referenceLoad;if(!dev){if(timeDifference<=3000||imagesLoaded<1||scriptsLoaded===false||classSpriteLoaded===false){if(timeDifference>=20000){T.delayedCall(1,Chat,["Warning: Failed to load images in less than 20 seconds. Loading zone anyway.",1]);enterZoneSuccess2();}else{T.delayedCall(.5,enterZoneSuccess,[referenceLoad]);}}else{enterZoneSuccess2();}}else{var loadTime=1;T.delayedCall(loadTime,enterZoneSuccess2);}}
function enterZoneSuccess2(instant){if(g.view==="Intro"){T.delayedCall(.033,enterZoneSuccess2,[true]);return;}
if(location.protocol==="https:"){drawExpBar();if(cityStatus){setCrystals();}}
g.view="Game";show(['window3','chatId','combatId','window5Id','window6']);imagesLoaded=0;if(mySubzone()===0){Chat(("You have entered "+myZone()+"."));}else{Chat(("You have entered "+myZone()+" "+mySubzone()+"."));}
if(cityStatus===true){$("#QindicatorWrap").css('display','none');}else{$("#QindicatorWrap").css('display','block');}
$(".dot").remove();D.getElementById('introText2').style.display='block';if(cityStatus===true||GLB.ks>=6){D.getElementById('inventoryGoldOk').style.display='block';refreshMerchantItems();}else{D.getElementById('inventoryGoldOk').style.display='none';}
QupdateJournal(undefined,mySubzone(),true);D.getElementById("zoneSelectWrap").innerHTML="";CStat();for(var i=0;i<=4;i++){MOB[i].style.display='none';MOB[i].style.opacity=0;stage[i].removeAllChildren();canvas[i].style.top='0px';canvas[i].style.left='0px';MOBNAME[i].style.color='#00FA9A';MOBNAME[i].innerHTML='';}
setWindowPosition();var foo=myZone();indoorStatus=checkDungeon(foo);T.set(".buttonsManage, .buttonsManageOff",{opacity:1,display:'block'});$("#window3a").css("display","block");var d2=1;if(instant){d2=0;stage[8].removeAllChildren();playMusic("Blackmoor Tides");}
T.to('#curtainfade',d2,{opacity:0,ease:ez.lin,onComplete:function(){T.set('#curtainfade',{display:'none'});}});showButtons();sortButtons();save.my();updateAllEquipment();initNG();initSortables();if(enteredWorldOnce===false){checkSessionActive();chatInit();Chat2("Hit Enter to begin chatting",3);Chat2("Type /help for chat commands",3);Chat2("You have joined [1. General Chat]",3);myHpTick=T.to('',4,{repeat:-1,onRepeat:function(){getRegen();}});myMpTick=T.to('',3,{repeat:-1,onRepeat:function(){getMpRegen();}});}
enteredWorldOnce=true;enteredWorld=true;g.drawMyMp();g.drawMyHp();resetBosses();resizeButtonBackgrounds();if(my.job==="Shadow Knight"||my.job==="Shaman"||my.job==="Necromancer"||my.job==="Magician"){$("#togglepetattackId").css({backgroundSize:'50px 100px'});}
ambushChance=zoneAmbushOdds();battleStart=new Date();changeZoneMusic();if(GLB.showCombatLog==="Off"){$("#chatId, #combatId").css('display','none');}
if(isMobile===true){$("#chatId, #combatId").css('display','none');GLB.showCombatLog="Off";$("#window3").css('left',390);$("#mobBar").css({top:0,left:394});$("#pethpbardiv").css({top:120,left:5});}
$("#battleReport").css({left:'auto',right:490,top:0});if(talentResetNotify&&my.level>1){T.delayedCall(2,function(){QMsg("Warning: The latest server update forced a talent reset.");T.delayedCall(2,function(){QMsg("Please redistribute your talents.");});});}}
function tutorialFlash(e){if(!e){return;}
T.fromTo(e,.25,{boxShadow:"0px 200px rgba(255,0,0,.5) inset"},{boxShadow:"0px 200px rgba(128,0,0,.5) inset",repeat:38,yoyo:true,ease:ez.lin,onComplete:function(){T.to(e,.25,{boxShadow:"0px 200px rgba(128,0,0,0) inset"});}});}
function showTutorial(){var d1=10;T.delayedCall(1,function(){function flashText(e1){T.fromTo(e1,.5,{opacity:0},{opacity:1,ease:ez.lin,onComplete:function(){T.delayedCall(d1-1,function(){T.to(e1,.5,{opacity:0});});}});}
var e=DIV(60,420,"auto","auto");e.className="strongShadow tutorial";e.textContent="Pull Next Monster";NG.eWin.appendChild(e);tutorialFlash('#addmonsterId');flashText(e);T.delayedCall(d1,function(){$(".tutorial").remove();var e=DIV(60,470,"auto","auto");e.className="strongShadow tutorial";e.textContent="Toggle Auto Attack";NG.eWin.appendChild(e);tutorialFlash("#toggleattackId");flashText(e);T.delayedCall(d1,function(){$(".tutorial").remove();var e=DIV(60,520,"auto","auto");e.className="strongShadow tutorial";e.textContent="Attempt To Run";NG.eWin.appendChild(e);tutorialFlash("#runId");flashText(e);T.delayedCall(d1,function(){$(".tutorial").remove();var e=DIV(0,-50,500,"auto");e.className="strongShadow tutorial";e.style.textAlign="center";e.style.position="absolute";e.textContent="Class Skill Buttons";document.getElementById('window3').appendChild(e);tutorialFlash("#window3");flashText(e);T.delayedCall(d1,function(){$(".tutorial").remove();});});});});});}
function checkCC(){$.ajax({data:{run:"checkCC"}}).done(function(data){if(data!="cardNotFound"){$('#CC-last-four').text(data);$('#old-cards').css({display:'block'});$("#last-credit-card").trigger('click');}});}
$(function(){initNG();loadAllCharacters();T.delayedCall(1.5,function(){if($("#createWindowId").length===1){if(location.protocol==="http:"){if(g.view==="Main"||g.view==="Create"){D.getElementById('currencyIndicator').style.display='block';}}}});if(location.protocol==="http:"){if(GLB.gold===undefined){$('#globalGoldCount').text(0);}else{$('#globalGoldCount').text(GLB.gold);}
block(['leftPaneBG']);}else{setTimeout(function(){checkCC();focusLogin();},1500);rememberEmail();titleScreenMusicPlaying=true;}
function do1(){$.ajax({url:"php/keepAlive.php"}).always(function(){setTimeout(function(){do1();},300000);});}
setTimeout(function(){do1();},60000);});function focusLogin(){var x='#loginPassword';if(localStorage.getItem("email")===null){x="#loginEmail";}
$(x).focus();}
function rememberEmail(){if(localStorage.getItem("email")!==null){var email=localStorage.getItem("email");$("#loginEmail").val(email);$("#rememberEmail").prop('checked',true);}}
(function(){initNG2();})();function initNG2(){$NG2={bankBG:$(".bankBG"),bank:$(".bank"),inventoryBG:$(".inventoryBG"),inventory:$(".inventory"),city:$(".city"),cityBG:$(".cityBG"),allEquipment:$(".equipment,.inventory,.bank,.city"),equipmentBG:$(".equipmentBG")};}
function updateAllEquipment(){updateEquipment();updateInventory();updateBank();}
function updateEquipment(){var a=['helmet','neck','ring1','ring2','shoulders','back','chest','bracers','gloves','belt','legs','boots','weapon1','weapon2','range'];for(var i=0;i<=14;i++){var e1=document.getElementById(a[i]);if(e1!=null){var o=P.eq[i];if(o.name){e1.src="//"+itemSprite;e1.style.left=o.xPos+'px';e1.style.top=o.yPos+'px';}else{e1.src="images1/blank.png";}}}}
function updateInventory(){for(var i=0,len=P.item.length;i<len;i++){var e1=document.getElementById("inv"+i);if(e1!==null){var o=P.item[i];if(o.name){e1.src="//"+itemSprite;e1.style.left=o.xPos+'px';e1.style.top=o.yPos+'px';}else{e1.src="images1/blank.png";}}}}
function updateBank(){for(var i=0;i<1080;i++){var e1=document.getElementById("bank"+i);if(e1!==null){var o=P.bank[i];if(o.name){e1.src="//"+itemSprite;e1.style.left=o.xPos+'px';e1.style.top=o.yPos+'px';}else{e1.src="images1/blank.png";}}}}
$(function(){$("#gameView").on('mousedown','.equipment, .inventory, .bank, .city',function(){function setDragItem(){for(var x in dragged[0]){dragged[0][x]=P.item[dragSlot][x];}}
if(itemSwapCount>0){return;}
if(GLB.ks>=7){D.getElementById('destroyItem').textContent="Sell";}else{D.getElementById('destroyItem').textContent="Destroy";}
that=$(this);var X=P.item[dragSlot];var myParent=this.parentNode;if(this.id===dragID){if(this.className==="equipment"){cancelDragging();return;}else if(this.className==="bank"){var NI=findFirstInvSlot();if(NI===false){Error("There is no room in your inventory for that item.");cancelDragging();return;}else{dropID="inv"+NI;dropSlot=$("#"+dropID).parent().index();var qux=$("#"+dragID);classDrop="inventory";flashingBorderTimer.kill();D.getElementById(dragID).parentNode.style.border="2px solid #111";var swap=dropOk();if(swap===true){swapItems();refreshTooltip(qux);}else{if(swap===false){Error("You cannot put that item there.");}else if(swap==="level"){Error("Your level is not high enough to equip this item.");}}
playAudio('equipAccessory');dragStatus=false;dragID="";return;}}}else if(this.className==="city"){dragSlot=((that.parent().index())+24);var X=P.item[dragSlot];merchantMode=true;if(!X.name){Error("This item was previously sold. Please choose another item.");cancelDragging();return;}else{cancelDragging();dragID=that.attr("id");dragStatus=true;D.getElementById(dragID).parentNode.style.border="2px solid #111";setDragFlash(myParent);buyMode=true;playAudio('button_2');var kek=itemSellValue(dragSlot);cost=kek;var baz=logItemName(P.item[dragSlot].name,P.item[dragSlot].rarity);Chat(NPCname+' says, "Buy '+baz+' for '+kek+' gold?"');setDragItem();return;}}
if(that.hasClass("equipment")===true){merchantMode=false;}
buyMode=false;if(upgradeMode){playAudio('button_2');if(that.hasClass("bank")||that.hasClass("equipment")){Error("You must select an item in your inventory!");cityMenuClick();return;}
dragID=that.attr("id");dragSlot=that.parent().index();var X=P.item[dragSlot];classDrag="inventory";if(that.attr("src")==="images1/blank.png"){dragID="";dragStatus=false;Error("There seems to be nothing there.");cityMenuClick();}else{if(X.upgrade>=10){Error("That item cannot be upgraded anymore.");cityMenuClick();return;}
if(X.type==="cloth"||X.type==="leather"||X.type==="chain"||X.type==="plate"||X.type==="slashed"||X.type==="crushed"||X.type==="pierced"||X.type==="cleaved"||X.type==="smashed"||X.type==="shield"||X.type==="offhand"||X.type==="staff"){var that=$(this).parent();var foo=dragID.length;if(foo>0){cost=(X.upgrade+1)*25;if(my.gold<cost){Error("You don't have enough gold.");cityMenuClick();return;}
upgradeMsgUpdate();}}else{Error("That type of item cannot be upgraded.");cityMenuClick();return;}}
return;}
if(dragID.length>0&&dragStatus===true){if(dragID!==""&&dragID===that.attr("id")){if(that.hasClass("bank")){merchantMode=false;var NI=findFirstInvSlot();if(NI===false){Error("There is no room in your inventory for that item.");cancelDragging();return;}
dropID="inv"+NI;dropSlot=$("#"+dropID).parent().index();var qux=$("#"+dragID);classDrop="inventory";flashingBorderTimer.kill();D.getElementById(dragID).parentNode.style.border="2px solid #111";var swap=dropOk();if(swap===true){swapItems();refreshTooltip(qux);}else{if(swap===false){Error("You cannot put that item there.");}else if(swap==="level"){Error("Your level is not high enough to equip this item.");}}
equipSound();dragStatus=false;dragID="";return;}
if(that.hasClass("inventory")){if(X.itemSlot==="helmet"){dropID="helmet";dropSlot=$("#helmet").parent().index();}
if(X.itemSlot==="neck"){dropID="neck";dropSlot=$("#neck").parent().index();}
if(X.itemSlot==="ring"){dropID="ring1";dropSlot=$("#ring1").parent().index();}
if(X.itemSlot==="shoulders"){dropID="shoulders";dropSlot=$("#shoulders").parent().index();}
if(X.itemSlot==="back"){dropID="back";dropSlot=$("#back").parent().index();}
if(X.itemSlot==="chest"){dropID="chest";dropSlot=$("#chest").parent().index();}
if(X.itemSlot==="bracers"){dropID="bracers";dropSlot=$("#bracers").parent().index();}
if(X.itemSlot==="gloves"){dropID="gloves";dropSlot=$("#gloves").parent().index();}
if(X.itemSlot==="belt"){dropID="belt";dropSlot=$("#belt").parent().index();}
if(X.itemSlot==="legs"){dropID="legs";dropSlot=$("#legs").parent().index();}
if(X.itemSlot==="boots"){dropID="boots";dropSlot=$("#boots").parent().index();}
if(X.itemSlot==="weapons"){dropID="weapon1";dropSlot=$("#weapon1").parent().index();}
if(X.type==="shield"||X.type==="offhand"){dropID="weapon2";dropSlot=$("#weapon2").parent().index();}
if(X.itemSlot==="range"){dropID="range";dropSlot=$("#range").parent().index();}
var qux=$("#"+dragID);classDrop="equipment";cacheDropSlot=dropSlot;flashingBorderTimer.kill();D.getElementById(dragID).parentNode.style.border="2px solid #111";var swap=dropOk();if(swap===true){swapItems();refreshTooltip(qux);}else{if(swap===false){Error("You cannot put that item there.");}else if(swap==="level"){Error("Your level is not high enough to equip this item.");}}
equipSound();dragStatus=false;dragID="";return;}else{return;}}
dropID=that.attr("id");dropSlot=that.parent().index();cacheDropSlot=dropSlot;if(that.hasClass("inventory")===true){if(buyMode===true){return;}
classDrop="inventory";}
if(that.hasClass("equipment")===true){merchantMode=false;classDrop="equipment";}
if(that.hasClass("bank")===true){merchantMode=false;classDrop="bank";dropSlot=dropSlot+(activeBankTab*90);}
flashingBorderTimer.kill();if(D.getElementById(dragID)!=null){D.getElementById(dragID).parentNode.style.border="2px solid #111";}
var swap=dropOk();if(swap===true){swapItems();}else{if(swap===false){Error("You cannot put that item there.");}else if(swap==="level"){Error("Your level is not high enough to equip this item.");}}
equipSound();dragStatus=false;dragID="";return;}else{flashingBorderTimer.kill();if(dragID){D.getElementById(dragID).parentNode.style.border="2px solid #111";}
dragID=that.attr("id");dragSlot=that.parent().index();if(that.hasClass("inventory")===true){classDrag="inventory";}
if(that.hasClass("equipment")===true){merchantMode=false;classDrag="equipment";}
if(that.hasClass("bank")===true){merchantMode=false;classDrag="bank";dragSlot=dragSlot+(activeBankTab*90);}
if(that.attr("src")==="images1/blank.png"){dragID="";dragStatus=false;}else{playAudio('equipAccessory');var that=$(this).parent();if(dragID.length>0){dragStatus=true;flashingBorderTimer.kill();setDragFlash(myParent);if(merchantMode===true){dragStatus=true;buyMode=false;var kek=itemSellValue(dragSlot);var baz=logItemName(X.name,X.rarity);Chat(NPCname+' says, "Sell '+baz+' for '+kek+' gold?"');}}
if(classDrag==="inventory"){setDragItem();}
if(classDrag==="equipment"){for(var x in dragged[0]){dragged[0][x]=P.eq[dragSlot][x]}}
if(classDrag==="bank"){for(var x in dragged[0]){dragged[0][x]=P.bank[dragSlot][x]}}}}});});$('#gameView').on('mouseup','.inventory',function(e){if(classDrag==="inventory"&&dragStatus===true&&merchantMode===true&&e.ctrlKey){sellItem();}});function createAccount(){if(createAccountLock===true){return;}
var pw=$("#loginPassword").val();var pw2=$("#loginVerifyPassword").val();var acc=$("#loginAccount").val();var accRawLength=acc.length;var newAcc=acc.replace(/[^A-z]/gmi,'');if(acc.match(/[A-z]/gmi,'').length<accRawLength){QMsg("Your account name should only contain letters.");return;}
if(acc.length<2){QMsg("Your account name must be at least two characters long.");return;}
if(acc.length>16){QMsg("Your account name must be less than 16 characters long.");return;}
if(pw!==pw2){QMsg("Your passwords do not match.");return;}
if(pw.length<6){QMsg("Your password be at least six characters long.");return;}
QMsg("Connecting to server...");createAccountLock=true;$.ajax({data:{run:"createAccount",email:$("#loginEmail").val().toLowerCase(),account:newAcc.toLowerCase().toLowerCase(),password:pw,verify:pw2,promo:$("#promoCode").val().toLowerCase()}}).done(function(data){QMsg(data);if(data==="Account Created!"){$("#loginWrap").css('display','none');$("#enterWorldWrap").css('display','block');T.from('#enterWorldWrap',1,{opacity:0});setCharacterSelectPanel();loadServerCharacters();}
createAccountLock=false;}).fail(function(){failToCommunicate();});}
function setCharacterSelectPanel(){$("#createcharacter").remove();var h='<div id="createcharacter" class="strongShadow NGgradient">Create Character</div>';$('#showCrystals').after(h);$("#deletecharacter").remove();if(charactersFound>0){var h='<div id="deletecharacter" class="strongShadow NGgradient">Delete Character</div>';$('#characterSlotPanel').before(h);}
block('leftPaneBG');D.getElementById('logout').style.display='block';if(charactersFound>0){loadCharacterSlot(1);}}
function authenticate(){if(authenticationLock===true){return;}
if($("#loginEmail").val().length<3){QMsg("This is not a valid email address.");return;}
if($("#loginPassword").val().length<6){QMsg("Passwords must be at least six characters long.");return;}
QMsg("Connecting to server...");authenticationLock=true;if($("#rememberEmail").prop('checked')){var email=$("#loginEmail").val();localStorage.setItem('email',email);}else{localStorage.removeItem('email');}
$.ajax({data:{run:"authenticate",email:$("#loginEmail").val().toLowerCase(),password:$("#loginPassword").val()}}).done(function(data){if(data==="Login successful!"){$("#loginWrap").css('display','none');$("#enterWorldWrap").css('display','block');T.from('#enterWorldWrap',1,{opacity:0});loadServerCharacters();checkCC();}else{QMsg(data);}
authenticationLock=false;}).fail(function(){failToCommunicate();});}
$('#login').on('click',function(){var text=$(this).text();if(text==="Login"){authenticate();}else if(text==="Create Account"){createAccount();}else if(text==="Reset Password"){resetPassword();}});$("#createAccount").on('click',function(){var text=$(this).text();if(text==="Create Account"){$(this).text("Cancel");$(".create-account").css('display','block');$("#emailWrap").css('display','none');D.getElementById('login').textContent="Create Account";$("#loginEmail, #loginPassword, #loginAccount, #loginVerifyPassword").val("");loginMode="create";}else{$(this).text("Create Account");$(".create-account").css('display','none');$("#emailWrap").css('display','block');D.getElementById('login').textContent="Login";$("#loginEmail, #loginPassword, #loginVerifyPassword, #promoCode").val("");loginMode="login";if($("#rememberEmail").prop('checked')){var email=localStorage.getItem("email");$("#loginEmail").val(email);}}});$("#forgotPassword").on('click',function(){if(this.textContent==="Checking..."){return;}
var email=$("#loginEmail").val().toLowerCase();var msg="Forgot Password";$("#forgotPassword").text("Checking...");if(!email||email.length<3){QMsg("Enter a valid email address");$("#forgotPassword").text(msg);return;}
QMsg("Checking account status...");$.ajax({data:{run:"forgotPassword",email:email}}).done(function(data){QMsg(data,0,0,8000);$("#forgotPassword").text(msg);});});var loginMode="login",focusPassword=false,focusPasswordVerify=false,createAccountLock=false,buttonLock=false,authenticationLock=false;$("#loginPassword").on('focus',function(){focusPassword=true;}).on('blur',function(){focusPassword=false;});$("#loginVerifyPassword").on('focus',function(){focusPasswordVerify=true;}).on('blur',function(){focusPasswordVerify=false;});function logout(){g.lockScreen();$('#logout').html("Logging Out");QMsg("Logging out...");$.ajax({data:{run:"logout"}}).done(function(data){QMsg("Logout successful");for(var i=1;i<16;i++){$('#characterslot'+i).css('display',"none");}
$("#createcharacter, #deletecharacter").remove();$('#enterWorldWrap').css('display',"none");$('#loginWrap').css('display',"none");$('#logout').html('');$("#loginPassword").val('');location.reload();}).fail(function(){QMsg("Logout failed.");$('#logout').html("[ "+GLB.account.split("")[0].toUpperCase()+GLB.account.slice(1)+" Logout ]");});}
$("#gameView").on('click','#logout',function(){logout();});g.showCrystals=function(){$("#last-credit-card").css({background:'#777',border:'2px ridge #aaa'}).data('oldcard','false');$("#newCard").css({display:'block',});$("#storeWrap, #payment-form").css('display','block');$("#card-number").focus();if($("#old-cards").css('display')==='block'){$("#last-credit-card").trigger('click');}}
$("#last-credit-card").on('click',function(){$("#card-number, #card-cvc, #card-month, #card-year").val("");$("#payment-errors").text("");if($(this).data('oldcard')==="false"){$(this).css({background:'#080',border:'2px ridge #0d0'}).data('oldcard','true');$("#newCard").css('display','none');$("#rememberCard").prop("checked",false);}else{$(this).css({background:'#777',border:'2px ridge #aaa'}).data('oldcard','false');$("#newCard").css('display','block');$("#rememberCard").prop("checked",true);}});g.storeWrap=function(){$("#storeWrap, #payment-form").css('display','none');}
$(document).ready(function(){$("#deleteCards").on('click',function(e){var that=$(this);that.attr('disabled',true);g.lockScreen();that.text("Deleting...");$.ajax({data:{run:"deleteCards"}}).done(function(data){QMsg("All customer card data has been deleted.");$("#last-credit-card").data("oldcard","false");$('#CC-last-four').text("****");$('#old-cards').css({display:'none'});that.text("Delete Card");$("#newCard").css('display','block');that.attr('disabled',false);g.unlockScreen();}).fail(function(){failToCommunicate();});});$("#payment-confirm").on('click',function(e){function reportError(msg){$("#payment-errors").text(msg);that.attr('disabled',false);g.unlockScreen();}
g.lockScreen();playAudio("button_2");var that=$(this);that.attr('disabled',true);var response={};var ccNum=$('#card-number').val(),cvcNum=$('#card-cvc').val(),expMonth=$('#card-month').val(),expYear=$('#card-year').val(),oldcard=$("#last-credit-card").data("oldcard"),error=false;var lastFour=ccNum.slice(12);if(oldcard==="true"){D.getElementById('payment-errors').textContent='';var response={};response.id="oldCard";stripeResponseHandler('',response);}else{if(!Stripe.validateCardNumber(ccNum)){error=true;reportError('The credit card number appears to be invalid.');}
if(!Stripe.validateCVC(cvcNum)){error=true;reportError('The CVC number appears to be invalid.');}
if(!Stripe.validateExpiry(expMonth,expYear)){error=true;reportError('The expiration date appears to be invalid.');}
if(!error){createToken();}}
function createToken(){Stripe.createToken({number:ccNum,cvc:cvcNum,exp_month:expMonth,exp_year:expYear},stripeResponseHandler);D.getElementById('payment-errors').textContent='';}
function stripeResponseHandler(status,response){if(response.error){reportError(response.error.message);}else{var amount=parseInt($(".purchase").data('amount'),10);var crystals=0;if(amount>1000){amount=1000;}
if(amount<100){amount=100;}
var valid=false;if(amount===100){valid=true;crystals=70;}
if(amount===500){valid=true;crystals=400;}
if(amount===1000){valid=true;crystals=1000;}
var rememberMe="false";if($("#rememberCard").prop('checked')===true){rememberMe="true";}
if(valid===true){$.ajax({data:{run:"submitCC",stripeToken:response.id,amount:amount,crystals:crystals,lastFour:lastFour,oldcard:oldcard,rememberMe:rememberMe}}).done(function(data){var a=data.split("|");if(a[0]==="Error"){D.getElementById('payment-errors').textContent=a[1];}else{g.storeWrap();var o={};if(amount===1000){QMsg("You have spent $10 on 1000 Never Crystals");o.add=1000;}else if(amount===500){QMsg("You have spent $5 on 400 Never Crystals");o.add=400;}else{QMsg("You have spent $1 on 70 Never Crystals");o.add=70;}
var e=D.getElementById('crystalCount');o.start=parseInt(e.textContent,10);o.end=o.start+o.add;T.to(o,2,{start:o.end,onUpdate:function(){e.textContent=~~o.start;}});checkCC();}
that.attr('disabled',false);g.unlockScreen();}).fail(function(){failToCommunicate();});}}}});$("#resetPW").on('click',function(){if(buttonLock===true){return;}
if($("#resetPassword").val()!==$("#resetVerifyPassword").val()){QMsg("Your passwords do not match.");return;}
if($("#resetPassword").val().length<6){QMsg("Your password be at least six characters long.");return;}
QMsg("Connecting to server...");g.lockScreen();$.ajax({data:{run:"resetPW",password:$("#resetPassword").val(),verify:$("#resetVerifyPassword").val()}}).done(function(data){if(data==="Password Reset Successful."){D.getElementById('loginWrap').style.display='none';QMsg("Your password has been reset!");QMsg("You will be redirected in five seconds.");setTimeout(function(){location.reload('https://nevergrind.com');},5000);}else{QMsg("There was a server error when resetting your password.");}
g.unlockScreen();}).fail(function(){failToCommunicate();});});});$(".floater").on('click',function(){var that=this;var e=D.getElementsByClassName('floater');for(var i=0;i<e.length;i++){e[i].className="floater";}
that.className+=" purchase";var amount=parseInt($(".purchase").data('amount'),10);var e1=D.getElementById('crystalsExplained');if(amount===1000){e1.textContent="$10 will purchase 1000 Never Crystals";}else if(amount===500){e1.textContent="$5 will purchase 400 Never Crystals";}else{e1.textContent="$1 will purchase 70 Never Crystals";}});$("#addBankSlots").on('click',function(){if(buttonLock===false){g.lockScreen(true);QMsg("Contacting server...");$.ajax({url:'php/town1.php',data:{run:"addBankSlots"}}).done(function(data){cLog(data);var a=data.split("|");if(a[0]=='maxed'){QMsg("You cannot have more than 1080 bank slots per account.");}else if(a[0]=='buyCrystals'){QMsg("Please purchase Never Crystals from the title screen to purchase bank slots.");}else if(a[0]=='pay40'){playAudio("buyitem");QMsg("You added 10 bank slots for 40 Never Crystals.");QMsg("Bank Slots Available: "+a[2]);QMsg("Crystals Remaining: "+a[3]);cancelMySpell();bankToggle();setCrystals();}
g.unlockScreen();}).fail(function(){failToCommunicate();});}});g.lockScreen=function(bypass){buttonLock=true;if(!bypass){T.set('#lockOverlay',{boxShadow:'0 720px rgba(0,0,0,.7) inset',display:'block'});}else{T.set('#lockOverlay',{display:'block'});}}
g.unlockScreen=function(d){buttonLock=false;if(!d){d=0;}
T.to('#lockOverlay',d,{boxShadow:'0 720px rgba(0,0,0,0) inset',onComplete:function(){T.set('#lockOverlay',{display:'none'});}});}
$(".fire").on('click',function(){var id=this.id;g[id](id);});$("#gameView").on('dragstart','img',function(e){e.preventDefault();});function checkSessionActive(){if(location.protocol==='https:'){$.ajax({data:{run:"checkSessionActive"}}).done(function(data){if(!data){if(g.view!=="Main"){Error("Your session has timed out.");setTimeout(function(){serverLogout();},5000);}}});}}
function keepSessionAlive(){$.ajax({url:"php/ping.php",data:{my:my,zone:myZone()}}).done(function(data){var count=data*1;function do1(foo){if(g.view!=="Main"){if(foo===2222){Error("The server is going down for maintenance.");}else{Error("You have been disconnected from the server. Logging out.");}
setTimeout(function(){window.onbeforeunload=null;logout();},5000);}}
if(isNaN(data)){do1();}else if(count===1111){do1();}else if(count===2222){do1(2222);}else{if(count>=3){Error("Multiple logins detected. Logging out.");setTimeout(function(){logout();},5000);}}
setTimeout(function(){keepSessionAlive();},20000);}).fail(function(){failToCommunicate();});}
(function(){var e=new Image();e.src='backgrounds/home.jpg';})();function run(){if(my.hp<=0||paused===true){return;}
if(attackStatus===1){Chat("There's nothing to run away from!");return;}
if(attackStatus===0&&mobsFound()===false){escapedFromBattle();return;}
if(castingSpell===0){Error("You cannot run while casting a spell!");return;}
if(cityStatus===true||dev){escapedFromBattle();return;}
if(mob[2].rare===3){Error(("You cannot run from "+mob[2].name+"!"));return;}
if(my.race!=="Halfling"){if(bashStatus===0){Error(("You are stunned!"));return;}
if(fearStatus===0){Error(("You are stunned!"));return;}
if(rootStatus===0){Error(("You are rooted!"));return;}}
if(btn.d.runId===true){return;}
function finishRun(){if(mobsFound()===false){return;}
if(my.race!=="Halfling"){if(bashStatus===0){Chat(("You cannot run while stunned!"));return;}
if(fearStatus===0){Chat(("You cannot run while feared!"));return;}
if(rootStatus===0){Chat(("You cannot run while rooted!"));return;}}
if(escapeChance()>M.random()*200){Chat(("You manage to escape this time!"));if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
escapedFromBattle();return;}else{runBonus+=10;var Slot=selectHighestMob();Chat(mob[Slot].name+" blocks your path!");}}
function skillReady(){runTimer2.kill();setD('runId',false);BGP('runId',"-100% -200%");return;}
beginGlobalCooldown();var runCooldown=6000;if(mob[0].engulfingDarknessTicks!==0||mob[1].engulfingDarknessTicks!==0||mob[2].engulfingDarknessTicks!==0||mob[3].engulfingDarknessTicks!==0){runCooldown=runCooldown*2;}
setD('runId',true);BGP('runId',"-100% -300%");if(my.race!=="Halfling"){runTimer2.kill();runTimer2=T.to('',runCooldown/1000,{repeat:-1,onRepeat:skillReady});}else{runTimer2.kill();runCooldown-=1;runTimer2=T.to('',runCooldown/1000,{repeat:-1,onRepeat:skillReady});}
timerTick(D.getElementById('runId'),runCooldown/1000,'runId');Chat("You attempt to run for your life.");runTimer=T.delayedCall(3,finishRun);}
function selectHighestMob(){var max=0;var Slot=0;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].level>max){Slot=i;max=mob[i].level;}}
return Slot;}
function escapeChance(){var qux=selectHighestMob();if(mob[qux].level<=my.level){var foo=M.round(35+((my.level-mob[qux].level)*2));}
if(mob[qux].level>my.level){var foo=M.round(35-((mob[qux].level-my.level)*5));}
if(mob[qux].level-5>=my.level){var foo=15;}
if(foo>75){foo=75;}
foo=(foo+(M.round(min70(agiTotal()))/8));if(foo>=100){foo=100;}
if(mob[qux].snareStatus===true||mob[qux].chillStatus===true||mob[qux].rootStatus>0||mob[qux].doomingDarknessTickCount>0||mob[qux].cascadingDarknessTickCount>0){foo+=4;}
if(sowStatus===true){foo+=8;}
if(accelerandoStatus===true){foo+=10;}
var levelAssist=M.round(25-(my.level/2));foo+=levelAssist;var zug=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].ensnaringAura==true){zug=true;continue;}}
if(zug==true){foo=foo*.66;}
foo+=runBonus;foo+=g.runSpeedEquip;return foo;}
function escapedFromBattle(){setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(3,resetAddMonster);timerTick(D.getElementById('addmonsterId'),3,'addmonsterId');resetBosses();NG.mobTraits.innerHTML="";castingSpell=1;if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
ambushStatus=1;petAttack.kill()
myAttack.kill();myAttack2.kill();monsterConfuseCooldown.kill();Mname="";for(var i=0;i<=4;i++){mob[i].attackStatus=1;}
runBonus=0;ancestralFlurryTimeout.kill();rapidShotDelay.kill();if(bardSingStatus===true){bardSinging();}
if((my.job==="Bard"||my.job==="Enchanter")&&petName!==""){songOfTheSirensTicking.kill();mob[charmSlot].charmStatus=false;petName="";$("#pethpbardiv").css('display','none');}
for(var i=0;i<=4;i++){mob[i].doomingDarknessInterval.kill();mob[i].heatBloodInterval.kill();mob[i].slowTimer.kill();mob[i].consonantChain=0;mob[i].euphonicHymn=0;mob[i].martyr=false;mob[i].togorsInsectsTimeout.kill();mob[i].slowStatus=false;mob[i].regenStatus=true;mob[i].attack.kill();mob[i].spellActive.kill();mob[i].thornsTimer.kill();mob[i].thornsActive=1;mob[i].lavaShieldActive=1;mob[i].runeHp=0;mob[i].rare=1;mob[i].castingStatus=false;mob[i].widowStrikeInterval.kill();mob[i].widowStrikeTickCount=0;mob[i].hemorrhageInterval.kill();mob[i].furiousScorn=0;mob[i].faerieFlameTickInterval.kill();mob[i].snareStatus=false;mob[i].dazeTimer.kill();mob[i].dazeStatus=false;$(".freezeIcon"+i).remove();mob[i].shatterStatus=false;mob[i].frozenStatus=false;mob[i].name="";mob[i].ID=0;$("#fearIcon"+i).remove();$("#iceIcon"+i).remove();$("#rootIcon"+i+",#rootBuffIcon"+i).remove();stopMob(i);MOBNAME[i].style.color='#00fa9a';MOBNAME[i].innerHTML='';mob[i].riftStatus=false;$("#orbIcon"+i).remove();hideMob(i);}
tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;castingGlobal=1;$("#mobBar").css("visibility","hidden");attackStatus=1;my.escapes+=1;clearMobIcons();reportBattleStats();save.my();if(g.showPortal){makePortal();}}
function hideMob(Slot,death){T.killTweensOf(MOB[Slot]);T.killChildTweensOf(MOB[Slot]);if(Slot===undefined){Slot=TGT;}
mob[Slot].attack.kill();if(death===true){tint(2,'lightning',.5);}
T.to(MOB[Slot],.5,{opacity:0,ease:ez.cout,onComplete:function(){stage[Slot].removeAllChildren();MOB[Slot].style.display='none';}});}
function monsterKilledMe(){if(my.job==="Cleric"&&my.talent2>=20&&miracleStatus===false){resoluteMiracle();return;}
runTimer.kill();stunCooldown.kill();myHpTick.kill();myMpTick.kill();doubletimer2.kill();doubletimer1.kill();if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
humanRacial.kill();secondWindStatus=false;eruditeRacial.kill();barbarianRacial.kill();ancestralRampageStatus=false;woodElfRacial.kill();woodElfRacial.kill();darkElfRacial.kill();sanguineTormentStatus=false;gnomeRacial.kill();shortCircuitStatus=false;dwarfRacial.kill();graniteVisageStatus=false;myCounter=false;hyperStrikeValue=0;hyperStrikeTimeout.kill();hyperStrikeCount=0;illusiveMistStatus=1;triageTickCount=0;triageInterval.kill();frenziedRampageHasteStatus=false;if(my.job==="Warrior"){bulwarkTimeout.kill();bulwarkExpire();}
ancestralFlurryTimeout.kill();eagleStrikeStatus=false;cheetahStrikeTimeout.kill();cheetahStrikeStatus=false;rapidShotDelay.kill();thistlecoatTimeout.kill();thistlecoatStatus=false;feetLikeCatTimeout.kill();feetLikeCatStatus=false;spiritOfTheWolfTimeout.kill();feetLikeCatStatus=false;yaulpTimeout.kill();yaulpStatus=false;valorTimeout.kill();valorStatus=false;spiritArmorTimeout.kill();spiritArmorStatus=false;divineProvidenceStatus=false;symbolOfRyltanTimeout.kill();symbolOfRyltanStatus=false;if(siphonStrengthStatus===true){siphonStrengthTimeout.kill();siphonStrengthStatus=false;}
if(shadowVortexStatus===true){shadowVortexTimeout.kill();shadowVortexStatus=false;}
if(resistColdStatus===true){resistColdTimeout.kill();resistColdStatus=false;}
if(g.petAlive===true){slainPet();petHp=0;}
chantOfBattleTimeout.kill();chantOfBattleTicking.kill();chordsOfDissonanceTimeout.kill();chordsOfDissonanceTicking.kill();accelerandoTimeout.kill();accelerandoTicking.kill();hymnOfRestorationTimeout.kill();hymnOfRestorationTicking.kill();anthemDeArmsTimeout.kill();anthemDeArmsTicking.kill();boastfulBellowTimeout.kill();elementalRhythmsTimeout.kill();elementalRhythmsTicking.kill();consonantChainTimeout.kill();songOfTheSirensTimeout.kill();dissensionTimeout.kill();chorusOfClarityTimeout.kill();chorusOfClarityTicking.kill();euphonicHymnTimeout.kill();shieldOfSongsTimeout.kill();desperateDirgeTimeout.kill();desperateDirgeTicking.kill();songOfTheSirensTicking.kill();chantOfBattleTicking.kill();chantOfBattleStatus=false;chantOfBattleArmor=0;chantOfBattleStr=0;chantOfBattleDex=0;chordsOfDissonanceStatus=false;chordsOfDissonanceTimeout.kill();accelerandoTicking.kill();accelerandoStatus=false;hymnOfRestorationTicking.kill();hymnOfRestorationStatus=false;anthemDeArmsTicking.kill();anthemDeArmsStatus=false;anthemDeArmsStr=0;anthemDeArmsHaste=0;elementalRhythmsTicking.kill();elementalRhythmsStatus=false;elementalRhythmsMagic=0;elementalRhythmsLightning=0;elementalRhythmsCold=0;elementalRhythmsFire=0;chorusOfClarityStatus=false;desperateDirgeStatus=false;desperateDirgeTimeout.kill();skinLikeNatureStatus=false;resolutionTimeout.kill();resolutionStatus=false;armorOfFaithTimeout.kill();armorOfFaithStatus=false;divineSanctuaryTimeout.kill();divineSanctuaryStatus=false;markOfJudgementStatus=false;markOfJudgementTiming.kill();symbolOfNaltronTimeout.kill();symbolOfNaltronStatus=false;callOfTheAncientsStatus=false;reclaimBloodInterval.kill();talismanOfAltunaTimeout.kill();talismanOfAltunaStatus=false;bloodlustStatus=false;archShieldingTimeout.kill();archShieldingStatus=false;alacrityStatus=false;discordantBarrierTimeout.kill();discordantBarrierStatus=false;adorningGraceTimeout.kill();adorningGraceStatus=false;enchantWeaponStatus=false;phantomPlateTimeout.kill();phantomPlateStatus=false;spiritArmorTimeout.kill();elementalArmorStatus=false;manaShieldTimeout.kill();manaShieldStatus=false;viziersShieldingStatus=false;mirrorImageStatus=0;mob[charmSlot].charmStatus=false;petName="";$("#pethpbardiv").css('display','none');stunCooldown.kill();bashStatus=1;monsterMindNumbCooldown.kill();mindNumbActive=1;monsterWeakenCooldown.kill();weakenActive=1;monsterYawnCooldown.kill();yawnActive=1;monsterRootCooldown.kill();rootStatus=1;setD('runId',false);BGP('runId',"-100% -200%");monsterFearCooldown.kill();fearStatus=1;T.set(D.getElementById('spellblind'),{opacity:0,background:'transparent'});monsterBlindCooldown.kill();g.blindStatus=1;monsterConfuseCooldownComplete.kill();confuseStatus=false;monsterConfuseCooldown.kill();blizzardStatus=1;silenceStatus=false;for(var i=0;i<=4;i++){mob[i].widowStrikeInterval.kill();mob[i].widowStrikeTickCount=0;mob[i].lacerate=0;mob[i].hemorrhageInterval.kill();mob[i].furiousScorn=0;mob[i].faerieFlameTickInterval.kill();mob[i].snareStatus=false;mob[i].blindStatus=false;mob[i].dazeTimer.kill();mob[i].dazeStatus=false;mob[i].doomingDarknessInterval.kill();mob[i].heatBloodInterval.kill();mob[i].slowTimer.kill();mob[i].consonantChain=0;mob[i].euphonicHymn=0;mob[i].martyr=false;mob[i].togorsInsectsTimeout.kill();mob[i].slowStatus=false;mob[i].regenStatus=true;mob[i].attack.kill();mob[i].thornsTimer.kill();mob[i].spellActive.kill();mob[i].dotActive.kill();mob[i].castingStatus=false;mob[i].thornsActive=1;mob[i].lavaShieldActive=1;mob[i].runeHp=0;mob[i].envenomTicks=0;mob[i].engulfingDarknessTicks=0;mob[i].staticFieldTicks=0;mob[i].blizzardTicks=0;mob[i].conflagrationTicks=0;mob[i].rare=1;mob[i].shatterStatus=false;mob[i].silenced=false;mob[i].frozenStatus=false;mob[i].name="";mob[i].ID=0;$("#fearIcon"+i).remove();$(".freezeIcon"+i).remove();$("#iceIcon"+i).remove();$("#orbIcon"+i).remove();$("#boastfulIcon"+i).remove();mob[i].riftStatus=false;}
$("#hurricaneImage,#hurricaneImage2").stop(true,true).remove();chilledTimer.kill();chillStatus=false;attackStatus=1;$(".buffIcons").remove();clearBuffTimers();clearMobIcons();humanRacial.kill();secondWindStatus=false;ancestralRampageStatus=false;eruditeRacial.kill();woodElfRacial.kill();woodElfRacial.kill();alacrityTimeout.kill();sanguineTormentStatus=false;graniteVisageStatus=false;shortCircuitStatus=false;strBuff=0;staBuff=0;intelBuff=0;wisBuff=0;dexBuff=0;agiBuff=0;chaBuff=0;maxHpBuff=0;maxMpBuff=0;attackPowerBuff=0;armorBuff=0;svpoisonBuff=0;svmagicBuff=0;svlightningBuff=0;svcoldBuff=0;svfireBuff=0;cooldownDurationBuff=0;spellHasteBuff=0;hasteBuff=0;phyMitBuff=0;magMitBuff=0;highestElement=setHighestElement();setMinimumWeaponSpeed();if(enteredWorld===true){CStat();NG.spellbardiv.style.display="none";tlSpellbar.kill();castingSpell=1;castingGlobal=1;for(var i=0;i<=4;i++){MOBNAME[i].style.color='#00FA9A';MOBNAME[i].innerHTML='';}
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
setCurtainColor("#b22222");T.to(spellCurtain,.1,{alpha:.7});var string='<span class="deathCapital">Y</span>OU <span class="deathCapital">H</span>AVE <span class="deathCapital">D</span>IED'+'<br><div id="battleReportOK"><span class="deathCapital">R</span>ESURRECT</div> ';if(my.hardcoreMode==='true'){string='<span class="deathCapital">Y</span>OUR <span class="deathCapital">D</span>EEDS <span class="deathCapital">W</span>ILL'+'<br>'+'<span class="deathCapital">B</span>E <span class="deathCapital">R</span>EMEMBERED';my.deaths+=1;T.pauseAll();window.onbeforeunload=null;}else{var z=0;var lvl=my.level;if(lvl>=1&&lvl<10){z=M.ceil(my.gold*.05);}
if(lvl>=10&&lvl<20){z=M.ceil(my.gold*.1);}
if(lvl>=20&&lvl<30){z=M.ceil(my.gold*.15);}
if(lvl>=30){z=M.ceil(my.gold*.2);}
if(z>((g.difficulty*lvl)*100)){z=((g.difficulty*lvl)*100);}
var lastLevel=nextLevel(lvl-1);var expSpan=nextLevel()-lastLevel;var expPenalty=0;if(lvl>=6){expPenalty=~~(expSpan*(.2*(lvl/98)));}
var expThisLevel=my.exp-lastLevel;if(expPenalty>expThisLevel){expPenalty=expThisLevel;}
g.lostExp=expPenalty;g.lostGold=z;g.oldExp=my.exp;if(expPenalty>0&&lvl>=6){if(location.protocol==='https:'){$.ajax({url:'php/game1.php',data:{run:"updateExpGold",lastName:my.lastName,title:my.title,level:my.level,job:my.job,race:my.race,exp:expPenalty*-1,gold:z*-1,name:my.name}}).done(function(data){my.exp-=expPenalty;my.gold-=z;}).fail(function(data){failToCommunicate();});}else{my.exp-=expPenalty;my.gold-=z;}}
my.deaths+=1;saveGame();}
$("#deathScreen").html(string).css("display","block");var zit="death_mb";if(my.gender==="Female"){zit="death_fl";}
playAudio(zit);if($("#worldMap").css("display")==="block"){travelToggle();}
T.delayedCall(.1,function(){g.drawMyHp();});save.my();if(my.hardcoreMode==='true'){g.hardcoreDeathStatus=true;}}
setEquipValues();}
function levelUpPierce(){var x=my.piercing;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Rogue"){if(x>=400){return false;}}else if(z==="Necromancer"||z==="Wizard"||z==="Magician"||z==="Enchanter"){if(x>=150){return false;}}else{if(x>=360){return false;}}
my.piercing+=1;CStat();Chat(("Your piercing has increased! ("+(x+1)+")"),4);return true;}
function levelUp1hb(){var x=my.oneHandBlunt;var z=my.job;if(x>=my.level*5){return false;}
if(z==="Necromancer"||z==="Wizard"||z==="Magician"||z==="Enchanter"){if(x>=150){return false;}}else if(z==="Monk"||z==="Rogue"){if(x>=400){return false;}}else if(z==="Druid"||z==="Cleric"){if(x>=300){return false;}}else{if(x>=360){return false;}}
my.oneHandBlunt+=1;CStat();Chat(("Your one-hand blunt has increased! ("+(x+1)+")"),4);return true;}
function levelUp2hb(){var x=my.twoHandBlunt;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Necromancer"||z==="Wizard"||z==="Magician"||z==="Enchanter"){if(x>=150){return false;}}else if(z==="Monk"){if(x>=400){return false;}}else if(z==="Druid"||z==="Cleric"){if(x>=300){return false;}}else{if(x>=360){return false;}}
my.twoHandBlunt+=1;CStat();Chat("Your two-hand blunt has increased! ("+(x+1)+")",4);return true;}
function levelUp1hs(){var x=my.oneHandSlash;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Druid"){if(x>=300){return false;}}else if(z==="Rogue"){if(x>=400){return false;}}else{if(x>=360){return false;}}
my.oneHandSlash+=1;CStat();Chat(("Your one-hand slashing has increased! ("+(x+1)+")"),4);return true;}
function levelUp2hs(){var x=my.twoHandSlash;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(x>=360){return false;}
my.twoHandSlash+=1;CStat();Chat(("Your two-hand slashing has increased! ("+(x+1)+")"),4);return true;}
function levelUpH2h(){var x=my.handtohand;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z!=="Monk"){if(x>=100){return false;}}else{if(x>=400){return false;}}
my.handtohand+=1;updatePunchDamage();CStat();Chat(("Your hand to hand has increased! ("+(x+1)+")"),4);return true;}
function levelUpDefense(){var x=my.defense;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Warrior"){if(x>=240){return false;}}else if(z==="Monk"){if(x>=230){return false;}}else if(z==="Paladin"||z==="Shadow Knight"){if(x>=210){return false;}}else if(z==="Ranger"||z==="Rogue"||z==="Cleric"||z==="Druid"||z==="Shaman"||z==="Bard"){if(x>=200){return false;}}else{if(x>=150){return false;}}
my.defense+=1;CStat();Chat(("Your defense has increased! ("+(x+1)+")"),4);return true;}
function levelUpOffense(){var x=my.offense;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Monk"||z==="Rogue"){if(x>=240){return false;}}else if(z==="Warrior"||z==="Ranger"){if(x>=220){return false;}}else if(z==="Paladin"||z==="Shadow Knight"||z==="Bard"||z==="Cleric"||z==="Shaman"||z==="Druid"){if(x>=200){return false;}}else{if(x>=150){return false;}}
my.offense+=1;CStat();Chat(("Your offense has increased! ("+(x+1)+")"),4);return true;}
function levelUpDualWield(){var x=my.dualWield;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Monk"){if(x>=250){return false;}}else{if(x>=210){return false;}}
my.dualWield+=1;CStat();Chat(("Your dual wield has increased! ("+(x+1)+")"),4);return true;}
function levelUpDoubleAttack(){var x=my.doubleAttack;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Warrior"||z==="Ranger"){if(x>=220){return false;}}else if(z==="Monk"||z==="Rogue"){if(x>=240){return false;}}else{if(x>=200){return false;}}
my.doubleAttack+=1;CStat();Chat(("Your double attack has increased! ("+(x+1)+")"),4);return true;}
function levelUpDodge(){var x=my.dodge;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Monk"){if(x>=200){return false;}}else if(z==="Rogue"){if(x>=175){return false;}}else if(z==="Ranger"||z==="Warrior"){if(x>=140){return false;}}else if(z==="Paladin"||z==="Shadow Knight"||z==="Bard"){if(x>=125){return false;}}else{if(x===75){return false;}}
my.dodge+=1;CStat();Chat(("Your dodge has increased! ("+(x+1)+")"),4);return true;}
function levelUpParry(){var x=my.parry;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Ranger"){if(x>=185){return false;}}else if(z==="Paladin"||z==="Shadow Knight"){if(x>=175){return false;}}else if(z==="Bard"){if(x>=75){return false;}}else{if(x>=200){return false;}}
my.parry+=1;CStat();if(z!=="Monk"){Chat(("Your parry has increased! ("+(x+1)+")"),4);}else{Chat(("Your block has increased! ("+(x+1)+")"),4);}
return true;}
function levelUpRiposte(){var x=my.riposte;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Paladin"||z==="Shadow Knight"){if(x>=175){return false;}}else if(z==="Ranger"){if(x>=150){return false;}}else if(z==="Bard"){if(x>=75){return false;}}else{if(x>=200){return false;}}
my.riposte+=1;CStat();Chat(("Your riposte has increased! ("+(x+1)+")"),4);return true;}
function levelUpAlteration(){var x=my.alteration;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Cleric"||z==="Shaman"||z==="Enchanter"){if(x>=400){return false;}}else if(z==="Bard"){if(x>=390){return false;}}else if(z==="Necromancer"||z==="Magician"||z==="Wizard"){if(x>=380){return false;}}else if(z==="Druid"){if(x>=375){return false;}}else{if(x>=350){return false;}}
my.alteration+=1;CStat();if(z!=="Bard"){Chat(("Your alteration has increased! ("+(x+1)+")"),4);}else{Chat(("Your singing has increased! ("+(x+1)+")"),4);}
return true;}
function levelUpAbjuration(){var x=my.abjuration;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(JOB.jobType==="hybrid"){if(x>=350){return false;}}else if(z==="Bard"){if(x>=390){return false;}}else if(z==="Wizard"||z==="Necromancer"||z==="Magician"){if(x>=390){return false;}}else if(z==="Druid"){if(x>=375){return false;}}else{if(x>=400){return false;}}
my.abjuration+=1;CStat();if(z!=="Bard"){Chat(("Your abjuration has increased! ("+(x+1)+")"),4);}else{Chat(("Your string instrument skill has increased! ("+(x+1)+")"),4);}
return true;}
function levelUpConjuration(){var x=my.conjuration;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Necromancer"||z==="Magician"){if(x>=400){return false;}}else if(z==="Bard"){if(x>=390){return false;}}else if(z==="Enchanter"||z==="Wizard"){if(x>=380){return false;}}else if(z==="Shaman"||z==="Druid"){if(x>=375){return false;}}else{if(x>=350){return false;}}
my.conjuration+=1;CStat();if(z!=="Bard"){Chat(("Your conjuration has increased! ("+(x+1)+")"),4);}else{Chat(("Your wind instrument skill has increased! ("+(x+1)+")"),4);}
return true;}
function levelUpEvocation(){var x=my.evocation;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Wizard"){if(x>=400){return false;}}else if(z==="Bard"){if(x>=390){return false;}}else if(z==="Enchanter"||z==="Necromancer"||z==="Magician"){if(x>=380){return false;}}else if(z==="Shaman"||z==="Druid"){if(x>=375){return false;}}else{if(x>=350){return false;}}
my.evocation+=1;CStat();if(z!=="Bard"){Chat(("Your evocation has increased! ("+(x+1)+")"),4);}else{Chat(("Your percussion instrument skill has increased! ("+(x+1)+")"),4);}
return true;}
function levelUpChanneling(){var x=my.channeling;var z=my.job;if(x<1){return false;}
if(x>=my.level*5){return false;}
if(z==="Bard"){if(x>=390){return false;}}else if(z==="Shaman"||z==="Druid"||z==="Cleric"){if(x>=380){return false;}}else if(z==="Ranger"||z==="Paladin"||z==="Shadow Knight"){if(x>=350){return false;}}else{if(x>=400){return false;}}
my.channeling+=1;CStat();if(z!=="Bard"){Chat(("Your channeling has increased! ("+(x+1)+")"),4);}else{Chat(("Your brass instrument skill has increased! ("+(x+1)+")"),4);}
return true;}
function maxAllSkills(){if(location.pathname==='/ng/'){for(var i=0;i<=400;i++){levelUpPierce();levelUp1hb();levelUp2hb();levelUp1hs();levelUp2hs();levelUpH2h();levelUpDefense();levelUpOffense();levelUpDualWield();levelUpDoubleAttack();levelUpDodge();levelUpParry();levelUpRiposte();levelUpAlteration();levelUpAbjuration();levelUpConjuration();levelUpEvocation();levelUpChanneling();}}}
function getDamage(){myAttack.kill();if(attackStatus===1){return;}
if(castingSpell===0||mob[TGT].charmStatus===true||g.autoAttackStatus===1||currentSpell==="Ice Block"){if(myFrenzy===false){myAttack=T.delayedCall(.1,getDamage);autoAttackTimer(.1);}else{myAttack=T.delayedCall(.1,getDamage);autoAttackTimer(.1);}
return;}
if(attackStatus===0&&g.autoAttackStatus===0){if(P.eq[12].type==="slashed"){if(skillLevelUp()>my.oneHandSlash){levelUp1hs();}}else if(P.eq[12].type==="crushed"){if(skillLevelUp()>my.oneHandBlunt){levelUp1hb();}}else if(P.eq[12].type==="cleaved"){if(skillLevelUp()>my.twoHandSlash){levelUp2hs();}}else if(P.eq[12].type==="smashed"||"staff"===P.eq[12].type){if(skillLevelUp()>my.twoHandBlunt){levelUp2hb();}}else if(P.eq[12].type==="pierced"){if(skillLevelUp()>my.piercing){levelUpPierce();}}else if(P.eq[12].type==="punched"){if(skillLevelUp()>my.handtohand){levelUpH2h();}}
if(my.offense<my.level*5){if(skillLevelUp()>my.offense){levelUpOffense();}}
if(my.doubleAttack<my.level*5){if(skillLevelUp()>my.doubleAttack){levelUpDoubleAttack();}}}
calculateAutoAttackDamage(true);if(my.job==="Cleric"){if(my.talent5>=1){var hits=M.ceil(talent5()/4);function doit(hits){if(hits>0){calculateAutoAttackDamage(true);T.delayedCall(.15,function(){doit(--hits);});}}
doit(hits);}}else if(my.job==="Shaman"){if(my.talent11>=1){var hits=M.ceil(talent11()/5.8);function doit(hits){if(hits>0){calculateAutoAttackDamage(true);T.delayedCall(.15,function(){doit(--hits);});}}
doit(hits);}}else if(my.job==="Enchanter"){if(my.talent8>=1){var hits=M.ceil(talent8()/4);function doit(hits){if(hits>0){calculateAutoAttackDamage(true);T.delayedCall(.15,function(){doit(--hits);});}}
doit(hits);}}else if(my.job==="Ranger"){if(my.talent3>=1){var hits=M.ceil(talent3()/5.8);function doit(hits){if(hits>0){calculateAutoAttackDamage(true);T.delayedCall(.15,function(){doit(--hits);});}}
doit(hits);}}else if(my.job==="Warrior"){if(my.talent8>=20){var hits=5;function doit(hits){if(hits>0){calculateAutoAttackDamage(true);T.delayedCall(.15,function(){doit(--hits);});}}
doit(hits);}}
if(P.eq[12].proc!==""){if(g.autoAttackStatus===0){if(mob[TGT].name){var procAdd=(min70(dexTotal())/8);if(procAdd>50){procAdd=50;}
var procVal=M.random()*400+procAdd;if(procVal>380){checkProc(12);}}}}
if(my.doubleAttack>=1){if(M.random()*100<doubleAttackChance()){doubletimer1=T.delayedCall(.25,function(){calculateAutoAttackDamage(true,0,true);});}}
if(attackStatus!==0){return;}
if(myFrenzy===false){var d=totalHaste1()/1000;myAttack=T.delayedCall(d,getDamage);autoAttackTimer(d);}else{var d=frenzyRate/1000;myAttack=T.delayedCall(d,getDamage);autoAttackTimer(d);}}
function getDamage2(){myAttack2.kill();if(attackStatus===1){return;}
if(mob[TGT].charmStatus===true||castingSpell===0||g.autoAttackStatus===1||P.eq[12].type==="cleaved"||P.eq[12].type==="smashed"||P.eq[12].type==="staff"||P.eq[13].itemSlot==="shield"){if(myFrenzy===false){myAttack2=T.delayedCall(.1,getDamage2);}else{myAttack2=T.delayedCall(.1,getDamage2);}
return;}
if(attackStatus===0){if(skillLevelUp()>my.dualWield){levelUpDualWield();}}
if(M.random()*100<dualWieldChance()){if(attackStatus===0&&g.autoAttackStatus===0){if(P.eq[13].type==="slashed"){if(skillLevelUp()>my.oneHandSlash){levelUp1hs();}}else if(P.eq[13].type==="crushed"){if(skillLevelUp()>my.oneHandBlunt){levelUp1hb();}}else if(P.eq[13].type==="pierced"){if(skillLevelUp()>my.piercing){levelUpPierce();}}else if(P.eq[13].type==="punched"){if(skillLevelUp()>my.handtohand){levelUpH2h();}}}
calculateAutoAttackDamage(false);if(P.eq[13].proc!==""){if(g.autoAttackStatus===0){if(mob[TGT].name){var procAdd=(min70(dexTotal())/8);if(procAdd>50){procAdd=50;}
var procVal=M.random()*400+procAdd;if(procVal>380){checkProc(13);}}}}
if(my.doubleAttack>=1){if(M.random()*100<doubleAttackChance()){doubletimer2=T.delayedCall(.25,function(){calculateAutoAttackDamage(false,0,true);});}}}
if(attackStatus!==0){return;}
if(myFrenzy===false){myAttack2=T.delayedCall(totalHaste2()/1000,getDamage2);}else{myAttack2=T.delayedCall(frenzyRate/1000,getDamage2);}}
function summonWolfFamiliar(name,maxDam,minDam){if(!name){name="Grovecaller";}
g.familiarName=name;if(!maxDam){maxDam=255;}
if(!minDam){minDam=125;}
animateDot(TGT,"white");Chat(my.name+' summons a familiar of the '+name+'.',3);playAudio("spellCastAbjure");familiarId++;familiar[familiarId]=$('<img id="mistwalkerId'+familiarId+'">').css({position:"absolute",bottom:50,left:-50,opacity:0,width:400}).attr("src","images1/a white wolf.png").appendTo($NG.eWin2);T.to(familiar[familiarId],.5,{opacity:1});function gogogo(count,familiarId){if(count<=5){if(mobsFound()===false){T.delayedCall(.5,gogogo,[count,familiarId]);}else{var damage=~~(M.random()*maxDam)+minDam;g.petPhysical(damage,TGT,"physical",true);if(M.random()>.6){T.delayedCall(.1,function(){var damage=~~(M.random()*maxDam)+minDam;g.petPhysical(damage,TGT,"physical",true);});}
playAudio("wolf_att2");T.delayedCall(1.5,gogogo,[++count,familiarId]);T.to(familiar[familiarId],.25,{startAt:{rotationY:0},left:(MOB[TGT].offsetLeft),onComplete:function(){T.to(this.target,1,{startAt:{rotationY:180},left:-50,onComplete:function(){T.set(this.target,{rotationY:0});}});}});}}else{T.to(familiar[familiarId],.5,{opacity:0,onComplete:function(){familiar[familiarId].remove();}});}}
T.delayedCall((M.random()*.25+.5),gogogo,[0,familiarId]);}
function checkProc(Slot){var c=false;var p=true;var N=P.eq[Slot].name;if(P.eq[Slot].rarity===5){if(N==="Falzitherin's Claw"){animateDot(TGT,"green");Chat(mob[TGT].name+" is blasted by noxious vapors.",3);procDot(TGT,minMax(195,.9),"Noxious Vapors","poison",9,1000,"spellCastDot");}else if(N==="Seething Myrmidon's Gavel"){particleBurst(TGT,"orange");g.myMagicDamage("fire",787,TGT,c," is struck by a sudden burst of flames",p);}else if(N==="Plankton Laced Greatsword"){playAudio('novaice');animateNova('frostNova');for(var i=0;i<=4;i++){if(mob[i].name){var dam=minMax(458,.85);var hit=g.myMagicDamage('cold',dam,i,checkCrit(),"Vile Plankton");if(hit!==undefined){chillTarget(i,7000,-288);}}}}else if(N==="Jysin's Blade of the Darkwind"){summonWolfFamiliar("Darkwind",367,231);}else if(N==="Sword of Truth"){particleBurst(TGT,"teal");stunTarget(TGT,3000,-32);g.myMagicDamage("lightning",~~(M.random()*375+275),TGT,c," is blasted by crackling ether",p);}else if(N==="Indocolite Revenant Thresher"){particleBurst(TGT,"purple");g.myMagicDamage("poison",~~(M.random()*111+499),TGT,c," is crushed by despondence",p);mob[TGT].snareStatus=true;}else if(N==="Grove Walker's Scimitar"){animateDot(TGT,"green");Chat(mob[TGT].name+" is blasted by fungal spores.",3);procDot(TGT,minMax(211,.85),"Fungal Spores","poison",9,1000,"spellCastDot");}else if(N==="Odious Spear of Fate"){animateDot(TGT,"purple");Chat(mob[TGT].name+" is beset by a plague.",3);procDot(TGT,minMax(176,.8),"Odious Plague","poison",13,1000,"spellCastDot");}else if(N==="Painmurder Mallet"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",777,TGT,c," is blasted by psychic energy",p);}else if(N==="Executioner's Thunderclap"){particleBurst(TGT,"yellow");stunTarget(TGT,2100,-32);g.myMagicDamage("lightning",minMax(555,.5),TGT,c," is zapped by a ripple of static",p);}else if(N==="Megnemon's Glacial Crook"){g.glacialSpikeFinish(true);}else if(N==="Carbilloth's Rainbow Ire"){var color="green";var mType="poison";var z1=M.random()*100;if(z1>.8){color="magenta";mType="magic";}else if(z1>.6){color="orange";mType="fire";}else if(z1>.4){color="yellow";mType="lightning";}else if(z1>.2){color="teal";mType="cold";}
particleBurst(TGT,color);g.myMagicDamage(mType,minMax(999,.66),TGT,c," is blasted by rainbow hues",p);}else if(N==="Heart of Burning Embers"){particleBurst(TGT,"orange");g.myMagicDamage("fire",520,TGT,c," is blasted by a pyroclastic flow",p);procDot(TGT,minMax(162,.75),"Pyroclastic Flow","fire",6,1000,"spellDoneFlames");animateDot(TGT,"orange");}else if(N==="Sanctified Gavel of Pharmakos"){animateDot(TGT,"white");addMobBuffIcon("Kelpie Haze",TGT,"snareIcon",0,-32);mob[TGT].snareStatus=true;}}else if(P.eq[Slot].rarity===4){if(N==="Hallowed Gavel of Pharmakos"){}else if(N==="Satyr's Artifice"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",505,TGT,c," is struck by a crackling litany",p);}else if(N==="Bloodletter's Lancet"){particleBurst(TGT,"red");g.myMagicDamage("magic",45,TGT,c,"'s blood is siphoned",p);g.popupHeal(45);}else if(N==="Daimyo's Giri"){particleBurst(TGT,"red");g.myMagicDamage("fire",~~(M.random()*50+270),TGT,c," is struck by a sudden burst of flames",p);}else if(N==="Baron's Glissando"){particleBurst(TGT,"magenta");stunTarget(TGT,2500,-32);g.myMagicDamage("magic",~~(M.random()*175+175),TGT,c," is barraged by a sonic force",p);}else if(N==="Venova's Martel"){animateDot(TGT,"white");Chat(mob[TGT].name+" is engulfed in the wrath of holy light.",3);procDot(TGT,minMax(165,.8),"Primal Corruption","magic",7,1000,"spellDoneFlames");}else if(N==="Augur's Harvester"){bleedTarget(TGT,12,1000);particleBurst(TGT,"red");g.myMagicDamage("fire",minMax(333,.5),TGT,c,"'s wounds sizzle",p);}else if(N==="Warder's Hailrend"){particleBurst(TGT,"teal");animateLightningBlast(TGT)
g.myMagicDamage("cold",255,TGT,c," is blasted by a hailstorm",p);g.myMagicDamage("lightning",minMax(410,.25),TGT,c," is struck by lightning");}else if(N==="Warder's Magmahew"){particleBurst(TGT,"red");g.myMagicDamage("fire",341,TGT,c," is charred by searing magma",p);stunTarget(TGT,2400,-32);}}else{if(N==="Short Sword of the Ykesha"||N==="Short Sword of the Crokyn"||N==="Ykeshan Broad Axe"||N==="Crokyn Broad Axe"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",150,TGT,c," is struck by the force of Crokyn",p);}else if(N==="Ebony Blade"||N==="Spriggan's Blade"){g.myMagicDamage("magic",M.ceil(10+my.level),TGT,c," is entangled in roots",p);if(checkRootImmune(TGT)===true){Chat((mob[TGT].name+" is immune to Root."),1);return;}
if(statusResist(TGT)===true){Chat((mob[TGT].name+" resisted Root."),1);return;}
Chat((mob[TGT].name+" is rooted."),3);stopMob(TGT);mob[TGT].rootStatus=3;$("#rootIcon"+TGT+",#rootBuffIcon"+TGT).remove();animateRoot(TGT,true);addMobBuffIcon("Root",TGT,"rootBuffIcon",0,0,0,"root");}else if(N==="Crystalline Scimitar"||N==="Iceshard Scimitar"){particleBurst(TGT,"blue");g.myMagicDamage("cold",44,TGT,c," is blasted by frost",p);}else if(N==="Ghoulbane"||N==="Soulgrinder"){if(checkUndead(TGT)===true){particleBurst(TGT,"magenta");g.myMagicDamage("magic",150,TGT,c," is blasted by holy power",p);}}else if(N==="Bladed Thulian Claws"||N==="Bladed Prenssor Claws"){particleBurst(TGT,"red");g.myMagicDamage("fire",75,TGT,c,"'s flesh blisters",p);}else if(N==="Screaming Mace"||N==="Howling Mace"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",38,TGT,c," is struck by a lupine blast",p);}else if(N==="Cold Iron Morning Star"){particleBurst(TGT,"blue");g.myMagicDamage("cold",33,TGT,c," is struck by the frigid north",p);}else if(N==="Stormeye"){particleBurst(TGT,"yellow");g.myMagicDamage("lightning",179,TGT,c," is thunderstruck",p);}else if(N==="The Jade Tan Do"||N==="The Witch Doctor"){particleBurst(TGT,"green");g.myMagicDamage("poison",22,TGT,c,"'s flesh rots",p);}else if(N==="Sacrificial Dagger"){particleBurst(TGT,"magenta");Chat(("Sacrificial blood restores your mind.").fontcolor("#1e90ff"));g.popupMana(14);}else if(N==="Trident of the Seven Seas"||N==="Trident of Edenburg"){particleBurst(TGT,"yellow");g.myMagicDamage("lightning",109,TGT,c," is struck by a thunderbolt",p);}else if(N==="Serrated Bone Dirk"||N==="Serrated Bone Cinquedeas"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",22,TGT,c,"'s life force is drained",p);g.popupHeal(22);}else if(N==="Gigantic Zweihander"||N==="Gigantic Frostreaper"){particleBurst(TGT,"blue");g.myMagicDamage("cold",143,TGT,c," is struck by the arctic winds of Fenwoven",p);}else if(N==="Lamentation Blade"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",195,TGT,c," is struck by death and despair",p);}else if(N==="Blighthammer"){particleBurst(TGT,"green");g.myMagicDamage("poison",175,TGT,c," is wrought by a deathly plague",p);}else if(N==="Mroon's Toy"){particleBurst(TGT,"yellow");var Slot=TGT;for(var i=0;i<=5;i++){g.myMagicDamage("lightning",M.ceil(M.random()*50)+1,Slot,c," is pummeled by a hail of lightning",p);}}else if(N==="The Salamander"){particleBurst(TGT,"red");var Slot=TGT;for(var i=0;i<=2;i++){g.myMagicDamage("fire",M.ceil(M.random()*40)+80,Slot,c," is singed by a hydra bolt",p);}}else if(N==="Kreizenn's Flame"||N==="Clastocaust's Flame"){particleBurst(TGT,"orange");g.myMagicDamage("fire",100,TGT,c," skin erupts in flame",p);}else if(N==="Scimitar of the Mistwalker"||N==="Scimitar of the Grovecaller"){summonWolfFamiliar();}else if(N==="Fluxbladed Axe"){particleBurst(TGT,"magenta");g.myMagicDamage("magic",150,TGT,c," is struck by fluxing strands of chaos",p);}else if(N==="Hexfire"||N==="Hydraclash"){function doit1(){particleBurst(TGT,"orange","explode"+~~(M.random()*(3)+1));g.myMagicDamage("fire",~~(M.random()*25)+85,TGT,c," is struck by a hydra bolt",p);}
doit1();T.delayedCall(.5,doit1);T.delayedCall(1,doit1);}else if(N==="Baezil's Vortex"||N==="Rathmonan's Vortex"){animateNova('lightningNova');playAudio("novaelec");for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("lightning",~~(M.random()*75)+75,i,c," is struck by a lightning nova",p);}}}else if(N==="Moonfall"){animateMeteor(true);T.delayedCall(2.5,function(){for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("fire",~~(M.random()*100+400),i,c," is struck by a meteor",p);}}});}else if(N==="Truesight Hammer"){particleBurst(TGT,"purple");var d=133;if(mob[TGT].name.indexOf(" pet")!==-1){d=d*5;}
g.myMagicDamage("magic",d,TGT,c," is slammed by holy light",p);}else if(N==="Earthshaker"){screenShake(4,4,2,50);playAudio("earthquakeloop2",0,500);for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("physical",~~(M.random()*50+175),i,checkCrit(),"Tremor",true);interruptTarget(i);}}}else if(N==="Dawnfire, Morning Star of Light"||N==="Venova's Dawn"){particleBurst(TGT,"purple");var d=195;if(checkUndead(TGT)===true){d=d*3;}
g.myMagicDamage("magic",d,TGT,c," is slammed by holy light",p);}else if(N==="Gold Plated Koshigatana"){particleBurst(TGT,"purple");var d=175;if(mob[TGT].name.indexOf(" pet")!==-1){d=d*5;}
g.myMagicDamage("magic",d,TGT,c," is slammed by holy light",p);}else if(N==="Soul Leech, Dark Sword of Blood"||N==="Dark Sword of Tolloth"){particleBurst(TGT,"purple");g.myMagicDamage("magic",75,TGT,c,"'s life is drained",p);g.popupHeal(75);}else if(N==="Bladestorm, Katana of Steel Sleet"||N==="Emperor's Katana of Resolve"){function doit2(){animateDebuff("yellow");for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("magic",~~(M.random()*100+250),i,c,"'s skin shreds as swords rain down",p);}}}
doit2();T.delayedCall(2,doit2);T.delayedCall(4,doit2);}else if(N==="Blight, Hammer of the Scourge"||N==="Blight, Hammer of Vedria"){animateDot(TGT,"green");Chat(mob[TGT].name+' sweats and shivers, looking feverish.',3);procDot(TGT,minMax(75,.9),"Scourge","magic",8,1000);}else if(N==="Barbarian Spiritist's Hammer"){particleBurst(TGT,"blue");g.myMagicDamage("cold",~~(M.random()*20)+421,TGT,c," staggers as spirits of frost impact",p);}else if(N==="Gallantine's Gleaming Bastard Sword"){particleBurst(TGT,"yellow","holybolt");interruptTarget(TGT);g.myMagicDamage("magic",~~(M.random()*25)+275,TGT,c," is jolted by gleaming light",p);}else if(N==="Nature Walker's Scimitar"||N==="Nature Covenant's Scimitar"){animateDot(TGT,"yellow");Chat(mob[TGT].name+" is gripped by nature's wrath.",3);procDot(TGT,minMax(55,.8),"Wrath of Nature","lightning",6,1000);}else if(N==="Claw of Phara Dar"||N==="Claw of Szarthax"||N==="Claw of Darafar"){animateHyperStrike();myAttack.kill();var d=frenzyRate/1000;myAttack=T.delayedCall(d,getDamage);myAttack2.kill();myAttack2=T.delayedCall(d,getDamage2);autoAttackTimer(d);myFrenzy=true;myFrenzyTimer.kill();myFrenzyTimer=T.delayedCall(2,function(){myFrenzy=false;});}else if(N==="Singing Short Sword"||N==="Harmonic Short Sword"){if(my.job==="Bard"){animateInnerPeace();mySingingSword=true;mySingingSwordTimer.kill();mySingingSwordTimer=T.delayedCall(12,function(){mySingingSword=false;});}}else if(N==="Earthcaller"||N==="Artremian Blade"){animateDot(TGT,"green");Chat(mob[TGT].name+" is consumed by the embracing earth.",3);procDot(TGT,minMax(35,.8),"Earthcall","magic",9,1000);}else if(N==="Smoldering Cudgel"||N==="Singed Cudgel"){particleBurst(TGT,"orange");g.myMagicDamage("fire",~~(M.random()*25)+454,TGT,c," is singed by blazing fire",p);}else if(N==="Star of the Guardian"){animateCleanse();shieldHp+=1;}else if(N==="Celestial Fists"||N==="Fists of Qiromir"){animateHyperStrike();myAttack.kill();var d=frenzyRate/1000;myAttack=T.delayedCall(d,getDamage);myAttack2.kill();myAttack2=T.delayedCall(d,getDamage2);autoAttackTimer(d);myFrenzy=true;myFrenzyTimer.kill();myFrenzyTimer=T.delayedCall(2.5,function(){myFrenzy=false;});}else if(N==="Scythe of the Shadowed Soul"||N==="Scythe of the Reaper"||N==="Waking Nightmare"){animateDot(TGT,"purple");Chat(mob[TGT].name+" is gripped by shadows of fear and terror.",3);procDot(TGT,minMax(75,.9),"Torment of Shadows","magic",9,1000);}else if(N==="Razor Fang of Xygoz"||N==="Razor Fang of Sartuz"){animateHealing('yellow');Chat(my.name+" is surrounded by an aura of nature.",3);var proc=uniqueId();addBuffIcon("Blessing of Nature","blessingOfNatureIcon"+proc,6000,-32);function doit3(count,proc){if(my.hp<=0){removeIcon("blessingOfNatureIcon"+proc);return;}
count++;g.popupHeal(17);if(count<6){T.delayedCall(1,function(){doit3(count,proc);});}else{removeIcon("blessingOfNatureIcon"+proc);}}
var count=0;doit3(count,proc);}else if(N==="Spear of Fate"||N==="Spear of the Ancients"){animateDot(TGT,"purple");Chat(mob[TGT].name+" is consumed by the raging spirits of the land.",3);procDot(TGT,12,"Curse of the Spirits","magic",12,1000);}else if(N==="Nightfall"){var Slot=TGT;playAudio("spellDoneHeal");spellDamage=~~(M.random()*40)+560;Chat((mob[Slot].name+" is engulfed in darkness."),3);var damage=M.ceil(spellDamage/20);mob[Slot].doomingDarknessTickCount=1;mob[Slot].doomingDarknessTick=damage;mob[Slot].doomingDarknessInterval.kill();mob[Slot].doomingDarknessInterval=T.to('',1,{repeat:-1,onRepeat:function(){doomingDarknessTick("magic",Slot);}});addMobBuffIcon("Dooming Darkness",Slot,"doomingDarknessIcon",20000,-32);animateDot(Slot,'magenta');}else if(N==="Palladius' Axe of Slaughter"||N==="Wenerva's Axe of Slaughter"){particleBurst(TGT,"white","hammer");mob[TGT].runeHp=0;$("#MruneIcon"+TGT).remove();g.myMagicDamage("magic",~~(M.random()*40+350),TGT,c," is shattered by divine force",p);}else if(N==="Curse of Ghalentus"||N==="Innoruuk's Curse"){animateDot(TGT,"purple");Chat(mob[TGT].name+"'s soul is consumed.",3);procDot(TGT,minMax(75,.8),"Soul Consumption","magic",8,1000);}else if(N==="Fiery Defender"){particleBurst(TGT,"orange");stunTarget(TGT,2500,-32);g.myMagicDamage("fire",~~(M.random()*20)+235,TGT,c," is burnt by the wrath of the heavens",p);}else if(N==="Jagged Blade of War"||N==="Serrated Blade of War"){particleBurst(TGT,"red");g.myMagicDamage("fire",375,TGT,c,"'s soul is consumed by the fury of Accostine",p);}else if(N==="Flamebellow"||N==="Flamebelcher"){playAudio("poisonnova");animateNova('fireNova',false);for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("fire",~~(M.random()*50)+375,i,c," is burned by a wall of fire",p);}}}else if(N==="Staff of the Four"||N==="Ornate Prism Staff"){animateAncientWill();shieldHp=355;var proc=uniqueId();addBuffIcon("Ornate Prism Staff","barrierOfForceIcon"+proc,6000,-32);function doit4(count,proc){if(my.hp<=0){removeIcon("barrierOfForceIcon"+proc);return;}
count++;g.popupMana(21);if(count<6){T.delayedCall(1,function(){doit4(count,proc);});}}
doit4(0,proc);}else if(N==="Staff of the Serpent"||N==="Staff of Sentoth"){animateHyperStrike();myAttack.kill();var d=frenzyRate/1000;myAttack=T.delayedCall(d,getDamage);myAttack2.kill();myAttack2=T.delayedCall(d,getDamage2);autoAttackTimer(d);myFrenzy=true;myFrenzyTimer.kill();myFrenzyTimer=T.delayedCall(4,function(){myFrenzy=false;});}else if(N==="Hierophant's Crook"){function doit5(){screenShake(4,4,2,50);playAudio("earthquakeloop2",0,500);for(var i=0;i<=4;i++){if(mob[i].name){g.myMagicDamage("physical",~~(M.random()*75+215),i,checkCrit(),"Tremor",true);interruptTarget(i);}}}
doit5();T.delayedCall(2.5,doit5);T.delayedCall(5,doit5);}else if(N==="Shatterfrost"){var Slot=TGT;if(mob[Slot].name!==""){var freezeDuration=2000;freezeDuration*=freezeReduction();g.myMagicDamage("cold",~~(M.random()*25)+310,TGT,c," is slammed by a hail of ice",p);encaseTarget(Slot,freezeDuration,-256);}}else if(N==="Earth Shifter"){screenShake(6,8,4,50);playAudio("earthquakeloop2",0,500);var hits=~~(M.random()*4)+3;for(var i=0;i<hits;i++){var Slot=selectRandomTarget();g.myMagicDamage("physical",~~(M.random()*100+375),Slot,checkCrit(),"Tremor");interruptTarget(Slot);}}else if(N==="The Cranium Basher"){animateDot(TGT,"yellow");Chat(my.name+" is cursed by amplify damage.",3);g.amplifyDamageStatus=true;}else if(N==="Blackstar, Mace of Night"||N==="Blackstar Mace of Slagnon"){animateHealing('yellow');Chat(my.name+" is surrounded by the blessing of the Blackstar.",3);g.popupHeal(~~(M.random()*50)+75);}else if(N==="Hammer of the Dragonborn"){animateDot(TGT,"orange");Chat(mob[TGT].name+" is engulfed in corrupted dragon's breath.",3);procDot(TGT,minMax(175,.8),"Primal Corruption","fire",5,1000,"spellDoneFlames");}}}
function regenHealth(heal,name,duration,sprite,interval,stacks,racial,mana){if(mana===undefined){mana=false;}
if(mana===true){if(my.job==="Warrior"||my.job==="Rogue"||my.job==="Monk"){return;}}
if(heal===undefined){heal=1;}
if(duration===undefined){duration=1;}
if(sprite===undefined){sprite=0;}
if(interval===undefined){interval=1;}
if(stacks===undefined){stacks=false;}
var type=name.replace(/ /g,'')+"Icon";if(stacks){type=name.replace(/ /g,'')+uniqueId()+"Icon";}
if(typeof timers[type]==='object'){if(stacks===false){timers[type].kill();}}else{timers[type]=TDC();}
if(racial!=="bypass"){var d=duration*1000;if(racial===undefined){addBuffIcon(name,type,d,sprite);}else{addBuffRaceIcon(name,type,d,sprite)}}
function do1(count){if(my.hp<=0){removeIcon(type);}else{count++;if(!mana){g.popupHeal(heal);}else{g.popupMana(heal);}
if(count<duration){timers[type]=T.delayedCall(1,function(){do1(count);});}}}
do1(0);}
var uniqueNum=0;function uniqueId(){uniqueNum++;if(uniqueNum>999999999){uniqueNum=0;}
return uniqueNum;}
function interruptTarget(Slot){if(mob[Slot].castingStatus===true){mob[Slot].spellActive.kill();mob[Slot].castingStatus=false;Chat((mob[Slot].name+"'s spell has been interrupted."));}}
function partAdj(x){if(isMobile===true){return~~(x*.3);}else{return x;}}
function circX(cx,r,angle){return cx+r*(M.cos(angle*Math.PI/180));}
function circY(cx,r,angle){return cx+r*(M.sin(angle*Math.PI/180));}
function particleBurst(Slot,color,sound,total,spread,d){if(Slot===undefined){Slot=TGT;}
if(!color){color="white";}
if(total===undefined){total=partAdj(50);}
if(!spread){spread=800;}
if(!d){d=.5;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX-12;var cY=MOB[Slot].offsetTop+mob[Slot].cY-12;var c1=img(color+"particle50");var ez1=Quad.easeOut;function doit(count){var p1=cacheAdd(c1,5,cX,cY,1,1,true);if(M.random()>.5){var x=cX+M.random()*spread-spread/2;var y=cY+M.random()*spread/2-spread/4;}else{var angle=M.random()*360;var x=circX(cX,spread/2,angle);var y=circY(cY,spread/4,angle);}
T.to(p1,d,{x:x,y:y,scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(5,p1);}});if(count<total){doit(++count);}}
doit(0);if(!sound){playAudio("spellDoneBoom");}else if(sound!=="blank"){playAudio(sound);}}
g.mobDodgeChance=function(Slot){var miss=mob[Slot].level*1.25;var hit=min70(dexTotal());miss=miss-hit;if(miss>30){miss=30;}
if(miss<5){miss=5;}
return miss;}
function calculateAutoAttackDamage(identifyRightHand,gaspingFrenzyCounter,doubleAttack){if(mob[TGT].name===""||g.autoAttackStatus===1||bashStatus===0||fearStatus===0){return;}
var Slot=TGT;var type=P.eq[12].type;var job=my.job;if(identifyRightHand===true){if(type==="smashed"||"staff"===type||type==="cleaved"){var damage=minMax((1+attackFunct()/4500)*(P.eq[12].damage*10),.5);if(innerPeaceStatus===0){g.drawMyMp(10);}}else{var damage=minMax((1+attackFunct()/4500)*(P.eq[12].damage*10),.2);if(innerPeaceStatus===0){g.drawMyMp(5);}}}else{if(type==="cleaved"||type==="smashed"||"staff"===type){return;}else{var damage=minMax((1+attackFunct()/4500)*(P.eq[13].damage*10),.2);if(innerPeaceStatus===0){g.drawMyMp(5);}}}
if(gaspingFrenzyCounter>0){if(GLB.videoSetting==="High"){animateGaspingFrenzy(Slot);}
animateAutoAttack(Slot,identifyRightHand);g.myPhysicalDamage(damage,Slot,"Gasping Frenzy");if(my.level>8){g.popupMana(M.ceil(damage/20));g.drawMyMp();}}else{var flay=false;if(!doubleAttack&&identifyRightHand===true){if(job==="Cleric"){if(my.talent5>=1){flay=true;}}else if(job==="Shaman"){if(my.talent11>=1){flay=true;}}else if(job==="Ranger"){if(my.talent3>=1){flay=true;}}else if(job==="Warrior"){if(my.talent8>=20){flay=true;}}}
if(flay===true){var kek=selectFlayTarget();animateAutoAttack(kek,identifyRightHand);var skillName='You '+P.eq[12].type;if(identifyRightHand===false){skillName='You '+P.eq[13].type;}
g.myPhysicalDamage(damage,kek,skillName);}else{animateAutoAttack(Slot,identifyRightHand);var skillName='You '+P.eq[12].type;if(identifyRightHand===false){skillName='You '+P.eq[13].type;}
g.myPhysicalDamage(damage,Slot,skillName);}}
if(job==="Monk"){getTpRegen();}
if(g.gaspingFrenzyStatus===true){g.gaspingFrenzyStatus=false;var gaspingFrenzyCounter=800;var newMax=my.maxHp;var _ratio=my.hp/newMax;if(_ratio<.8){gaspingFrenzyCounter=1200;}
if(_ratio<.6){gaspingFrenzyCounter=1800;}
if(_ratio<.4){gaspingFrenzyCounter=2600;}
if(_ratio<.2){gaspingFrenzyCounter=3800;}}
if(gaspingFrenzyCounter>0){gaspingFrenzyCounter-=200;T.delayedCall(.2,function(){calculateAutoAttackDamage(true,gaspingFrenzyCounter);});}}
function mobStrength(Slot){var foo=mob[Slot].str;var damEnh=0;if(mob[Slot].enrage){damEnh=40;}
if(mob[Slot].siphonStrength){damEnh=-12;}
if(mob[Slot].furiousScorn){damEnh=-15;}
if(mob[Slot].weaken){damEnh=-20;}
if(mob[Slot].scourgeStatus){damEnh=-12;}
if(mob[Slot].asystoleStatus){damEnh=-8;}
if(mob[Slot].gaspingEmbraceStatus){damEnh=-12;}
if(damEnh<-25){damEnh=-25;}
foo=foo*(1+(damEnh/100));return M.round(foo);}
g.WarriorPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(skillName==="Kick"){damEnh+=talent1()*2;}else if(skillName==="Pummel"){damEnh+=((talent2()*2.6)/100)*P.eq[13].armor;}else if(skillName==="Shockwave"){damEnh+=((talent4()*1.75)/100)*P.eq[13].armor;}else if(skillName==="Slam"){damEnh+=talent5()*1.25;}else if(skillName==="Hemorrhage"){damEnh+=talent6()*2.1;}else if(skillName==="Intrepid Might"){damEnh+=talent8()*2.7;}else if(skillName==="Avenging Strike"){var b=talent9()*1;if(my.talent9>=20){b+=5;}
damEnh+=b;}else if(skillName==="Subjugate"){damEnh+=talent11()*2.4;}else if(skillName==="Decisive Blow"){damEnh+=talent12()*1.8;}
if(tt===undefined){if(warAmpDamage===true){damEnh+=talent10()*10;warAmpDamage=false;}}
return damEnh;}
g.RoguePhyEnh=function(skillName,Slot,tt){var damEnh=0;if(skillName==="Lacerate"){damEnh+=talent1()*3.3;}else if(skillName==="Sonic Strike"){damEnh+=talent3()*2.8;if(my.talent3>=20&&tt===undefined){var Slot=TGT;animateSmite(Slot);function chaosFluxHit(){var damage2=M.round(mob[Slot].maxHp*.1);calculateSpellDamage3(damage2,Slot);function doneFalling(){mob[Slot].fallingStatus=false;}
T.delayedCall(1.4,doneFalling);}
var dam=minMax(3+(attackFunct()/7),.8)
mob[Slot].fallingStatus=true;animateFlux(Slot);T.delayedCall(1.4,chaosFluxHit);addMobBuffIcon("Gravity Flux",Slot,"fallingIcon",1400,-128);g.myMagicDamage("magic",dam,Slot,checkCrit(),"Chaos Flux");}}else if(skillName==="Mirage Strike"){damEnh+=talent4()*3.3;}else if(skillName==="Shadow Strike"){var b=talent5();if(my.talent5>=20){b+=5;}
damEnh+=b;}else if(skillName==="Backstab"){damEnh+=talent6()*1.75;}else if(skillName==="Stagger Shot"){damEnh+=talent7()*6.3;if(my.talent8>=20&&tt===undefined){snareTarget(Slot,true)}}else if(skillName==="Prowlish Gash"){damEnh+=talent12()*3.3;}
if(illusiveMistStatus===0&&my.talent10>=20){damEnh+=talent10()*1.2;}
return damEnh;}
g.MonkPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(skillName==="Eagle Strike"){damEnh+=talent1()*5;}else if(skillName==="Stone Fist Reversal"){damEnh+=talent2()*6.6;}else if("Chakra Blast"===skillName){damEnh+=talent4()*1.9;}else if(skillName==="Windmill Kick"){damEnh+=talent5()*2.25;}else if(skillName==="Cheetah Strike"){damEnh+=talent6()*2;}else if(skillName==="Flying Kick"){damEnh+=talent7()*1.8;}else if(skillName==="Tiger Strike"){var b=talent9()*1;if(my.talent9>=20){b+=5;}
damEnh+=b;}else if(skillName==="Crane Kick"){damEnh+=talent10()*2.5;}else if(skillName==="Ancestral Flurry"){damEnh+=talent11()*1.8;}
if(mob[Slot].fearStatus===true){if(my.talent12>=20&&tt===undefined){damEnh+=talent12()*1.2;}}
return damEnh;}
g.PaladinPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(skillName==="Slam"){damEnh+=talent1()*1.75;}else if(skillName==="Purge"){var b=talent9();if(my.talent9>=20){b+=5;}
damEnh+=b;if(checkUndead(Slot)===true&&tt===undefined){damEnh+=50;}}else if(skillName==="Rebuke"){damEnh+=talent5()*2.75;}else if("Vengeance"===skillName){damEnh+=talent6()*2.2;if(mob[Slot].attackNow===true&&tt===undefined){damEnh+=50;}}
if(tt===undefined){if(my.talent10>=20){if(mob[Slot].stunStatus===true){damEnh+=40;}}
if(my.talent7>=20){if(mob[Slot].blindStatus===true){damEnh+=30;}}}
if(yaulpStatus===true){damEnh+=yaulpBonus;}
return damEnh;}
g.ShadowKnightPhyEnh=function(skillName,Slot,tt,damage){var damEnh=0;if(skillName==="Crescent Cleave"){var b=talent1();if(my.talent1>=20){b+=5;}
damEnh+=b;}else if(skillName==="Death Strike"){damEnh+=talent2()*1.8;if(my.talent2>=20&&tt===undefined){bleedTarget(Slot,12,1000)}}else if(skillName==="Slam"){damEnh+=talent5()*2.5;}else if(skillName==="Gasping Frenzy"){damEnh+=talent9()*1.6;}else if(skillName==="Harm Touch"){damEnh+=talent7()*5;}
if(tt===undefined){if(my.talent12>=20){if(mob[Slot].heatBloodTickCount>0){damEnh+=15;}
if(shadowVortexBonus>0){damEnh+=shadowVortexBonus;}}
if(mob[Slot].fearStatus===true){damEnh+=talent11()*.85;}
if(my.talent3>=20){chillTarget(Slot,3000,-32);}
if(skillName==="Death Strike"){g.popupHeal(M.ceil(damage/9));}}
return damEnh;}
g.RangerPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(skillName==="Kick"){damEnh+=talent1()*1.8;}else if("Counter Shot"===skillName){damEnh+=talent5()*1.5;}else if(skillName==="Trueshot Arrow"){damEnh+=talent6()*2.1;if(empowerTrueshot>500){empowerTrueshot=500;}
damEnh+=empowerTrueshot;}else if(skillName==="Rapid Shot"){var b=talent9();if(my.talent9>=20){b+=5;}
damEnh+=b;}else if(skillName==="Volley Shot"){damEnh+=talent12()*1.33;}
if(mob[Slot].faerieFlameTickCount>0&&tt===undefined){damEnh+=15;}
return damEnh;}
g.BardPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(chantOfBattleStatus===true){damEnh+=talent1()*3.5;}
if(tt===undefined){if(my.talent2>=20){if(M.random()>.85){animateBenediction(Slot,true);playAudio('handofgod');var dam=minMax(attackFunct()/4.2,.8);T.delayedCall(.15,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"Wistful Tidings");});}}
if(mob[Slot].euphonicHymn>0){damEnh+=40+(talent4()*4.75);}
if(my.talent4>=20){if(M.random()>.92){animateSonicStrike(Slot);playAudio('flshhit4');var dam=M.ceil(attackFunct()/3,.8);T.delayedCall(.15,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"Sonic Disruption");});stunTarget(Slot,1000,-32,0,"Sonic Disruption");}}
if(mySingingSword===true){damEnh+=(20+(talent4()*5.25));}
if(Set.Baron>=6){if(mob[Slot].consonantChain>0){damEnh+=15;}}}
return damEnh;}
g.DruidPhyEnh=function(){return 0;}
g.ClericPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(tt===undefined){if(my.talent5>=20){if(M.random()>.85){animateRepudiation(Slot);playAudio('dirge');var dam=minMax(attackFunct()/3.4,.8);T.delayedCall(.25,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"Divine Justice");});}}
if(my.talent7>=20){if(M.random()>.92){animateExpelCorruption(Slot);playAudio('bolthammercast');var dam=minMax(attackFunct()/2.3,.8);T.delayedCall(.15,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"elemental");stunTarget(Slot,750,-480,0,"Fist of the Heavens");});}}
if(my.talent8>=20){if(shieldHp>0){if(M.random()>.67){animateFlyingKick(Slot);playAudio('handofgodbolt');var dam=minMax(attackFunct()/1.25,.75);T.delayedCall(.15,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"Vicar's Wrath");});}}}
if(mob[Slot].martyr===true){damEnh+=(talent6()*12.5);}}
return damEnh;}
g.ShamanPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(bloodlustStatus===true){damEnh+=60;}
return damEnh;}
g.NecromancerPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(my.talent12>=20){if(shieldHp>0){damEnh+=15;}}
if(mob[Slot].fearStatus===true&&tt===undefined){damEnh+=talent11()*1.33;}
return damEnh;}
g.EnchanterPhyEnh=function(skillName,Slot,tt){var damEnh=0;if(my.talent4>=20){if(shieldHp>0){damEnh+=20;}}
if(enchantWeaponStatus===true){charmEnchantStrike();}
return damEnh;}
g.MagicianPhyEnh=function(){return 0;}
g.WizardPhyEnh=function(){return 0;}
g.mobDefense=function(Slot){var foo=mob[Slot].def;if(mob[Slot].resolutionStatus===true){foo-=5;}
if(mob[Slot].lacerate>0){foo+=mob[Slot].lacerate;}
if(mob[Slot].shadowVortex>0){foo+=mob[Slot].shadowVortex;}
if(mob[Slot].scourgeStatus===true){foo+=12;}
if(mob[Slot].asystoleStatus===true){foo+=24;}
if(mob[Slot].barrier){if(my.job==="Cleric"&&my.talent6>=20){}else{foo-=67;}}
if(my.job==="Ranger"){if(my.talent6>=20&&foo>100){foo=100;}}
if(foo<33){foo=33;}
return foo/100;}
function TTphy(max,percent,skillName,number,type){if(!type){type=false;}
var min=max*percent;var a=[];if(number!==true){a[0]="<span class='green'>"+g.myPhysicalDamage(min,0,skillName,false,type,1)+"</span>";a[1]="<span class='green'>"+g.myPhysicalDamage(max,0,skillName,false,type,2)+"</span>";}else{a[0]=g.myPhysicalDamage(min,0,skillName,false,type,1);a[1]=g.myPhysicalDamage(max,0,skillName,false,type,2);}
return a;}
g.myPhysicalDamage=function(damage,Slot,skillName,crit,type,tt){if(tt===undefined){if(mob[Slot].name===""||mob[Slot].charmStatus===true){return;}
if(g.gaspingFrenzyStatus===false){if(skillName==="Subjugate"||skillName==="Shockwave"||skillName==="Harm Touch"){}else{var dodge=M.random()*100;if(dodge<g.mobDodgeChance(Slot)){Chat(mob[Slot].name+" dodged your attack.");g.popupMsg("MISS",Slot);if(my.job==="Warrior"&&my.level>=9){g.subjugateStatus=0;clearSubjugate.kill();clearSubjugate=T.delayedCall(8,subjugateReady);g.checkWarriorSkills();}
if(mob[Slot].attackStatus===1){attackOn(true);}
return;}
if(g.blindStatus===0){if(M.random()*2>1){Chat((my.name+" is blinded by darkness."));g.popupMsg("MISS",Slot);if(my.job==="Warrior"&&my.level>=9){g.subjugateStatus=0;clearSubjugate.kill();clearSubjugate=T.delayedCall(8,subjugateReady);g.checkWarriorSkills();}
return;}}}}
if(g.autoAttackStatus===1){if(Lmy.autoAttackOption==="On"){toggleAutoAttackStatus();}}
g.updateRootStatus(Slot);if(!crit){var crit=checkCrit();}
if(my.job==="Rogue"){if(g.coldBloodBonus===1){if(skillName.indexOf("You ")!==0){T.delayedCall(.01,function(){g.coldBloodBonus=0;});$("#coldBloodIcon").remove();g.popupHeal(M.ceil(minMax(((agiTotal())/3),.8)));assassinateStatus=true;crit=true;}}}
if(crit===true){damage=(damage+damage*(g.criticalDamage()));if(my.job==="Monk"){my.mp+=3;}}}
var damEnh=g.enhancePhysicalEquip;if(type==="bow"){damEnh+=bowBonus;}else{if(skillName.indexOf("You ")!==0){damEnh+=weaponBonus;}}
if(tt===undefined){if(g.amplifyDamageStatus===true){damEnh+=100;g.amplifyDamageStatus=false;}
if(hideStatus===0){if(my.job==="Rogue"){damEnh+=60;if(my.race==="Halfling"){damEnh+=30;}}}
if(evadeStatus===true){if(my.job==="Rogue"){damEnh+=60;if(my.talent2<20){evadeStatus=false;}}else{damEnh+=90;evadeStatus=false;}
evadeBash();}
if(Set.Willow>=6){if(mob[Slot].rootStatus>0){damEnh+=30;}}
if(mob[Slot].frozenStatus===true){var b=0;if(mob[Slot].shatterStatus===true){T.to('#iceIcon'+Slot,.5,{opacity:0,onComplete:function(){$(this).remove();}});T.to(bmp[Slot],1,{easel:{tint:"#08f",tintAmount:0}});b=75;mob[Slot].frozenTimer.kill();mob[Slot].frozenStatus=false;mob[Slot].shatterStatus=false;}
damage=M.round(damage*1.25+b);damEnh+=(25+b);if(g.autoAttackStatus===1&&Lmy.autoAttackOption==="On"){toggleAutoAttackStatus();}}}
if(my.race==="Barbarian"){if(ancestralRampageStatus===true){damEnh+=100;}}
if(secondWindStatus===true){damEnh+=25;}
var skillLeech=0;damEnh+=g[JOB.PhyEnh](skillName,Slot,tt,damage);damage=(damage+(damage*(damEnh/100)));if(tt===undefined){damage=(damage*(g.mobDefense(Slot)));}
if(mob[Slot].stasisFieldStatus===true){if(tt===undefined){damage=0;g.slotDamage(damage,Slot);return damage;}}
if(type==="bow"){if(my.talent8>=20&&tt===undefined){if(M.random()>.7){animateCorpseExplosion(Slot,true);playAudio('explode'+M.ceil(M.random()*3));for(var i=0;i<=4;i++){if((i+1===Slot)||i===Slot||(i-1===Slot)){if(mob[i].name!==""){var dam=minMax(attackFunct()/7,.8);g.myMagicDamage("fire",dam,i,false,"elemental");}}}}}
if(my.talent11>=1&&sowStatus===true&&tt===undefined){if(M.random()<((talent11()*1.2)/100)){playAudio('lightning2');if(mob[Slot].name!==""){animateLightningBlast(Slot)
g.myMagicDamage("lightning",minMax(M.ceil(attackFunct()/5),.5),Slot,false,"elemental");}}}}
var eDmg=0;if(tt===undefined){if(g.poisonDamageEquip>0){var Pboost=1+(g.enhanceAllEquip+g.enhancePoisonEquip)/100;var poisonDamage=M.round(M.random()*(Pboost*(g.poisonDamageEquip))*(mob[Slot].poison/100));eDmg+=poisonDamage;}
var x9=magicDamageEquipTotal();if(x9>0){var Mboost=1+(g.enhanceAllEquip+g.enhanceMagicEquip)/100;var magicDamage=M.round(M.random()*(Mboost*x9)*(mob[Slot].magic/100));eDmg+=magicDamage;}
if(g.lightningDamageEquip>0){var Lboost=1+(g.enhanceAllEquip+g.enhanceLightningEquip)/100;var lightningDamage=M.round(M.random()*(Lboost*g.lightningDamageEquip)*(mob[Slot].lightning/100));eDmg+=lightningDamage;}
if(g.coldDamageEquip>0){var Cboost=1+(g.enhanceAllEquip+g.enhanceColdEquip)/100;var coldDamage=M.round(M.random()*(Cboost*g.coldDamageEquip)*(mob[Slot].cold/100));eDmg+=coldDamage;}
if(g.fireDamageEquip>0){var Fboost=1+(g.enhanceAllEquip+g.enhanceFireEquip)/100;var fireDamage=M.round(M.random()*(Fboost*g.fireDamageEquip)*(mob[Slot].fire/100));eDmg+=fireDamage;}
if(eDmg>0){if(eDmg<1){eDmg=1;}
if(my.job==="Monk"){var damEnh=0;damEnh+=talent7()*1.5;eDmg=M.round(eDmg+(eDmg*(damEnh/100)));}
slotElementalDamage(eDmg,Slot,highestElement);}}
if(g.physicalDamageEquip>0){if(tt===undefined){damage=damage+(M.random()*g.physicalDamageEquip)*(g.mobDefense(Slot));}else if(tt===2){damage=damage+g.physicalDamageEquip;}else{damage++;}}
if(tt===undefined){var damRed=0;if(mob[Slot].level>my.level){damRed+=mob[Slot].level-my.level;}
if(mob[Slot].riftStatus===true){damRed+=wardersRiftReduction()-(talent4()*1.25);}
if(damRed>75){damRed=75;}
damage=(damage-(damage*(damRed/100)));if(damage<1){damage=M.ceil(M.random()*my.level/10);}
if(skillName==="Decisive Blow"){if(my.talent12>=20){g.myMagicDamage("magic",damage,Slot,false,"Champion's Rage");}}
if(my.job==="Rogue"){if(skillName==="Lacerate"){if(my.talent1>=20){var zog=~~(damage*.2);skillLeech+=zog;}}
if(my.talent7>=20&&assassinateStatus===true){assassinateStatus=false;if(M.random()>.95&&mob[Slot].rare!==3){damage=mob[Slot].hp;}}}}
damage=M.ceil(damage);if(tt){return M.ceil(damage);}
if(mob[Slot].runeHp>0){mob[Slot].runeHp-=damage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}
playAudio("blockBlunt");}else{mob[Slot].hp-=damage;}
if(GLB.chatMyHit==="On"){if(mob[Slot].name!==''&&skillName!==undefined){if(skillName==='You '+P.eq[12].type||skillName==='You '+P.eq[13].type){if("staff"===P.eq[12].type){Chat("You smashed "+mob[Slot].name+" for "+damage+" damage.");}else{Chat(skillName+" "+mob[Slot].name+" for "+damage+" damage.");}}else{Chat(skillName+" hits "+mob[Slot].name+" for "+damage+" damage.");}}}
if(my.job==="Shadow Knight"){if(my.talent10>=20&&g.petAlive===true){if(M.random()>.65){var foo=(petStrTotal()/2);var petsDamage=M.ceil(foo+M.random()*foo);g.petPhysical(petsDamage,Slot);}}}
if(g.leechEquip>0||skillLeech>0){g.popupHeal((damage*g.leechRatio)*(g.leechEquip)+skillLeech);}
if(g.wraithEquip>0){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{g.popupMana((g.wraithRatio*damage)*(g.wraithEquip/100));}}
if(crit===false){g.slotDamage(damage,Slot);}else{g.slotDamageCrit(damage,Slot);}
if(mob[Slot].attackStatus===1){attackOn(true);}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();if(mob[Slot].sleepStatus===true){mob[Slot].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
if(my.race==="Dark Elf"){if(sanguineTormentStatus===true){g.popupHeal(M.ceil(damage/8));}}else if(my.job==="Shadow Knight"){if(vampiricEmbraceStatus===true){var drainChance=M.random()*100;if(drainChance>80){g.popupHeal(M.ceil(damage/8));}}}else if(my.job==="Monk"){if(cobraStrikeBonus===0){g.popupHeal(M.ceil(damage/25));}
if("Chakra Blast"===skillName){g.popupHeal(M.ceil(damage*.75));if(my.talent4>=20){for(var i=0;i<=4;i++){if(mob[i].name){var dam=damage*3.4;g.myMagicDamage('magic',dam,i,checkCrit(),"Chi Blast");}}}}}else if(my.job==="Ranger"){if("Counter Shot"===skillName){if(my.level>8){g.popupMana(M.ceil(damage/18));}
interruptTarget(Slot);}}else if(my.job==="Paladin"){if("Vengeance"===skillName){if(my.level>8){g.popupMana(M.ceil(damage/17));}}}
if(type==="bow"||skillName==="Shockwave"||type==="range"){return damage;}
if(mob[Slot].thornsActive===0){if(my.job==="Monk"&&my.talent11>=20){}else{Chat(("You are pierced by thorns for "+M.ceil(mob[Slot].level/10)+" damage."),3);var dam2=M.ceil(mob[Slot].level/10);my.hp-=dam2;battleDamageTaken+=dam2;if(my.hp<=0){Chat(("You have been slain by a shield of thorns!").fontcolor("#ff0000"));monsterKilledMe();}}}
if(mob[Slot].lavaShieldActive===0){if(my.job==="Monk"&&my.talent11>=20){}else{Chat(("You are burned by lava for "+M.ceil(mob[Slot].level/6)+" damage."),3);var dam1=M.ceil(mob[Slot].level/6);my.hp-=dam1
battleDamageTaken+=dam1;if(my.hp<=0){Chat(("You have been slain by a shield of lava!").fontcolor("#ff0000"));monsterKilledMe();}}}
if(mob[Slot].ironMaiden===true){if(my.job==="Monk"&&my.talent11>=20){}else{var imDamage=M.ceil(mob[Slot].intel*.2);Chat(("Iron Maiden reflects "+imDamage+" damage."),3);my.hp-=imDamage;battleDamageTaken+=imDamage;CStat();g.drawMyHp();if(my.hp<=0){Chat(("You have been slain by Iron Maiden!").fontcolor("#ff0000"));monsterKilledMe();}}}
return damage;}
g.WarriorMagEnh=function(){return 0;}
g.MonkMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Dragon Strike"){damEnh+=talent8()*7.3;}
return damEnh;}
g.RogueMagEnh=function(){return 0;}
g.PaladinMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Holy Might"){damEnh+=talent10()*4.5;}else if(spellName==="Ardent Judgment"){if(checkUndead(Slot)===true&&tt!==true){damEnh+=50;}
damEnh+=talent7()*3.5;}
if(tt!==true){if(my.talent10>=20){if(mob[Slot].stunStatus===true){damEnh+=40;}}
if(my.talent7>=20){if(mob[Slot].blindStatus===true){damEnh+=30;}}}
if(yaulpStatus===true){damEnh+=yaulpBonus;}
return damEnh;}
g.ShadowKnightMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Life Tap"){damEnh+=talent6()*1.75;}
if(tt!==true){if(mob[Slot].fearStatus===true){damEnh+=talent11()*.85;}
if(my.talent12>=20){if(mob[Slot].heatBloodTickCount>0){damEnh+=15;}}}
return damEnh;}
g.RangerMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Ignite"){damEnh+=talent8()*4.2;}
if(indoorStatus===false){damEnh+=20;}
if(mob[Slot].faerieFlameTickCount>0&&tt!==true){damEnh+=15;}
return damEnh;}
g.BardMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Chords of Dissonance"){damEnh+=talent5()*4.7;}else if(spellName==="Desperate Dirge"){damEnh+=talent8()*3.6;}else if(spellName==="Brusco's Boastful Bellow"){damEnh+=talent10()*4.75;}
if(tt!==true){if(Set.Baron>=6){if(mob[Slot].consonantChain>0){damEnh+=15;}}}
return damEnh;}
g.DruidMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Starfire"){var b=talent9()*2;if(my.talent9>=20){b+=10;}
damEnh+=b;}else if(spellName==="Lightning Blast"){damEnh+=talent11()*6.8;}
if(indoorStatus===false){damEnh+=20;}
return damEnh;}
g.ClericMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Smite"){var b=talent1()*2;if(my.talent1>=20){b+=10;}
damEnh+=b;}else if(spellName==="Holy Wrath"){damEnh+=talent4()*9.5;}else if(spellName==="Sound of Force"){damEnh+=talent5()*8.4;}else if(spellName==="Expel Corruption"){damEnh+=talent9()*6.2;if(checkUndead(Slot)===true&&tt!==true){damEnh+=50;}}
if(markOfJudgementStatus===true){damEnh+=75;}
if(mob[Slot].martyr===true&&tt!==true){damEnh+=(talent6()*12.5);damEnh+=30;}
return damEnh;}
g.ShamanMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Frost Strike"){var b=talent1()*2;if(my.talent1>=20){b+=10;}
damEnh+=b;}else if(spellName==="Glacial Impact"){damEnh+=talent4()*5.5;}else if(spellName==="Poison Nova"){damEnh+=talent6()*6.2;}
if(mob[Slot].afflictionStatus===true&&tt!==true){damEnh+=10;}
if(bloodlustStatus===true){damEnh+=60;}
return damEnh;}
g.NecromancerMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Bone Spirit"){var b=talent9()*2;if(my.talent9>=20){b+=10;}
damEnh+=b;}else if(spellName==="Fireball"){var b=talent9()*2;if(my.talent9>=20){b+=10;}
damEnh+=b;}else if(spellName==="Drain Soul"){damEnh+=talent1()*2.8;}else if(spellName==="Corpse Explosion"){damEnh+=talent7()*5.7;}else if(spellName==="Detonate Soul"){damEnh+=talent7()*7.8;}
if(my.talent12>=20){if(shieldHp>0){damEnh+=15;}}
if(tt!==true){if(my.talent7>=20){if(mType==="poison"&&M.random()>.76){activateCorpseExplosion();}}
if(mob[Slot].fearStatus===true){damEnh+=talent11()*1.33;}}
return damEnh;}
g.EnchanterMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Chaos Flux"){var b=talent1()*2;if(my.talent1>=20){b+=10;}
damEnh+=b;}else if(spellName==="Gravity Flux"){damEnh+=talent11()*6.3;}
if(my.talent4>=20){if(shieldHp>0){damEnh+=20;}}
if(mob[Slot].tashaniaStatus===true&&tt!==true){damEnh+=(abjurationTotal()/20);}
return damEnh;}
g.MagicianMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Lava Bolt"){var b=talent1()*2;if(my.talent1>=20){b+=10;}
damEnh+=b;}else if(spellName==="Firestorm"){damEnh+=talent3()*6.3;}else if(spellName==="Armageddon"){damEnh+=talent4()*5.4;}else if(spellName==="Frozen Orb"){damEnh+=talent10()*4.8;}else if(spellName==="Psionic Storm"){damEnh+=talent12()*6.1;}else if(spellName==="Elemental Lightning"){damEnh+=talent8()*7.3;}else if(spellName==="Elemental Glacier"){damEnh+=talent8()*7.3;}else if(spellName==="Elemental Inferno"){damEnh+=talent8()*7.3;}
return damEnh;}
g.WizardMagEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Charged Bolts"){damEnh+=talent1()*4.2;}else if(spellName==="Arcane Missiles"){damEnh+=talent2()*4.9;}else if(spellName==="Chain Lightning"){damEnh+=talent3()*6.3;if(Set.Malefactor>=6){damEnh+=50;}}else if(spellName==="Ice Bolt"){var b=talent5()*2;if(my.talent5>=20){b+=10;}
damEnh+=b;}else if(spellName==="Deep Freeze"){damEnh+=talent6()*4.5;}else if(spellName==="Glacial Spike"){damEnh+=talent7()*5.3;}else if(spellName==="Ice Comet"){damEnh+=talent8()*6.5;}else if(spellName==="Fireball"){damEnh+=talent10()*5.9;}else if(spellName==="Meteor"){damEnh+=talent12()*6.7;}
if(my.talent4>=20){if(mType==="lightning"){damEnh+=15;}}
if(my.talent8>=20){if(mType==="cold"){damEnh+=15;}}
if(my.talent12>=20){if(mType==="fire"){damEnh+=15;}}
if(harnessEtherStatus===true){if(tt!==true&&spellName!=='elemental'){damEnh+=~~(100+(conjurationTotal()/2));damEnh+=talent11()*4.1;harnessEtherStatus=false;$("#harnessEtherIcon").remove();}}
return damEnh;}
function TTmag(max,percent,mType,skillName){var min=max*percent;var a=[];a[0]="<span class='green'>"+g.myMagicDamage(mType,min,0,false,skillName,false,true)+"</span>";a[1]="<span class='green'>"+g.myMagicDamage(mType,max,0,false,skillName,false,true)+"</span>";return a;}
g.myMagicDamage=function(mType,damage,Slot,crit,spellName,proc,tt){if(tt!==true){if(mob[Slot].name===""||mob[Slot].charmStatus===true){return;}
if(crit===true){damage=(damage+damage*(g.criticalDamage()));}
var ignore=false;if(my.job==="Druid"){if(my.talent10>=20&&mob[Slot].driftingDeathTickCount>0){ignore=true;}}
if(mob[Slot].stasisFieldStatus===true){damage=0;g.slotDamage(damage,Slot);return;}
if(ignore===false&&mType!=="physical"){var r1=mob[Slot][mType];if(Set.ArchMage>=6){r1+=45;}
if(Set.HighPriest>=6){r1+=(r1+100)/2;}
if(my.job==="Magician"){if(my.talent4>=20){if(mType==='fire'){if(r1<100){r1=(r1+100)/2;}}}}
damage=damage*(r1/100);}}
if(M.random()>.25){if(spellName==="Earthquake"||spellName==="Hurricane"||spellName==="elemental"){}else{g.updateRootStatus(Slot);}}
var damEnh=0;if(proc!==true){damEnh+=g.enhanceAllEquip;damEnh+=g['enhance'+mType[0].toUpperCase()+mType.slice(1)+'Equip'];}
if(my.race==="Barbarian"){if(ancestralRampageStatus===true){damEnh+=100;}}
if(secondWindStatus===true){damEnh+=25;}
if(tt!==true){if(g.amplifyDamageStatus===true){damEnh+=100;g.amplifyDamageStatus=false;}
if(mob[Slot].frozenStatus===true){var shatterBonus=0;if(mob[Slot].shatterStatus===true){T.to('#iceIcon'+Slot,.5,{opacity:0,onComplete:function(){$("#iceIcon"+Slot).remove();T.to(bmp[Slot],1,{easel:{tint:"#08f",tintAmount:0}});}});shatterBonus=75;mob[Slot].frozenTimer.kill();mob[Slot].frozenStatus=false;mob[Slot].shatterStatus=false;}
damEnh+=(25+shatterBonus);if(g.autoAttackStatus===1&&Lmy.autoAttackOption==="On"){toggleAutoAttackStatus();}}
if(Set.Willow>=6){if(mob[Slot].rootStatus>0){damEnh+=30;}}}
damEnh+=g[JOB.MagEnh](spellName,Slot,mType,tt);if(my.job!=="Bard"){damEnh+=(min70(intTotal())/6);}else{damEnh+=(min70(chaTotal())/6);}
damage=(damage+(damage*(damEnh/100)));if(tt!==true){var damRed=0;if(mob[Slot].level>my.level){damRed+=mob[Slot].level-my.level;}
if(my.job==="Ranger"){if(mob[Slot].riftStatus===true){damRed+=wardersRiftReduction()-(talent4()*1.25);}}
if(damRed>75){damRed=75;}
if(mob[Slot].sanctuary===true){if(my.job==="Cleric"&&my.talent6>=20){}else if(my.job==="Enchanter"&&my.talent12>=20){}else{damRed=75;}}
damage=~~(damage-(damage*(damRed/100)));}
if(tt===true){return M.ceil(damage);}
if(damage<1){damage=1;}
damage=~~(1+damage);if(mob[Slot].runeHp>0){mob[Slot].runeHp-=damage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}
playAudio("blockBlunt");}else{mob[Slot].hp-=damage;if(proc===true){Chat(mob[Slot].name+spellName+" for "+damage+" damage.",4);}
tint(Slot,mType,.1);if(spellName==="Arcane Missiles"&&mob[Slot].hp<=0){magicMissileAbsorb(Slot);}}
if(GLB.chatMyHit==="On"){if(proc!==true){if(mob[Slot].name!==''&&spellName!==undefined){if("elemental"===spellName){}else if("falling"===spellName){Chat(mob[Slot].name+" falls for "+damage+" damage.");}else{Chat(spellName+" hits "+mob[Slot].name+" for "+damage+" "+mType+" damage.",4);}}}}
if(g.leechEquip>0){g.popupHeal((damage*g.leechRatio)*(g.leechEquip));}
if(g.wraithEquip>0){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{g.popupMana((g.wraithRatio*damage)*(g.wraithEquip/100));}}
if(crit===false||crit===undefined){if(spellName!=="elemental"){slotMagicDamage(damage,Slot,mType);}else{slotElementalDamage(damage,Slot,mType);}}else{slotMagicDamageCrit(damage,Slot,mType);}
if(mob[Slot].attackStatus===1){attackOn(false);}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();if(mob[Slot].sleepStatus===true){mob[Slot].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
if("Burst of Flame"===spellName){return M.round(damage);}
if(my.race==="Dark Elf"){if(sanguineTormentStatus===true){g.popupHeal(M.ceil(damage/16));}}
if(my.job==="Shadow Knight"){if(vampiricEmbraceStatus===true){var drainChance=M.random()*100;if(drainChance>80){g.popupHeal(M.ceil(damage/8));}}}
if(my.race==="Gnome"){if(shortCircuitStatus===true){var regenMpTick=M.ceil(damage/18);g.popupMana(regenMpTick);}}
return M.round(damage);}
g.WarriorDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Hemorrhage"){damEnh+=talent6()*2.1;}
return damEnh;}
g.MonkDotEnh=function(){return 0;}
g.RogueDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Widow Strike"){damEnh+=talent11()*7.25;}
return damEnh;}
g.PaladinDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(tt!==true){if(my.talent10>=20){if(mob[Slot].stunStatus===true){damEnh+=40;}}
if(my.talent7>=20){if(mob[Slot].blindStatus===true){damEnh+=30;}}}
if(yaulpStatus===true){damEnh+=yaulpBonus;}
return damEnh;}
g.ShadowKnightDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Dooming Darkness"){damEnh+=talent8()*3.6;}else if(spellName==="Heat Blood"){damEnh+=talent12()*5.7;}
if(tt!==true){if(mob[Slot].fearStatus===true){damEnh+=talent11()*.85;}
if(my.talent12>=20){if(mob[Slot].heatBloodTickCount>0){damEnh+=15;}}}
return damEnh;}
g.RangerDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Faerie Flame"){damEnh+=talent7()*3.1;}
if(indoorStatus===false){damEnh+=20;}
if(mob[Slot].faerieFlameTickCount>0&&tt!==true){damEnh+=15;}
return damEnh;}
g.BardDotEnh=function(){return 0;}
g.DruidDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Drones of Doom"){damEnh+=talent1()*6.2;}else if(spellName==="Drifting Death"){damEnh+=talent10()*2.5;}else if(spellName==="Volcano"){damEnh+=talent12()*6.2;}else if(spellName==="Earthquake"&&!tt){screenShake(1,4,4,100);}
if(indoorStatus===false){damEnh+=20;}
return damEnh;}
g.ClericDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(mob[Slot].martyr===true&&tt!==true){damEnh+=(talent6()*12.5);damEnh+=30;}
return damEnh;}
g.ShamanDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Scourge"){damEnh+=talent5()*6.5;}else if(spellName==="Affliction"){damEnh+=talent7()*4.2;}else if(spellName==="Devouring Plague"){damEnh+=talent8()*4.8;}
if(mob[Slot].afflictionStatus===true&&tt!==true){damEnh+=10;}
if(bloodlustStatus===true){damEnh+=60;}
return damEnh;}
g.NecromancerDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Cascading Darkness"){damEnh+=talent10()*5.8;}else if(spellName==="Ignite Blood"){damEnh+=talent2()*4.7;}else if(spellName==="Bond of Death"){damEnh+=talent3()*3.6;}else if(spellName==="Asystole"){damEnh+=talent12()*5.2;}
if(tt!==true){if(mob[Slot].fearStatus===true){damEnh+=talent11()*1.33;}
if(my.talent7>=20){if(mType==="poison"&&M.random()>.76){activateCorpseExplosion();}}}
if(my.talent12>=20){if(shieldHp>0){damEnh+=15;}}
return damEnh;}
g.EnchanterDotEnh=function(spellName,Slot,mType,tt){var damEnh=0;if(spellName==="Gasping Embrace"){damEnh+=talent9()*5.9;}
if(my.talent4>=20){if(shieldHp>0){damEnh+=20;}}
if(mob[Slot].tashaniaStatus===true&&tt!==true){damEnh+=(abjurationTotal()/20);}
return damEnh;}
g.MagicianDotEnh=function(){return 0;}
g.WizardDotEnh=function(){return 0;}
function TTdot(max,percent,mType,skillName){var min=max*percent;var a=[];a[0]="<span class='green'>"+g.myDotDamage(min,0,mType,skillName,true)+"</span>";a[1]="<span class='green'>"+g.myDotDamage(max,0,mType,skillName,true)+"</span>";return a;}
g.myDotDamage=function(damage,Slot,mType,spellName,tt){if(tt!==true){if(mob[Slot].name===""){return;}
if(mob[Slot].stasisFieldStatus===true){damage=0;g.slotDamage(damage,Slot);return;}
if(mType!=="physical"){var r1=mob[Slot][mType];if(Set.ArchMage>=6){r1+=45;}
if(Set.HighPriest>=6){r1+=(r1+100)/2;}
damage=damage*(r1/100);}
var crit=false;if(checkCrit()===true){crit=true;damage+=(damage*(g.criticalDamage()));}}
var damEnh=0;damEnh+=g.enhanceAllEquip;damEnh+=g['enhance'+mType[0].toUpperCase()+mType.slice(1)+'Equip'];if(my.race==="Barbarian"){if(ancestralRampageStatus===true){damEnh+=100;}}
if(secondWindStatus===true){damEnh+=25;}
if(tt!==true){if(Set.Willow>=6){if(mob[Slot].rootStatus>0){damEnh+=30;}}}
damEnh+=g[JOB.DotEnh](spellName,Slot,mType,tt);if(mType!=="physical"){damEnh+=(min70(intTotal())/6);}
damage=(damage+(damage*(damEnh/100)));if(tt!==true){var damRed=0;if(mob[Slot].level>my.level){damRed+=mob[Slot].level-my.level;}
if(my.job==="Ranger"){if(mob[Slot].riftStatus===true){damRed+=wardersRiftReduction()-(talent4()*1.25);}}
if(damRed>75){damRed=75;}
if(mob[Slot].sanctuary===true){if(my.job==="Cleric"&&my.talent6>=20){}else if(my.job==="Enchanter"&&my.talent12>=20){}else{damRed=75;}}
damage=(damage-(damage*(damRed/100)));}
damage=M.ceil(damage);if(tt===true){return damage;}
if(damage<1){damage=1;}
if(g.leechEquip>0){g.popupHeal((damage*g.leechRatio)*(g.leechEquip));}
if(g.wraithEquip>0){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{g.popupMana((g.wraithRatio*damage)*(g.wraithEquip/100));}}
if(mob[Slot].runeHp>0){mob[Slot].runeHp-=damage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}}else{mob[Slot].hp-=damage;}
g.popupDotDamage(damage,Slot,mType,crit);tint(Slot,mType,.033);if(my.job==="Shaman"){if(spellName==="Devouring Plague"){g.popupHeal(damage*.3,true);if(my.talent8>=20){g.popupMana(damage*.1);mob[Slot].mp-=1;if(mob[Slot].mp=0){mob[Slot].mp=0;}}}}
if(my.job==="Necromancer"){if(spellName==="Bond of Death"){g.popupHeal(damage,true);}}
if(mob[Slot].attackStatus===1){attackOn(false);}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();if(mob[Slot].sleepStatus===true){mob[Slot].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
if(my.race==="Dark Elf"){if(sanguineTormentStatus===true){g.popupHeal(M.ceil(damage/16));}}
if(my.race==="Gnome"){if(shortCircuitStatus===true){var regenMpTick=M.ceil(damage/18);g.popupMana(regenMpTick);}}
return damage;}
function animateAutoAttack(Slot,identifyRightHand){if(mob[Slot].attackStatus===1||mob[Slot].name===""||mob[Slot].charmStatus===true){return;}
if(my.dualWield===0){if(identifyRightHand===false){return;}}
var cX=0;if(identifyRightHand===true){cX=(MOB[Slot].offsetLeft+mob[Slot].cX+100);}else{cX=(MOB[Slot].offsetLeft+mob[Slot].cX-100);}
var cY=(MOB[Slot].offsetTop+mob[Slot].cY-100);if(identifyRightHand===true){if(P.eq[12].type==="slashed"||P.eq[12].type==="cleaved"||P.eq[12].type==="crushed"||P.eq[12].type==="smashed"||P.eq[12].type==="staff"){if(P.eq[12].yPos===-192&&P.eq[12].xPos===-576){animateClaw(cX,cY);}else{animateSlash(cX,cY);}
if(P.eq[12].type==="smashed"||P.eq[12].type==="staff"){playAudio("kickHit");}else{playAudio("weapon"+P.eq[12].type);}}else if(P.eq[12].type==="pierced"){animatePierce(cX,cY+M.random()*60-30);playAudio("weaponslashed");}else if(P.eq[12].type==="punched"){animatePunch(cX-100+M.random()*10+5,cY+(M.random()*30+35));playAudio("weapon"+P.eq[12].type);}}else{if(P.eq[13].type==="slashed"||P.eq[13].type==="crushed"){if(P.eq[13].yPos===-192&&P.eq[13].xPos===-576){animateClawL(cX,cY);}else{animateSlashL(cX,cY);}
if(P.eq[13].type==="smashed"||P.eq[13].type==="staff"){playAudio("kickHit");}else{playAudio("weapon"+P.eq[13].type);}}else if(P.eq[13].type==="pierced"){animatePierceL(cX,cY+M.random()*60-30);playAudio("weaponslashed");}else if(P.eq[13].type==="punched"){animatePunchL(cX+M.random()*10+15,cY+(M.random()*30+35));playAudio("weapon"+P.eq[13].type);}}}
function animateClaw(cX,cY){if(GLB.videoSetting!=="High"){return;}
var s2=img(P.eq[12].type,200,200);var e1=cacheAdd(s2,5,cX,cY,0,0);T.to(e1,.125,{x:cX-200,scaleY:1,scaleX:1,ease:ez.sin});T.to(e1,.125,{scaleY:0,scaleX:0,y:cY+200,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e1);}});var e2=cacheAdd(s2,5,cX,cY-25,0,0);T.to(e2,.125,{x:cX-200,scaleY:1,scaleX:1,ease:ez.sin});T.to(e2,.125,{scaleY:0,scaleX:0,y:cY+175,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e2);}});var e3=cacheAdd(s2,5,cX,cY+25,0,0);T.to(e3,.125,{x:cX-200,scaleY:1,scaleX:1,ease:ez.sin});T.to(e3,.125,{scaleY:0,scaleX:0,y:cY+225,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e3);}});}
function animateClawL(cX,cY){if(GLB.videoSetting!=="High"){return;}
var s2=img(P.eq[13].type+"L",200,200);var e1=cacheAdd(s2,5,cX,cY,0,0);T.to(e1,.125,{scaleX:1,scaleY:1,ease:ez.sin});T.to(e1,.125,{scaleX:0,scaleY:0,x:cX+200,y:cY+200,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e1);}});var e2=cacheAdd(s2,5,cX,cY-25,0,0);T.to(e2,.125,{scaleX:1,scaleY:1,ease:ez.sin});T.to(e2,.125,{scaleX:0,scaleY:0,x:cX+200,y:cY+175,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e2);}});var e3=cacheAdd(s2,5,cX,cY+25,0,0);T.to(e3,.125,{scaleX:1,scaleY:1,ease:ez.sin});T.to(e3,.125,{scaleY:0,scaleX:0,x:cX+200,y:cY+225,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,e3);}});}
function animateSlash(cX,cY){if(GLB.videoSetting!=="High"){return;}
var img1=P.eq[12].type;if(P.eq[12].type==="staff"){img1="smashed";}
var p1=can(img1,5,cX,cY,0,0);T.to(p1,.125,{x:cX-200,scaleX:1,scaleY:1,ease:ez.sin});T.to(p1,.125,{scaleX:0,scaleY:0,y:cY+200,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,p1);}});}
function animateSlashL(cX,cY){if(GLB.videoSetting!=="High"){return;}
var p1=can(P.eq[13].type+"L",5,cX,cY,0,0);T.to(p1,.125,{scaleX:1,scaleY:1,ease:ez.sin});T.to(p1,.125,{scaleX:.25,scaleY:.25,x:cX+200,y:cY+200,ease:ez.sout,delay:.125,onComplete:function(){cRem(5,p1);}});}
function animatePierce(cX,cY){if(GLB.videoSetting!=="High"){return;}
var p1=can(P.eq[12].type,5,cX,cY,0,200);T.to(p1,.1,{x:cX-200,scaleX:1});T.to(p1,.1,{scaleX:.25,ease:ez.Qin,delay:.1,onComplete:function(){cRem(5,p1);}});}
function animatePierceL(cX,cY){if(GLB.videoSetting!=="High"){return;}
var p1=can(P.eq[13].type+"L",5,cX,cY,0,200);T.to(p1,.1,{scaleX:1});T.to(p1,.1,{x:cX+150,scaleX:.25,ease:ez.Qin,delay:.1,onComplete:function(){cRem(5,p1);}});}
function animatePunch(cX,cY){if(GLB.videoSetting!=="High"){return;}
var p1=can(P.eq[12].type,5,cX,cY,60,60,true);T.to(p1,.1,{scaleX:1.6,scaleY:1.6,rotation:90,ease:ez.sin,onComplete:function(){T.to(p1,.2,{scaleX:0,scaleY:0,rotation:180,ease:ez.sout,onComplete:function(){cRem(5,p1);}});}});}
function animatePunchL(cX,cY){if(GLB.videoSetting!=="High"){return;}
var p1=can(P.eq[13].type,5,cX,cY,60,60,true);T.to(p1,.1,{scaleX:1.6,scaleY:1.6,rotation:90,onComplete:function(){T.to(p1,.2,{scaleX:0,scaleY:0,rotation:180,onComplete:function(){cRem(5,p1);}});}});}
function activateCorpseExplosion(){corpseExplosionStatus=true;function corpseExplosionExpire(){corpseExplosionStatus=false;g.checkNecromancerSkills();}
corpseExplosionTimeout.kill();corpseExplosionTimeout=T.delayedCall(5,corpseExplosionExpire);g.checkNecromancerSkills();}
function comboRatingValue(Slot){var x=0;x+=mob[Slot].maxHp/100;if(mob[Slot].rare===0){x*=1.25;}else if(mob[Slot].rare===2){x*=1.5;}else if(mob[Slot].rare===3){x/=9;}
if(my.difficulty===1){x*=2;}else if(my.difficulty===2){x*=3;}
return~~x;}
g.checkForDeadMonsters=function(){var somethingDied=0;for(var i=0;i<=4;i++){if(mob[i].hp<=0&&mob[i].name){mob[i].attackStatus=1;if(g.autoAttackStatus===1){var attackButtonStatus=false;}
if(mob[i].rare===2){my.championsSlain+=1;}
if(mob[i].mobMartyr===true){mob[i].mobMartyr=false;Chat((mob[i].name+" heals all allies!"),1);physicalDamage((mob[i].str*3),i,"uses Martyr's Sacrifice and hits");for(var k=0;k<=4;k++){if(mob[k].name&&i!==k){mob[k].hp+=(mob[i].str*15);g.popupHealSlot(mob[i].str*15,1);}}}
if(mob[i].fireEnchanted){mob[i].fireEnchanted=false;magicalDamage((mob[i].intel*2),i,"Fiery Explosion","fire");}
if(mob[i].coldEnchanted){mob[i].coldEnchanted=false;magicalDamage((mob[i].intel*2),i,"Glacial Shatter","cold");}
if(mob[i].lightningEnchanted){mob[i].lightningEnchanted=false;magicalDamage((mob[i].intel*2),i,"Static Discharge","lightning");}
if(mob[i].poisonEnchanted){mob[i].poisonEnchanted=false;magicalDamage((mob[i].intel*2),i,"Poison Nova","poison");}
mob[i].attack.kill();mob[i].thornsTimer.kill();mob[i].spellActive.kill();monsterConfuseCooldown.kill();mob[i].widowStrikeInterval.kill();mob[i].hemorrhageInterval.kill();mob[i].thornsActive=1;mob[i].lavaShieldActive=1;mob[i].furiousScorn=0;mob[i].lacerate=0;mob[i].castingStatus=false;somethingDied=1;chainCounter+=1;comboRating+=comboRatingValue(i);mob[i].snareStatus=false;mob[i].faerieFlameTickInterval.kill();mob[i].dazeTimer.kill();mob[i].dazeStatus=false;mob[i].doomingDarknessInterval.kill();mob[i].heatBloodInterval.kill();mob[i].martyr=false;mob[i].togorsInsectsTimeout.kill();mob[i].slowStatus=false;mob[i].regenStatus=true;mob[i].afflictionStatus=false;$("#detonateSoul"+i).remove();mob[i].riftStatus=false;T.to('#orbIcon'+i,.5,{opacity:0,onComplete:function(){$("#orbIcon"+i).remove();}});$(".freezeIcon"+i).remove();if(my.job==="Necromancer"){activateCorpseExplosion();}
if(my.job==="Warrior"){frenziedRampageStatus=0;g.checkWarriorSkills();frenziedRampageTimeout.kill();frenziedRampageTimeout=T.delayedCall(5,frenziedRampageExpire);}
cleanupMobSkills(i);}}
if(somethingDied>0){if(my.job==="Necromancer"){g.checkNecromancerSkills();}
attackOff();hideMobTooltip();}}
function hideMobTooltip(){NG.tooltip.style.visibility="hidden";if(GLB.tooltipMode==="Long"){NG.tooltipmsg.style.display="block";}}
function killAllMonsters(){for(var i=0;i<=4;i++){mob[i].attack.kill();}}
function playEnding(){window.onbeforeunload=null;playMusic("Heroic Demise (2013 - With Choir)");var w4=new C.Bitmap('backgrounds/nimgaul.jpg');stage[8].addChild(w4);w4.image.onload=function(){var e=w4.getBounds();w4.cache(e.x,e.y,e.width,e.height);T.set(w4,{easel:{colorize:'#fab660',colorizeAmount:.9}});var s1=checkTitle();s1=s1.toUpperCase();var str="CONGRATULATIONS!<br><br>"+"YOU HAVE DEFEATED NALATOS!<br><br>"+"YOU SHALL NOW BE KNOWN AS<br>"+
s1+" "+my.name.toUpperCase();if(diff()===0){str+="<br><br>YOUR ADVENTURES CONTINUE IN NIGHTMARE";}else if(diff()===1){str+="<br><br>YOUR ADVENTURES CONTINUE IN HELL";}else if(diff()===2){str+="<br><br>YOU HAVE MASTERED NEVERGRIND<br>PLAYING AS THE "+my.job.toUpperCase()+"!";}
str+="<br><br><button id='resetGame'>OK</button>";D.getElementById('introText2').innerHTML=str;}}
function bossExplosion(total){function doit(count){playAudio("explode"+~~(M.random()*(3)+1));particleBurst(2,'white',0,60,M.random()*2000+1000,3);if(++count<total){T.delayedCall(.25,doit,[count]);}}
doit(0);}
function killBoss(){screenShake(100,4,2,5);killAllMonsters();bmpTint[2].lightning.alpha=0;T.set(bmpTint[2]['lightning'],{easel:{tint:'#fff',tintAmount:1}});var s1=new Audio();s1.src="sound1/explode1."+audioExt;var s2=new Audio();s2.src="sound1/explode2."+audioExt;var s3=new Audio();s3.src="sound1/explode3."+audioExt;var p1=new Image();p1.src='images1/tremorFG.png';var p2=new Image();p2.src='images1/tremorBG.png';D.getElementById('intro').style.display='none';D.getElementById('intro').style.opacity=0;bossExplosion(26);playEnding();T.to(bmpTint[2].lightning,7,{alpha:1,onComplete:function(){screenShake(2,100,50,1);animateBossExplodeSonicRing(10);playAudio("cazic_die");flashScreen("#fff",1,1);MOB[2].style.visibility='hidden';particleBurst(2,'white',0,300,2000,5);T.delayedCall(.25,function(){particleBurst(2,'white',0,300,2000,4.75);});T.delayedCall(.5,function(){particleBurst(2,'white',0,300,2000,4.5);});T.delayedCall(2,function(){T.to('#gameView',5,{opacity:0,onComplete:function(){D.getElementById('gameView').style.display='none';D.getElementById('intro').style.display='block';T.to('#intro',1,{delay:1,opacity:1});}});});}});}
function attackOff(){if(attackStatus!==0){return;}
var lastMobSlain=0;var checkQuest=D.getElementById('QindicatorHead').textContent!==""?true:false;for(var i=0;i<=4;i++){if(mob[i].hp<=0&&mob[i].name){lastMobSlain=i;if(checkQuest===true){Qprogress(i);save.quests();}
playAudio(mob[i].audio3);var ranX=M.ceil(M.random()*60-30);var ranY=M.ceil(M.random()*40-20);if(mob[i].charmStatus===false){Chat(("You have slain "+mob[i].name+"!"));}
if(mob[i].charmStatus===true){slainPet();}
var x1=MOB[i].offsetLeft;var y1=MOB[i].offsetTop;var xWidth=mob[i].imageWidth;var xHeight=mob[i].imageHeight;stopMob(i);if(i===2&&P.Q[diff()].PlaneofFear===2&&mob[i].name==="Nalatos, God of Chaos"){killBoss();g.view="Ending";}else{hideMob(i,true);}
var goldFound=0;if(mob[i].gold){goldFound=M.round(mob[i].gold+(mob[i].gold*(g.goldFindEquip/100)));if(goldFound>0){Chat(("You have found "+goldFound+" gold."),5);}
my.gold=M.ceil(my.gold+goldFound);my.totalGold+=M.ceil(goldFound);}
my.mobsSlain+=1;if(mob[i].rare===0){my.raresSlain+=1;}
$("#mobIcons"+i).empty();if(g.hpKillEquip>0){hpKillAbsorb();}
if(g.mpKillEquip>0&&(my.job!=="Warrior"&&my.job!=="Monk"&&my.job!=="Rogue")){mpKillAbsorb();}
if(my.job==="Shaman"){if(my.talent3>=20){if(mob[i].rootStatus>0){var max=minMax((alterationTotal()-50)/8,.75);g.popupHeal(max);g.popupMana(max);}}}
if(cityStatus===false){if(mob[i].rare===0){getLoot(i);}else if(mob[i].rare===1&&M.random()<.111){getLoot(i);}else if(mob[i].rare===2){getLoot(i);getLoot(i);}else if(mob[i].rare===3){var drops=3+~~(M.random()*3);if(mob[i].name==="Revenant Viston"||mob[i].name==="Falzitherin"||mob[i].name==="Chief Grimden"||mob[i].name==="Arcturin, the Lich King"||mob[i].name==="Sentoth, Lord of Rapture"||mob[i].name==="Vixen Sarmina"){drops-=1;}
for(var j=0;j<=drops;j++){getLoot(i);}}}
mob[i].name="";mob[i].rare=1;mob[i].rootStatus=0;if(detonateSoulStatus===true){var regenMpTick=M.ceil(mob[i].maxHp/50);g.popupMana(regenMpTick);}
var x=my.level;var y=mob[i].level;var lvlDiff=x-y;var earned=1;if(lvlDiff>30){earned=0;}else if(lvlDiff>20){earned=.2;}else if(lvlDiff>15){earned=.4;}else if(lvlDiff>10){earned=.6;}else if(lvlDiff>5){earned=.8;}else if(lvlDiff>2){earned=.9;}else{earned=1;}
if(x<99&&earned!==0){var percentBonus=1;var chainPercentBonus=0;var expBonus=0;var mobExp=mob[i].xp;if(chainCounter>1){if(my.level-mob[i].level<30){var chainBonus=chainCounter;if(chainBonus>100){chainBonus=100;}
chainPercentBonus=chainBonus/66.66;percentBonus+=chainPercentBonus;}}
if(my.race==="Halfling"){percentBonus+=.05;}
percentBonus+=g.expFindEquip/100;g.oldExp=my.exp;mob[i].xp=(mob[i].xp*earned);expBonus=M.round(chainPercentBonus*mob[i].xp);popupCombo(i,chainCounter,expBonus);mob[i].xp=M.round(mob[i].xp*percentBonus);if(location.protocol==='https:'){$.ajax({url:'php/game1.php',data:{run:"updateExpGold",lastName:my.lastName,title:my.title,level:x,job:my.job,race:my.race,mobExp:mobExp,Slot:i,exp:mob[i].xp,gold:goldFound,name:my.name}}).done(function(data){var x=data*1;my.exp+=x;if(my.exp>103835784){my.exp=103835784;}
Chat("You have earned "+x+" experience!",2);battleExperienceTotal+=x;checkLevelUp();drawExpBar();}).fail(function(data){failToCommunicate();});}else{my.exp+=mob[i].xp;if(my.exp>103835784){my.exp=103835784;}
Chat("You have earned "+mob[i].xp+" experience!",2);battleExperienceTotal+=mob[i].xp;checkLevelUp();drawExpBar();}}
if(x===99){popupCombo(i,chainCounter,0);}}}
if(my.gold>999999999){my.gold=999999999;}
CStat();my.title=checkTitle();QupdateJournal(undefined,mySubzone(),true);if(countMobs()>0){attackStatus=0;if(mob[TGT].name===""){setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');targetNextMob();QMsg("Combo Rating: "+getComboRating()+"!",0,0,1500);}
return;}
rapidShotDelay.kill();castingSpell=1;castingGlobal=1;Mname="";for(var i=0;i<=4;i++){mob[i].attackStatus=1;mob[i].name="";mob[i].ID=0;mob[i].hp=0;}
monsterConfuseCooldown.kill();myAttack.kill();myAttack2.kill();petAttack.kill()
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
$NG.mobBar.css("visibility","hidden").attr("class","nameplateBlack");NG.mobName.textContent=mob[TGT].name;NG.mobLevel.textContent=mob[TGT].level;NG.mobTraits.innerHTML="";attackStatus=1;clearMobIcons();cancelMySpell(true);reportBattleStats();setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(2,resetAddMonster);timerTick(D.getElementById('addmonsterId'),2,'addmonsterId');save.my();if(g.showPortal){makePortal();}
if(g.lastDrop){var x=g.lastDrop;var z=g.lastDrop.replace(/ /g,'_');z=z.replace(/'/g,'%27');g.lastDrop='';T.delayedCall(1.5,function(){Chat("While you're resting, check out <a target='_blank' href='https://nevergrind.com/wiki/index.php?title="+z+"'>"+x+"</a> on the wiki.");});}}
function timeBonus(){var x=chainCounter*8 /((new Date()-battleStart)/1000);if(x>2){x=2;}
return x;}
function getComboRating(){return~~(comboRating+(comboRating*timeBonus()));}
function reportBattleStats(){battleDuration=(new Date()-battleStart)/1000;battleDps=(battleDamageTotal/battleDuration).toFixed(1);comboRating=getComboRating();var combatString=("Chain Combo: "+chainCounter).fontcolor("#ffff00");combatString+=("<br>Combo Rating: "+comboRating+"").fontcolor("#ffff00");combatString+=("<br>Time Bonus: "+fix(timeBonus()*100)+"%").fontcolor("#ffff00");combatString+=("<br>Experience Earned: "+battleExperienceTotal+"").fontcolor("#ffff00");combatString+=("<br><br>Hits: "+totalHits+"<br>Total Damage: "+battleDamageTotal).fontcolor("#ffffdd");combatString+=("<br>DPS: "+battleDps+'<br>').fontcolor("#ee4444");if(battlePhysicalTotal){combatString+=("<br>Physical Damage: "+battlePhysicalTotal+' -  '+((battlePhysicalTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ffffdd");}
if(battlePoisonTotal){combatString+=("<br>Poison Damage: "+battlePoisonTotal+' -  '+((battlePoisonTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#00ff00");}
if(battleMagicTotal){combatString+=("<br>Arcane Damage: "+battleMagicTotal+' -  '+((battleMagicTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ff00ff");}
if(battleLightningTotal){combatString+=("<br>Lightning Damage: "+battleLightningTotal+' -  '+((battleLightningTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ffff00");}
if(battleColdTotal){combatString+=("<br>Cold Damage: "+battleColdTotal+' -  '+((battleColdTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#0088ff");}
if(battleFireTotal){combatString+=("<br>Fire Damage: "+battleFireTotal+' -  '+((battleFireTotal/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ff0000");}
if(battlePetDamage){combatString+=("<br>Pet Damage: "+battlePetDamage+' -  '+((battlePetDamage/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ffffdd");}
if(battleDSDamage){combatString+=("<br>Damage Shield Damage: "+battleDSDamage+' -  '+((battleDSDamage/battleDamageTotal)*100).toFixed(1)+'%').fontcolor("#ffffdd");}
if(battleDamageTaken){combatString+=("<br><br>Damage Received: "+battleDamageTaken).fontcolor("#ffffdd")+
('<br>DRS: '+(battleDamageTaken/battleDuration).toFixed(1)).fontcolor("#ee4444");}
if(g.view==="Game"){D.getElementById('battleReportContent').innerHTML=combatString;if(battleDamageTotal>0){T.killDelayedCallsTo('#battleReport');T.to('#battleReport',.5,{delay:2,scale:1,opacity:1,visibility:'visible',ease:ez.Bout});}}
if(bardSingStatus===true){bardSinging();}
checkZoneCombo();if(location.protocol==='https:'){$.ajax({url:'php/game1.php',data:{run:"updateCombo",rating:comboRating,name:my.name}}).fail(function(data){failToCommunicate();});}}
function hpKillAbsorb(){g.popupHeal(M.ceil(g.hpKillEquip));}
function mpKillAbsorb(){var regenMpTick=g.mpKillEquip;g.popupMana(M.ceil(regenMpTick));}
function cleanupMobSkills(Slot){mob[Slot].skill1="";mob[Slot].skill2="";mob[Slot].skill3="";mob[Slot].skill4="";mob[Slot].harmTouch=1;mob[Slot].rune=1;mob[Slot].skeleton=1;mob[Slot].wolf=1;mob[Slot].elemental=1;mob[Slot].thorns=1;mob[Slot].lavaShield=1;mob[Slot].resolution=1;mob[Slot].enrageStatus=false;mob[Slot].ironMaidenStatus=false;mob[Slot].flurryStatus=false;mob[Slot].ampMagicStatus=false;mob[Slot].sanctuaryStatus=false;mob[Slot].barrierStatus=false;mob[Slot].drainStatus=false;mob[Slot].silenceStatus=false;}
function mobDamage(Slot,fleeFlag2){var o=mob[Slot];if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true||o.fallingStatus===true||evadeStatus===true||cityStatus===true){mob[Slot].attack=T.delayedCall(.1,function(){mobDamage(Slot);});return;}
if(o.hp<=0||my.hp<=0||o.attackStatus===1){return;}
g.checkForDeadMonsters();mob[Slot].attack.kill();var zag=countMobs();if(o.charmStatus===false){if(zag<5){if(o.summoner===true){if(o.wolf===0){monsterSummonWolf(Slot);return;}else if(o.skeleton===0){monsterSummonSkeleton(Slot);return;}else if(o.elemental===0){monsterSummonElemental(Slot);return;}else{monsterSummonSkeleton(Slot);return;}}else{if(o.wolf===0){monsterSummonWolf(Slot);return;}
if(o.skeleton===0){monsterSummonSkeleton(Slot);return;}
if(o.elemental===0){monsterSummonElemental(Slot);return;}}}
if(o.harmTouch===0){monsterHarmTouch(Slot);return;}
if(o.silenceStatus===true){if(castingSpell===0&&invincibleStatus===false){monsterSilence(Slot);return;}}}
if(o.rune===0){monsterRune(Slot);return;}
if(o.thorns===0){monsterThorns(Slot);return;}
if(o.lavaShield===0){monsterLavaShield(Slot);return;}
if(o.resolution===0){monsterResolution(Slot);return;}
if(o.enrageStatus===true&&o.flurry===false&&o.rootStatus<=0){var skillCheck=M.random()*100;if(skillCheck>70){monsterEnrage(Slot);return;}}
if(o.flurryStatus===true&&o.rootStatus<=0||(my.job==="Bard"&&my.talent10>=20&&o.charmStatus===true)){var skillCheck=M.random()*100;if(o.flurry===false){if(o.name==="Vixen Sarmina"){skillCheck=100;}
if(skillCheck>70){monsterFlurry(Slot);return;}}}
if(o.ampMagicStatus===true&&o.flurry===false){var skillCheck=M.random()*100;if(skillCheck>70){monsterAmpMagic(Slot);return;}}
if(o.sanctuaryStatus===true&&o.flurry===false&&TGT===Slot){var skillCheck=M.random()*100;if(skillCheck>70){monsterSanctuary(Slot);return;}}
if(o.layHands===true){if(o.hp/o.maxHp<.25){if(M.random()>.75){monsterLayHands(Slot);return;}}}
if(o.ironMaidenStatus===true&&o.flurry===false&&TGT===Slot){preload(['images1/ironMaidenIcon.png']);var skillCheck=M.random()*100;if(o.name==="Sanctum Guardian Ghalentus"){skillCheck=100;}
if(skillCheck>70){monsterIronMaiden(Slot);return;}}
if(o.barrierStatus===true&&o.flurry===false&&TGT===Slot){var skillCheck=M.random()*100;if(skillCheck>70){monsterBarrier(Slot);return;}}
var tl=TM();var MonsterSkillChance=M.ceil(M.random()*o.castFreq);if(o.charmStatus===true||(my.job==="Cleric"&&my.talent10>=20&&M.random()>.76)){if(TGT===charmSlot&&my.job!=="Cleric"){resumeMonsterAttack(Slot);return;}
if(o.dazeStatus===true){var blindChance=M.ceil(M.random()*7);if(3>blindChance){Chat(o.name+" is blinded by darkness.");resumeMonsterAttack(Slot);return;}}
var targetCharm=false;if(MonsterSkillChance===o.castFreq&&my.job!=="Cleric"){monsterSkillCheck(Slot,targetPet,targetCharm);return;}
if(my.job==="Cleric"){charmSlot=Slot;}
var leftReset=152+(Slot*244)-(o.imageWidth/2);if(charmSlot<TGT){T.set(canvas[Slot],{rotationY:180});tl.to(MOB[Slot],.2,{left:"+=30"}).to(MOB[Slot],.2,{left:"+=35",bottom:"-=20"}).to(MOB[Slot],.2,{left:"-=20"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}else{T.set(canvas[Slot],{rotationY:0});tl.to(MOB[Slot],.2,{left:"-=30"}).to(MOB[Slot],.2,{left:"-=35",bottom:"-=20"}).to(MOB[Slot],.2,{left:"+=20"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}
resumeMonsterAttack(Slot);T.delayedCall(.5,function(){charmMobHit(Slot);});enchanterMultiHit(Slot);return;}
if(g.petAlive===true){var petAbsorbChance=M.random()*100;if(petRootStatus===true){petAbsorbChance-=15;}
var petAbsorbStatus=false;var necAbs=50;if(my.talent8>=20){necAbs=43;}
if(my.job==="Shadow Knight"&&petAbsorbChance>75){petAbsorbStatus=true;}
if(my.job==="Necromancer"&&petAbsorbChance>50){petAbsorbStatus=true;}
if(my.job==="Magician"&&petAbsorbChance>necAbs){petAbsorbStatus=true;}
if(my.job==="Shaman"&&petAbsorbChance>85){petAbsorbStatus=true;}
if(o.rootStatus>0){petAbsorbStatus=true;}
if(petHp<=0){petAbsorbStatus=false;}
var targetPet=false;if(petAbsorbStatus===true){var targetPet=true;if(MonsterSkillChance===o.castFreq){if(o.rootStatus<=0){stopMob(Slot);}
monsterSkillCheck(Slot,targetPet,targetCharm);return;}
var xWidth=petWidth/2;var leftReset=152+(Slot*244)-(o.imageWidth/2);resetMobAttack(Slot);if(o.rootStatus>0&&o.castingStatus===false){if((MOB[5].offsetLeft+xWidth)>(130+(Slot*320))){tl.to(MOB[Slot],.2,{left:"+=5"}).to(MOB[Slot],.2,{left:"+=5",bottom:"-=5"}).to(MOB[Slot],.2,{left:"-=5"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}else{tl.to(MOB[Slot],.2,{left:"-=5"}).to(MOB[Slot],.2,{left:"-=5",bottom:"-=5"}).to(MOB[Slot],.2,{left:"+=5"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}}else{if((MOB[5].offsetLeft+xWidth)>(130+(Slot*320))){tl.to(MOB[Slot],.2,{left:"+=35"}).to(MOB[Slot],.2,{left:"+=25",bottom:"-=20"}).to(MOB[Slot],.2,{left:"-=25"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}else{tl.to(MOB[Slot],.2,{left:"-=35"}).to(MOB[Slot],.2,{left:"-=25",bottom:"-=20"}).to(MOB[Slot],.2,{left:"+=25"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}}
function mobHitsMyPet(){var o3=mob[Slot];if(petName===""||!o3.name){return;}
var monsterDamage=M.ceil((M.random()*mobStrength(Slot))*(1-(((petDef)/4)/100)));monsterDamage+=M.ceil(monsterDamage*((o3.level*.75)/ 100));if(monsterDamage<o3.level*.3){monsterDamage=M.ceil(o3.level*.3);}
monsterDamage=damagePet(monsterDamage);petHp-=monsterDamage;Chat((o3.name+" hits "+petName+" for "+monsterDamage+" damage."));g.drawMyHp();if(petImage==="a fire elemental pet"){petFlameShield(Slot);}
if(M.random()>.8){if(my.job==="Magician"){playAudio("elem_hit3");}
if(my.job==="Necromancer"||my.job==="Shadow Knight"){playAudio("skeleton_hit");}
if(my.job==="Shaman"){playAudio("wolf_hit2");}}
if(petHp<=0&&g.petAlive===true){slainPet();}}
T.delayedCall(.5,mobHitsMyPet);resumeMonsterAttack(Slot);return;}}
if(my.job==="Bard"||my.job==="Enchanter"){if(petName!==""&&mob[charmSlot].hp>0){var petAbsorbChance=M.random()*100;var petAbsorbStatus=false;var goy=0;if(my.job==="Bard"){if(my.talent12>=20){goy=10;}}else{if(my.talent5>=20){goy=16;}}
if(petAbsorbChance>50-goy){petAbsorbStatus=true;}
if(petAbsorbStatus===true){var targetCharm=true;if(MonsterSkillChance===o.castFreq){if(o.rootStatus<=0){stopMob(Slot);}
monsterSkillCheck(Slot,targetPet,targetCharm);return;}
var monsterDamage=M.ceil((M.random()*mobStrength(Slot))*(g.mobDefense(charmSlot)));monsterDamage+=M.ceil(monsterDamage*((o.level*.75)/ 100));var leftReset=152+(Slot*244)-(o.imageWidth/2);resetMobAttack(Slot);if(o.doubleAttack===false){if(charmSlot>Slot){tl.to(MOB[Slot],.2,{left:"+=30"}).to(MOB[Slot],.2,{left:"+=35",bottom:"-=20"}).to(MOB[Slot],.2,{left:"-=20"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}else{tl.to(MOB[Slot],.2,{left:"-=30"}).to(MOB[Slot],.2,{left:"-=35",bottom:"-=20"}).to(MOB[Slot],.2,{left:"+=20"}).to(MOB[Slot],.2,{left:leftReset,bottom:floorB});}}
if(monsterDamage<o.level*.3){monsterDamage=M.ceil(o.level*.3);}
mob[charmSlot].hp-=monsterDamage;Chat((o.name+" hits "+petName+" for "+monsterDamage+" damage."));g.drawMyHp();g.slotDamage(monsterDamage,charmSlot);g.checkForDeadMonsters();resumeMonsterAttack(Slot);if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();mobDamage(charmSlot);}
return;}}}
if(o.rootStatus>0){MonsterSkillChance=o.castFreq;}
if(MonsterSkillChance===o.castFreq){monsterSkillCheck(Slot,targetPet,targetCharm);return;}
function mobHits(){var o2=mob[Slot];if(o2.stunStatus===true||o2.fearStatus===true||o2.sleepStatus===true||o2.frozenStatus===true||o2.stasisFieldStatus===true){return;}
if(o2.hp<=0||my.hp<=0||attackStatus!==0){return;}
var mStr=mobStrength(Slot);var monsterDamage=M.ceil((M.random()*mStr+mStr/6));if(o2.enrage===true){monsterDamage+=M.ceil(o2.level/2);}
if(my.dodge>=1){if(skillLevelUp()>my.dodge){levelUpDodge();}
if(M.random()*100<dodgeChance()&&fearStatus===1&&bashStatus===1){Chat((o2.name+" tries to hit you, but you dodged!"));if(my.job==="Paladin"){if(my.talent4>=20){repudiation(Slot);}}
return;}}
if(fearStatus===1&&bashStatus===1){if(shieldBlockChance){if(M.random()<shieldBlockChance){playAudio("shldblk");Chat("Your shield blocks the attack!");return;}}
if(my.parry>=1){if(skillLevelUp()>my.parry){levelUpParry();}
if(M.random()*100<parryChance()&&fearStatus===1&&bashStatus===1){if(my.job==="Monk"){Chat("You block the attack!");}else{Chat("You parry the attack!");}
if(my.job==="Ranger"&&my.level>=6){var chance=10;if(o2.snareStatus===true){chance+=7;}
if(sowStatus===true){chance+=7;}
if(chance>M.random()*100){empowerTrueshot+=50;}
if(my.talent4>=20){regenHealth(9,"Strands of Ether",6,-64,1,true);}}
if(P.eq[12].type==="slashed"||P.eq[12].type==="pierced"||P.eq[12].type==="cleaved"){playAudio("blockSword");}else{playAudio("blockBlunt");}
myAttack.kill();myAttack=T.delayedCall(.25,getDamage);autoAttackTimer(.25);if(my.job==="Paladin"){if(my.talent4>=20){repudiation(Slot);}}
return;}}
if(my.riposte>=1){if(skillLevelUp()>my.riposte){levelUpRiposte();}
if(M.random()*100<riposteChance()||weaponShieldStatus===true){executeRiposte(Slot);return;}}}
if(o2.fallingStatus===true){return;}
if(o2.drainStatus===true){var goy=.8;if(o2.name==="Vixen Sarmina"){goy=.5;}
if(M.random()>goy){monsterDrain(Slot);}}
if(o2.rootStatus>0&&o2.silenceStatus===true){}else{physicalDamage(monsterDamage,Slot,"hits");}}
if(o.name){resetMobAttack(Slot);if(o.rootStatus<=0){var leftReset=152+(Slot*244)-(o.imageWidth/2);var randomY=145+M.round(M.random()*30-70);var randomLeft1=M.round(leftReset+M.random()*100-50);var randomLeft2=M.round(leftReset+M.random()*60-30);flipMob(Slot);tlMob[Slot]=TM();tlMob[Slot].to(MOB[Slot],.5,{bezier:{curviness:3,values:[{left:randomLeft1,bottom:71,scale:1.1},{left:randomLeft2,bottom:62,scale:1.2}]},force3D:"auto",onComplete:function(){flipMob(Slot);mobHits();}}).to(MOB[Slot],.4,{left:leftReset,bottom:floorB,ease:ez.Qinout,force3D:"auto",scale:1});}
resumeMonsterAttack(Slot);}}
function charmMobHit(Slot){if(!mob[charmSlot].name||!mob[TGT].name||mob[TGT].charmStatus===true){return;}
var monsterDamage=M.ceil(M.random()*mobStrength(Slot));g.petPhysical(monsterDamage,TGT,"hits");}
function enchanterMultiHit(Slot){if(my.job==="Enchanter"){if(my.talent8>0&&alacrityStatus===true){function doit5(count,total){if(count<total){charmMobHit(Slot);T.delayedCall(.05,function(){doit5(++count,total);});}}
doit5(0,M.ceil(my.talent8/4));}}}
function resetMobAttack(Slot){mob[Slot].attackNow=true;T.delayedCall(.5,function(){mob[Slot].attackNow=false;});}
function flipMob(Slot){T.set(canvas[Slot],{rotationY:~~(M.random()*2)*180});}
function mobAttackSpeed(Slot){var foo=(mob[Slot].speed+slowAmount(Slot));if(foo<500){foo=500;}
return foo;}
function slowAmount(Slot){var slowMod=0;var o=mob[Slot];slowMod+=o.consonantChain;if(o.snareStatus===true||o.chillStatus===true){slowMod+=1000;}
var a=alterationTotal();if(o.slowStatus===true){slowMod+=2000;}
if(o.shiftlessStatus===true){slowMod+=1500;}
var zug=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].zealousAura==true){zug=true;continue;}}
if(zug==true&&o.charmStatus===false){slowMod-=500;}
if(o.charmStatus===true){if(alacrityStatus===true){slowMod-=1200;}
if(anthemDeArmsStatus===true){slowMod-=1000;}}
if(o.flurry===true){slowMod=-2500;}
if(slowMod<-2500){slowMod=-2500;}
if(slowMod>3000){slowMod=3000;}
return slowMod;}
function resumeMonsterAttack(Slot){var x=M.random()*100;var d2=mob[Slot].level*.8;if(mob[Slot].doubleAttack===false){if((mob[Slot].level>5)&&(d2>x)){if(mob[Slot].charmStatus===true){cLog("Charmed pet attacks with delay: "+100);}
mob[Slot].doubleAttack=true;mobResumeAttackTimer(Slot,0,100);}else{if(mob[Slot].charmStatus===true){cLog("Charmed pet attacks with delay: "+mobAttackSpeed(Slot));}
mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));}}else{if(mob[Slot].charmStatus===true){cLog("Charmed pet double attacks with delay: "+mobAttackSpeed(Slot));}
mob[Slot].doubleAttack=false;mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));}}
function monsterDrain(Slot){var healAmount=(mob[Slot].level*5+M.random()*mob[Slot].level);if(mob[Slot].ampMagicStatus===true){healAmount=(healAmount+(healAmount*.5));}
mob[Slot].hp+=~~healAmount;g.popupHealSlot(~~healAmount,Slot);if(mob[Slot].hp>mob[Slot].maxHp){mob[Slot].hp=mob[Slot].maxHp;}
g.drawMonsterHp(Slot);Chat((mob[Slot].name+" drains the life force from your blood!"));for(var i=0;i<=9;i++){animateDrain(Slot);}}
function animateDrain(Slot){var p1=can('yellowparticle50',6,640,720,25,25);var x1=(MOB[Slot].offsetLeft+mob[Slot].cX-12);var y1=(MOB[Slot].offsetTop+mob[Slot].cY-12);T.to(p1,.5,{x:x1,y:y1,onComplete:function(){cRem(6,p1);}});}
function executeRiposte(Slot){var I=P.eq[12].type;function goSound(){if(I==="slashed"||I==="pierced"||I==="cleaved"){playAudio("blockSword");}else{playAudio("blockBlunt");}}
var riposteDamage=M.round(((M.random()*(P.eq[12].damage*10)+M.random()*(my.level/3))*(attackFunct()/1500))+M.random()*7);if(I==="cleaved"||I==="smashed"||"staff"===I){if(riposteDamage<(my.level/2.6)){riposteDamage=M.ceil(my.level/2.6);}}
if(checkCrit()===false){if(mob[Slot].runeHp>0){mob[Slot].runeHp-=riposteDamage;g.slotDamage(riposteDamage,Slot);goSound();}else{Chat(("You riposte for "+riposteDamage+" damage."));mob[Slot].hp-=riposteDamage;g.slotDamage(riposteDamage,Slot);goSound();}}else{var critDamage=M.ceil(riposteDamage+riposteDamage*(g.criticalDamage()));if(mob[Slot].runeHp>0){mob[Slot].runeHp-=critDamage;g.slotDamageCrit(critDamage,Slot);goSound();}else{Chat(("You riposte for "+(critDamage+" ")+"damage."));mob[Slot].hp-=critDamage;g.slotDamageCrit(critDamage,Slot);goSound();}}
if(my.job==="Paladin"){if(my.talent4>=20){repudiation(Slot);}}
var identifyRightHand=true;if(my.job==="Monk"){getTpRegen();}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();animateAutoAttack(Slot,identifyRightHand);}
function physicalDamage(monsterDamage,Slot,skill){var o=mob[Slot];if(o.name===""){return false;}
var savedName=o.name;monsterDamage=M.round(monsterDamage*armorPercent(Slot));if(o.martyr===true){g.popupMana(M.ceil(monsterDamage/2.5));}
if(my.job==="Shadow Knight"){if(my.talent4>=20){if(M.random()>.92){Chat(o.name+"'s attack is negated by a vortex of shadows.");playAudio("fade");return false;}}}
if(weaponShieldStatus===true){executeRiposte(Slot);return false;}
if(stoneFistStatus===0){var dam=minMax((attackFunct()/9),.7);if(GLB.videoSetting==="High"){animateAncestralFlurry(Slot)}
playAudio("flshhit"+~~(M.random()*5+3));g.myPhysicalDamage(dam,Slot,"Stone Fist Reversal");return false;}
if(evadeStatus===true){Chat("You are nowhere to be found.");return false;}
if(invincibleStatus===true){if(my.job==="Warrior"){Chat(("You deflect your opponent's attack."));if(my.talent2>=20&&fearStatus===1&&bashStatus===1){executeRiposte(TGT);}}
if(my.job==="Monk"&&stoneFistStatus===1){Chat(("Your glowing aura protects you from your opponent's attack."));}
if(my.job==="Rogue"){Chat(("Your shadow absorbs the attack."));}
if(my.job==="Paladin"){repudiation(Slot);}
if(my.job==="Wizard"){Chat(("You are protected by a barrier of permafrost."));}
return false;}
if(illusiveMistStatus===0){monsterDamage=M.ceil(monsterDamage*.5);}
if(mirageStrikeStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return false;}
mirageStrikeStatus-=1;if(mirageStrikeStatus<=0){$("#mirageStrikeIcon").remove();}
$("#mirageStrikeCount").html(mirageStrikeStatus);Chat(("Your mirage absorbs the blow."));return false;}
if(mirrorImageStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return false;}
mirrorImageStatus-=1;if(mirrorImageStatus<=0){$("#mirrorImagesIcon").remove();}
$("#mirrorImagesCount").html(mirrorImageStatus);Chat(("Your mirror image absorbs the blow."));return false;}
if(o.dazeStatus===true){if(3>M.random()*10){Chat(o.name+" is disoriented by blazing light.");return false;}}
if(o.rootStatus>0){return false;}
var damEnh=0;if(CLR.martyr===true){damEnh+=(talent6()*6.3);}
monsterDamage=~~(monsterDamage+(monsterDamage*(damEnh/100)));var damRed=0;if(innerPeaceStatus===0){if(my.talent3>=20){damRed+=(talent3()*1.6);}}
if(graniteVisageStatus===true){damRed+=50;}
if(secondWindStatus===true){damRed+=25;}
if(Set.Phantasmist>=6){damRed+=25;}
if(bulwarkStatus===true){damRed+=(40+talent3());}
if(o.phased===true){damRed+=25;}
if(my.job==="Ranger"){if(o.riftStatus===true){damRed+=wardersRiftReduction();}else{if(my.talent4>=1){if(M.random()*100<talent4()*1.45){var orbFound=false;for(var i=0;i<=4;i++){if(mob[i].riftStatus===true){orbFound=true;}}
if(orbFound===true){damRed+=30+conjurationTotal()/5;}}}}}
if(o.dronesOfDoomTickCount>0){if(my.talent1>=20){damRed+=10;}}
if(my.job==="Enchanter"){if(my.talent3>=20&&discordantBarrierStatus===true){damRed+=15;}}
if(manaShieldStatus===true){damRed=75;my.mp-=~~(monsterDamage*.25);g.drawMyMp();}
if(damRed>75){damRed=75;}
monsterDamage=~~(monsterDamage-(monsterDamage*(damRed/100)));monsterDamage-=M.round(M.random()*physicalMitigation());if(monsterDamage<1){monsterDamage=1;}
if(monsterDamage<o.level*.3){monsterDamage+=M.ceil(o.level*.3+M.random()*(4));}
if(o.level<10&&monsterDamage>o.level+5){monsterDamage=o.level+5;}
if(alteredStateStatus===true){var healAmount=monsterDamage*2;g.popupHeal(healAmount);}
if(shieldHp>0){playAudio("blockBlunt");function reportShield(){if(my.job==="Cleric"){Chat(("Your guardian angel absorbs the blow."));if(shieldHp<=0){$("#guardianAngelIcon").remove();}}
if(my.job==="Necromancer"){Chat(("Your diamond skin absorbs the blow."));if(shieldHp<=0){$("#diamondSkinIcon").remove();}}
if(my.job==="Enchanter"){Chat(("Your mystic rune absorbs the blow."));if(shieldHp<=0){$("#shieldHpIcon").remove();}}
if(my.job==="Paladin"){Chat("Your protective bubble absorbs the blow.");if(shieldHp<=0){$("#yaulpShieldIcon").remove();}}
if(my.job==="Bard"){Chat("Your shield of songs absorbs the blow.");if(shieldHp<=0){$("#shieldOfSongsIcon").remove();}}}
shieldHp-=monsterDamage;reportShield();if(o.poisonEnchanted===true){var eDmg=M.ceil(M.random()*(monsterDamage/4));shieldHp-=eDmg;reportShield();}
if(o.lightningEnchanted===true){var eDmg=M.ceil(M.random()*(monsterDamage/4));shieldHp-=eDmg;reportShield();}
if(o.coldEnchanted===true){var eDmg=M.ceil(M.random()*(monsterDamage/4));shieldHp-=eDmg;reportShield();}
if(o.fireEnchanted===true){var eDmg=M.ceil(M.random()*(monsterDamage/4));shieldHp-=eDmg;reportShield();}
var zig=true;}else{checkSpellKnockback(Slot);battleDamageTaken+=monsterDamage;my.hp-=monsterDamage;playAudio("flshhit1");var eDmg=0;if(o.poisonEnchanted===true){eDmg=M.ceil(M.random()*(monsterDamage/4));my.hp-=eDmg;Chat((o.name+" hits YOU for "+eDmg+" poison damage."),1);}
if(o.lightningEnchanted===true){eDmg=M.ceil(M.random()*(monsterDamage/4));my.hp-=eDmg;Chat((o.name+" hits YOU for "+eDmg+" lightning damage."),1);}
if(o.coldEnchanted===true){eDmg=M.ceil(M.random()*(monsterDamage/4));my.hp-=eDmg;Chat((o.name+" hits YOU for "+eDmg+" cold damage."),1);}
if(o.fireEnchanted===true){eDmg=M.ceil(M.random()*(monsterDamage/4));my.hp-=eDmg;Chat((o.name+" hits YOU for "+eDmg+" fire damage."),1);}
if(eDmg){battleDamageTaken+=eDmg;}
CStat();Chat((o.name+" "+skill+" YOU for "+monsterDamage+" damage."),1);var zig=true;if(my.job==="Bard"){if(my.talent3>=20&&M.random()>.85){triggerFrenzy(4000);}}}
if(o.vampiric===true){mob[Slot].hp+=(M.ceil(5+monsterDamage/3));}
if(myCounter===true){executeRiposte(Slot);}
g.drawMyHp();if(o.lamprey===true){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{my.mp-=(M.ceil(monsterDamage/6));g.drawMyMp();}}
g.drawMonsterHp(Slot);if(my.defense<my.level*5){if(skillLevelUp()>my.defense){levelUpDefense();}}
var DSdamage=g.thornsEquip;if(my.job==="Ranger"){if(my.level>=3){var refreshCounterShot=M.ceil(M.random()*(100));if(o.snareStatus===true){refreshCounterShot+=7;}
if(sowStatus===true){refreshCounterShot+=7;}
if(refreshCounterShot>85){counterShotStatus=true;g.checkRangerSkills();}}
if(my.talent2>=20){if(M.random()>.75){DSdamage+=monsterDamage;playAudio('TigerA');}}
if(shieldOfBramblesStatus===true){DSdamage+=M.ceil(abjurationTotal()*.04);}
if(thistlecoatStatus===true){DSdamage+=M.ceil(abjurationTotal()*.0125);}}
if(my.job==="Necromancer"){if(my.talent11>=20){if(M.random()>.8){g.boneSpiritFinish(Slot);}}}
if(shieldOfSpikesStatus===true){DSdamage+=M.ceil(abjurationTotal()*.11);}
if(shieldOfLavaStatus===true){DSdamage+=M.ceil((abjurationTotal()*.18)*(1+(talent2()*12.8)/100));}
if(my.job==="Shadow Knight"){DSdamage+=M.ceil(talent3()*1.7);}
if(DSdamage>0){mob[Slot].hp-=DSdamage;slotMagicDamage(DSdamage,Slot,'damageShield');g.checkForDeadMonsters();}
if(my.job==="Warrior"){getFuryRegen(monsterDamage);}
if(my.hp<=0){Chat(("You have been slain by "+savedName+"!"),1);monsterKilledMe();}
return zig;}
function magicalDamage(monsterDamage,Slot,spell,mType){var o=mob[Slot];if(o.name===""){return;}
if(o.martyr===true){g.popupMana(M.ceil(monsterDamage/2.5));}
if(stoneFistStatus===0){if(my.talent2>=20){var dam=minMax((attackFunct()/9),.7);if(GLB.videoSetting==="High"){animateAncestralFlurry(Slot)}
playAudio("flshhit"+~~(M.random()*(5)+3));g.myPhysicalDamage(dam,Slot,"Stone Fist Reversal");return false;}}
if(evadeStatus===true){Chat("You are nowhere to be found.");return;}
if(invincibleStatus===true){if(my.job==="Warrior"){Chat(("You deflect your opponent's attack."));if(my.talent2>=20&&fearStatus===1&&bashStatus===1){executeRiposte(TGT);}}
if(my.job==="Monk"){Chat(("Your glowing aura protects you from your opponent's attack."));}
if(my.job==="Rogue"){Chat(("Your shadow absorbs the attack."));}
if(my.job==="Paladin"){var dam=minMax((attackFunct()/8),.7);animateRepudiation(Slot);playAudio("holybolt");T.delayedCall(.25,function(){g.myPhysicalDamage(dam,Slot,"Repudiation");});}
if(my.job==="Wizard"){Chat(("You are protected by a barrier of permafrost."));}
return;}
if(illusiveMistStatus===0){monsterDamage=M.ceil(monsterDamage*.5);}
if(mirageStrikeStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return;}
mirageStrikeStatus-=1;if(mirageStrikeStatus<=0){$("#mirageStrikeIcon").remove();}
$("#mirageStrikeCount").html(mirageStrikeStatus);Chat(("Your mirage absorbs "+spell+"."));return;}
if(mirrorImageStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return;}
mirrorImageStatus-=1;if(mirrorImageStatus<=0){$("#mirrorImagesIcon").remove();}
$("#mirrorImagesCount").html(mirrorImageStatus);Chat(("Your mirror image absorbs the blow."));return;}
monsterDamage-=M.round(M.random()*(magicMitigation()));if(monsterDamage<1){monsterDamage=1;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon, #spellAbsorbImage").remove();if(my.talent7===0){g.popupHeal(M.ceil(monsterDamage*1.2));Chat(("You consume "+spell+" and burn with rage."),3);}else{playAudio("spellDoneBoom");var bonus=(talent7()*30)/100;for(var i=0;i<=4;i++){if(i>=0){if(mob[i].name){spellDamage=M.ceil(monsterDamage*bonus);var range=(M.random()*(10)+90)/100;spellDamage=spellDamage*range;g.myMagicDamage(mType.toLowerCase(),spellDamage,i,checkCrit(),"Reflect");}}}}
getFuryRegen(monsterDamage*3);return;}
if(fearStatus===1&&bashStatus===1){if(shieldBlockChance){if(M.random()<shieldBlockChance){playAudio("shldblk");Chat("Your shield blocks the attack!");return;}}
if(Set.Warder>=6){if(my.parry>=1){if(skillLevelUp()>my.parry){levelUpParry();}
if(M.random()*100<parryChance()&&fearStatus===1&&bashStatus===1){if(my.job==="Monk"){Chat("You block the attack!");}else{Chat("You parry the attack!");}
if(my.job==="Ranger"){var chance=10;if(o.snareStatus===true){chance+=7;}
if(sowStatus===true){chance+=7;}
if(chance>M.random()*100){empowerTrueshot+=50;}
if(my.talent4>=20){regenHealth(9,"Strands of Ether",6,-64,1,true);}}
playAudio("blockSword");myAttack.kill();myAttack=T.delayedCall(.25,getDamage);autoAttackTimer(.25);return;}}
if(my.riposte>=1){if(skillLevelUp()>my.riposte){levelUpRiposte();}
if(M.random()*100<riposteChance()||weaponShieldStatus===true){executeRiposte(Slot);return;}}}}
var damEnh=0;if(CLR.martyr===true){damEnh+=(talent6()*6.3);}
monsterDamage=~~(monsterDamage+(monsterDamage*(damEnh/100)));var damRed=0;if(innerPeaceStatus===0){if(my.talent3>=20){damRed+=(talent3()*1.6);}}
if(graniteVisageStatus===true){damRed+=50;}
if(secondWindStatus===true){damRed+=25;}
if(bulwarkStatus===true){damRed+=(40+talent3());}
if(o.phased===true){damRed+=25;}
if(my.job==="Ranger"){if(o.riftStatus===true){damRed+=wardersRiftReduction();}else{if(my.talent4>=1){if(M.random()*100<talent4()*1.45){var orbFound=false;for(var i=0;i<=4;i++){if(mob[i].riftStatus===true){orbFound=true;}}
if(orbFound===true){damRed+=30+conjurationTotal()/5;}}}}}
if(o.dronesOfDoomTickCount>0){if(my.talent1>=20){damRed+=10;}}
if(my.job==="Enchanter"){if(my.talent3>=20&&discordantBarrierStatus===true){damRed+=15;}}
if(manaShieldStatus===true){damRed=75;my.mp-=~~(monsterDamage*.25);g.drawMyMp();}
if(damRed>75){damRed=75;}
monsterDamage=~~(monsterDamage-(monsterDamage*(damRed/100)));if(alteredStateStatus===true){var healAmount=monsterDamage*2;g.popupHeal(healAmount);}
if(shieldHp>0){playAudio("blockBlunt");shieldHp-=monsterDamage;if(my.job==="Cleric"){Chat(("Your guardian angel absorbs the blow."));if(shieldHp<=0){$("#guardianAngelIcon").remove();}}
if(my.job==="Necromancer"){Chat(("Your diamond skin absorbs the blow."));if(shieldHp<=0){$("#diamondSkinIcon").remove();}}
if(my.job==="Enchanter"){Chat(("Your mystic rune absorbs the blow."));if(shieldHp<=0){$("#shieldHpIcon").remove();}}
if(my.job==="Paladin"){Chat("Your protective bubble absorbs the blow.");if(shieldHp<=0){$("#yaulpShieldIcon").remove();}}
if(my.job==="Bard"){Chat("Your shield of songs absorbs the blow.");if(shieldHp<=0){$("#shieldOfSongsIcon").remove();}}
return;}else{my.hp-=monsterDamage;battleDamageTaken+=monsterDamage;CStat();if(spell==="Ice Shard"){var skillName="Chilled";var buffId="mobChilledIcon";var duration=(15000*((100-g.chillEquip)/100));var spriteX=-736;mobChilledTimer.kill();mobChilledTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,spriteX);chillStatus=true;chilledTimer.kill();chilledTimer=T.delayedCall(duration/1000,mobChillExpire);CStat();}
if(spell==="Energy Bolt"){if(M.random()>.5){Chat(("Your spell has been interrupted by a static discharge!"));tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;}}
Chat((o.name+" casts "+spell+" on YOU for "+monsterDamage+" damage."),1);}
if(o.vampiric){mob[Slot].hp+=(M.ceil(monsterDamage/2));}
g.drawMyHp();if(o.lamprey){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{my.mp-=(M.ceil(monsterDamage/6));g.drawMyMp();}}
g.drawMonsterHp(Slot);checkMyDeathBySkill(Slot);if(mType==="Poison"){if(g.absorbPoisonEquip>0){g.popupHeal(M.ceil((g.absorbPoisonEquip/100)*monsterDamage));}}else if(mType==="Magic"){if(g.absorbMagicEquip>0){g.popupHeal(M.ceil((g.absorbMagicEquip/100)*monsterDamage));}}else if(mType==="Lightning"){if(g.absorbLightningEquip>0){g.popupHeal(M.ceil((g.absorbLightningEquip/100)*monsterDamage));}}else if(mType==="Cold"){if(g.absorbColdEquip>0){g.popupHeal(M.ceil((g.absorbColdEquip/100)*monsterDamage));}}else if(mType==="Fire"){if(g.absorbFireEquip>0){g.popupHeal(M.ceil((g.absorbFireEquip/100)*monsterDamage));}}
if(my.job==="Warrior"){getFuryRegen(monsterDamage);}}
function magicalDotTick(monsterDamage,Slot,spellTicks,tickMessage,mType){var o=mob[Slot];if(my.hp<0){return;}
if(o.martyr===true){g.popupMana(M.ceil(monsterDamage/2.5));}
if(evadeStatus===true){Chat("Your location has been revealed!");evadeStatus=false;}
if(invincibleStatus===true){if(my.job==="Warrior"){Chat(("You deflect your opponent's attack."));if(my.talent2>=20&&fearStatus===1&&bashStatus===1){executeRiposte(TGT);}}
if(my.job==="Monk"){Chat(("Your glowing aura protects you from your opponent's attack."));}
if(my.job==="Rogue"){Chat(("Your shadow absorbs the attack."));}
if(my.job==="Paladin"){var dam=minMax((attackFunct()/8),.7);animateRepudiation(Slot);playAudio("holybolt");T.delayedCall(.25,function(){g.myPhysicalDamage(dam,Slot,"Repudiation");});}
if(my.job==="Wizard"){Chat(("You are protected by a barrier of permafrost."));}
return;}
if(illusiveMistStatus===0){monsterDamage=M.ceil(monsterDamage*.5);}
var damEnh=0;if(CLR.martyr===true){damEnh+=(talent6()*6.3);}
monsterDamage=~~(monsterDamage+(monsterDamage*(damEnh/100)));var damRed=0;if(innerPeaceStatus===0){if(my.talent3>=20){damRed+=(talent3()*1.6);}}
if(graniteVisageStatus===true){damRed+=50;}
if(secondWindStatus===true){damRed+=25;}
if(bulwarkStatus===true){damRed+=(40+talent3());}
if(o.phased===true){damRed+=25;}
if(my.job==="Ranger"){if(o.riftStatus===true){damRed+=wardersRiftReduction();}else{if(my.talent4>=1){if(M.random()*100<talent4()*1.45){var orbFound=false;for(var i=0;i<=4;i++){if(mob[i].riftStatus===true){orbFound=true;}}
if(orbFound===true){damRed+=30+conjurationTotal()/5;}}}}}
if(o.dronesOfDoomTickCount>0){if(my.talent1>=20){damRed+=10;}}
if(my.job==="Enchanter"){if(my.talent3>=20&&discordantBarrierStatus===true){damRed+=15;}}
if(manaShieldStatus===true){damRed=75;my.mp-=~~(monsterDamage*.25);g.drawMyMp();}
if(damRed>75){damRed=75;}
monsterDamage=~~(monsterDamage-(monsterDamage*(damRed/100)));if(monsterDamage<1){monsterDamage=1;}
if(alteredStateStatus===true){var healAmount=monsterDamage*2;g.popupHeal(healAmount);}
if(shieldHp>0){shieldHp-=monsterDamage;if(my.job==="Cleric"){Chat(("Your guardian angel absorbs the blow."));if(shieldHp<=0){$("#guardianAngelIcon").remove();}}
if(my.job==="Necromancer"){Chat(("Your diamond skin absorbs the blow."));if(shieldHp<=0){$("#diamondSkinIcon").remove();}}
if(my.job==="Enchanter"){Chat(("Your mystic rune absorbs the blow."));if(shieldHp<=0){$("#shieldHpIcon").remove();}}
if(my.job==="Paladin"){Chat("Your protective bubble absorbs the blow.");if(shieldHp<=0){$("#yaulpShieldIcon").remove();}}
if(my.job==="Bard"){Chat("Your shield of songs absorbs the blow.");if(shieldHp<=0){$("#shieldOfSongsIcon").remove();}}
return;}else{if(tickMessage===3){if(M.random()>.85){Chat(("Your spell has been interrupted by a static discharge!"));tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;}}
my.hp-=monsterDamage;battleDamageTaken+=monsterDamage;CStat();}
if(tickMessage===1){Chat(("Envenom poisons YOU for "+monsterDamage+" damage."),1);}
if(tickMessage===2){Chat(("Engulfing Darkness strangles YOU for "+monsterDamage+" damage."),1);}
if(tickMessage===3){Chat(("Static Field electrocutes YOU for "+monsterDamage+" damage."),1);}
if(tickMessage===4){Chat(("Blizzard storms down on YOU for "+monsterDamage+" damage."),1);}
if(tickMessage===5){Chat(("Conflagration scorches YOU for "+monsterDamage+" damage."),1);}
if(o.vampiric){mob[Slot].hp+=(M.ceil(monsterDamage/2));}
g.drawMyHp();if(o.lamprey){if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){}else{my.mp-=(M.ceil(monsterDamage/6));g.drawMyMp();}}
g.drawMonsterHp(Slot);checkMyDeathByDot(Slot);if(mType==="Poison"){if(g.absorbPoisonEquip>0){g.popupHeal(M.ceil((g.absorbPoisonEquip/100)*monsterDamage));}}else if(mType==="Magic"){if(g.absorbMagicEquip>0){g.popupHeal(M.ceil((g.absorbMagicEquip/100)*monsterDamage));}}else if(mType==="Lightning"){if(g.absorbLightningEquip>0){g.popupHeal(M.ceil((g.absorbLightningEquip/100)*monsterDamage));}}else if(mType==="Cold"){if(g.absorbColdEquip>0){g.popupHeal(M.ceil((g.absorbColdEquip/100)*monsterDamage));}}else if(mType==="Fire"){if(g.absorbFireEquip>0){g.popupHeal(M.ceil((g.absorbFireEquip/100)*monsterDamage));}}
if(my.job==="Warrior"){getFuryRegen(monsterDamage);}}
function mobChillExpire(){chillStatus=false;}
function mobDotLands(monsterDamage,Slot,spell){var o=mob[Slot];if(mirageStrikeStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return;}
mirageStrikeStatus-=1;if(mirageStrikeStatus<=0){$("#mirageStrikeIcon").remove();}
$("#mirageStrikeCount").html(mirageStrikeStatus);Chat(("Your mirage absorbs "+spell+"."));mob[Slot].envenomTicks=0;mob[Slot].engulfingDarknessTicks=0;mob[Slot].staticFieldTicks=0;mob[Slot].blizzardTicks=0;mob[Slot].conflagrationTicks=0;mob[Slot].dotDamage=0;mob[Slot].dotActive.kill();return;}
if(mirrorImageStatus>0){if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true){return;}
mirrorImageStatus-=1;if(mirrorImageStatus<=0){$("#mirrorImagesIcon").remove();}
$("#mirrorImagesCount").html(mirrorImageStatus);Chat(("Your mirror image absorbs the blow."));mob[Slot].envenomTicks=0;mob[Slot].engulfingDarknessTicks=0;mob[Slot].staticFieldTicks=0;mob[Slot].blizzardTicks=0;mob[Slot].conflagrationTicks=0;mob[Slot].dotDamage=0;mob[Slot].dotActive.kill();return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();var newDamage=M.ceil(monsterDamage*4);getFuryRegen(monsterDamage*3);if(my.talent7===0){g.popupHeal(newDamage);Chat(("You consume "+spell+" and burn with rage."),3);}else{playAudio("spellDoneBoom");var bonus=(talent7()*30)/100;for(var i=0;i<=4;i++){if(i>=0){if(mob[i].name){spellDamage=M.ceil(monsterDamage*bonus);var range=(M.random()*(10)+90)/100;spellDamage=spellDamage*range;g.myMagicDamage(mType.toLowerCase(),spellDamage,i,checkCrit(),"Reflect");}}}}
mob[Slot].envenomTicks=0;mob[Slot].engulfingDarknessTicks=0;mob[Slot].staticFieldTicks=0;mob[Slot].blizzardTicks=0;mob[Slot].conflagrationTicks=0;mob[Slot].dotDamage=0;mob[Slot].dotActive.kill();return;}
if(my.job==="Warrior"){getFuryRegen(monsterDamage);}}
function monsterSkillCheck(Slot,targetPet,targetCharm){function reset(){T.delayedCall(.033,function(){monsterSkillCheck(Slot,targetPet,targetCharm);});}
stopMob(Slot);var foo=~~(M.random()*(4)+1);var mobSkill=mob[Slot]['skill'+foo];if(mobSkill==="kick"||mobSkill==="bash"||mobSkill==="backstab"||mobSkill==="shadow kick"){if(mob[Slot].rootStatus<=0){if(mobSkill==="kick"){monsterKick(Slot,targetPet,targetCharm);return;}else if(mobSkill==="bash"){monsterBash(Slot,targetPet,targetCharm);return;}else if(mobSkill==="backstab"){monsterBackstab(Slot,targetPet,targetCharm);return;}else if(mobSkill==="shadow kick"){monsterShadowKick(Slot,targetPet,targetCharm);return;}}else{reset();return;}}
if(mob[Slot].silenced===false&&mob[Slot].flurry===false){if(mobSkill==="poison cloud"){MpoisonCloud(Slot,targetPet,targetCharm);}else if(mobSkill==="smite"){monsterSmite(Slot,targetPet,targetCharm);}else if(mobSkill==="energy bolt"){monsterEnergyBolt(Slot,targetPet,targetCharm);}else if(mobSkill==="ice shard"){monsterIceShard(Slot,targetPet,targetCharm);}else if(mobSkill==="fireball"){Mfireball(Slot,targetPet,targetCharm);}else if(mobSkill==="fear"){if(fearStatus===0||mob[Slot].level<20){reset();return;}
if(targetCharm===true&&mob[charmSlot].fearStatus===true){reset();return;}
monsterFear(Slot,targetPet,targetCharm);}else if(mobSkill==="blind"){if(g.blindStatus===0&&targetPet===false&&targetCharm===false){reset();return;}
monsterBlind(Slot,targetPet,targetCharm);}else if(mobSkill==="root"){if(rootStatus===0){reset();return;}
if(targetCharm===true||targetCharm===false){reset();return;}
monsterRoot(Slot,targetPet,targetCharm);}else if(mobSkill==="yawn"){if(yawnActive===0&&targetPet===false&&targetCharm===false){reset();return;}
monsterYawn(Slot,targetPet,targetCharm);}else if(mobSkill==="weaken"){if(weakenActive===0&&targetPet===false&&targetCharm===false){reset();return;}
monsterWeaken(Slot,targetPet,targetCharm);}else if(mobSkill==="mind drain"){monsterMindDrain(Slot,targetPet,targetCharm);}else if(mobSkill==="confuse"){if(confuseStatus===true){reset();return;}
monsterConfuse(Slot,targetPet,targetCharm);}else if(mobSkill==="mind numb"){if(mindNumbActive===0&&targetPet===false&&targetCharm===false){reset();return;}
monsterMindNumb(Slot,targetPet,targetCharm);}else if(mobSkill==="heal"){var healTarget=-1;if(mob[Slot].hp/mob[Slot].maxHp<.65){healTarget=Slot;}else{if(mob[Slot].charmStatus===false){for(var i=0;i<=4;i++){if(mob[i].name&&i!==Slot){if(mob[i].hp/mob[i].maxHp<.45){healTarget=i;}}}}}
if(healTarget===-1){reset();return;}
monsterHeal(Slot,healTarget);}else if(mobSkill==="envenom"){if(mob[Slot].envenomTicks>0){reset();return;}
monsterEnvenom(Slot,targetPet,targetCharm);}else if(mobSkill==="engulfing darkness"){if(mob[Slot].engulfingDarknessTicks>0){reset();return;}
monsterEngulfingDarkness(Slot,targetPet,targetCharm);}else if(mobSkill==="static field"){if(mob[Slot].staticFieldTicks>0){reset();return;}
monsterStaticField(Slot,targetPet,targetCharm);}else if(mobSkill==="blizzard"){if(mob[Slot].blizzardTicks>0){reset();return;}
monsterBlizzard(Slot,targetPet,targetCharm);}else if(mobSkill==="conflagration"){if(mob[Slot].conflagrationTicks>0){reset();return;}
monsterConflagration(Slot,targetPet,targetCharm);}}else{reset();}}
function battle(){if(hideStatus===0&&((my.job==="Monk"&&my.race!=="Halfling")||my.job==="Necromancer"||my.job==="Shadow Knight")){hideStatus=1;Chat("You stop feigning your death.");if(my.job==="Monk"){BGP('feigndeathId',"-1300% 0");}else if(my.job==="Shadow Knight"){BGP('shdfeigndeathId',"-1400% 0");}else if(my.job==="Necromancer"){BGP('feigndeath',"-700% 0");}}
if(btn.d.addmonsterId===true){return;}
if(cityStatus===true){if(D.getElementById('goldInputWrap').style.display==="none"){Chat("You can't fight battles in a city.");}
return;}
hideBattleReport();for(var i=0;i<=4;i++){MOB[i].style.display='none';MOB[i].style.opacity=0;stage[i].removeAllChildren();canvas[i].style.top="0px;"
canvas[i].style.left="0px";MOBNAME[i].style.color='#00FA9A';MOBNAME[i].innerHTML='';}
setD('addmonsterId',true);BGP('addmonsterId',"0% -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');if((hideStatus===1&&ambushStatus===1&&my.level>9&&mySubzone()!==4)){var bar=(ambushChance);var zil=M.random()*bar;if(zil<1){ambushStatus=0;}}
if(mobsFound()===false){battleExperienceTotal=0;resetBosses();runBonus=0;Mname="";for(var i=0;i<=4;i++){mob[i].hp=0;mob[i].name='';}
$NG.mobBar.css("visibility","hidden");D.getElementById('mobName').textContent=mob[TGT].name;NG.mobLevel.textContent=mob[TGT].level;NG.mobTraits.innerHTML="";}
getMonster();if(monsterFound===true&&Mname!==""){NG.mobBar.style.visibility="visible";D.getElementById('mobName').textContent=mob[TGT].name;NG.mobLevel.textContent=mob[TGT].level;NG.mobTraits.innerHTML="";clearMobIcons();NG['mobIcons'+newSlotNumber].style.display="block";if(mob[TGT].rare===0){NG.mobBar.className="ui-draggable";NG.mobPlate.src="images1/rarePlate.png";NG.mobPlate.className="nameplateGold";}else if(mob[TGT].rare==2){NG.mobBar.className="ui-draggable";NG.mobPlate.src="images1/championPlate.png";NG.mobPlate.className="nameplateBlue";}else if(mob[TGT].rare==3){NG.mobBar.className="ui-draggable";NG.mobPlate.src="images1/bossPlate.png";NG.mobPlate.className="nameplateRed";}else if(mob[TGT].rare===1){NG.mobBar.className="ui-draggable";NG.mobPlate.src="images1/normalPlate.png";NG.mobPlate.className="nameplateBlack";}
NG.mobTraits.innerHTML=mob[newSlotNumber].traits;T.set(monsterHpBar1,{scaleX:1});g.drawMonsterHp(2,true);if(hideStatus===1&&Mrare!==3){if(ambushStatus===0&&my.level>19&&mob[TGT].attackStatus===1&&cityStatus===false&&enteredWorld===true){triggerAmbush();}}}
CStat();QupdateJournal(undefined,mySubzone(),true);debugReportElements();if(loreMsg.length>0){while(loreMsg.length>0){loreMsg.shift();}
lore();}}
function triggerAmbush(mute){T.delayedCall(.75,function(){attackOn(false);mob[TGT].attackStatus=0;ambushStatus=1;if(!mute){QMsg("Ambush!");}
Chat(("You have been ambushed by "+Mname+"!"),1);mob[TGT].attack=T.delayedCall(.75,function(){mobDamage(TGT);});tabTarget();});}
function delayedMonsterTimer(total){if(!total){total=1;}
for(var i=0;i<total;i++){delayAdd[i].kill();delayAdd[i]=T.delayedCall((.511*(i+1)),function(){addMonster(false,0,0);});}}
function addMonster(fleeFlag,Slot,adds){if(fearStatus===true||bashStatus===true||my.hp<=0||paused===true){return;}
if(mobsFound()===false&&adds===undefined){resetBattleReport();battle();return;}
var foo=countMobs();if(btn.d.addmonsterId===true||mobsFound()===false||foo===0||foo>=5){if(adds>=0){delayAdd[adds]=T.delayedCall(.511,function(){addMonster(false,0,adds);});}
return;}
if(fleeFlag===true){Chat((mob[Slot].name+" returns to the battle with help from an ally."));}
setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');getMonster();if(monsterFound===true){var Slot=newSlotNumber;mob[Slot].name=Mname;mobResumeAttackTimer(Slot,0,1000);}}
function mobResumeAttackTimer(Slot,time,duration){var o=mob[Slot];if(o.stunStatus===true||o.fearStatus===true||o.sleepStatus===true||o.frozenStatus===true||o.stasisFieldStatus===true||o.fallingStatus===true||evadeStatus===true){mob[Slot].attack=T.delayedCall(.1,function(){mobResumeAttackTimer(Slot,time,duration);});return;}
if(time<duration){time+=100;mob[Slot].attack=T.delayedCall(.1,function(){mobResumeAttackTimer(Slot,time,duration);});}else{mobDamage(Slot);}}
function attackOn(melee,petStart){if(countMobs()===0){return;}
for(var i=0;i<=4;i++){if(mob[i].name!==''){mob[i].attackStatus=0;}}
mob[TGT].attack.kill();mob[TGT].attack=T.delayedCall(.25,function(){mobDamage(TGT);});if(!petStart){if(g.petAlive===true){petTarget=TGT;togglePetAutoAttackStatus();}}
if(travelStatus===0){var e=D.getElementById("travelId");e.className="buttonsManage";e.style.backgroundPosition="-80px 0";}
D.getElementById('worldMap').style.top='-900px';travelStatus=1;if(melee){if(hideStatus===0&&(my.job==="Rogue"||my.race==="Halfling")){var Slot=TGT;stunTarget(Slot,5000,-32,0,"Ambush");playAudio("bash");}}
T.delayedCall(.1,function(){hideStatus=1;});$("#halflinghideId").css({backgroundPosition:"0 0"});$("#roguehideId").css({backgroundPosition:"-200% -100%"});T.to(spellCurtain,.1,{alpha:0,ease:ez.Qin});CStat();if(my.job==="Warrior"){checkDecisiveBlow();}
Chat(("You attack "+mob[TGT].name+"!"));if(Lmy.autoAttackOption==="On"&&g.autoAttackStatus===1){toggleAutoAttackStatus();}}
$(function(){$NG.gameView.on('mouseenter','#addmonsterId',function(){if(mobsFound()===false){NG.tooltipname.innerHTML="Pull Next Monster";NG.tooltipmsg.innerHTML="Pull a monster to battle. Use while in combat to build chain combos that reward extra gold, experience, and magic find.";}else{NG.tooltipname.innerHTML="Pull Random Monster";NG.tooltipmsg.innerHTML="Pull an additional random monster to build combo bonuses. Combo bonuses yield greater experience and treasure.";}});$NG.gameView.on('mouseenter','#runId',function(){var foo=(escapeChance()/2).toPrecision(3);var d=6;if(my.race==="Halfling"){d=5;}
foo=(foo+"%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Run";NG.tooltipmsg.innerHTML="Cooldown: "+red(d)+" Seconds<BR><BR>You have a "+foo+" chance to successfully run from battle. Failed run attempts increase your escape chance on successive attempts.";});$NG.gameView.on('mouseenter','#toggleattackId',function(){var a=TTphy((1+attackFunct()/4500)*(P.eq[12].damage*10),.2,"attack");var b=TTphy((1+attackFunct()/4500)*(P.eq[13].damage*10),.2,"attack");var c=TTphy((1+attackFunct()/4500)*(P.eq[12].damage*10),.5,"attack");var DAchance=(doubleAttackChance()).toPrecision(3);DAchance=(DAchance+"%").fontcolor("#00ff00");var DWchance=(dualWieldChance()).toPrecision(3);DWchance=(DWchance+"%").fontcolor("#00ff00");var weapon1=(totalHaste1()/1000).toPrecision(2);var speed1=(weapon1+"").fontcolor("#00ff00");var weapon2=(totalHaste2()/1000).toPrecision(2);var speed2=(weapon2+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Auto Attack";var s='';s+="Toggle your auto attacks on or off.<br><br>";if(P.eq[12].type==="cleaved"||P.eq[12].type==="smashed"||"staff"===P.eq[12].type){s+="Primary Speed: "+speed1+" seconds<br>Primary Damage: "+c[0]+" to "+c[1];}else{s+="Primary Speed: "+speed1+" seconds<br>Primary Damage: "+a[0]+" to "+a[1];}
if(P.eq[13].type==="punched"||P.eq[13].type==="slashed"||P.eq[13].type==="crushed"||P.eq[13].type==="pierced"){s+="<br>Secondary Speed: "+speed2+" seconds<br>Secondary Damage: "+b[0]+" to "+b[1];}
if(my.doubleAttack>=1||my.dualWield>=1){s+="<br><br>";if(my.doubleAttack>=1){s+="Double Attack Chance: "+DAchance+"<br>";}
if(my.dualWield>=1){s+="Dual Wield Chance: "+DWchance;}}
if(my.job==="Bard"){if(my.talent2>=20){var d=TTmag(attackFunct()/4.2,.8,"magic","Wistful Tidings");s+="<BR><BR>Wistful Tidings has a "+green("15%")+" chance to strike your target for "+d[0]+" to "+d[1]+" arcane damage.";}
if(my.talent4>=20){var a=TTmag(attackFunct()/3,.8,"magic","Sonic Disruption");s+="<BR><BR>Sonic Disruption has a "+green("8%")+" chance to strike your target for "+a[0]+" to "+a[1]+" arcane damage and stun your target for "+green("1")+" second.";}}
if(my.job==="Cleric"){if(my.talent5>=20){var e=TTmag(attackFunct()/3.4,.8,"magic","Divine Justice");s+="<BR><BR>Divine Justice has a "+green("15%")+" chance to strike your target for "+e[0]+" to "+e[1]+" arcane damage.";}
if(my.talent8>=20){var f=TTmag(attackFunct()/1.25,.75,"magic","Vicar's Wrath");s+="<BR><BR>Vicar's Wrath has a "+green("22%")+" chance to strike your target for "+f[0]+" to "+f[1]+" arcane damage if a shield is active.";}}
NG.tooltipmsg.innerHTML=s;});$NG.window3.on('mouseenter','#togglepetattackId',function(){NG.tooltipname.innerHTML="Set Pet Target";NG.tooltipmsg.innerHTML="Set your pet's target.";});$(".statButton").on('click',function(){var foo=$(this).text();statTab=foo;$(".statButton").css({backgroundPosition:"0 0"});$(this).css({backgroundPosition:"0 100%"});CStat();});});text=[];textNum=0;function getText(){textNum++;if(textNum>=40){textNum=0;}
return textNum;}
function initText(){for(var i=0;i<=40;i++){text[i]=new C.Text("","24px Arial","#fff");text[i].textAlign="center";text[i].shadow=new C.Shadow("#000",1,1,0);stage[5].addChild(text[i]);}}
initText();function setText(S,msg,color,font,y1,x1){text[S].set({x:x1,y:y1,font:font+'px Arial',color:color,text:msg,alpha:1});}
g.damageShieldIncrement=function(damage){battleDSDamage+=damage;}
g.physicalIncrement=function(damage){battlePhysicalTotal+=damage;totalHits++;battleDamageTotal+=damage;}
g.poisonIncrement=function(damage){battlePoisonTotal+=damage;totalHits++;battleDamageTotal+=damage;}
g.magicIncrement=function(damage){battleMagicTotal+=damage;totalHits++;battleDamageTotal+=damage;}
g.lightningIncrement=function(damage){battleLightningTotal+=damage;totalHits++;battleDamageTotal+=damage;}
g.coldIncrement=function(damage){battleColdTotal+=damage;totalHits++;battleDamageTotal+=damage;}
g.fireIncrement=function(damage){battleFireTotal+=damage;totalHits++;battleDamageTotal+=damage;}
function popupPetDamage(damage,Slot,mType){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);battlePetDamage+=damage;battleDamageTotal+=damage;totalHits++;if(GLB.videoSetting!=="Low"){var S=getText();setText(S,damage,"#fff",18,topAdjust,leftAdjust);T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+30,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
function slotElementalDamage(damage,Slot,mType){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);g[mType+'Increment'](damage);if(GLB.videoSetting!=="Low"){var y1=M.random()*(250)+150;if(mType==="poison"){particleBurst(Slot,"green","blank",1,y1,.6);}else if(mType==="magic"){particleBurst(Slot,"magenta","blank",1,y1,.6);}else if(mType==="lightning"){particleBurst(Slot,"yellow","blank",1,y1,.6);}else if(mType==="cold"){particleBurst(Slot,"aqua","blank",1,y1,.6);}else if(mType==="fire"){particleBurst(Slot,"orange","blank",1,y1,.6);}
var S=getText();setText(S,damage,"#fff",18,topAdjust,leftAdjust);T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+30,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
g.popupMsg=function(msg,Slot){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);if(GLB.videoSetting!=="Low"){var S=getText();setText(S,msg,"#fff",24,topAdjust,leftAdjust);T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+60,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
g.slotDamage=function(damage,Slot,crip,mobvsmob){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);if(mobvsmob===undefined){totalHits++;battlePhysicalTotal+=damage;battleDamageTotal+=damage;}
playAudio("flshhit1");if(M.random()>.8){if(mob[Slot].audio2==="blankAudio"){playAudio("gethit"+M.ceil(M.random()*(4))+"m");}else{playAudio(mob[Slot].audio2);}}
if(GLB.videoSetting!=="Low"){if(crip===true){var S=getText();animateFlyingBlood(Slot,~~(M.random()*(2)+1));setText(S,damage,"#f22",24,topAdjust,leftAdjust);}else{var S=getText();setText(S,damage,"#fff",24,topAdjust,leftAdjust);}
T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2,},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+60,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
g.slotDamageCrit=function(damage,Slot){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);totalHits++;battlePhysicalTotal+=damage;battleDamageTotal+=damage;playAudio("flshhit2");if(GLB.videoSetting!=="Low"){var S=getText();animateFlyingBlood(Slot,~~(M.random()*(2)+1));setText(S,damage,"#ff2",24,topAdjust,leftAdjust);animateBloodDrop(Slot);T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.5,{y:"-="+60,repeat:1,ease:ez.xout,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.5,{delay:.4,alpha:0});}}
function slotMagicDamage(damage,Slot,mType){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);g[mType+'Increment'](damage);if(GLB.videoSetting!=="Low"){var S=getText();setText(S,damage,"#fff",24,topAdjust,leftAdjust);T.to(text[S],.2,{startAt:{scaleX:2,scaleY:2},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+50,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
function slotMagicDamageCrit(damage,Slot,mType){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);g[mType+'Increment'](damage);if(GLB.videoSetting!=="Low"){var S=getText();setText(S,damage,"#ff2",24,topAdjust,leftAdjust);T.to(text[S],.2,{startAt:{scaleX:6,scaleY:6},scaleX:1,scaleY:1,ease:ez.lin});T.to(text[S],.4,{y:"-="+50,repeat:1,yoyo:true,onComplete:function(){text[S].text='';}});T.to(text[S],.8,{x:'+='+(M.random()*(200)-100)});T.to(text[S],.4,{delay:.4,alpha:0});}}
g.popupDotDamage=function(damage,Slot,mType,crit){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);g[mType+'Increment'](damage);if(GLB.videoSetting!=="Low"){if(crit===false){var S=getText();setText(S,damage,"#fff",24,topAdjust,leftAdjust);T.to(text[S],.7,{y:"-="+100,onComplete:function(){text[S].text='';}});}else{var S=getText();setText(S,damage,"#ff2",24,topAdjust,leftAdjust);T.to(text[S],.7,{y:"-="+100,onComplete:function(){text[S].text='';}});}
T.to(text[S],.2,{delay:.5,alpha:0});}}
function popupCombo(Slot,counter,amount){var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));if(topAdjust<100){topAdjust=100;}
var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);if(GLB.videoSetting!=="Low"){var S=getText();setText(S,counter+"x CHAIN COMBO!","#FFD700",16,topAdjust,leftAdjust);T.to(text[S],1.75,{y:"-="+100,onComplete:function(){text[S].text='';}});if(amount>0){T.delayedCall(.6,function(){var S2=getText();setText(S2,"+"+amount+" BONUS EXP!","#FFD700",16,topAdjust,leftAdjust);T.to(text[S2],1.75,{y:"-="+100,onComplete:function(){text[S2].text='';}});});}}}
g.popupHealSlot=function(healAmount,Slot){if(Slot!==5){var leftAdjust=(MOB[Slot].offsetLeft+mob[Slot].cX);var topAdjust=(MOB[Slot].offsetTop+(mob[Slot].cY/2));}else{var leftAdjust=M.ceil(MOB[Slot].offsetLeft+((petWidth)/2));var bottomAdjust=(MOB[Slot].offsetTop+(petHeight/2));}
if(topAdjust<100){topAdjust=100;}
if(GLB.videoSetting!=="Low"){var S=getText();setText(S,healAmount,"#ffff66",24,topAdjust,leftAdjust);T.to(text[S],1.75,{y:"-="+150,onComplete:function(){text[S].text='';}});}}
g.popupHeal=function(healAmount,bypass){if(bypass!==true){var enh=0;if(my.job==="Magician"){if(my.talent7>=20){enh+=12;}}
if(Set.Oracle>=6){enh+=30;}
var zod=(min70(wisTotal())/6.6);if(zod>0){enh+=zod;}
healAmount=~~(healAmount*(1+(enh/100)));}
var zug=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].cripplingAura==true){zug=true;continue;}}
if(zug===true){healAmount=(healAmount*.5);}
if(healAmount<1){healAmount=1;}else{healAmount=~~healAmount;}
my.hp+=healAmount;battleHealTotal+=healAmount;g.drawMyHp();}
g.popupMana=function(manaAmount){if(manaAmount<1){manaAmount=1;}else{manaAmount=~~manaAmount;}
if(harnessEtherStatus===true){manaAmount=manaAmount*2.5;}
if(manaShieldStatus===true){manaAmount*=2.8;}
manaAmount=M.round(manaAmount);var foo=g.maxMpFunct();my.mp+=manaAmount;battleManaTotal+=manaAmount;if(my.mp>foo){my.mp=foo;}
g.drawMyMp();}
function autoAttackTimer(d){timerTick(D.getElementById('toggleattackId'),d,'toggleattackId');}
function toggleAutoAttackStatus(){if(paused===true){return;}
if(attackStatus===1){targetRequired();return;}
if(g.autoAttackStatus===0){D.getElementById('mobName'+TGT).style.color="#ff0";D.getElementById('mobShadow'+TGT).src="//i.imgur.com/7bn79bN.png";g.autoAttackStatus=1;autoAttackTimer(0);}else{D.getElementById('mobName'+TGT).style.color="#ff3333";D.getElementById('mobShadow'+TGT).src="//i.imgur.com/fnHtalN.png";g.autoAttackStatus=0;myAttack.kill();myAttack2.kill();if(mob[TGT].attackStatus===1){attackOn(true);myAttack=T.delayedCall(0,getDamage);myAttack2=T.delayedCall(0,getDamage2);autoAttackTimer(0);}else{myAttack=T.delayedCall(totalHaste1()/1000,getDamage);myAttack2=T.delayedCall(totalHaste2()/1000,getDamage2);autoAttackTimer(totalHaste1()/1000);}}}
function togglePetAutoAttackStatus(){if(paused===true){return;}
if(attackStatus===1){targetRequired();return;}
if(g.petAlive===true){petAttack.kill()
petTarget=TGT;Chat(petName+' says, "Attacking '+mob[petTarget].name+', Master."');if(mob[TGT].attackStatus===1){attackOn(true,true);petDamage();}else{attackOn(true,true);petAttack=T.delayedCall(petSpeed/2000,petDamage);}}}
function removeIcon(buffId){$("#"+buffId).remove();}
function removeMobIcon(buffId,Slot){$("#"+buffId+Slot).remove();}
function buffTimeSolid(duration){duration-=8000;if(duration<0){duration=0;}
return duration;}
function addBuffRaceIcon(skillName,buffId,duration,spriteX){var newBuff2=$('<img>').css({width:32,height:64,top:0,left:spriteX,position:"absolute"}).attr("src","images1/sprite"+my.race+"2.png");var newBuff1=$('<div>').css({width:32,height:32,overflow:"hidden",position:"relative",cssFloat:"left",margin:0,padding:0,zIndex:75}).attr("id",buffId).addClass("buffIcons").data("Name",skillName).append(newBuff2).appendTo("#buffWindow");var solid=buffTimeSolid(duration);T.delayedCall(solid/1000,function(){var flash=(duration-solid)/1000;T.to(newBuff1,.5,{opacity:.3,repeat:-1,yoyo:true,ease:ez.lin});T.delayedCall(flash,function(){newBuff1.remove();});});}
function addBuffIcon(skillName,buffId,duration,spriteX,spriteY){rem(buffId);if(!spriteY){spriteY=0;}
var newBuff2=$('<img>').css({width:576,height:128,top:spriteY,left:spriteX,position:"absolute"}).attr("src","images1/sprite"+my.job+"3.png");var newBuff1=$('<div>').css({width:32,height:32,overflow:"hidden",position:"relative",cssFloat:"left",margin:0,padding:0,zIndex:75}).attr("id",buffId).addClass("buffIcons").data("Name",skillName).append(newBuff2).appendTo("#buffWindow");if(duration>0){var solid=buffTimeSolid(duration);T.delayedCall(solid/1000,function(){var flash=duration-solid;T.to(newBuff1,.5,{opacity:.3,repeat:-1,yoyo:true,ease:ez.lin});T.delayedCall(flash/1000,function(){newBuff1.remove();});});}}
function rem(id){var e=document.getElementById(id);if(e!==null){e.parentNode.removeChild(e)}}
function addMobBuffIcon(skillName,Slot,buffId,duration,spriteX,spriteY,proc,stack){if(!stack){rem(buffId+Slot);}
if(!spriteY){spriteY=0;}
if(!proc){proc=false;}
var img='';var w1=576;var h1=128;if(spriteX===9999){img="images1/spriteGnome2.png";spriteX=0;var w1=32;var h1=64;}else{img="images1/sprite"+my.job+"3.png";}
var newBuff2=$('<img>').css({width:w1,height:h1,top:spriteY,left:spriteX,position:"absolute"}).attr("src",img);if(proc){var newBuff2=$('<img>').css({width:32,height:32,top:0,left:0,position:"absolute"}).attr("src","images1/"+proc+"Icon.png");}
var newBuff1=$('<div>').css({width:32,height:32,overflow:"hidden",position:"relative",cssFloat:"left",margin:0,padding:0,zIndex:75}).attr("id",buffId+Slot).addClass("mobBuffIcons"+Slot).data("Name",skillName).append(newBuff2).appendTo("#mobIcons"+Slot);if(duration>0){T.delayedCall(duration/1000,function(){newBuff1.remove();});}}
function mobBuffIcon(skillName,buffId,duration,spriteX){rem(buffId);var newBuff2=$('<img>').css({width:800,height:32,top:0,left:spriteX,margin:0,padding:0,position:"absolute"}).attr("src","//i.imgur.com/hqFEnqI.png");var newBuff1=$('<div>').css({width:32,height:32,overflow:"hidden",position:"relative",cssFloat:"left",margin:0,padding:0,zIndex:75}).attr("id",buffId).addClass("buffIcons").data("Name",skillName).append(newBuff2).appendTo("#buffWindow");var solid=buffTimeSolid(duration);T.delayedCall(solid/1000,function(){var flash=duration-solid;T.to(newBuff1,.5,{opacity:.3,repeat:-1,yoyo:true,ease:ez.lin});T.delayedCall(flash/1000,function(){newBuff1.remove();});});}
function mobSelfBuffIcon(skillName,buffId,duration,spriteX,Slot){rem(buffId);var foo=$('<img>').css({width:800,height:32,top:0,left:spriteX,position:"absolute"}).attr("src","//i.imgur.com/hqFEnqI.png");var bar=$('<div>').css({width:32,height:32,overflow:"hidden",position:"relative",cssFloat:"left",margin:0,padding:0,zIndex:75}).attr("id",buffId).addClass("mobBuffIcons"+Slot).data("Name",skillName).append(foo).appendTo("#mobIcons"+Slot);if(duration>0){var solid=buffTimeSolid(duration);T.delayedCall(solid/1000,function(){var flash=duration-solid;T.to(bar,.5,{opacity:.3,repeat:-1,yoyo:true,ease:ez.lin});T.delayedCall(flash/1000,function(){bar.remove();});});}}
function clearBuffTimers(){for(var i=0;i<=4;i++){mobEnvenomTimer[i].kill();mobEngulfingDarknessTimer[i].kill();mobStaticFieldTimer[i].kill();mobBlizzardTimer[i].kill();mobConflagrationTimer[i].kill();mobsEnvenomTimer[i].kill();mobsEngulfingDarknessTimer[i].kill();mobsStaticFieldTimer[i].kill();mobsBlizzardTimer[i].kill();mobsConflagrationTimer[i].kill();mobFearTimers[i].kill();mobGlobeOfDarknessTimers[i].kill();mobMindNumbTimers[i].kill();mobWeakenTimers[i].kill();mobYawnTimers[i].kill();MthornsTimers[i].kill();MlavaTimers[i].kill();MenrageTimers[i].kill();MflurryTimers[i].kill();MamplifyMagicTimers[i].kill();MsanctuaryTimers[i].kill();MbarrierTimers[i].kill();MironMaidenTimers[i].kill();mobsSilenceTimer[i].kill();}
frenziedRampageIconTimer.kill();armorOfFaithIconTimer.kill();divineSanctuaryIconTimer.kill();symbolOfNaltronIconTimer.kill();skinLikeNatureIconTimer.kill();shieldOfSpikesIconTimer.kill();spiritOfTheWolfIconTimer.kill();chloroplastIconTimer.kill();callOfTheAncientsIconTimer.kill();talismanOfAltunaIconTimer.kill();hpbuffIconTimer.kill();hasteIconTimer.kill();damageShieldIconTimer.kill();resistIconTimer.kill();enchantWeaponIconTimer.kill();adorningGraceIconTimer.kill();clarityIconTimer.kill();mirrorImagesIconTimer.kill();yaulpIconTimer.kill();symbolOfRyltanIconTimer.kill();spiritArmorIconTimer.kill();siphonStrengthSelfIconTimer.kill();shadowVortexSelfIconTimer.kill();vampiricEmbraceIconTimer.kill();feetLikeCatIconTimer.kill();thistlecoatIconTimer.kill();accelerandoIconTimer.kill();if(secondWindStatus===true){secondWindStatus=false;}
if(divineAegisStatus===true){divineAegisStatus=false;}
barbarianRacial.kill();ancestralRampageStatus=false;if(karanasInfusionStatus===true){woodElfRacial.kill();}
if(sanguineTormentStatus===true){darkElfRacial.kill();sanguineTormentStatus=false;}
if(shortCircuitStatus===true){gnomeRacial.kill();shortCircuitStatus=false;}
dwarfRacial.kill();graniteVisageStatus=false;mobBashTimer.kill();mobFearTimer.kill();mobGlobeOfDarknessTimer.kill();mobRootTimer.kill();mobConfuseTimer.kill();mobMindNumbTimer.kill();mobWeakenTimer.kill();mobYawnTimer.kill();mobChilledTimer.kill();mobSilenceTimer.kill();}
function spanify(x){x=x.split("");var string='';for(var i=0,len=x.length;i<len;i++){string+="<span class='aniSpan'>"+x[i]+"</span>";}
return string;}
function bgp(e,p){D.getElementById(e).style.backgroundPosition=p;}
function BGP(e,p){NG[e].style.backgroundPosition=p;}
function setO(id,O){btn['o'][id]=O;}
function setD(id,D){btn['d'][id]=D;}
function setCD(id,CD){btn['cd'][id]=CD;}
function setBtn(id,D,CD){btn['d'][id]=D;btn['cd'][id]=CD;}
g.WarriorDoneCD=function(){if(btn.cd.warriorkickId===true){setBtn('warriorkickId',false,false);BGP('warriorkickId',"-300% 0");}
if(btn.cd.slamId===true){setBtn('slamId',false,false);BGP('slamId',"-400% 0");}
setBtn('avengingstrikeId',false,false);BGP('avengingstrikeId',"-500% 0");if(btn.cd.hemorrhageId===true){setBtn('hemorrhageId',false,false);BGP('hemorrhageId',"-600% 0");}
if(btn.cd.shockwaveId===true){setBtn('shockwaveId',false,false);BGP('shockwaveId',"-700% 0");}
if(btn.cd.pummelId===true){setBtn('pummelId',false,false);BGP('pummelId',"-800% 0");}
if(btn.cd.subjugateId===true){setBtn('subjugateId',false,false);BGP('subjugateId',"-900% 0");}
if(btn.cd.decisiveblowId===true){setBtn('decisiveblowId',false,false);BGP('decisiveblowId',"-1000% 0");}
if(btn.cd.absorbspellId===true){setBtn('absorbspellId',false,false);BGP('absorbspellId',"-1100% 0");}
if(btn.cd.frenziedrampageId===true){setBtn('frenziedrampageId',false,false);BGP('frenziedrampageId',"-1200% 0");}
if(btn.cd.enrageId===true){setBtn('enrageId',false,false);BGP('enrageId',"-1300% 0");}
if(btn.cd.furiousscornId===true){setBtn('furiousscornId',false,false);BGP('furiousscornId',"-1400% 0");}
if(btn.cd.triageId===true){setBtn('triageId',false,false);BGP('triageId',"-1500% 0");}
if(btn.cd.bulwarkId===true){setBtn('bulwarkId',false,false);BGP('bulwarkId',"-1600% 0");}}
g.WarriorCooldowns=function(){if(btn.d.warriorkickId===false){setBtn('warriorkickId',true,true);BGP('warriorkickId',"-300% -200%");}
if(btn.d.slamId===false){setBtn('slamId',true,true);BGP('slamId',"-400% -200%");}
setBtn('avengingstrikeId',true,true);BGP('avengingstrikeId',"-500% -200%");if(btn.d.hemorrhageId===false){setBtn('hemorrhageId',true,true);BGP('hemorrhageId',"-600% -200%");}
if(btn.d.shockwaveId===false){setBtn('shockwaveId',true,true);BGP('shockwaveId',"-700% -200%");}
if(NG.pummelId.style.backgroundPosition==="-512px 0"){setBtn('pummelId',true,true);BGP('pummelId',"-800% -200%");}else if(NG.pummelId.style.backgroundPosition==="-512px -192px"){setBtn('pummelId',true,true);BGP('pummelId',"-800% -300%");}
if(NG.subjugateId.style.backgroundPosition==="-576px 0"){setBtn('subjugateId',true,true);BGP('subjugateId',"-900% -200%");}else if(NG.subjugateId.style.backgroundPosition==="-576px -192px"){setBtn('subjugateId',true,true);BGP('subjugateId',"-900% -300%");}
if(NG.decisiveblowId.style.backgroundPosition==="-640px 0"){setBtn('decisiveblowId',true,true);BGP('decisiveblowId',"-1000% -200%");}else if(NG.decisiveblowId.style.backgroundPosition==="-640px -192px"){setBtn('decisiveblowId',true,true);BGP('decisiveblowId',"-1000% -300%");}
if(btn.d.absorbspellId===false){setBtn('absorbspellId',true,true);BGP('absorbspellId',"-1100% -200%");}
if(btn.d.frenziedrampageId===false){setBtn('frenziedrampageId',true,true);BGP('frenziedrampageId',"-1200% -200%");}
if(btn.d.enrageId===false){setBtn('enrageId',true,true);BGP('enrageId',"-1300% -200%");}
if(btn.d.furiousscornId===false){setBtn('furiousscornId',true,true);BGP('furiousscornId',"-1400% -200%");}
if(btn.d.triageId===false){setBtn('triageId',true,true);BGP('triageId',"-1500% -200%");}
if(btn.d.bulwarkId===false){setBtn('bulwarkId',true,true);BGP('bulwarkId',"-1600% -200%");}}
g.checkWarriorSkills=function(){if(fearStatus===0||bashStatus===0){return;}
if(my.mp<10&&btn.d.slamId===false){BGP('slamId',"-400% -300%");}
if(my.mp>=10&&btn.d.slamId===false){BGP('slamId',"-400% 0");}
if(my.mp<15&&btn.d.hemorrhageId===false){BGP('hemorrhageId',"-600% -300%");}
if(my.mp>=15&&btn.d.hemorrhageId===false){BGP('hemorrhageId',"-600% 0");}
if(my.mp<15&&btn.d.shockwaveId===false){BGP('shockwaveId',"-700% -300%");}
if(my.mp>=15&&btn.d.shockwaveId===false){BGP('shockwaveId',"-700% 0");}
if(btn.d.pummelId===false){if(my.mp<10||pummelStatus===1){BGP('pummelId',"-800% -300%");}
if(my.mp>=10&&pummelStatus===0){BGP('pummelId',"-800% 0");}}
if(my.mp<5||g.subjugateStatus===1){if(btn.d.subjugateId===false){BGP('subjugateId',"-900% -300%");}}
if(my.mp>=5&&g.subjugateStatus===0){if(btn.d.subjugateId===false){BGP('subjugateId',"-900% 0");}}
if(my.mp<15&&btn.d.absorbspellId===false){BGP('absorbspellId',"-1100% -300%");}
if(my.mp>=15&&btn.d.absorbspellId===false){BGP('absorbspellId',"-1100% 0");}
if(my.mp<25||frenziedRampageStatus===1){BGP('frenziedrampageId',"-1200% -300%");}
if(my.mp>=25&&frenziedRampageStatus===0){BGP('frenziedrampageId',"-1200% 0");}
if(my.mp<20&&btn.d.furiousscornId===false){BGP('furiousscornId',"-1400% -300%");}
if(my.mp>=20&&btn.d.furiousscornId===false){BGP('furiousscornId',"-1400% 0");}
if(my.mp<25&&btn.d.triageId===false){BGP('triageId',"-1500% -300%");}
if(my.mp>=25&&btn.d.triageId===false){BGP('triageId',"-1500% 0");}
if(my.mp<15&&btn.d.bulwarkId===false){BGP('bulwarkId',"-1600% -300%");}
if(my.mp>=15&&btn.d.bulwarkId===false){BGP('bulwarkId',"-1600% 0");}
checkIntrepidMight();checkDecisiveBlow();}
function checkDecisiveBlow(){var foo=mob[TGT].hp/mob[TGT].maxHp;if(foo<=.4){decisiveBlowStatus=0;}else{decisiveBlowStatus=1;}
if(btn.d.decisiveblowId===false){if(my.mp>=15&&decisiveBlowStatus===0){BGP('decisiveblowId','-1000% 0');}else{BGP('decisiveblowId','-1000% -300%');}}}
g.RogueDoneCD=function(){setBtn('shadowstrikeId',false,false);BGP('shadowstrikeId',"-300% 0");if(btn.cd.sonicstrikeId===true){setBtn('sonicstrikeId',false,false);BGP('sonicstrikeId',"-400% 0");}
if(btn.cd.hyperstrikeId===true){setBtn('hyperstrikeId',false,false);BGP('hyperstrikeId',"-500% 0");}
if(btn.cd.widowstrikeId===true){setBtn('widowstrikeId',false,false);BGP('widowstrikeId',"-600% 0");}
if(btn.cd.miragestrikeId===true){setBtn('miragestrikeId',false,false);BGP('miragestrikeId',"-700% 0");}
if(btn.cd.lacerateId===true){setBtn('lacerateId',false,false);BGP('lacerateId',"-800% 0");}
if(btn.cd.backstabId===true){setBtn('backstabId',false,false);BGP('backstabId',"-900% 0");}
if(btn.cd.staggershotId===true){setBtn('staggershotId',false,false);BGP('staggershotId',"-1000% 0");}
if(btn.cd.lobotomizeId===true){setBtn('lobotomizeId',false,false);BGP('lobotomizeId',"-1100% 0");}
if(btn.cd.prowlinggashId===true){setBtn('prowlinggashId',false,false);BGP('prowlinggashId',"-1200% 0");}
if(btn.cd.evadeId===true){setBtn('evadeId',false,false);BGP('evadeId',"-1300% 0");}
if(btn.cd.coldbloodId===true){setBtn('coldbloodId',false,false);BGP('coldbloodId',"-1400% 0");}
if(btn.cd.flashpowderId===true){setBtn('flashpowderId',false,false);BGP('flashpowderId',"-1500% 0");}
if(btn.cd.illusivemistId===true){setBtn('illusivemistId',false,false);BGP('illusivemistId',"-1600% 0");}}
g.RogueCooldowns=function(){setBtn('shadowstrikeId',true,true);BGP('shadowstrikeId',"-300% -200%");if(btn.d.sonicstrikeId===false){setBtn('sonicstrikeId',true,true);BGP('sonicstrikeId',"-400% -200%");}
if(btn.d.hyperstrikeId===false){setBtn('hyperstrikeId',true,true);BGP('hyperstrikeId',"-500% -200%");}
if(btn.d.widowstrikeId===false){setBtn('widowstrikeId',true,true);BGP('widowstrikeId',"-600% -200%");}
if(btn.d.miragestrikeId===false){setBtn('miragestrikeId',true,true);BGP('miragestrikeId',"-700% -200%");}
if(btn.d.lacerateId===false){setBtn('lacerateId',true,true);BGP('lacerateId',"-800% -200%");}
if(btn.d.backstabId===false){setBtn('backstabId',true,true);BGP('backstabId',"-900% -200%");}
if(btn.d.staggershotId===false){setBtn('staggershotId',true,true);BGP('staggershotId',"-1000% -200%");}
if(btn.d.lobotomizeId===false){setBtn('lobotomizeId',true,true);BGP('lobotomizeId',"-1100% -200%");}
if(btn.d.prowlinggashId===false){setBtn('prowlinggashId',true,true);BGP('prowlinggashId',"-1200% -200%");}
if(btn.d.evadeId===false){setBtn('evadeId',true,true);BGP('evadeId',"-1300% -200%");}
if(btn.d.coldbloodId===false){setBtn('coldbloodId',true,true);BGP('coldbloodId',"-1400% -200%");}
if(btn.d.flashpowderId===false){setBtn('flashpowderId',true,true);BGP('flashpowderId',"-1500% -200%");}
if(btn.d.illusivemistId===false){setBtn('illusivemistId',true,true);BGP('illusivemistId',"-1600% -200%");}}
g.checkRogueSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Rogue"){return;}
if(btn.cd.shadowstrikeId===false){BGP('shadowstrikeId',"-300% 0");}
if(btn.cd.sonicstrikeId===false&&btn.d.sonicstrikeId===false){BGP('sonicstrikeId',"-400% 0");}
if(btn.cd.hyperstrikeId===false){BGP('hyperstrikeId',"-500% 0");}
if(btn.cd.widowstrikeId===false){BGP('widowstrikeId',"-600% 0");}
if(btn.cd.miragestrikeId===false&&btn.d.miragestrikeId===false){BGP('miragestrikeId',"-700% 0");}
if(btn.d.lacerateId===false){if(my.mp<20){BGP('lacerateId',"-800% -300%");}else{BGP('lacerateId',"-800% 0");}}
if(btn.d.backstabId===false){if(my.mp<20){BGP('backstabId',"-900% -300%");}else{BGP('backstabId',"-900% 0");}}
if(btn.d.staggershotId===false){if(my.mp<20){BGP('staggershotId',"-1000% -300%");}else{BGP('staggershotId',"-1000% 0");}}
if(btn.d.lobotomizeId===false){if(my.mp<20){BGP('lobotomizeId',"-1100% -300%");}else{BGP('lobotomizeId',"-1100% 0");}}
if(btn.d.prowlinggashId===false){if(my.mp<20){BGP('prowlinggashId',"-1200% -300%");}else{BGP('prowlinggashId',"-1200% 0");}}
if(btn.d.evadeId===false){BGP('evadeId',"-1300% 0");}
if(btn.d.coldbloodId===false){BGP('coldbloodId',"-1400% 0");}
if(btn.d.flashpowderId===false){BGP('flashpowderId',"-1500% 0");}
if(btn.d.illusivemistId===false){BGP('illusivemistId',"-1600% 0");}
if(btn.d.ancientwillId===false){if(ancientWillStatus===false){BGP('ancientwillId',"-1700% -300%");}
if((bashStatus===0||fearStatus===0||rootStatus===0)&&ancientWillStatus===true){BGP('ancientwillId',"-1700% 0");}}}
g.MonkDoneCD=function(){setBtn('tigerstrikeId',false,false);BGP('tigerstrikeId',"-300% 0");if(btn.cd.eaglestrikeId===true){setBtn('eaglestrikeId',false,false);BGP('eaglestrikeId',"-400% 0");}
if(btn.cd.cheetahstrikeId===true){setBtn('cheetahstrikeId',false,false);BGP('cheetahstrikeId',"-500% 0");}
if(btn.cd.cobrastrikeId===true){setBtn('cobrastrikeId',false,false);BGP('cobrastrikeId',"-600% 0");}
if(btn.cd.dragonstrikeId===true){setBtn('dragonstrikeId',false,false);BGP('dragonstrikeId',"-700% 0");}
if(btn.cd.cranekickId===true){setBtn('cranekickId',false,false);BGP('cranekickId',"-800% 0");}
if(btn.cd.windmillkickId===true){setBtn('windmillkickId',false,false);BGP('windmillkickId',"-900% 0");}
if(btn.cd.ancestralflurryId===true){setBtn('ancestralflurryId',false,false);BGP('ancestralflurryId',"-1000% 0");}
if(btn.cd.flyingkickId===true){setBtn('flyingkickId',false,false);BGP('flyingkickId',"-1100% 0");}
if(btn.cd.chakrablastId===true){setBtn('chakrablastId',false,false);BGP('chakrablastId',"-1200% 0");}
if(btn.cd.feigndeathId===true){setBtn('feigndeathId',false,false);BGP('feigndeathId',"-1300% 0");}
if(btn.cd.mendId===true){setBtn('mendId',false,false);BGP('mendId',"-1400% 0");}
if(btn.cd.stonefistsId===true){setBtn('stonefistsId',false,false);BGP('stonefistsId',"-1500% 0");}
if(btn.cd.intimidationId===true){setBtn('intimidationId',false,false);BGP('intimidationId',"-1600% 0");}
if(btn.cd.innerpeaceId===true){setBtn('innerpeaceId',false,false);BGP('innerpeaceId',"-1700% 0");}}
g.MonkCooldowns=function(){setBtn('tigerstrikeId',true,true);BGP('tigerstrikeId',"-300% -200%");if(btn.d.eaglestrikeId===false){setBtn('eaglestrikeId',true,true);BGP('eaglestrikeId',"-400% -200%");}
if(btn.d.cheetahstrikeId===false){setBtn('cheetahstrikeId',true,true);BGP('cheetahstrikeId',"-500% -200%");}
if(btn.d.cobrastrikeId===false){setBtn('cobrastrikeId',true,true);BGP('cobrastrikeId',"-600% -200%");}
if(btn.d.dragonstrikeId===false){setBtn('dragonstrikeId',true,true);BGP('dragonstrikeId',"-700% -200%");}
if(btn.d.cranekickId===false){setBtn('cranekickId',true,true);BGP('cranekickId',"-800% -200%");}
if(btn.d.windmillkickId===false){setBtn('windmillkickId',true,true);BGP('windmillkickId',"-900% -200%");}
if(btn.d.ancestralflurryId===false){setBtn('ancestralflurryId',true,true);BGP('ancestralflurryId',"-1000% -200%");}
if(btn.d.flyingkickId===false){setBtn('flyingkickId',true,true);BGP('flyingkickId',"-1100% -200%");}
if(btn.d.chakrablastId===false){setBtn('chakrablastId',true,true);BGP('chakrablastId',"-1200% -200%");}
if(btn.d.feigndeathId===false){setBtn('feigndeathId',true,true);BGP('feigndeathId',"-1300% -200%");}
if(btn.d.mendId===false){setBtn('mendId',true,true);BGP('mendId',"-1400% -200%");}
if(btn.d.stonefistsId===false){setBtn('stonefistsId',true,true);BGP('stonefistsId',"-1500% -200%");}
if(btn.d.intimidationId===false){setBtn('intimidationId',true,true);BGP('intimidationId',"-1600% -200%");}
if(btn.d.innerpeaceId===false){setBtn('innerpeaceId',true,true);BGP('innerpeaceId',"-1700% -200%");}}
g.checkMonkSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Monk"){return;}
if(btn.d.tigerstrikeId===false){BGP('tigerstrikeId',"-300% 0");}
if(btn.d.eaglestrikeId===false){BGP('eaglestrikeId',"-400% 0");}
if(btn.d.cheetahstrikeId===false){BGP('cheetahstrikeId',"-500% 0");}
if(btn.d.cobrastrikeId===false){BGP('cobrastrikeId',"-600% 0");}
if(btn.d.dragonstrikeId===false){BGP('dragonstrikeId',"-700% 0");}
if(btn.d.cranekickId===false){if(my.mp<20){BGP('cranekickId',"-800% -300%");}else{BGP('cranekickId',"-800% 0");}}
if(btn.d.windmillkickId===false){if(my.mp<25){BGP('windmillkickId',"-900% -300%");}else{BGP('windmillkickId',"-900% 0");}}
if(btn.d.ancestralflurryId===false){if(my.mp<24){BGP('ancestralflurryId',"-1000% -300%");}else{BGP('ancestralflurryId',"-1000% 0");}}
if(btn.d.chakrablastId===false){if(my.mp<35){BGP('chakrablastId',"-1200% -300%");}else{BGP('chakrablastId',"-1200% 0");}}
if(btn.d.flyingkickId===false){if(my.mp<25){BGP('flyingkickId',"-1100% -300%");}else{BGP('flyingkickId',"-1100% 0");}}}
g.PaladinDoneCD=function(){if(btn.cd.palslamId===true){setBtn('palslamId',false,false);BGP('palslamId',"-300% 0");}
if(btn.cd.rebukeId===true){setBtn('rebukeId',false,false);BGP('rebukeId',"-400% 0");}
setBtn('purgeId',false,false);BGP('purgeId',"-500% 0");if(btn.cd.vengeanceId===true){setBtn('vengeanceId',false,false);BGP('vengeanceId',"-600% 0");}
if(btn.cd.layhandsId===true){setBtn('layhandsId',false,false);BGP('layhandsId',"-700% 0");}
if(btn.cd.greaterhealingId===true){setBtn('greaterhealingId',false,false);BGP('greaterhealingId',"-800% 0");}
if(btn.cd.holymightId===true){setBtn('holymightId',false,false);BGP('holymightId',"-900% 0");}
if(btn.cd.palrootId===true){setBtn('palrootId',false,false);BGP('palrootId',"-1000% 0");}
if(btn.cd.ardentjudgment===true){setBtn('ardentjudgment',false,false);BGP('ardentjudgment',"-1100% 0");}
if(btn.cd.yaulpId===true){setBtn('yaulpId',false,false);BGP('yaulpId',"-1200% 0");}
if(btn.cd.cleanseId===true){setBtn('cleanseId',false,false);BGP('cleanseId',"-1300% 0");}
if(btn.cd.flashoflightId===true){setBtn('flashoflightId',false,false);BGP('flashoflightId',"-1400% 0");}}
g.PaladinCooldowns=function(){if(btn.d.palslamId===false){setBtn('palslamId',true,true);BGP('palslamId',"-300% -200%");}
if(btn.d.rebukeId===false){setBtn('rebukeId',true,true);BGP('rebukeId',"-400% -200%");}
setBtn('purgeId',true,true);BGP('purgeId',"-500% -200%");if(btn.d.vengeanceId===false){setBtn('vengeanceId',true,true);BGP('vengeanceId',"-600% -200%");}
if(btn.d.layhandsId===false){setBtn('layhandsId',true,true);BGP('layhandsId',"-700% -200%");}
if(btn.d.greaterhealingId===false){setBtn('greaterhealingId',true,true);BGP('greaterhealingId',"-800% -200%");}
if(btn.d.holymightId===false){setBtn('holymightId',true,true);BGP('holymightId',"-900% -200%");}
if(btn.d.palrootId===false){setBtn('palrootId',true,true);BGP('palrootId',"-1000% -200%");}
if(btn.d.ardentjudgment===false){setBtn('ardentjudgment',true,true);BGP('ardentjudgment',"-1100% -200%");}
if(btn.d.yaulpId===false){setBtn('yaulpId',true,true);BGP('yaulpId',"-1200% -200%");}
if(btn.d.cleanseId===false){setBtn('cleanseId',true,true);BGP('cleanseId',"-1300% -200%");}
if(btn.d.flashoflightId===false){setBtn('flashoflightId',true,true);BGP('flashoflightId',"-1400% -200%");}}
var pal={cost:{greaterHealing:90,holyMight:35,root:50,ardentJudgment:60,yaulp:35,cleanse:75,flashOfLight:30,valor:100,spiritArmor:120,divineProvidence:60,symbolOfRyltan:135}};g.checkPaladinSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Paladin"){return;}
if(btn.d.greaterhealingId===false){if(my.mp<pal.cost.greaterHealing){BGP('greaterhealingId',"-800% -300%");}else{BGP('greaterhealingId',"-800% 0%");}}
if(btn.d.holymightId===false){if(my.mp<pal.cost.holyMight){BGP('holymightId',"-900% -300%");}else{BGP('holymightId',"-900% 0%");}}
if(btn.d.ardentjudgment===false){if(my.mp<pal.cost.ardentJudgment){BGP('ardentjudgment',"-1100% -300%");}else{BGP('ardentjudgment',"-1100% 0%");}}
if(btn.d.yaulpId===false){if(my.mp<pal.cost.yaulp){BGP('yaulpId',"-1200% -300%");}else{BGP('yaulpId',"-1200% 0%");}}
if(btn.d.cleanseId===false){if(my.mp<pal.cost.cleanse){BGP('cleanseId',"-1300% -300%");}else{BGP('cleanseId',"-1300% 0%");}}
if(btn.d.flashoflightId===false){if(my.mp<pal.cost.flashOfLight){BGP('flashoflightId',"-1400% -300%");}else{BGP('flashoflightId',"-1400% 0%");}}
if(btn.d.palrootId===false){if(my.mp<pal.cost.root){BGP('palrootId',"-1000% -300%");}else{BGP('palrootId',"-1000% 0%");}}
if(btn.d.valorId===false){if(my.mp<pal.cost.valor){BGP('valorId',"-1500% -300%");}else{BGP('valorId',"-1500% 0%");}}
if(btn.d.spiritarmorId===false){if(my.mp<pal.cost.spiritArmor){BGP('spiritarmorId',"-1600% -300%");}else{BGP('spiritarmorId',"-1600% 0%");}}
if(btn.d.divineprovidenceId===false){if(my.mp<pal.cost.divineProvidence){BGP('divineprovidenceId',"-1700% -300%");}else{BGP('divineprovidenceId',"-1700% 0%");}}
if(btn.d.symbolofryltanId===false){if(my.mp<pal.cost.symbolOfRyltan){BGP('symbolofryltanId',"-200% -300%");}else{BGP('symbolofryltanId',"-200% -100%");}}}
g.ShadowKnightDoneCD=function(){if(btn.cd.shdslamId===true){setBtn('shdslamId',false,false);BGP('shdslamId',"-300% 0");}
setBtn('crescentcleaveId',false,false);BGP('crescentcleaveId',"-400% 0");if(btn.cd.deathstrikeId===true){setBtn('deathstrikeId',false,false);BGP('deathstrikeId',"-500% 0");}
if(btn.cd.gaspingfrenzyId===true){setBtn('gaspingfrenzyId',false,false);BGP('gaspingfrenzyId',"-600% 0");}
if(btn.cd.harmtouchId===true){setBtn('harmtouchId',false,false);BGP('harmtouchId',"-700% 0");}
if(btn.cd.shdlifetapId===true){setBtn('shdlifetapId',false,false);BGP('shdlifetapId',"-800% 0");}
if(btn.cd.doomingdarknessId===true){setBtn('doomingdarknessId',false,false);BGP('doomingdarknessId',"-900% 0");}
if(btn.cd.heatbloodId===true){setBtn('heatbloodId',false,false);BGP('heatbloodId',"-1000% 0");}
if(btn.cd.strengthendeadId===true){setBtn('strengthendeadId',false,false);BGP('strengthendeadId',"-1100% 0");}
if(btn.cd.shdfearId===true){setBtn('shdfearId',false,false);BGP('shdfearId',"-1200% 0");}
if(btn.cd.siphonstrengthId===true){setBtn('siphonstrengthId',false,false);BGP('siphonstrengthId',"-1300% 0");}
if(btn.cd.shdfeigndeathId===true){setBtn('shdfeigndeathId',false,false);BGP('shdfeigndeathId',"-1400% 0");}
if(btn.cd.shadowvortexId===true){setBtn('shadowvortexId',false,false);BGP('shadowvortexId',"-1500% 0");}}
g.ShadowKnightCooldowns=function(){if(btn.d.shdslamId===false){setBtn('shdslamId',true,true);BGP('shdslamId',"-300% -200%");}
setBtn('crescentcleaveId',true,true);BGP('crescentcleaveId',"-400% -200%");if(btn.d.deathstrikeId===false){setBtn('deathstrikeId',true,true);BGP('deathstrikeId',"-500% -200%");}
if(btn.d.gaspingfrenzyId===false){setBtn('gaspingfrenzyId',true,true);BGP('gaspingfrenzyId',"-600% -200%");}
if(btn.d.harmtouchId===false){setBtn('harmtouchId',true,true);BGP('harmtouchId',"-700% -200%");}
if(btn.d.shdlifetapId===false){setBtn('shdlifetapId',true,true);BGP('shdlifetapId',"-800% -200%");}
if(btn.d.doomingdarknessId===false){setBtn('doomingdarknessId',true,true);BGP('doomingdarknessId',"-900% -200%");}
if(btn.d.heatbloodId===false){setBtn('heatbloodId',true,true);BGP('heatbloodId',"-1000% -200%");}
if(btn.d.strengthendeadId===false){setBtn('strengthendeadId',true,true);BGP('strengthendeadId',"-1100% -200%");}
if(btn.d.shdfearId===false){setBtn('shdfearId',true,true);BGP('shdfearId',"-1200% -200%");}
if(btn.d.siphonstrengthId===false){setBtn('siphonstrengthId',true,true);BGP('siphonstrengthId',"-1300% -200%");}
if(btn.d.shdfeigndeathId===false){setBtn('shdfeigndeathId',true,true);BGP('shdfeigndeathId',"-1400% -200%");}
if(btn.d.shadowvortexId===false){setBtn('shadowvortexId',true,true);BGP('shadowvortexId',"-1500% -200%");}}
var sk={cost:{summonDead:100,lifeTap:90,doomingDarkness:30,fear:75,siphonStrength:30,heatBlood:40,vampiricEmbrace:75,resistCold:50,feignDeath:35,shadowVortex:30}};g.checkShadowKnightSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Shadow Knight"){return;}
if(g.petAlive===false){if(btn.d.summondeadId===false){if(my.mp<sk.cost.summonDead){BGP('summondeadId',"-1600% -300%");}
if(my.mp>=sk.cost.summonDead||g.petAlive===true){BGP('summondeadId',"-1600% 0%");}}}
if(btn.d.shdlifetapId===false){if(my.mp<sk.cost.lifeTap){BGP('shdlifetapId',"-800% -300%");}else{BGP('shdlifetapId',"-800% 0%");}}
if(btn.d.doomingdarknessId===false){if(my.mp<sk.cost.doomingDarkness){BGP('doomingdarknessId',"-900% -300%");}else{BGP('doomingdarknessId',"-900% 0%");}}
if(btn.d.heatbloodId===false){if(my.mp<sk.cost.heatBlood){BGP('heatbloodId',"-1000% -300%");}else{BGP('heatbloodId',"-1000% 0%");}}
if(btn.d.shdfearId===false){if(my.mp<sk.cost.fear){BGP('shdfearId',"-1200% -300%");}else{BGP('shdfearId',"-1200% 0%");}}
if(btn.d.siphonstrengthId===false){if(my.mp<sk.cost.siphonStrength){BGP('siphonstrengthId',"-1300% -300%");}else{BGP('siphonstrengthId',"-1300% 0%");}}
if(btn.d.shdfeigndeathId===false){if(my.mp<sk.cost.feignDeath){BGP('shdfeigndeathId',"-1400% -300%");}else{BGP('shdfeigndeathId',"-1400% 0%");}}
if(btn.d.shadowvortexId===false){if(my.mp<sk.cost.shadowVortex){BGP('shadowvortexId',"-1500% -300%");}else{BGP('shadowvortexId',"-1500% 0%");}}
if(btn.d.vampiricembraceId===false){if(my.mp<sk.cost.vampiricEmbrace){BGP('vampiricembraceId',"-1700% -300%");}else{BGP('vampiricembraceId',"-1700% 0%");}}
if(btn.d.resistcoldId===false){if(my.mp<sk.cost.resistCold){BGP('resistcoldId',"-200% -300%");}else{BGP('resistcoldId',"-200% -100%");}}}
g.RangerDoneCD=function(){if(btn.cd.rangerkickId===true){setBtn('rangerkickId',false,false);BGP('rangerkickId',"-300% 0");}
setBtn('rapidshotId',false,false);BGP('rapidshotId',"-400% 0");if(btn.cd.countershotId===true){setBtn('countershotId',false,false);BGP('countershotId',"-500% 0");}
if(btn.cd.trueshotarrowId===true){setBtn('trueshotarrowId',false,false);BGP('trueshotarrowId',"-600% 0");}
if(btn.cd.volleyshotId===true){setBtn('volleyshotId',false,false);BGP('volleyshotId',"-700% 0");}
if(btn.cd.lighthealingId===true){setBtn('lighthealingId',false,false);BGP('lighthealingId',"-800% 0");}
if(btn.cd.faerieflameId===true){setBtn('faerieflameId',false,false);BGP('faerieflameId',"-900% 0");}
if(btn.cd.igniteId===true){setBtn('igniteId',false,false);BGP('igniteId',"-1000% 0");}
if(btn.cd.snareId===true){setBtn('snareId',false,false);BGP('snareId',"-1100% 0");}
if(btn.cd.wardersrift===true){setBtn('wardersrift',false,false);BGP('wardersrift',"-1200% 0");}
if(btn.cd.weaponshieldId===true){setBtn('weaponshieldId',false,false);BGP('weaponshieldId',"-1300% 0");}}
g.RangerCooldowns=function(){setBtn('rapidshotId',true,true);BGP('rapidshotId',"-400% -200%");if(btn.d.rangerkickId===false){setBtn('rangerkickId',true,true);BGP('rangerkickId',"-300% -200%");}
if(btn.d.trueshotarrowId===false){setBtn('trueshotarrowId',true,true);BGP('trueshotarrowId',"-600% -200%");}
if(btn.d.volleyshotId===false){setBtn('volleyshotId',true,true);BGP('volleyshotId',"-700% -200%");}
if(btn.d.lighthealingId===false){setBtn('lighthealingId',true,true);BGP('lighthealingId',"-800% -200%");}
if(btn.d.faerieflameId===false){setBtn('faerieflameId',true,true);BGP('faerieflameId',"-900% -200%");}
if(btn.d.igniteId===false){setBtn('igniteId',true,true);BGP('igniteId',"-1000% -200%");}
if(btn.d.snareId===false){setBtn('snareId',true,true);BGP('snareId',"-1100% -200%");}
if(btn.d.wardersrift===false){setBtn('wardersrift',true,true);BGP('wardersrift',"-1200% -200%");}
if(btn.d.weaponshieldId===false){setBtn('weaponshieldId',true,true);BGP('weaponshieldId',"-1300% -200%");}}
var rng={cost:{lightHealing:90,faerieFlame:50,ignite:40,thistlecoat:80,snare:35,feetLikeCat:40,shieldOfBrambles:60,wardersRift:90,spiritOfTheWolf:50}};g.checkRangerSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Ranger"){return;}
if(btn.cd.rapidshotId===false){setBtn('rapidshotId',false,false);BGP('rapidshotId',"-400% 0%");}
if(btn.d.rangerkickId===false){setBtn('rangerkickId',false,false);BGP('rangerkickId',"-300% 0%");}
if(btn.d.trueshotarrowId===false){setBtn('trueshotarrowId',false,false);BGP('trueshotarrowId',"-600% 0%");}
if(btn.d.volleyshotId===false){setBtn('volleyshotId',false,false);BGP('volleyshotId',"-700% 0%");}
if(counterShotStatus===false){BGP('countershotId',"-500% -300%");}else{BGP('countershotId',"-500% 0%");}
if(btn.d.lighthealingId===false){if(my.mp<rng.cost.lightHealing){BGP('lighthealingId',"-800% -300%");}else{BGP('lighthealingId',"-800% 0%");}}
if(btn.d.wardersrift===false){if(my.mp<rng.cost.wardersRift){BGP('wardersrift',"-1200% -300%");}else{BGP('wardersrift',"-1200% 0%");}}
if(btn.d.igniteId===false){if(my.mp<rng.cost.ignite){BGP('igniteId',"-1000% -300%");}else{BGP('igniteId',"-1000% 0%");}}
if(btn.d.faerieflameId===false){if(my.mp<rng.cost.faerieFlame){BGP('faerieflameId',"-900% -300%");}else{BGP('faerieflameId',"-900% 0%");}}
if(btn.d.snareId===false){if(my.mp<rng.cost.snare){BGP('snareId',"-1100% -300%");}else{BGP('snareId',"-1100% 0%");}}
if(btn.d.shieldofbramblesId===false){if(my.mp<rng.cost.shieldOfBrambles){BGP('shieldofbramblesId',"-1600% -300%");}else{BGP('shieldofbramblesId',"-1600% 0%");}}
if(btn.d.thistlecoatId===false){if(my.mp<rng.cost.thistlecoat){BGP('thistlecoatId',"-1400% -300%");}else{BGP('thistlecoatId',"-1400% 0%");}}
if(btn.d.feetlikecatId===false){if(my.mp<rng.cost.feetLikeCat){BGP('feetlikecatId',"-1500% -300%");}else{BGP('feetlikecatId',"-1500% 0%");}}
if(btn.d.rangersowId===false){if(my.mp<rng.cost.spiritOfTheWolf){BGP('rangersowId',"-1700% -300%");}else{BGP('rangersowId',"-1700% 0%");}}}
g.BardDoneCD=function(){if(btn.cd.chordsofdissonance===true){setBtn('chordsofdissonance',false,false);BGP('chordsofdissonance',"-300% 0");}
if(btn.cd.chantofbattle===true){setBtn('chantofbattle',false,false);BGP('chantofbattle',"-400% 0");}
if(btn.cd.accelerando===true){setBtn('accelerando',false,false);BGP('accelerando',"-500% 0");}
if(btn.cd.hymnofrestoration===true){setBtn('hymnofrestoration',false,false);BGP('hymnofrestoration',"-600% 0");}
if(btn.cd.songofthesirens===true){setBtn('songofthesirens',false,false);BGP('songofthesirens',"-700% 0");}
if(btn.cd.boastfulbellow===true){setBtn('boastfulbellow',false,false);BGP('boastfulbellow',"-800% 0");}
if(btn.cd.elementalrhythms===true){setBtn('elementalrhythms',false,false);BGP('elementalrhythms',"-900% 0");}
if(btn.cd.lucidlullaby===true){setBtn('lucidlullaby',false,false);BGP('lucidlullaby',"-1000% 0");}
if(btn.cd.consonantchain===true){setBtn('consonantchain',false,false);BGP('consonantchain',"-1100% 0");}
if(btn.cd.dissension===true){setBtn('dissension',false,false);BGP('dissension',"-1200% 0");}
if(btn.cd.chorusofclarity===true){setBtn('chorusofclarity',false,false);BGP('chorusofclarity',"-1300% 0");}
if(btn.cd.anthemdearms===true){setBtn('anthemdearms',false,false);BGP('anthemdearms',"-1400% 0");}
if(btn.cd.euphonichymn===true){setBtn('euphonichymn',false,false);BGP('euphonichymn',"-1500% 0");}
if(btn.cd.shieldofsongs===true){setBtn('shieldofsongs',false,false);BGP('shieldofsongs',"-1600% 0");}
if(btn.cd.desperatedirge===true){setBtn('desperatedirge',false,false);BGP('desperatedirge',"-1700% 0");}}
g.BardCooldowns=function(){if(btn.d.chordsofdissonance===false){setBtn('chordsofdissonance',true,true);BGP('chordsofdissonance',"-300% -200%");}
if(btn.d.chantofbattle===false){setBtn('chantofbattle',true,true);BGP('chantofbattle',"-400% -200%");}
if(btn.d.accelerando===false){setBtn('accelerando',true,true);BGP('accelerando',"-500% -200%");}
if(btn.d.hymnofrestoration===false){setBtn('hymnofrestoration',true,true);BGP('hymnofrestoration',"-600% -200%");}
if(btn.d.songofthesirens===false){setBtn('songofthesirens',true,true);BGP('songofthesirens',"-700% -200%");}
if(btn.d.boastfulbellow===false){setBtn('boastfulbellow',true,true);BGP('boastfulbellow',"-800% -200%");}
if(btn.d.elementalrhythms===false){setBtn('elementalrhythms',true,true);BGP('elementalrhythms',"-900% -200%");}
if(btn.d.lucidlullaby===false){setBtn('lucidlullaby',true,true);BGP('lucidlullaby',"-1000% -200%");}
if(btn.d.consonantchain===false){setBtn('consonantchain',true,true);BGP('consonantchain',"-1100% -200%");}
if(btn.d.dissension===false){setBtn('dissension',true,true);BGP('dissension',"-1200% -200%");}
if(btn.d.chorusofclarity===false){setBtn('chorusofclarity',true,true);BGP('chorusofclarity',"-1300% -200%");}
if(btn.d.anthemdearms===false){setBtn('anthemdearms',true,true);BGP('anthemdearms',"-1400% -200%");}
if(btn.d.euphonichymn===false){setBtn('euphonichymn',true,true);BGP('euphonichymn',"-1500% -200%");}
if(btn.d.shieldofsongs===false){setBtn('shieldofsongs',true,true);BGP('shieldofsongs',"-1600% -200%");}
if(btn.d.desperatedirge===false){setBtn('desperatedirge',true,true);BGP('desperatedirge',"-1700% -200%");}}
var brd={cost:{chordsOfDissonance:40,hymnOfRestoration:30,songOfTheSirens:60,boastfulBellow:40,lucidLullaby:70,consonantChain:25,dissension:70,euphonicHymn:40,shieldOfSongs:120,desperateDirge:75}};g.checkBardSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Bard"){return;}
if(bardSingStatus===false){if(my.mp<brd.cost.chordsOfDissonance){setO('chordsofdissonance',true);BGP('chordsofdissonance',"-300% -300%");}else{setO('chordsofdissonance',false);BGP('chordsofdissonance',"-300% 0%");}
if(my.mp<brd.cost.songOfTheSirens){setO('songofthesirens',true);BGP('songofthesirens',"-700% -300%");}else{setO('songofthesirens',false);BGP('songofthesirens',"-700% 0%");}
if(my.mp<brd.cost.hymnOfRestoration){setO('hymnofrestoration',true);BGP('hymnofrestoration',"-600% -300%");}else{setO('hymnofrestoration',false);BGP('hymnofrestoration',"-600% 0%");}
if(my.mp<brd.cost.boastfulBellow){setO('boastfulbellow',true);BGP('boastfulbellow',"-800% -300%");}else{setO('boastfulbellow',false);BGP('boastfulbellow',"-800% 0%");}
if(my.mp<brd.cost.lucidLullaby){setO('lucidlullaby',true);BGP('lucidlullaby',"-1000% -300%");}else{setO('lucidlullaby',false);BGP('lucidlullaby',"-1000% 0%");}
if(my.mp<brd.cost.euphonicHymn){setO('euphonichymn',true);BGP('euphonichymn',"-1500% -300%");}else{setO('euphonichymn',false);BGP('euphonichymn',"-1500% 0%");}
if(my.mp<brd.cost.consonantChain){setO('consonantchain',true);BGP('consonantchain',"-1100% -300%");}else{setO('consonantchain',false);BGP('consonantchain',"-1100% 0%");}
if(my.mp<brd.cost.dissension){setO('dissension',true);BGP('dissension',"-1200% -300%");}else{setO('dissension',false);BGP('dissension',"-1200% 0%");}
if(my.mp<brd.cost.shieldOfSongs){setO('shieldofsongs',true);BGP('shieldofsongs',"-1600% -300%");}else{setO('shieldofsongs',false);BGP('shieldofsongs',"-1600% 0%");}
if(my.mp<brd.cost.desperateDirge){setO('desperatedirge',true);BGP('desperatedirge',"-1700% -300%");}else{setO('desperatedirge',false);BGP('desperatedirge',"-1700% 0%");}}}
function bardSinging(){if(bardSingStatus===true){referenceDate2=0;bardSingStatus=false;currentSpell="";tlSpellbar.kill();NG.spellbardiv.style.display="none";chantOfBattleTimeout.kill();chordsOfDissonanceTimeout.kill();accelerandoTimeout.kill();hymnOfRestorationTimeout.kill();anthemDeArmsTimeout.kill();boastfulBellowTimeout.kill();elementalRhythmsTimeout.kill();consonantChainTimeout.kill();lucidLullabyTimeout.kill();dissensionTimeout.kill();chorusOfClarityTimeout.kill();euphonicHymnTimeout.kill();shieldOfSongsTimeout.kill();desperateDirgeTimeout.kill();songOfTheSirensTimeout.kill();if(btn.o.chordsofdissonance===false){BGP('chordsofdissonance',"-300% 0");}
if(btn.o.chantofbattle===false){BGP('chantofbattle',"-400% 0");}
if(btn.o.accelerando===false){BGP('accelerando',"-500% 0");}
if(btn.o.hymnofrestoration===false){BGP('hymnofrestoration',"-600% 0");}
if(btn.o.songofthesirens===false){BGP('songofthesirens',"-700% 0");}
if(btn.o.boastfulbellow===false){BGP('boastfulbellow',"-800% 0");}
if(btn.o.elementalrhythms===false){BGP('elementalrhythms',"-900% 0");}
if(btn.o.lucidlullaby===false){BGP('lucidlullaby',"-1000% 0");}
if(btn.o.consonantchain===false){BGP('consonantchain',"-1100% 0");}
if(btn.o.dissension===false){BGP('dissension',"-1200% 0");}
if(btn.o.chorusofclarity===false){BGP('chorusofclarity',"-1300% 0");}
if(btn.o.anthemdearms===false){BGP('anthemdearms',"-1400% 0");}
if(btn.o.euphonichymn===false){BGP('euphonichymn',"-1500% 0");}
if(btn.o.shieldofsongs===false){BGP('shieldofsongs',"-1600% 0");}
if(btn.o.desperatedirge===false){BGP('desperatedirge',"-1700% 0");}}else{if(checkBashFear()===true){return;}
bardSingStatus=true;if(btn.o.chordsofdissonance===false){BGP('chordsofdissonance',"-300% -100%");}
if(btn.o.chantofbattle===false){BGP('chantofbattle',"-400% -100%");}
if(btn.o.accelerando===false){BGP('accelerando',"-500% -100%");}
if(btn.o.hymnofrestoration===false){BGP('hymnofrestoration',"-600% -100%");}
if(btn.o.songofthesirens===false){BGP('songofthesirens',"-700% -100%");}
if(btn.o.boastfulbellow===false){BGP('boastfulbellow',"-800% -100%");}
if(btn.o.elementalrhythms===false){BGP('elementalrhythms',"-900% -100%");}
if(btn.o.lucidlullaby===false){BGP('lucidlullaby',"-1000% -100%");}
if(btn.o.consonantchain===false){BGP('consonantchain',"-1100% -100%");}
if(btn.o.dissension===false){BGP('dissension',"-1200% -100%");}
if(btn.o.chorusofclarity===false){BGP('chorusofclarity',"-1300% -100%");}
if(btn.o.anthemdearms===false){BGP('anthemdearms',"-1400% -100%");}
if(btn.o.euphonichymn===false){BGP('euphonichymn',"-1500% -100%");}
if(btn.o.shieldofsongs===false){BGP('shieldofsongs',"-1600% -100%");}
if(btn.o.desperatedirge===false){BGP('desperatedirge',"-1700% -100%");}}}
g.DruidDoneCD=function(){setBtn('starfire',false,false);BGP('starfire',"-300% 0");if(btn.cd.dronesofdoom===true){setBtn('dronesofdoom',false,false);BGP('dronesofdoom',"-400% 0");}
if(btn.cd.druhealing===true){setBtn('druhealing',false,false);BGP('druhealing',"-500% 0");}
if(btn.cd.tornado===true){setBtn('tornado',false,false);BGP('tornado',"-600% 0");}
if(btn.cd.engulfingroots===true){setBtn('engulfingroots',false,false);BGP('engulfingroots',"-700% 0");}
if(btn.cd.driftingdeath===true){setBtn('driftingdeath',false,false);BGP('driftingdeath',"-800% 0");}
if(btn.cd.lightningblast===true){setBtn('lightningblast',false,false);BGP('lightningblast',"-900% 0");}
if(btn.cd.earthquake===true){setBtn('earthquake',false,false);BGP('earthquake',"-1000% 0");}
if(btn.cd.hurricane===true){setBtn('hurricane',false,false);BGP('hurricane',"-1100% 0");}
if(btn.cd.sylvangrasp===true){setBtn('sylvangrasp',false,false);BGP('sylvangrasp',"-1200% 0");}
if(btn.cd.volcano===true){setBtn('volcano',false,false);BGP('volcano',"-1300% 0");}}
g.DruidCooldowns=function(){setBtn('starfire',true,true);BGP('starfire',"-300% -200%");if(btn.d.dronesofdoom===false){setBtn('dronesofdoom',true,true);BGP('dronesofdoom',"-400% -200%");}
if(btn.d.druhealing===false){setBtn('druhealing',true,true);BGP('druhealing',"-500% -200%");}
if(btn.d.tornado===false){setBtn('tornado',true,true);BGP('tornado',"-600% -200%");}
if(btn.d.engulfingroots===false){setBtn('engulfingroots',true,true);BGP('engulfingroots',"-700% -200%");}
if(btn.d.driftingdeath===false){setBtn('driftingdeath',true,true);BGP('driftingdeath',"-800% -200%");}
if(btn.d.lightningblast===false){setBtn('lightningblast',true,true);BGP('lightningblast',"-900% -200%");}
if(btn.d.earthquake===false){setBtn('earthquake',true,true);BGP('earthquake',"-1000% -200%");}
if(btn.d.hurricane===false){setBtn('hurricane',true,true);BGP('hurricane',"-1100% -200%");}
if(btn.d.sylvangrasp===false){setBtn('sylvangrasp',true,true);BGP('sylvangrasp',"-1200% -200%");}
if(btn.d.volcano===false){setBtn('volcano',true,true);BGP('volcano',"-1300% -200%");}}
var dru={cost:{dronesOfDoom:25,greaterHealing:80,skinLikeNature:110,engulfingRoots:40,shieldOfSpikes:75,driftingDeath:40,spiritOfTheWolf:50,chloroplast:75,sylvanGrasp:80}};g.checkDruidSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Druid"){return;}
if(btn.d.dronesofdoom===false){if(my.mp<dru.cost.dronesOfDoom){BGP('dronesofdoom',"-400% -300%");}else{BGP('dronesofdoom',"-400% 0%");}}
if(btn.d.druhealing===false){if(my.mp<dru.cost.greaterHealing){BGP('druhealing',"-500% -300%");}else{BGP('druhealing',"-500% 0%");}}
if(btn.d.skinlikenature===false){if(my.mp<dru.cost.skinLikeNature){BGP('skinlikenature',"-1400% -300%");}else{BGP('skinlikenature',"-1400% 0%");}}
if(btn.d.engulfingroots===false){if(my.mp<dru.cost.engulfingRoots){BGP('engulfingroots',"-700% -300%");}else{BGP('engulfingroots',"-700% 0%");}}
if(btn.d.shieldofspikes===false){if(my.mp<dru.cost.shieldOfSpikes){BGP('shieldofspikes',"-1500% -300%");}else{BGP('shieldofspikes',"-1500% 0%");}}
if(btn.d.driftingdeath===false){if(my.mp<dru.cost.driftingDeath){BGP('driftingdeath',"-800% -300%");}else{BGP('driftingdeath',"-800% 0%");}}
if(btn.d.sylvangrasp===false){if(my.mp<dru.cost.sylvanGrasp){BGP('sylvangrasp',"-1200% -300%");}else{BGP('sylvangrasp',"-1200% 0%");}}
if(btn.d.chloroplast===false){if(my.mp<dru.cost.chloroplast){BGP('chloroplast',"-1700% -300%");}else{BGP('chloroplast',"-1700% 0%");}}
if(btn.d.drusow===false){if(my.mp<dru.cost.spiritOfTheWolf){BGP('drusow',"-1600% -300%");}else{BGP('drusow',"-1600% 0%");}}}
g.ClericDoneCD=function(){setBtn('smite',false,false);BGP('smite',"-300% 0");if(btn.cd.soundofforce===true){setBtn('soundofforce',false,false);BGP('soundofforce',"-400% 0");}
if(btn.cd.superiorhealing===true){setBtn('superiorhealing',false,false);BGP('superiorhealing',"-500% 0");}
if(btn.cd.bindingearth===true){setBtn('bindingearth',false,false);BGP('bindingearth',"-600% 0");}
if(btn.cd.expelcorruption===true){setBtn('expelcorruption',false,false);BGP('expelcorruption',"-700% 0");}
if(btn.cd.searingrevelation===true){setBtn('searingrevelation',false,false);BGP('searingrevelation',"-800% 0");}
if(btn.cd.martyrsblessing===true){setBtn('martyrsblessing',false,false);BGP('martyrsblessing',"-900% 0");}
if(btn.cd.guardianangel===true){setBtn('guardianangel',false,false);BGP('guardianangel',"-1000% 0");}
if(btn.cd.holywrath===true){setBtn('holywrath',false,false);BGP('holywrath',"-1100% 0");}
if(btn.cd.markofjudgement===true){setBtn('markofjudgement',false,false);BGP('markofjudgement',"-1200% 0");}
if(btn.cd.benediction===true){setBtn('benediction',false,false);BGP('benediction',"-1300% 0");}}
g.ClericCooldowns=function(){setBtn('smite',true,true);BGP('smite',"-300% -200%");if(btn.d.soundofforce===false){setBtn('soundofforce',true,true);BGP('soundofforce',"-400% -200%");}
if(btn.d.superiorhealing===false){setBtn('superiorhealing',true,true);BGP('superiorhealing',"-500% -200%");}
if(btn.d.bindingearth===false){setBtn('bindingearth',true,true);BGP('bindingearth',"-600% -200%");}
if(btn.d.expelcorruption===false){setBtn('expelcorruption',true,true);BGP('expelcorruption',"-700% -200%");}
if(btn.d.searingrevelation===false){setBtn('searingrevelation',true,true);BGP('searingrevelation',"-800% -200%");}
if(btn.d.martyrsblessing===false){setBtn('martyrsblessing',true,true);BGP('martyrsblessing',"-900% -200%");}
if(btn.d.guardianangel===false){setBtn('guardianangel',true,true);BGP('guardianangel',"-1000% -200%");}
if(btn.d.holywrath===false){setBtn('holywrath',true,true);BGP('holywrath',"-1100% -200%");}
if(btn.d.markofjudgement===false){setBtn('markofjudgement',true,true);BGP('markofjudgement',"-1200% -200%");}
if(btn.d.benediction===false){setBtn('benediction',true,true);BGP('benediction',"-1300% -200%");}}
var clr={cost:{soundOfForce:30,superiorHealing:80,resolution:100,bindingEarth:50,expelCorruption:60,armorOfFaith:120,divineSanctuary:60,guardianAngel:45,holyWrath:50,symbolOfNaltron:135}};g.checkClericSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Cleric"){return;}
if(btn.d.soundofforce===false){if(my.mp<clr.cost.soundOfForce){BGP('soundofforce',"-400% -300%");}else{BGP('soundofforce',"-400% 0%");}}
if(btn.d.superiorhealing===false){if(my.mp<clr.cost.superiorHealing){BGP('superiorhealing',"-500% -300%");}else{BGP('superiorhealing',"-500% 0%");}}
if(btn.d.resolution===false){if(my.mp<clr.cost.resolution){BGP('resolution',"-1400% -300%");}else{BGP('resolution',"-1400% 0%");}}
if(btn.d.bindingearth===false){if(my.mp<clr.cost.bindingEarth){BGP('bindingearth',"-600% -300%");}else{BGP('bindingearth',"-600% 0%");}}
if(btn.d.expelcorruption===false){if(my.mp<clr.cost.expelCorruption){BGP('expelcorruption',"-700% -300%");}else{BGP('expelcorruption',"-700% 0%");}}
if(btn.d.armoroffaith===false){if(my.mp<clr.cost.armorOfFaith){BGP('armoroffaith',"-1500% -300%");}else{BGP('armoroffaith',"-1500% 0%");}}
if(btn.d.divinesanctuary===false){if(my.mp<clr.cost.divineSanctuary){BGP('divinesanctuary',"-1600% -300%");}else{BGP('divinesanctuary',"-1600% 0%");}}
if(btn.d.guardianangel===false){if(my.mp<clr.cost.guardianAngel){BGP('guardianangel',"-1000% -300%");}else{BGP('guardianangel',"-1000% 0%");}}
if(btn.d.holywrath===false){if(my.mp<clr.cost.holyWrath){BGP('holywrath',"-1100% -300%");}else{BGP('holywrath',"-1100% 0%");}}
if(btn.d.symbolofnaltron===false){if(my.mp<clr.cost.symbolOfNaltron){BGP('symbolofnaltron',"-1700% -300%");}else{BGP('symbolofnaltron',"-1700% 0%");}}}
g.ShamanDoneCD=function(){setBtn('froststrike',false,false);BGP('froststrike',"-300% 0%");if(btn.cd.scourge===true){setBtn('scourge',false,false);BGP('scourge',"-400% 0%");}
if(btn.cd.shmhealing===true){setBtn('shmhealing',false,false);BGP('shmhealing',"-500% 0%");}
if(btn.cd.togorsinsects===true){setBtn('togorsinsects',false,false);BGP('togorsinsects',"-600% 0%");}
if(btn.cd.cannibalize===true){setBtn('cannibalize',false,false);BGP('cannibalize',"-700% 0%");}
if(btn.cd.enstill===true){setBtn('enstill',false,false);BGP('enstill',"-800% 0%");}
if(btn.cd.poisonnova===true){setBtn('poisonnova',false,false);BGP('poisonnova',"-900% 0%");}
if(btn.cd.affliction===true){setBtn('affliction',false,false);BGP('affliction',"-1000% 0%");}
if(btn.cd.reclaimblood===true){setBtn('reclaimblood',false,false);BGP('reclaimblood',"-1100% 0%");}
if(btn.cd.glacialimpact===true){setBtn('glacialimpact',false,false);BGP('glacialimpact',"-1200% 0%");}
if(btn.cd.devouringplague===true){setBtn('devouringplague',false,false);BGP('devouringplague',"-1300% 0%");}}
g.ShamanCooldowns=function(){setBtn('froststrike',true,true);BGP('froststrike',"-300% -200%");if(btn.d.scourge===false){setBtn('scourge',true,true);BGP('scourge',"-400% -200%");}
if(btn.d.shmhealing===false){setBtn('shmhealing',true,true);BGP('shmhealing',"-500% -200%");}
if(btn.d.togorsinsects===false){setBtn('togorsinsects',true,true);BGP('togorsinsects',"-600% -200%");}
if(btn.d.cannibalize===false){setBtn('cannibalize',true,true);BGP('cannibalize',"-700% -200%");}
if(btn.d.enstill===false){setBtn('enstill',true,true);BGP('enstill',"-800% -200%");}
if(btn.d.poisonnova===false){setBtn('poisonnova',true,true);BGP('poisonnova',"-900% -200%");}
if(btn.d.affliction===false){setBtn('affliction',true,true);BGP('affliction',"-1000% -200%");}
if(btn.d.reclaimblood===false){setBtn('reclaimblood',true,true);BGP('reclaimblood',"-1100% -200%");}
if(btn.d.glacialimpact===false){setBtn('glacialimpact',true,true);BGP('glacialimpact',"-1200% -200%");}
if(btn.d.devouringplague===false){setBtn('devouringplague',true,true);BGP('devouringplague',"-1300% -200%");}}
var shm={cost:{scourge:25,greaterHealing:80,callOfTheAncients:100,guardianSpirit:125,togorsInsects:60,poisonNova:40,spiritOfTheWolf:50,affliction:40,reclaimBlood:70,glacialImpact:45,talismanOfAltuna:140,devouringPlague:80,enstill:50}};g.checkShamanSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Shaman"){return;}
if(btn.d.scourge===false){if(my.mp<shm.cost.scourge){BGP('scourge',"-400% -300%");}else{BGP('scourge',"-400% 0%");}}
if(btn.d.shmhealing===false){if(my.mp<shm.cost.greaterHealing){BGP('shmhealing',"-500% -300%");}else{BGP('shmhealing',"-500% 0%");}}
if(btn.d.togorsinsects===false){if(my.mp<shm.cost.togorsInsects){BGP('togorsinsects',"-600% -300%");}else{BGP('togorsinsects',"-600% 0%");}}
if(btn.d.enstill===false){if(my.mp<shm.cost.enstill){BGP('enstill',"-800% -300%");}else{BGP('enstill',"-800% 0%");}}
if(btn.d.poisonnova===false){if(my.mp<shm.cost.poisonNova){BGP('poisonnova',"-900% -300%");}else{BGP('poisonnova',"-900% 0%");}}
if(btn.d.affliction===false){if(my.mp<shm.cost.affliction){BGP('affliction',"-1000% -300%");}else{BGP('affliction',"-1000% 0%");}}
if(btn.d.reclaimblood===false){if(my.mp<shm.cost.reclaimBlood){BGP('reclaimblood',"-1100% -300%");}else{BGP('reclaimblood',"-1100% 0%");}}
if(btn.d.glacialimpact===false){if(my.mp<shm.cost.glacialImpact){BGP('glacialimpact',"-1200% -300%");}else{BGP('glacialimpact',"-1200% 0%");}}
if(btn.d.devouringplague===false){if(my.mp<shm.cost.devouringPlague){BGP('devouringplague',"-1300% -300%");}else{BGP('devouringplague',"-1300% 0%");}}
if(btn.d.calloftheancients===false){if(my.mp<shm.cost.callOfTheAncients){BGP('calloftheancients',"-1400% -300%");}else{BGP('calloftheancients',"-1400% 0%");}}
if(g.petAlive===false){if(btn.d.guardianspirit===false){if(my.mp<shm.cost.guardianSpirit){BGP('guardianspirit',"-1500% -300%");}else{BGP('guardianspirit',"-1500% 0%");}}}
if(btn.d.shmsow===false){if(my.mp<shm.cost.spiritOfTheWolf){BGP('shmsow',"-1600% -300%");}else{BGP('shmsow',"-1600% 0%");}}
if(btn.d.talismanofaltuna===false){if(my.mp<shm.cost.talismanOfAltuna){BGP('talismanofaltuna',"-1700% -300%");}else{BGP('talismanofaltuna',"-1700% 0%");}}}
g.NecromancerDoneCD=function(){setBtn('bonespirit',false,false);BGP('bonespirit',"-300% 0%");if(btn.cd.cascadingdarkness===true){setBtn('cascadingdarkness',false,false);BGP('cascadingdarkness',"-400% 0%");}
if(btn.cd.invokefear===true){setBtn('invokefear',false,false);BGP('invokefear',"-500% 0%");}
if(btn.cd.drainsoul===true){setBtn('drainsoul',false,false);BGP('drainsoul',"-600% 0%");}
if(btn.cd.feigndeath===true){setBtn('feigndeath',false,false);BGP('feigndeath',"-700% 0%");}
if(btn.cd.augmentdeath===true){setBtn('augmentdeath',false,false);BGP('augmentdeath',"-800% 0%");}
if(btn.cd.igniteblood===true){setBtn('igniteblood',false,false);BGP('igniteblood',"-900% 0%");}
if(btn.cd.corpseexplosion===true){setBtn('corpseexplosion',false,false);BGP('corpseexplosion',"-1000% 0%");}
if(btn.cd.bondofdeath===true){setBtn('bondofdeath',false,false);BGP('bondofdeath',"-1100% 0%");}
if(btn.cd.diamondskin===true){setBtn('diamondskin',false,false);BGP('diamondskin',"-1200% 0%");}
if(btn.cd.asystole===true){setBtn('asystole',false,false);BGP('asystole',"-1300% 0%");}
if(btn.cd.detonatesoul===true){setBtn('detonatesoul',false,false);BGP('detonatesoul',"-1400% 0%");}
if(btn.cd.howlingterror===true){setBtn('howlingterror',false,false);BGP('howlingterror',"-1500% 0%");}}
g.NecromancerCooldowns=function(){setBtn('bonespirit',true,true);BGP('bonespirit',"-300% -200%");if(btn.d.cascadingdarkness===false){setBtn('cascadingdarkness',true,true);BGP('cascadingdarkness',"-400% -200%");}
if(btn.d.invokefear===false){setBtn('invokefear',true,true);BGP('invokefear',"-500% -200%");}
if(btn.d.drainsoul===false){setBtn('drainsoul',true,true);BGP('drainsoul',"-600% -200%");}
if(btn.d.feigndeath===false){setBtn('feigndeath',true,true);BGP('feigndeath',"-700% -200%");}
if(btn.d.augmentdeath===false){setBtn('augmentdeath',true,true);BGP('augmentdeath',"-800% -200%");}
if(btn.d.igniteblood===false){setBtn('igniteblood',true,true);BGP('igniteblood',"-900% -200%");}
if(btn.d.corpseexplosion===false){setBtn('corpseexplosion',true,true);BGP('corpseexplosion',"-1000% -200%");}
if(btn.d.bondofdeath===false){setBtn('bondofdeath',true,true);BGP('bondofdeath',"-1100% -200%");}
if(btn.d.diamondskin===false){setBtn('diamondskin',true,true);BGP('diamondskin',"-1200% -200%");}
if(btn.d.asystole===false){setBtn('asystole',true,true);BGP('asystole',"-1300% -200%");}
if(btn.d.detonatesoul===false){setBtn('detonatesoul',true,true);BGP('detonatesoul',"-1400% -200%");}
if(btn.d.howlingterror===false){setBtn('howlingterror',true,true);BGP('howlingterror',"-1500% -200%");}}
var nec={cost:{invokeDeath:100,cascadingDarkness:25,invokeFear:75,drainSoul:90,archShielding:120,feignDeath:35,augmentDeath:50,igniteBlood:35,corpseExplosion:25,bondOfDeath:65,diamondSkin:140,howlingTerror:60,detonateSoul:35}};g.checkNecromancerSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Necromancer"){return;}
if(btn.d.cascadingdarkness===false){if(my.mp<nec.cost.cascadingDarkness){BGP('cascadingdarkness',"-400% -300%");}else{BGP('cascadingdarkness',"-400% 0%");}}
BGP('corpseexplosion',"-1000% -300%");if(corpseExplosionStatus===true){if(my.mp<nec.cost.corpseExplosion){}else{BGP('corpseexplosion',"-1000% 0%");}}
if(btn.d.invokefear===false){if(my.mp<nec.cost.invokeFear){BGP('invokefear',"-500% -300%");}else{BGP('invokefear',"-500% 0%");}}
if(btn.d.drainsoul===false){if(my.mp<nec.cost.drainSoul){BGP('drainsoul',"-600% -300%");}else{BGP('drainsoul',"-600% 0%");}}
if(btn.d.archshielding===false){if(my.mp<nec.cost.archShielding){BGP('archshielding',"-1700% -300%");}else{BGP('archshielding',"-1700% 0%");}}
if(btn.d.feigndeath===false){if(my.mp<nec.cost.feignDeath){BGP('feigndeath',"-700% -300%");}else{BGP('feigndeath',"-700% 0%");}}
if(btn.d.igniteblood===false){if(my.mp<nec.cost.igniteBlood){BGP('igniteblood',"-900% -300%");}else{BGP('igniteblood',"-900% 0%");}}
if(btn.d.bondofdeath===false){if(my.mp<nec.cost.bondOfDeath){BGP('bondofdeath',"-1100% -300%");}else{BGP('bondofdeath',"-1100% 0%");}}
if(btn.d.detonatesoul===false){if(my.mp<nec.cost.detonateSoul){BGP('detonatesoul',"-1400% -300%");}else{BGP('detonatesoul',"-1400% 0%");}}
if(btn.d.howlingterror===false){if(my.mp<nec.cost.howlingTerror){BGP('howlingterror',"-1500% -300%");}else{BGP('howlingterror',"-1500% 0%");}}
if(g.petAlive===false){if(btn.d.invokedeath===false){if(my.mp<nec.cost.invokeDeath){BGP('invokedeath',"-1600% -300%");}
if(my.mp>=nec.cost.invokeDeath||g.petAlive===true){BGP('invokedeath',"-1600% 0%");}}}}
g.EnchanterDoneCD=function(){setBtn('chaosflux',false,false);BGP('chaosflux',"-300% 0%");if(btn.cd.gaspingembrace===true){setBtn('gaspingembrace',false,false);BGP('gaspingembrace',"-400% 0%");}
if(btn.cd.cajolingwhispers===true){setBtn('cajolingwhispers',false,false);BGP('cajolingwhispers',"-500% 0%");}
if(btn.cd.colorshift===true){setBtn('colorshift',false,false);BGP('colorshift',"-600% 0%");}
if(btn.cd.mesmerize===true){setBtn('mesmerize',false,false);BGP('mesmerize',"-700% 0%");}
if(btn.cd.shiftlessdeeds===true){setBtn('shiftlessdeeds',false,false);BGP('shiftlessdeeds',"-800% 0%");}
if(btn.cd.alacrity===true){setBtn('alacrity',false,false);BGP('alacrity',"-900% 0%");}
if(btn.cd.gravityflux===true){setBtn('gravityflux',false,false);BGP('gravityflux',"-1000% 0%");}
if(btn.cd.mysticrune===true){setBtn('mysticrune',false,false);BGP('mysticrune',"-1100% 0%");}
if(btn.cd.tashania===true){setBtn('tashania',false,false);BGP('tashania',"-1200% 0%");}
if(btn.cd.enthrall===true){setBtn('enthrall',false,false);BGP('enthrall',"-1300% 0%");}}
g.EnchanterCooldowns=function(){setBtn('chaosflux',true,true);BGP('chaosflux',"-300% -200%");if(btn.d.gaspingembrace===false){setBtn('gaspingembrace',true,true);BGP('gaspingembrace',"-400% -200%");}
if(btn.d.cajolingwhispers===false){setBtn('cajolingwhispers',true,true);BGP('cajolingwhispers',"-500% -200%");}
if(btn.d.colorshift===false){setBtn('colorshift',true,true);BGP('colorshift',"-600% -200%");}
if(btn.d.mesmerize===false){setBtn('mesmerize',true,true);BGP('mesmerize',"-700% -200%");}
if(btn.d.shiftlessdeeds===false){setBtn('shiftlessdeeds',true,true);BGP('shiftlessdeeds',"-800% -200%");}
if(btn.d.alacrity===false){setBtn('alacrity',true,true);BGP('alacrity',"-900% -200%");}
if(btn.d.gravityflux===false){setBtn('gravityflux',true,true);BGP('gravityflux',"-1000% -200%");}
if(btn.d.mysticrune===false){setBtn('mysticrune',true,true);BGP('mysticrune',"-1100% -200%");}
if(btn.d.tashania===false){setBtn('tashania',true,true);BGP('tashania',"-1200% -200%");}
if(btn.d.enthrall===false){setBtn('enthrall',true,true);BGP('enthrall',"-1300% -200%");}}
var enc={cost:{gaspingEmbrace:25,cajolingWhispers:60,colorShift:35,mesmerize:30,discordantBarrier:120,shiftlessDeeds:65,enchantWeapon:80,adorningGrace:60,alacrity:60,gravityFlux:50,mysticRune:95,tashania:25,enthrall:40,clarity:50}};g.checkEnchanterSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Enchanter"){return;}
if(btn.d.gaspingembrace===false){if(my.mp<enc.cost.gaspingEmbrace){BGP('gaspingembrace',"-400% -300%");}else{BGP('gaspingembrace',"-400% 0%");}}
if(btn.d.cajolingwhispers===false){if(my.mp<enc.cost.cajolingWhispers){BGP('cajolingwhispers',"-500% -300%");}else{BGP('cajolingwhispers',"-500% 0%");}}
if(btn.d.colorshift===false){if(my.mp<enc.cost.colorShift){BGP('colorshift',"-600% -300%");}else{BGP('colorshift',"-600% 0%");}}
if(btn.d.mesmerize===false){if(my.mp<enc.cost.mesmerize){BGP('mesmerize',"-700% -300%");}else{BGP('mesmerize',"-700% 0%");}}
if(btn.d.discordantbarrier===false){if(my.mp<enc.cost.discordantBarrier){BGP('discordantbarrier',"-1400% -300%");}else{BGP('discordantbarrier',"-1400% 0%");}}
if(btn.d.shiftlessdeeds===false){if(my.mp<enc.cost.shiftlessDeeds){BGP('shiftlessdeeds',"-800% -300%");}else{BGP('shiftlessdeeds',"-800% 0%");}}
if(btn.d.enchantweapon===false){if(my.mp<enc.cost.enchantWeapon){BGP('enchantweapon',"-1500% -300%");}else{BGP('enchantweapon',"-1500% 0%");}}
if(btn.d.adorninggrace===false){if(my.mp<enc.cost.adorningGrace){BGP('adorninggrace',"-1600% -300%");}else{BGP('adorninggrace',"-1600% 0%");}}
if(btn.d.alacrity===false){if(my.mp<enc.cost.alacrity){BGP('alacrity',"-900% -300%");}else{BGP('alacrity',"-900% 0%");}}
if(btn.d.gravityflux===false){if(my.mp<enc.cost.gravityFlux){BGP('gravityflux',"-1000% -300%");}else{BGP('gravityflux',"-1000% 0%");}}
if(btn.d.mysticrune===false){if(my.mp<enc.cost.mysticRune){BGP('mysticrune',"-1100% -300%");}else{BGP('mysticrune',"-1100% 0%");}}
if(btn.d.tashania===false){if(my.mp<enc.cost.tashania){BGP('tashania',"-1200% -300%");}else{BGP('tashania',"-1200% 0%");}}
if(btn.d.clarity===false){if(my.mp<enc.cost.clarity){BGP('clarity',"-1700% -300%");}else{BGP('clarity',"-1700% 0%");}}
if(btn.d.enthrall===false){if(my.mp<enc.cost.enthrall){BGP('enthrall',"-1300% -300%");}else{BGP('enthrall',"-1300% 0%");}}}
g.MagicianDoneCD=function(){setBtn('lavabolt',false,false);BGP('lavabolt',"-300% 0%");if(btn.cd.firestorm===true){setBtn('firestorm',false,false);BGP('firestorm',"-400% 0%");}
if(btn.cd.frozenorb===true){setBtn('frozenorb',false,false);BGP('frozenorb',"-500% 0%");}
if(btn.cd.burnout===true){setBtn('burnout',false,false);BGP('burnout',"-600% 0%");}
if(btn.cd.manashield===true){setBtn('manashield',false,false);BGP('manashield',"-700% 0%");}
if(btn.cd.psionicstorm===true){setBtn('psionicstorm',false,false);BGP('psionicstorm',"-800% 0%");}
if(btn.cd.reclaimelements===true){setBtn('reclaimelements',false,false);BGP('reclaimelements',"-900% 0%");}
if(btn.cd.elementalfury===true){setBtn('elementalfury',false,false);BGP('elementalfury',"-1000% 0%");}
if(btn.cd.armageddon===true){setBtn('armageddon',false,false);BGP('armageddon',"-1100% 0%");}
if(btn.cd.stasisfield===true){setBtn('stasisfield',false,false);BGP('stasisfield',"-1200% 0%");}
if(btn.cd.alteredstate===true){setBtn('alteredstate',false,false);BGP('alteredstate',"-1300% 0%");}}
g.MagicianCooldowns=function(){setBtn('lavabolt',true,true);BGP('lavabolt',"-300% -200%");if(btn.d.firestorm===false){setBtn('firestorm',true,true);BGP('firestorm',"-400% -200%");}
if(btn.d.frozenorb===false){setBtn('frozenorb',true,true);BGP('frozenorb',"-500% -200%");}
if(btn.d.burnout===false){setBtn('burnout',true,true);BGP('burnout',"-600% -200%");}
if(btn.d.manashield===false){setBtn('manashield',true,true);BGP('manashield',"-700% -200%");}
if(btn.d.psionicstorm===false){setBtn('psionicstorm',true,true);BGP('psionicstorm',"-800% -200%");}
if(btn.d.reclaimelements===false){setBtn('reclaimelements',true,true);BGP('reclaimelements',"-900% -200%");}
if(btn.d.elementalfury===false){setBtn('elementalfury',true,true);BGP('elementalfury',"-1000% -200%");}
if(btn.d.armageddon===false){setBtn('armageddon',true,true);BGP('armageddon',"-1100% -200%");}
if(btn.d.stasisfield===false){setBtn('stasisfield',true,true);BGP('stasisfield',"-1200% -200%");}
if(btn.d.alteredstate===false){setBtn('alteredstate',true,true);BGP('alteredstate',"-1300% -200%");}}
var mag={cost:{elemental:100,shieldOfLava:80,firestorm:25,phantomPlate:120,frozenOrb:40,elementalArmor:75,psionicStorm:45,reclaimElements:90,stasisField:60,armageddon:60}};g.checkMagicianSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Magician"){return;}
if(petImage!=="an earth elemental pet"){if(my.mp<mag.cost.elemental){BGP('earthelemental',"-200% -300%");}else{BGP('earthelemental',"-1700% 0%");}}
if(petImage!=="an air elemental pet"){if(my.mp<mag.cost.elemental){BGP('airelemental',"-200% -300%");}else{BGP('airelemental',"-1700% -100%");}}
if(petImage!=="a fire elemental pet"){if(my.mp<mag.cost.elemental){BGP('fireelemental',"-200% -300%");}else{BGP('fireelemental',"-1700% -200%");}}
if(petImage!=="a frost elemental pet"){if(my.mp<mag.cost.elemental){BGP('frostelemental',"-200% -300%");}else{BGP('frostelemental',"-1700% -300%");}}
if(btn.d.shieldoflava===false){if(my.mp<mag.cost.shieldOfLava){BGP('shieldoflava',"-1400% -300%");}else{BGP('shieldoflava',"-1400% 0%");}}
if(btn.d.firestorm===false){if(my.mp<mag.cost.firestorm){BGP('firestorm',"-400% -300%");}else{BGP('firestorm',"-400% 0%");}}
if(btn.d.phantomplate===false){if(my.mp<mag.cost.phantomPlate){BGP('phantomplate',"-1500% -300%");}else{BGP('phantomplate',"-1500% 0%");}}
if(btn.d.frozenorb===false){if(my.mp<mag.cost.frozenOrb){BGP('frozenorb',"-500% -300%");}else{BGP('frozenorb',"-500% 0%");}}
if(btn.d.elementalarmor===false){if(my.mp<mag.cost.elementalArmor){BGP('elementalarmor',"-1600% -300%");}else{BGP('elementalarmor',"-1600% 0%");}}
if(btn.d.psionicstorm===false){if(my.mp<mag.cost.psionicStorm){BGP('psionicstorm',"-800% -300%");}else{BGP('psionicstorm',"-800% 0%");}}
if(btn.d.reclaimelements===false){if(my.mp<mag.cost.reclaimElements){BGP('reclaimelements',"-900% -300%");}else{BGP('reclaimelements',"-900% 0%");}}
if(btn.d.armageddon===false){if(my.mp<mag.cost.armageddon){BGP('armageddon',"-1100% -300%");}else{BGP('armageddon',"-1100% 0%");}}
if(btn.d.stasisfield===false){if(my.mp<mag.cost.stasisField){BGP('stasisfield',"-1200% -300%");}else{BGP('stasisfield',"-1200% 0%");}}}
g.WizardDoneCD=function(){setBtn('icebolt',false,false);BGP('icebolt',"-300% 0%");if(btn.cd.chargedbolts===true){setBtn('chargedbolts',false,false);BGP('chargedbolts',"-400% 0%");}
if(btn.cd.frostnova===true){setBtn('frostnova',false,false);BGP('frostnova',"-500% 0%");}
if(btn.cd.magicmissiles===true){setBtn('magicmissiles',false,false);BGP('magicmissiles',"-600% 0%");}
if(btn.cd.fireball===true){setBtn('fireball',false,false);BGP('fireball',"-700% 0%");}
if(btn.cd.deepfreeze===true){setBtn('deepfreeze',false,false);BGP('deepfreeze',"-800% 0%");}
if(btn.cd.chainlightning===true){setBtn('chainlightning',false,false);BGP('chainlightning',"-900% 0%");}
if(btn.cd.glacialspike===true){setBtn('glacialspike',false,false);BGP('glacialspike',"-1000% 0%");}
if(btn.cd.iceblock===true){setBtn('iceblock',false,false);BGP('iceblock',"-1100% 0%");}
if(btn.cd.icecomet===true){setBtn('icecomet',false,false);BGP('icecomet',"-1200% 0%");}
if(btn.cd.counterspell===true){setBtn('counterspell',false,false);BGP('counterspell',"-1300% 0%");}
if(btn.cd.harnessEther===true){setBtn('harnessEther',false,false);BGP('harnessEther',"-1400% 0%");}
if(btn.cd.meteor===true){setBtn('meteor',false,false);BGP('meteor',"-1500% 0%");}
if(btn.cd.mirrorimages===true){setBtn('mirrorimages',false,false);BGP('mirrorimages',"-1600% 0%");}}
g.WizardCooldowns=function(){setBtn('icebolt',true,true);BGP('icebolt',"-300% -200%");if(btn.d.chargedbolts===false){setBtn('chargedbolts',true,true);BGP('chargedbolts',"-400% -200%");}
if(btn.d.frostnova===false){setBtn('frostnova',true,true);BGP('frostnova',"-500% -200%");}
if(btn.d.magicmissiles===false){setBtn('magicmissiles',true,true);BGP('magicmissiles',"-600% -200%");}
if(btn.d.fireball===false){setBtn('fireball',true,true);BGP('fireball',"-700% -200%");}
if(btn.d.deepfreeze===false){setBtn('deepfreeze',true,true);BGP('deepfreeze',"-800% -200%");}
if(btn.d.chainlightning===false){setBtn('chainlightning',true,true);BGP('chainlightning',"-900% -200%");}
if(btn.d.glacialspike===false){setBtn('glacialspike',true,true);BGP('glacialspike',"-1000% -200%");}
if(btn.d.iceblock===false){setBtn('iceblock',true,true);BGP('iceblock',"-1100% -200%");}
if(btn.d.icecomet===false){setBtn('icecomet',true,true);BGP('icecomet',"-1200% -200%");}
if(btn.d.counterspell===false){setBtn('counterspell',true,true);BGP('counterspell',"-1300% -200%");}
if(btn.d.harnessEther===false){setBtn('harnessEther',true,true);BGP('harnessEther',"-1400% -200%");}
if(btn.d.meteor===false){setBtn('meteor',true,true);BGP('meteor',"-1500% -200%");}
if(btn.d.mirrorimages===false){setBtn('mirrorimages',true,true);BGP('mirrorimages',"-1600% -200%");}}
var wiz={cost:{chargedBolts:25,frostNova:25,magicMissiles:20,viziersShielding:110,fireball:40,deepFreeze:50,chainLightning:30,glacialSpike:40,counterspell:20,harnessEther:30}};g.checkWizardSkills=function(){if(fearStatus===0||bashStatus===0||my.job!=="Wizard"){return;}
if(btn.d.chargedbolts===false){if(my.mp<wiz.cost.chargedBolts){BGP('chargedbolts',"-400% -300%");}else{BGP('chargedbolts',"-400% 0%");}}
if(btn.d.frostnova===false){if(my.mp<wiz.cost.frostNova){BGP('frostnova',"-500% -300%");}else{BGP('frostnova',"-500% 0%");}}
if(btn.d.magicmissiles===false){if(my.mp<wiz.cost.magicMissiles){BGP('magicmissiles',"-600% -300%");}else{BGP('magicmissiles',"-600% 0%");}}
if(btn.d.viziersshielding===false){if(my.mp<wiz.cost.viziersShielding){BGP('viziersshielding',"-1700% -300%");}else{BGP('viziersshielding',"-1700% 0%");}}
if(btn.d.fireball===false){if(my.mp<wiz.cost.fireball){BGP('fireball',"-700% -300%");}else{BGP('fireball',"-700% 0%");}}
if(btn.d.deepfreeze===false){if(my.mp<wiz.cost.deepFreeze){BGP('deepfreeze',"-800% -300%");}else{BGP('deepfreeze',"-800% 0%");}}
if(btn.d.chainlightning===false){if(my.mp<wiz.cost.chainLightning){BGP('chainlightning',"-900% -300%");}else{BGP('chainlightning',"-900% 0%");}}
if(btn.d.glacialspike===false){if(my.mp<wiz.cost.glacialSpike){BGP('glacialspike',"-1000% -300%");}else{BGP('glacialspike',"-1000% 0%");}}
if(btn.d.counterspell===false){if(my.mp<wiz.cost.counterspell){BGP('counterspell',"-1300% -300%");}else{BGP('counterspell',"-1300% 0%");}}
if(btn.d.harnessEther===false){if(my.mp<wiz.cost.harnessEther){BGP('harnessEther',"-1400% -300%");}else{BGP('harnessEther',"-1400% 0%");}}}
function targetRequired(){addMonster();}
function warriorKickReady(){if(D.getElementById('warriorkickId').textContent!==''){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('warriorkickId',false);BGP('warriorkickId',"-300% 0");g.checkWarriorSkills();refreshKick.kill();}
function warriorKickTimer(){refreshKick=T.to('',.1,{repeat:-1,onRepeat:warriorKickReady});}
function warriorKick(){if(btn.d.warriorkickId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('warriorkickId',true);BGP('warriorkickId',"-300% -100%");T.delayedCall(8,warriorKickTimer);timerTick(D.getElementById('warriorkickId'),8000/1000,'warriorkickId');beginGlobalCooldown();var dam=minMax((attackFunct()/6)*(1+P.eq[11].armor/80),.7);var Slot=TGT;var success=40+(talent1()*3);if(M.random()*100<success){interruptTarget(Slot);}
if(GLB.videoSetting==="High"){animateKick(Slot);}
g.myPhysicalDamage(dam,Slot,"Kick");if(my.talent1>=20){mob[Slot].mp-=1;if(mob[Slot].mp<0){mob[Slot].mp=0;}}}
$(function(){$NG.window3.on('mouseenter','#warriorkickId',function(){var CD="8".fontcolor("#ff0000");var inter=40+(my.talent1*3);if(inter>100){inter=100;}
var a=TTphy((attackFunct()/6)*(1+P.eq[11].armor/80),.7,"Kick");NG.tooltipname.innerHTML="Kick";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Deliver a swift kick causing "+a[0]+" to "+a[1]+" physical damage. Your boots' armor value affects Kick's damage.<br><br>"+"Effect: "+inter+"% chance to interrupt your target's spell.";});});function remove(e){x=e.target
try{x.parentNode.removeChild(x);}catch(err){}}
function Remove(e){try{e.parentNode.removeChild(e);}catch(err){}}
function animateFlyingBlood(Slot,total){function doit(){var p4=can('bloodSpray',7,x2,y2,25,25,true);var goX=x2+M.random()*630-315;var goY=M.random()*55+653;T.to(p4,.2,{y:goY,x:goX});T.to(p4,8+(M.random()*(6)),{scaleX:6,scaleY:2,alpha:0,onComplete:function(){cRem(7,p4);}});}
if(GLB.videoSetting==="High"){if(Slot===undefined){Slot=TGT;}
if(!total){total=1;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-50);for(var i=0;i<total;i++){doit();}}}
function animatePoisonDrop(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var goX=M.random()*(100)-50;var goY=M.random()*(15)+658;var p4=can('poisonSpray',7,x2,y2,25,25,true);T.to(p4,.3,{y:goY,x:x2+goX,ease:ez.sin,onComplete:function(){T.to(p4,6+M.random()*(9),{scaleX:3,scaleY:1.5,alpha:0,onComplete:function(){cRem(7,p4);}});}});}
function animateBloodDrop(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var goX=M.random()*(100)-50;var goY=M.random()*(15)+658;var p4=can('bloodSpray',7,x2,y2,25,25,true);T.to(p4,.3,{y:goY,x:x2+goX,ease:ez.sin,onComplete:function(){T.to(p4,6+M.random()*(9),{scaleX:6,scaleY:2,alpha:0,onComplete:function(){cRem(7,p4);}});}});}
function IMG(x,y,w,h,img){var H1=D.createElement('img');H1.style.cssText="position:absolute; left:"+x+"px; top:"+y+"px; width:"+w+"px; height:"+h+"px;";H1.src="images1/"+img+".png";return H1;}
function DIV(x,y,w,h){var H1=D.createElement('div');H1.style.cssText="position:absolute; left:"+x+"px; top:"+y+"px; width:"+w+"px; height:"+h+"px; overflow: hidden;";return H1;}
function animateKick(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+200);var y2=(MOB[Slot].offsetTop+mob[Slot].cY+200);var e1=can('kick',5,x2,y2,0,0);T.to(e1,.125,{scaleX:1,scaleY:1,x:x2-225,y:y2-225,ease:ez.Qin,onComplete:function(){T.to(e1,.125,{alpha:.25,x:"-=125",y:"-=125",onComplete:function(){cRem(5,e1);}});}});}
function slamReady(){if(D.getElementById('slamId').textContent!==''){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('slamId',false);BGP('slamId',"-400% 0%");g.checkWarriorSkills();refreshSlam.kill();}
function slamTimer(){refreshSlam=T.to('',.1,{repeat:-1,onRepeat:slamReady});}
function dauntlessReduction(){if(g.difficulty===1){return.8;}else if(g.difficulty===2){return.66;}else{return.5;}}
function freezeReduction(){if(g.difficulty===1){return 1;}else if(g.difficulty===2){return.8;}else{return.6;}}
function stunTarget(Slot,d,spriteX,spriteY,skillName){if(mob[Slot].name===""){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
if(!spriteY){spriteY=0;}
if(!skillName){skillName="Stun";}
stopMob(Slot);setMobOpacity(Slot);mob[Slot].stunStatus=true;if(mob[Slot].dauntless){d*=dauntlessReduction();}
mob[Slot].stunTimer.kill();mob[Slot].stunTimer=T.delayedCall(d/1000,function(){mob[Slot].stunStatus=false;});Chat((mob[Slot].name+" has been stunned."));interruptTarget(Slot);animateStun(Slot,d,0,true);if(spriteX<0){addMobBuffIcon(skillName,Slot,"stunIcon",d,spriteX,spriteY);}else{mobSelfBuffIcon(skillName,"mobBashIcon"+Slot,d,0,Slot);}}
function slam(){if(my.mp<10||btn.d.slamId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('slamId',true);BGP('slamId',"-400% -100%");T.delayedCall(12,slamTimer);beginGlobalCooldown();var skillName="Slam";g.drawMyMp(-10);timerTick(D.getElementById('slamId'),12000/1000,'slamId');if(my.talent5===0){var Slot=TGT;if(GLB.videoSetting==="High"){animateSlam(Slot);}
var dam=minMax((attackFunct()/4)*(1+P.eq[13].armor/80),.8);var hit=g.myPhysicalDamage(dam,Slot,skillName);if(hit!==undefined){stunTarget(Slot,3500,-128);pummelStatus=0;clearPummel.kill()
clearPummel=T.delayedCall(6,pummelReady);playAudio("shldblk");}}else{var Slot=TGT;for(var i=Slot-1;i<=Slot+1;i++){if(i>=0){if(mob[i].name){if(GLB.videoSetting==="High"){animateSlam(i);}
var dam=minMax((attackFunct()/4)*(1+P.eq[13].armor/80),.8);var hit=g.myPhysicalDamage(dam,i,skillName);if(hit!==undefined){stunTarget(i,3500,-128);pummelStatus=0;clearPummel.kill()
clearPummel=T.delayedCall(6,pummelReady);playAudio("shldblk");}}}}}
if(my.talent5>=20){executeShockwave(false);}}
function animateSlam(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-200);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-200);function doit(count){var e1=can('slam',5,x2,y2,400,400,true);T.to(e1,.25,{alpha:0,scaleY:.25,scaleX:.25,ease:ez.sout,onComplete:function(){cRem(5,e1);}});count++;if(count<3){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
$(function(){$NG.window3.on('mouseenter','#slamId',function(){var MP="10".fontcolor("#00ff00");var CD="12".fontcolor("#ff0000");var value1="3.5".fontcolor("#00ff00");var a=TTphy((attackFunct()/4)*(1+P.eq[13].armor/80),.8,"Slam");NG.tooltipname.innerHTML="Slam";NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Slams knocks your target to the ground causing "+a[0]+" to "+a[1]+" physical damage. Your shield's armor value affects Slam's damage.<br><br>"+"Effect: Stuns your target for "+value1+" seconds.";});});function avengingRegen(foo){if(my.hp<=0){return;}
var healAmount=M.ceil(my.maxHp/200);g.popupHeal(healAmount);foo++;if(foo<6){avengingTimer.kill();avengingTimer=T.delayedCall(1,function(){avengingRegen(foo);});}}
function avengingStrike(){if(btn.d.avengingstrikeId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();var skillName="Avenging Strike";var dam=minMax((attackFunct()/16),.5);if(my.mp>80){var count=0;avengingTimer.kill();avengingTimer=T.delayedCall(1,function(){avengingRegen(count);});g.drawMyMp(-25);g.checkWarriorSkills();var buffId="avengingStrikeIcon";var duration=6000;var spriteX=-160;avengingStrikeIconTimer.kill();avengingStrikeIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
if(GLB.videoSetting==="High"){animateAvengingStrike(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);}
function animateAvengingStrike(Slot){var x2=MOB[Slot].offsetLeft+mob[Slot].cX+100;var y2=MOB[Slot].offsetTop+mob[Slot].cY-100;var e1=can('punchedRed',5,x2,y2,0,0);T.to(e1,.12,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin});T.to(e1,.12,{delay:.12,scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}
$(function(){$NG.window3.on('mouseenter','#avengingstrikeId',function(){var MP="25".fontcolor("#00ff00");var foo=(M.ceil(my.maxHp/200)+"").fontcolor("#00ff00");var a=TTphy((attackFunct()/16),.5,"Avenging Strike");NG.tooltipname.innerHTML="Avenging Strike";NG.tooltipmsg.innerHTML="Avenging Strike hits your target for "+a[0]+" to "+a[1]+" weapon damage.<br><br>"+"Effect: If you have more than 80 Fury, Avenging Strike will cost "+MP+" Fury and you will regenerate "+foo+" health every second for 6 seconds.";});});function startHemorrhage(Slot,damage){mob[Slot].hemorrhageTickCount=0;mob[Slot].hemorrhageTickDamage=damage;mob[Slot].hemorrhageInterval.kill();mob[Slot].hemorrhageInterval=T.to('',1,{repeat:-1,onRepeat:function(){hemorrhageTick(Slot);}});addMobBuffIcon("Hemorrhage",Slot,"hemorrhageIcon",24000,-192);if(GLB.videoSetting==="High"){animateHemorrhage(Slot);}}
function hemorrhageTick(Slot){if(mob[Slot].name===""){mob[Slot].hemorrhageInterval.kill();mob[Slot].hemorrhageTickCount=0;return;}
if(GLB.videoSetting==="High"){animateBloodDrop(Slot);}
g.myDotDamage(mob[Slot].hemorrhageTickDamage,Slot,"physical","Hemorrhage");mob[Slot].hemorrhageTickCount+=1;mob[Slot].hemorrhageTickDamage=M.ceil(mob[Slot].hemorrhageTickDamage*1.02);if(my.talent11>=20){if(M.random()>.92){g.subjugateStatus=0;clearSubjugate.kill();clearSubjugate=T.delayedCall(8,subjugateReady);g.checkWarriorSkills();}}
if(mob[Slot].hemorrhageTickCount===24){mob[Slot].hemorrhageInterval.kill();mob[Slot].hemorrhageTickCount=0;g.subjugateStatus=0;clearSubjugate.kill();clearSubjugate=T.delayedCall(8,subjugateReady);g.checkWarriorSkills();}}
function hemorrhage(){if(my.mp<15||btn.d.hemorrhageId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();if(g.autoAttackStatus===1&&Lmy.autoAttackOption==="On"){toggleAutoAttackStatus();}
var Slot=TGT;if(my.talent6>=20){for(var i=Slot-1;i<=Slot+1;i++){if(i>=0){if(mob[i].name){Chat((mob[i].name+" begins bleeding from an open wound."));var dam=minMax(attackFunct()/12+5,.9);startHemorrhage(i,dam);}}}}else{var dam=minMax(attackFunct()/12+5,.9);Chat((mob[Slot].name+" begins bleeding from an open wound."));startHemorrhage(Slot,dam);}
g.drawMyMp(-15);g.checkWarriorSkills();if(mob[Slot].thornsActive===0){Chat(("You are pierced by thorns for "+M.ceil(mob[Slot].level/10)+" damage."),3);var dam2=M.ceil(mob[Slot].level/10);my.hp-=dam2;battleDamageTaken+=dam2;if(my.hp<=0){Chat(("You have been slain by a shield of thorns!").fontcolor("ff0000"));monsterKilledMe();}}
if(mob[Slot].lavaShieldActive===0){Chat(("You are burned by lava for "+M.ceil(mob[Slot].level/6)+" damage."),3);var dam1=M.ceil(mob[Slot].level/6);my.hp-=dam1;battleDamageTaken+=dam1;if(my.hp<=0){Chat(("You have been slain by a shield of lava!").fontcolor("ff0000"));monsterKilledMe();}}
playAudio("slice");}
$(function(){$NG.window3.on('mouseenter','#hemorrhageId',function(){var MP="15".fontcolor("#00ff00");var value1="2%".fontcolor("#00ff00");var a=[];var target="your target";if(my.talent6>=20){target="three targets";}
a[0]='<span class="green">'+~~((attackFunct()/12+5)*.9)+'</span>';a[1]='<span class="green">'+~~(attackFunct()/12+5)+'</span>';NG.tooltipname.innerHTML="Hemorrhage";var s="Cost: "+MP+" Fury<br><br>"+"Hemorrhage causes "+target+" to bleed for "+a[0]+" to "+a[1]+" physical damage every second for 24 seconds. Damage increases by "+value1+" each tick.<br><br>";if(my.talent11>=20){s+='Hemorrhage ticks have an '+green("8%")+' chance to activate Subjugate';}
NG.tooltipmsg.innerHTML=s;});});function animateHemorrhage(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('hemorrhage',5,x2,y2,0,0);T.to(e1,.1,{scaleX:1,scaleY:1,y:y2-200,ease:ez.lin});T.to(e1,.4,{delay:.1,alpha:0,y:"+="+5,onComplete:function(){cRem(5,e1);}});animateFlyingBlood(Slot,20);}
function shockwaveReady(){if(D.getElementById('shockwaveId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shockwaveId',false);BGP('shockwaveId',"-700% 0%");g.checkWarriorSkills();refreshshockwave.kill();}
function shockwaveTimer(){refreshshockwave=T.to('',.1,{repeat:-1,onRepeat:shockwaveReady});}
$(function(){$NG.window3.on('mouseenter','#shockwaveId',function(){var MP="12".fontcolor("#00ff00");var CD="24".fontcolor("#ff0000");var a=TTphy((attackFunct()/3.5)*(1+P.eq[13].armor/50),.8,"Shockwave");NG.tooltipname.innerHTML="Shockwave";var s="Cost: "+MP+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Unleash a sonic wave causing "+a[0]+" to "+a[1]+" physical damage on all targets. Your shield's armor value affects Shockwave's damage.<br><br>"+"Effect: Stuns all targets for 3.5 seconds."+"<BR><BR>Special: Shockwave cannot be dodged.";NG.tooltipmsg.innerHTML=s});});function executeShockwave(stun){flashScreen("#1616fd",.3,.5);var skillName="Shockwave";animateNova('blueNova',false,12);playAudio("tremor");for(var i=0;i<=4;i++){if(mob[i].name!==""){var dam=minMax((attackFunct()/3.5)*(1+P.eq[13].armor/50),.8);var hit=g.myPhysicalDamage(dam,i,skillName,0,'range');if(hit!==undefined&&stun===true){stunTarget(i,3500,-224);}}}}
function shockwave(){if(my.mp<15||btn.d.shockwaveId===true||my.level<38){return;}
if(checkBashFear()===true){return;}
setD('shockwaveId',true);BGP('shockwaveId',"-700% -100%");T.delayedCall(24,shockwaveTimer);timerTick(D.getElementById('shockwaveId'),24000/1000,'shockwaveId');beginGlobalCooldown();g.drawMyMp(-15);pummelStatus=0;clearPummel.kill()
clearPummel=T.delayedCall(6,pummelReady);executeShockwave(true);if(my.talent4>=20){T.delayedCall(.5,function(){executeShockwave(false);});}}
function animateNova(img,pet){if(GLB.videoSetting!=="High"){return;}
if(!img){img="fireNova";}
if(pet===true){var x1=(MOB[5].offsetLeft+(petWidth/2));var y1=670;var sx=4;var sy=1.75;}else{var x1=640;var y1=788;var sx=5;var sy=5;}
function doit(count){var p4=can(img,7,x1-200,y1-50,0,0,true);T.to(p4,.5,{scaleX:sx,scaleY:sy,alpha:0,onComplete:function(){cRem(7,p4);}});count++;if(count<8){T.delayedCall(.03,function(){doit(count)});}}
doit(0);}
function pummelReady(){if(D.getElementById('pummelId').textContent!==''){return;}
pummelStatus=1;g.checkWarriorSkills();clearPummel.kill();}
function pummelReadyCooldown(){if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
$NG.pummelId.removeClass("disabled");setD('pummelId',false);g.checkWarriorSkills();refreshpummel.kill();}
function pummelTimer(){refreshpummel=T.to('',.1,{repeat:-1,onRepeat:pummelReadyCooldown});}
function pummel(){if(my.mp<10||pummelStatus===1||btn.d.pummelId===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('pummelId',true);BGP('pummelId',"-800% -100%");timerTick(D.getElementById('pummelId'),6000/1000,'pummelId');T.delayedCall(6,pummelTimer);beginGlobalCooldown();clearPummel.kill()
var skillName="Pummel";g.drawMyMp(-10);pummelStatus=1;startInvincible(2000);var hits=1;if(Set.Guardian>=6){hits=5;}
function doit(count){if(GLB.videoSetting==="High"){animateBurst(TGT);}
var dam=minMax((attackFunct()/10),.8);g.myPhysicalDamage(dam,TGT,skillName);playAudio("flshhit6");count++;if(count<hits){T.delayedCall(.2,function(){doit(count);});}}
doit(0);}
$(function(){$NG.window3.on('mouseenter','#pummelId',function(){var MP="10".fontcolor("#00ff00");var CD="6".fontcolor("#ff0000");var hits='';if(Set.Guardian>=6){hits="five times ";}
var a=TTphy((attackFunct()/10),.8,"Pummel");NG.tooltipname.innerHTML="Pummel";NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Pummel your target "+hits+"for "+a[0]+" to "+a[1]+" physical damage. Pummel is activated by stunning your target.<br><br>"+"Effect: Makes you invincible for 2 seconds.";});});function subjugateReady(){g.subjugateStatus=1;g.checkWarriorSkills();clearSubjugate.kill();return;}
function subjugate(){if(my.mp<5||g.subjugateStatus===1||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
clearSubjugate.kill();var skillName="Subjugate";var missing=1+(Math.abs(1-(my.hp/my.maxHp)));var dam=minMax((attackFunct()/5*missing),.8);g.drawMyMp(-5);g.subjugateStatus=1;if(GLB.videoSetting==="High"){animateSubjugate(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);playAudio("flshhit5");g.checkWarriorSkills();}
function animateSubjugate(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+150);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-150);var e1=can('subjugate',5,x2,y2,0,0);T.to(e1,.125,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e1,2,{startAt:{alpha:.2},alpha:0,onComplete:function(){cRem(5,e1);}});}});var e2=can('subjugate',5,x2,y2,0,0);T.to(e2,.125,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e2,.125,{y:y2+300,scaleX:0,scaleY:0,onComplete:function(){cRem(5,e2);}});}});T.delayedCall(.1,animateTremor,[x2-150,600]);}
$(function(){$NG.window3.on('mouseenter','#subjugateId',function(){var MP="5".fontcolor("#00ff00");var missing=1+(Math.abs(1-(my.hp/my.maxHp)));var dam=minMax((attackFunct()/5*missing),1);var a=TTphy(dam,.8,"Subjugate");NG.tooltipname.innerHTML="Subjugate";var s="Cost: "+MP+" Fury<br><br>"+"Subjugate your target for "+a[0]+" to "+a[1]+" physical damage. Subjugate increases its damage as your health value decreases. Subjugate is activated for 8 seconds when a mob dodges your physical attack or when hemorrhage stops ticking.";s+='<BR><BR>Special: Subjugate cannot be dodged.';NG.tooltipmsg.innerHTML=s;});});function decisiveBlowReady(){if(D.getElementById('decisiveblowId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('decisiveblowId',false);BGP('decisiveblowId',"-1000% 0%");refreshdecisiveblow.kill();checkDecisiveBlow();}
function decisiveBlowTimer(){refreshdecisiveblow=T.to('',.1,{repeat:-1,onRepeat:decisiveBlowReady});}
function decisiveBlow(){if(my.mp<15||decisiveBlowStatus===1||btn.d.decisiveblowId===true||my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('decisiveblowId',true);BGP('decisiveblowId',"-1000% -100%");var d=5000;T.delayedCall(d/1000,decisiveBlowTimer);timerTick(D.getElementById('decisiveblowId'),d/1000,'decisiveblowId');beginGlobalCooldown();var skillName="Decisive Blow";var dam=minMax((attackFunct()/2.5),.8);g.drawMyMp(-15);if(GLB.videoSetting==="High"){animateDecisiveBlow(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);playAudio("flshhit3");}
function animateDecisiveBlow(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+150);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-150);var e1=can('decisiveBlow',5,x2,y2,0,0);T.to(e1,.15,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e1,2,{startAt:{alpha:.2},alpha:0,onComplete:function(){cRem(5,e1);}});}});var e2=can('decisiveBlow',5,x2,y2,0,0);T.to(e2,.1,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e2,.1,{y:y2+300,scaleX:0,scaleY:0,onComplete:function(){cRem(5,e2);}});}});function tremor(count){T.delayedCall(.1,animateTremor,[x2-150,600]);count++;if(count<5){T.delayedCall(.05,function(){tremor(count);});}}
tremor(0);}
$(function(){$NG.window3.on('mouseenter','#decisiveblowId',function(){var MP="15".fontcolor("#00ff00");var CD="5".fontcolor("#ff0000");var a=TTphy((attackFunct()/2.5),.8,"Decisive Blow");NG.tooltipname.innerHTML="Decisive Blow";NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Decisively strike your target for "+a[0]+" to "+a[1]+" physical damage. Decisive Blow is activated when your current target is below 40% health.";});});function absorbSpellExpire(){absorbSpellStatus=1;g.checkWarriorSkills();}
function absorbSpellReady(){if(D.getElementById('absorbspellId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('absorbspellId',false);BGP('absorbspellId',"-1100% 0%");g.checkWarriorSkills();refreshAbsorbSpell.kill();}
function absorbSpellTimer(){refreshAbsorbSpell=T.to('',.1,{repeat:-1,onRepeat:absorbSpellReady});}
function absorbSpell(){if(my.mp<15||btn.d.absorbspellId===true||my.level<20){return;}
if(checkBashFear()===true){return;}
setD('absorbspellId',true);BGP('absorbspellId',"-1100% -100%");var d=24000;if(my.talent7>=20){d=12000;}
T.delayedCall(d/1000,absorbSpellTimer);timerTick(D.getElementById('absorbspellId'),d/1000,'absorbspellId');T.delayedCall(3,absorbSpellExpire);g.drawMyMp(-15);beginGlobalCooldown();var skillName="Absorb Spell";if(my.talent7>0){skillName="Reflect";}
absorbSpellStatus=0;Chat(("You are encased in a translucent shell."),3);var buffId="absorbSpellIcon";var duration=3000;var spriteX=-352;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateAbsorbSpell();}
playAudio("energyshield");}
function animateAbsorbSpell(){var H1=IMG(110,50,1060,1060,'absorbSpell');H1.id='spellAbsorbImage';NG.eWin.appendChild(H1);T.to(H1,3,{rotation:1800,force3D:"auto",ease:ez.lin});T.to(H1,1,{opacity:.8,force3D:"auto",ease:ez.cout,onComplete:function(){T.to(H1,2,{opacity:0,force3D:"auto",ease:ez.xin,onComplete:function(){Remove(H1);}});}});}
$(function(){$NG.window3.on('mouseenter','#absorbspellId',function(){var MP="15".fontcolor("#00ff00");var d='24';if(my.talent7>=20){d='12';}
var n="Absorb Spell";if(my.talent7>0){n="Reflect";}
var CD=d.fontcolor("#ff0000");NG.tooltipname.innerHTML=n;NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"For three seconds you can negate the next spell cast on you and convert its damage to health and fury.";});});function frenziedRampageExpire(){frenziedRampageStatus=1;g.checkWarriorSkills();}
function frenziedRampageDone(){hasteBuff+=500;frenziedRampageHasteStatus=false;CStat();}
function frenziedRampageReady(){if(D.getElementById('frenziedrampageId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('frenziedrampageId',false);g.checkWarriorSkills();refreshfrenziedRampage.kill();}
function frenziedRampageTimer(){refreshfrenziedRampage=T.to('',.1,{repeat:-1,onRepeat:frenziedRampageReady});}
function frenziedRampage(){if(my.mp<25||frenziedRampageStatus===1||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('frenziedrampageId',true);T.delayedCall(phyGlobalTotal()/1000,frenziedRampageTimer);beginGlobalCooldown();frenziedRampageStatus=1;var skillName="Frenzied Rampage";g.drawMyMp(-25);var dam=minMax((attackFunct()/16),.8);if(frenziedRampageHasteStatus===true){hasteBuff+=500;}
hasteBuff-=500;frenziedRampageHasteStatus=true;frenziedRampageDuration.kill();frenziedRampageDuration=T.delayedCall(8,frenziedRampageDone);g.myPhysicalDamage(dam,TGT,skillName);startInvincible(1500);var skillName="Frenzied Rampage";var buffId="frenziedRampageIcon";var duration=8000;var spriteX=-384;frenziedRampageIconTimer.kill();frenziedRampageIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateRampage();}
CStat();playAudio("warriorShout");}
function animateRampage(){flashScreen("#f00",.3,3);function Pgo(interval){var X1=M.random()*(640)-320;var Y1=M.random()*(200)+149;if(X1<0){var X2=-960;}else{var X2=960;}
if(Y1<249){var Y2=-200;}else{var Y2=700;}
var p1=can('redparticle50',5,X1,Y1,1280,200);p1.alpha=.1;T.to(p1,1.5,{y:Y2,x:X2,onComplete:function(){cRem(5,p1);}});if(interval<20){T.delayedCall(interval/1000,function(){Pgo(++interval);});}}
Pgo(10);}
$(function(){$NG.window3.on('mouseenter','#frenziedrampageId',function(){var MP="25".fontcolor("#00ff00");var a=TTphy((attackFunct()/16),.8,"Frenzied Rampage");var multiplier2="50%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Frenzied Rampage";NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br><br>"+"Frenzied Rampage hits your target for "+a[0]+" to "+a[1]+" physical damage. Frenzied Rampage is activated when any mob dies.<br><br>"+"Effect: Makes you invincible for 1.5 seconds and adds "+multiplier2+" haste for 8 seconds.";});});function furiousScorn(){if(my.mp<20||btn.d.furiousscornId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
beginGlobalCooldown();g.drawMyMp(-20);Chat(("You belittle your foes with Furious Scorn."),3);for(var i=0;i<=4;i++){if(mob[i].name){mob[i].furiousScorn=15;var buffId="furiousScornIcon";var duration=0;var spriteX=-448;addMobBuffIcon("Furious Scorn",i,buffId,duration,spriteX);}}
g.checkWarriorSkills();if(GLB.videoSetting==="High"){animateDebuff();}
playAudio("warCry");}
function animateDebuff(color){if(!color){color="blue";}
for(var i=0;i<40;i++){var X1=(M.random()*(1280));var Y1=(M.random()*(50)+400);var sX=(M.random()*(20)+5);var Y2;if(sX<10){Y2=515;}else if(sX>=10&&sX<15){Y2=540;}else if(sX>=15&&sX<20){Y2=580;}else{Y2=615;}
if(sX<15){var p1=can(color+"particle50",7,X1,Y1,sX,sX);debuffPart(p1,7,.2,Y2);}else{var p1=can(color+"particle50",5,X1,Y1,sX,sX);debuffPart(p1,5,.4,Y2);}}}
function debuffPart(e,plane,scale,Y2){T.to(e,M.random()*(1)+.5,{y:Y2,scaleX:scale,scaleY:scale,onComplete:function(){cRem(plane,e);}});}
$(function(){$NG.window3.on('mouseenter','#furiousscornId',function(){var MP="20".fontcolor("#00ff00");NG.tooltipname.innerHTML="Furious Scorn";NG.tooltipmsg.innerHTML="Cost: "+MP+" Fury<br><br>"+"Furious Scorn discourages your opponents and debuffs their strength by "+green("15%")+".";});});function enrageReady(){if(D.getElementById('enrageId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('enrageId',false);BGP('enrageId',"-1300% 0%");g.checkWarriorSkills();refreshenrage.kill();}
function enrageTimer(){refreshenrage=T.to('',.1,{repeat:-1,onRepeat:enrageReady});}
function enrage(){if(btn.d.enrageId===true||my.level<5){return;}
if(checkBashFear()===true){return;}
setD('enrageId',true);BGP('enrageId',"-1300% -100%");T.delayedCall(30,enrageTimer);timerTick(D.getElementById('enrageId'),30000/1000,'enrageId');g.drawMyMp(40);Chat(("You unleash a torrent of unbridled anger."),3);g.checkWarriorSkills();flashScreen("#f00",.4,5);playAudio("warriorShout");if(my.talent10>0){warAmpDamage=true;}
if(my.talent10>=20){triggerFrenzy(4000);}}
function triggerFrenzy(duration){var d=frenzyRate/1000;myAttack.kill();myAttack=T.delayedCall(d,getDamage);myAttack2.kill();myAttack2=T.delayedCall(d,getDamage2);autoAttackTimer(d);myFrenzyTimer.kill();myFrenzy=true;myFrenzyTimer=T.delayedCall(duration/1000,function(){myFrenzy=false;});}
$(function(){$NG.window3.on('mouseenter','#enrageId',function(){var CD="30".fontcolor("#ff0000");NG.tooltipname.innerHTML="Enrage";var s="Cooldown: "+CD+" Seconds<br><br>"+"Enrage instantly generates 40 Fury.";if(my.talent10>=1){s+="<BR><BR>After using enrage your next attack is amplified by "+green(talent10()*10)+" percent.";}
if(my.talent10>=20){s+="<BR><BR>Effect: Enrage triggers frenzy.";}
NG.tooltipmsg.innerHTML=s;});});$(function(){$NG.window3.on('mouseenter','#triageId',function(){var foo="25".fontcolor("#00ff00");var CD="60".fontcolor("#ff0000");NG.tooltipname.innerHTML="Triage";NG.tooltipmsg.innerHTML="Cost: "+foo+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"A surge of adrenaline heals your wounds for a varying percentage of your maximum health every second for 15 seconds. The percentage healed increases as your current health value decreases.";});});function triageTick(){var newMax=my.maxHp;var x=my.hp/newMax;if(x>.8){g.popupHeal(M.ceil(newMax*.01));}
if(x>.6&&x<=.8){g.popupHeal(M.ceil(newMax*.02));}
if(x>.4&&x<=.6){g.popupHeal(M.ceil(newMax*.03));}
if(x>.2&&x<=.4){g.popupHeal(M.ceil(newMax*.05));}
if(x<=.2){g.popupHeal(M.ceil(newMax*.06));}
triageTickCount+=1;if(triageTickCount===15){triageInterval.kill();}}
function triageReady(){if(D.getElementById('triageId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('triageId',false);BGP('triageId',"-1500% 0%");g.checkWarriorSkills();refreshtriage.kill();}
function triageTimer(){refreshtriage=T.to('',.1,{repeat:-1,onRepeat:triageReady});}
function triage(){if(my.mp<25||btn.d.triageId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
setD('triageId',true);BGP('triageId',"-1500% -100%");T.delayedCall(60,triageTimer);timerTick(D.getElementById('triageId'),60000/1000,'triageId');g.drawMyMp(-25);beginGlobalCooldown();triageTickCount=0;triageInterval=T.to('',1,{repeat:-1,onRepeat:triageTick});Chat(("A surge of adrenaline heals your wounds."),3);g.checkWarriorSkills();var skillName="Triage";var buffId="triageIcon";var duration=15000;var spriteX=-480;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateHealing("yellow");playAudio("spellCastHeal2");}
function bulwarkExpire(){bulwarkStatus=false;CStat();}
function bulwarkReady(){if(D.getElementById('bulwarkId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('bulwarkId',false);BGP('bulwarkId',"-1600% 0%");g.checkWarriorSkills();refreshbulwark.kill();}
function bulwarkTimer(){refreshbulwark=T.to('',.1,{repeat:-1,onRepeat:bulwarkReady});}
function bulwark(){if(my.mp<15||btn.d.bulwarkId===true||my.level<28){return;}
if(checkBashFear()===true){return;}
setD('bulwarkId',true);BGP('bulwarkId',"-1600% -100%");T.delayedCall(60,bulwarkTimer);timerTick(D.getElementById('bulwarkId'),60000/1000,'bulwarkId');g.drawMyMp(-15);beginGlobalCooldown();Chat(("You are surrounded by an impregnable wall."),3);var d=15000;if(my.talent3>=20){d+=5000;}
bulwarkTimeout=T.delayedCall(d/1000,bulwarkExpire);bulwarkStatus=true;var skillName="Bulwark";var buffId="bulwarkIcon";var duration=d;var spriteX=-512;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateBulwark();}
playAudio("spellDoneBuff");}
function animateBulwark(){flashScreen("#00f",.3,2);var e1=can('bulwark',5,418,227,444,500,true);T.to(e1,3,{y:667,alpha:0,scaleX:.5,scaleY:.5,onComplete:function(){cRem(5,e1);}});animateBuffRings();}
$(function(){$NG.window3.on('mouseenter','#bulwarkId',function(){var foo="15".fontcolor("#00ff00");var value=40+talent3();var d2=15;if(my.talent3>=20){d2=20;}
var d="<span color='green'>"+value+"%</span>";var CD="60".fontcolor("#ff0000");NG.tooltipname.innerHTML="Bulwark";NG.tooltipmsg.innerHTML="Cost: "+foo+" Fury<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Assume a defensive position for "+d2+" seconds. Bulwark reduces all damage by "+d+".";});});function intrepidMightActive(){return fearStatus===0||rootStatus===0||bashStatus===0;}
function checkIntrepidMight(){if(my.job==="Warrior"){if(my.level>=24){if(btn.d.intrepidmightId===true){BGP('intrepidmightId',"-1700% -100%");}else{if(intrepidMightActive()){BGP('intrepidmightId',"-1700% 0%");}else{BGP('intrepidmightId',"-1700% -300%");}}}}}
function intrepidMightReady(){if(D.getElementById('intrepidmightId').textContent!==''){return;}
refreshintrepidMight.kill();setD('intrepidmightId',false);checkIntrepidMight();}
function intrepidMightTimer(){refreshintrepidMight=T.to('',.1,{repeat:-1,onRepeat:intrepidMightReady});}
function intrepidMight(){if(my.hp<=0||paused===true){return;}
if(attackStatus===1){targetRequired();return;}
if(fearStatus===1&&rootStatus===1&&bashStatus===1){return;}
if(!intrepidMightActive()||btn.d.intrepidmightId===true||my.level<24){return;}
setD('intrepidmightId',true);T.delayedCall(12,intrepidMightTimer);timerTick(D.getElementById('intrepidmightId'),12,'intrepidmightId');Chat(("Your indomitable might unleashes!"),3);fearStatus=1;monsterFearCooldown.kill();if(rootStatus===0){setD('runId',false);BGP('runId',"-100% -200%");monsterRootCooldown.kill();}
rootStatus=1;stunCooldown.kill();bashStatus=1;$("#mobBashIcon,#mobFearIcon,#mobRootIcon").remove();lockoutTimer1.kill();globalCooldownEnd2();g.checkWarriorSkills();var skillName="Intrepid Might";var dam=minMax((attackFunct()/7),.8);if(GLB.videoSetting==="High"){animateIntrepidMight(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);startInvincible(1000);if(btn.d.enrageId===false){setCD('enrageId',false);BGP('enrageId',"-1300% 0%");}
if(btn.d.triageId===false){setCD('triageId',false);BGP('triageId',"-1500% 0%");}
if(btn.d.bulwarkId===false){setCD('bulwarkId',false);BGP('bulwarkId',"-1600% 0%");}
playAudio("flshhit4");checkIntrepidMight();}
function animateIntrepidMight(Slot){flashScreen("#fff",.3,.5);var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);T.delayedCall(.1,animateTremor,[x2,1000]);var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+150);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-150);var e1=can('intrepidMight',5,x2,y2,0,0);T.to(e1,.15,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e1,2,{startAt:{alpha:.2},alpha:0,onComplete:function(){cRem(5,e1);}});}});var e2=can('intrepidMight',5,x2,y2,0,0);T.to(e2,.1,{scaleX:1.5,scaleY:1.5,x:x2-300,ease:ez.Qin,onComplete:function(){T.to(e2,.1,{y:y2+300,scaleX:0,scaleY:0,onComplete:function(){cRem(5,e2);}});}});}
$(function(){$NG.window3.on('mouseenter','#intrepidmightId',function(){var CD="12".fontcolor("#ff0000");var a=TTphy((attackFunct()/7),.8,"Intrepid Might");NG.tooltipname.innerHTML="Intrepid Might";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Fearlessly strike your target for "+a[0]+" to "+a[1]+" physical damage. Intrepid Might can only be used while stunned, feared, or rooted.<br><br>"+"Effect: Makes you invincible for 1 second. Breaks stun, fear, and root";});});function shadowStrike(){if(btn.d.shadowstrikeId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();if(GLB.videoSetting==="High"){animateShadowStrike(TGT);}
g.drawMyMp(20);var dam=2+minMax((attackFunct()/16),.5);g.myPhysicalDamage(dam,TGT,"Shadow Strike");startInvincible(100);}
function animateShadowStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e1=can('shadowStrike',5,x2,y2,0,0);T.to(e1,.125,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e1,.125,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}});}
$(function(){$NG.window3.on('mouseenter','#shadowstrikeId',function(){var MP=green("20");var a=TTphy((attackFunct()/16),.5,"Shadow Strike");NG.tooltipname.innerHTML="Shadow Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Technique Points<br><br>"+"Shadow Strike your target for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Makes you invincible for .1 seconds.";});});function lacerateReady(){if(D.getElementById('lacerateId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('lacerateId',false);BGP('lacerateId',"-800% 0%");refreshlacerate.kill();g.checkRogueSkills();}
function lacerateTimer(){refreshlacerate=T.to('',.1,{repeat:-1,onRepeat:lacerateReady});}
function lacerate(){if(my.mp<20||btn.d.lacerateId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(my.talent1>=20){setD('lacerateId',true);BGP('lacerateId',"-800% -100%");T.delayedCall(12,lacerateTimer);timerTick(D.getElementById('lacerateId'),12000/1000,'lacerateId');}
beginGlobalCooldown();var saveMp=my.mp;g.drawMyMp(-my.mp);var skillName="Lacerate";var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((saveMp+foo)/100)+1;var dam=minMax((attackFunct()/10+min70(agiTotal()/6))*multi,.8);Chat((mob[TGT].name+"'s armor is thrashed."),3);var Slot=TGT;var zig=M.ceil(mob[Slot].def*(saveMp/200));if(GLB.videoSetting==="High"){animateLacerate(Slot);}
var hit=g.myPhysicalDamage(dam,Slot,skillName);if(hit!==undefined){if(zig>mob[Slot].lacerate){mob[Slot].lacerate=M.ceil(saveMp/10);}
addMobBuffIcon("Lacerate",Slot,"lacerateIcon",0,-256);bleedTarget(TGT,saveMp/5,1000);}
playAudio("slice");}
function animateLacerate(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e1=can('lacerate',5,x2,y2,0,0);T.to(e1,.125,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e1,.15,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}});var e2=can('lacerate',5,x2-40,y2,0,0);T.to(e2,.125,{scaleY:1,scaleX:1,x:x2-240,ease:ez.Qin,onComplete:function(){T.to(e2,.15,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e2);}});}});var e3=can('lacerate',5,x2+40,y2,0,0);T.to(e3,.125,{scaleX:1,scaleY:1,x:x2-160,ease:ez.Qin,onComplete:function(){T.to(e3,.125,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}});for(var i=0;i<=(~~(M.random()*(3)+2));i++){animateBloodDrop(Slot);}}
$(function(){$NG.window3.on('mouseenter','#lacerateId',function(){var MP="All".fontcolor("#00ff00");var dur=my.mp/5;var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((my.mp+foo)/100)+1;var a=TTphy((attackFunct()/10+min70(agiTotal()/6))*multi,.8,"Lacerate");var value1="2%".fontcolor("#00ff00");var value2="10%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Lacerate";var s="Cost: "+MP+" Technique Points<br>";var CD=green("12");if(my.talent1>=20){s+="Cooldown: "+CD+" Seconds<br>";}
s+="<br>Lacerate your target for "+a[0]+" to "+a[1]+" physical damage. The damage multiplier varies based on your TP value. Target bleeds for "+green("4-20")+" seconds based on combo points.<br><br>"+"Effect: Increases physical damage by "+value1+" to "+value2+". Your finishers will benefit from a passive 20-point technique point bonus on all lacerated targets";if(my.talent1>=20){s+="<br><br>Effect: Leech 20% of Lacerate damage.";}
NG.tooltipmsg.innerHTML=s;});});function evadeReady(){if(D.getElementById('evadeId').textContent!==''){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('evadeId',false);BGP('evadeId',"-1300% 0%");refreshevade.kill();}
function evadeTimer(){refreshevade=T.to('',.1,{repeat:-1,onRepeat:evadeReady});}
function evade(){if(btn.d.evadeId===true||my.level<3){return;}
if(checkBashFear()===true){return;}
setD('evadeId',true);BGP('evadeId',"-1300% -100%");T.delayedCall(40,evadeTimer);timerTick(D.getElementById('evadeId'),40000/1000,'evadeId');Chat(("You vanish into your surroundings."),3);g.drawMyMp(40);addBuffIcon("Evade","evadeIcon",5000,-416);playAudio("fade");evadeStatus=true;function doit2(){evadeStatus=false;}
T.delayedCall(5,doit2);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
animateEvade();}
function animateEvade(color){if(!color){color="black";}
flashScreen("#000",.7,2);function doit(count){var X1=M.random()*(640)-320;if(X1<0){var X2=-960;}else{var X2=960;}
var p1=can(color+'particle50',5,X1,360,1280,200);p1.alpha=.1;T.to(p1,1.5,{y:-100,x:X2,alpha:0,onComplete:function(){cRem(5,p1);}});if(count<30){T.delayedCall(.02,function(){doit(++count);});}}
if(GLB.videoSetting==="High"){doit(0);}}
function evadeBash(){$("#evadeIcon").remove();var Slot=TGT;stunTarget(Slot,5000,-416);playAudio("bash");}
$(function(){$NG.window3.on('mouseenter','#evadeId',function(){var CD="40".fontcolor("#ff0000");var foo="60%".fontcolor("00ff00");var minimum=(M.ceil(35+((weaponSkillCheck()/4.4)/4))+"").fontcolor("#00ff00");var multiplier=(M.ceil(((weaponSkillCheck()/4.4)/2)/10)*100+"%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Evade";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Disappear from combat for five seconds. If you attack while evading, you will ambush your target and stun them for five seconds and inflict an additional "+foo+" damage.<br><br>"+"Effect: Evade makes mobs unable to target you. DoTs will still hit you and cancel Evade.";});});function sonicStrikeReady(){if(D.getElementById('sonicstrikeId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('sonicstrikeId',false);BGP('sonicstrikeId',"-400% 0%");refreshSonicStrike.kill();}
function sonicStrikeTimer(){refreshSonicStrike=T.to('',.1,{repeat:-1,onRepeat:sonicStrikeReady});}
function sonicStrike(){if(btn.d.sonicstrikeId===true||my.level<5){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('sonicstrikeId',true);BGP('sonicstrikeId',"-400% -100%");T.delayedCall(15,sonicStrikeTimer);timerTick(D.getElementById('sonicstrikeId'),15000/1000,'sonicstrikeId');beginGlobalCooldown();var skillName="Sonic Strike";if(Set.Assassin>=6){for(var i=0;i<=4;i++){stunTarget(i,3500,-128);}}
var dam=minMax((attackFunct()/7),.7);Chat((mob[TGT].name+" is disrupted by a sonic wave."),3);var Slot=TGT;if(GLB.videoSetting==="High"){animateSonicStrike(Slot);}
g.myPhysicalDamage(dam,TGT,skillName);interruptTarget(Slot);g.drawMyMp(20);}
function animateSonicStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-75);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-75);animateBurst(Slot);var p3=can('tremorFG',5,x2+75,y2+75,0,0);T.to(p3,.8,{y:y2+50,x:x2-425,scaleX:2.5,scaleY:.5,alpha:0,onComplete:function(){cRem(5,p3);}});var p4=can('tremorBG',7,x2+75,y2+75,0,0);T.to(p4,.8,{y:y2+50,x:x2-425,scaleX:2.5,scaleY:.5,alpha:0,onComplete:function(){cRem(7,p4);}});}
function animateBossExplodeSonicRing(total){var x2=(MOB[2].offsetLeft+mob[2].cX);var y2=(MOB[2].offsetTop+mob[2].cY);function doit(count){var p3=can('tremorFG',5,x2-200,y2-50,0,0,true);T.to(p3,3,{scaleX:8,scaleY:2,alpha:0,onComplete:function(){cRem(5,p3);}});var p4=can('tremorBG',7,x2-200,y2-50,0,0,true);T.to(p4,3,{scaleX:8,scaleY:2,alpha:0,onComplete:function(){cRem(7,p4);}});if(count<total){T.delayedCall(.016,doit,[++count]);}}
doit(0);}
$(function(){$NG.window3.on('mouseenter','#sonicstrikeId',function(){var MP="20".fontcolor("#00ff00");var CD="15".fontcolor("#ff0000");var a=TTphy((attackFunct()/7),.7,"Sonic Strike");NG.tooltipname.innerHTML="Sonic Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Sonic Strike hits for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Causes a sonic wave that disrupts your target's spell.";});});function backstabReady(){if(D.getElementById('backstabId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('backstabId',false);BGP('backstabId',"-900% 0%");refreshbackstab.kill();g.checkRogueSkills();}
function backstabTimer(){refreshbackstab=T.to('',.1,{repeat:-1,onRepeat:backstabReady});}
function backstab(){if(my.mp<20||btn.d.backstabId===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('backstabId',true);BGP('backstabId',"-900% -100%");T.delayedCall(15,backstabTimer);timerTick(D.getElementById('backstabId'),15000/1000,'backstabId');beginGlobalCooldown();var Slot=TGT;var savedMp=my.mp;g.drawMyMp(-savedMp);function doit(){if(!mob[Slot].name){return;}
var skillName="Backstab";var foo=0;if(mob[Slot].lacerate>0){foo=20;}
if(P.eq[12].type==="pierced"){foo+=20;}
var multi=((savedMp+foo)/100)+1;var dam=minMax((attackFunct()/2+min70(agiTotal()/2))*multi,.8);if(GLB.videoSetting==="High"){animateBackstab(Slot);}
g.myPhysicalDamage(dam,Slot,skillName);playAudio("flshhit3");}
doit();if(my.talent6>=20){T.delayedCall(.5,function(){doit();});}}
function animateBackstab(Slot){if(!mob[Slot].name){return;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);animateBurst(Slot,400,'burstRed');for(var i=0;i<=6;i++){animateBloodDrop(Slot);}}
$(function(){$NG.window3.on('mouseenter','#backstabId',function(){var MP="All".fontcolor("#00ff00");var CD="15".fontcolor("#ff0000");var foo=0;if(mob[TGT].lacerate>0){foo=20;}
if(P.eq[12].type==="pierced"){foo+=20;}
var multi=((my.mp+foo)/100)+1;var a=TTphy((attackFunct()/2+min70(agiTotal()/2))*multi,.8,"Backstab");NG.tooltipname.innerHTML="Backstab";NG.tooltipmsg.innerHTML="Cost: "+MP+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Backstab your target for "+a[0]+" to "+a[1]+" physical damage. The minimum damage and multiplier varies based on your TP value. Agility affects your minimum damage. If you have a piercing weapon in your main hand, all finishers will benefit from a passive 20-point technique point bonus.";});});function coldBloodReady(){if(D.getElementById('coldbloodId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
$NG.coldbloodId.removeClass("disabled").css({backgroundPosition:"-1400% 0"});setD('coldbloodId',false);BGP('coldbloodId',"-1400% 0%");refreshColdBlood.kill();}
function coldBloodTimer(){refreshColdBlood=T.to('',.1,{repeat:-1,onRepeat:coldBloodReady});}
function coldBlood(){if(btn.d.coldbloodId===true||my.level<9){return;}
if(checkBashFear()===true){return;}
setD('coldbloodId',true);BGP('coldbloodId',"-1400% -100%");var d=(60000-((talent7()*.75)*1000));T.delayedCall(d/1000,coldBloodTimer);timerTick(D.getElementById('coldbloodId'),d/1000,'coldbloodId');Chat(("Your weapons glimmer with darkness."),3);g.coldBloodBonus=1;addBuffIcon("Cold Blood","coldBloodIcon",0,-448);if(GLB.videoSetting==="High"){animateColdBlood();}
playAudio("chillblood");}
function animateColdBlood(){var H1=IMG(968,307,320,320,'coldBlood');NG.eWin.appendChild(H1);var x2=(MOB[TGT].offsetLeft+mob[TGT].cX-160);var y2=(MOB[TGT].offsetTop+mob[TGT].cY-160);function doIt(x2,y2){T.to(H1,.1,{startAt:{rotation:~~(M.random()*(360))},rotation:(M.random()*(360)),ease:ez.lin});if(g.coldBloodBonus===1){var x2=(MOB[TGT].offsetLeft+mob[TGT].cX-160);var y2=(MOB[TGT].offsetTop+mob[TGT].cY-160);T.delayedCall(.1,function(){doIt(x2,y2);});}else{T.to(H1,.33,{force3D:"auto",opacity:0,top:307+160,left:968+160,width:0,height:0,onComplete:function(){Remove(H1);}});}}
doIt(x2,y2);}
$(function(){$NG.window3.on('mouseenter','#coldbloodId',function(){var CD="60".fontcolor("#ff0000");var minimum="100%".fontcolor("#00ff00");var minDam=(M.ceil(((agiTotal())/3))+"").fontcolor("#00ff00");var maxDam=(M.ceil(((agiTotal())/3)+my.level/3)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Cold Blood";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Your next skill-based attack has a "+minimum+" chance of a critical hit and you absorb "+minDam+" to "+maxDam+" health.";});});function flashPowderReady(){if(D.getElementById('flashpowderId').textContent!==''){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('flashpowderId',false);BGP('flashpowderId',"-1500% 0%");refreshflashPowder.kill();}
function flashPowderTimer(){refreshflashPowder=T.to('',.1,{repeat:-1,onRepeat:flashPowderReady});}
function flashPowder(){if(btn.d.flashpowderId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
setD('flashpowderId',true);BGP('flashpowderId',"-1500% -100%");T.delayedCall(15,flashPowderTimer);timerTick(D.getElementById('flashpowderId'),15000/1000,'flashpowderId');Chat((mob[TGT].name+" is completely blinded by a burst of flash powder."),3);var Slot=TGT;if(my.talent10>=20){var atk=attackFunct();animateFireball(TGT,true);playAudio("spellDoneBoom");for(var i=0;i<=4;i++){if(i+1===Slot||i===Slot||i-1===Slot){if(mob[i].name){var dam=minMax((atk/1.3),.75);g.myMagicDamage("fire",dam,i,checkCrit()," is ignited by burning flash powder");interruptTarget(i);var sleepDuration=M.random()*(25000)+25000;if(mob[i].level>my.level){sleepDuration-=(M.pow((mob[i].level-my.level),1.25));}
if(mob[i].rare===3){sleepDuration=1500;}
sleepTarget(i,sleepDuration,"Flash Powder",-480);animateBlind(i,sleepDuration);}}}}else{interruptTarget(Slot);var sleepDuration=M.random()*(25000)+25000;if(mob[Slot].level>my.level){sleepDuration-=(M.pow((mob[Slot].level-my.level),1.25));}
if(mob[Slot].rare===3){sleepDuration=1500;}
sleepTarget(Slot,sleepDuration,"Flash Powder",-480);animateBlind(Slot,sleepDuration);}
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
playAudio("cloak");}
function sleepTarget(Slot,d,spellName,spriteX){interruptTarget(Slot);stopMob(Slot);setMobOpacity(Slot);mob[Slot].sleepStatus=true;mob[Slot].sleepTimer.kill();mob[Slot].sleepTimer=T.delayedCall(d/1000,function(){mob[Slot].sleepStatus=false;});addMobBuffIcon(spellName,Slot,"sleepIcon",d,spriteX);}
$(function(){$NG.window3.on('mouseenter','#flashpowderId',function(){var CD="15".fontcolor("#ff0000");var minimum=(M.ceil(1+((weaponSkillCheck()/4.4)/3))+"").fontcolor("#00ff00");var multiplier="50%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Flash Powder";var a=TTmag((attackFunct()/1.3),.75,"fire","Flash Powder");var s="Cooldown: "+CD+" Seconds<br><br>"+"Blind your target by throwing flash powder in their eyes. They lose track of you, but if you attack them again the effect will wear off.";if(my.talent10>=20){s+="<br><br>Flash powder ignites for "+a[0]+" to "+a[1]+" fire damage.";}
NG.tooltipmsg.innerHTML=s;});});function hyperStrike(){if(btn.d.hyperstrikeId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(hyperStrikeValue<0){cooldownDurationBuff-=hyperStrikeValue;}
hyperStrikeValue=-300-M.round((talent9()*.666)*10);cooldownDurationBuff+=hyperStrikeValue;beginGlobalCooldown();var dam=minMax((attackFunct()/24),.7);if(GLB.videoSetting==="High"){animateHyperStrike();}
g.myPhysicalDamage(dam,TGT,'Hyper Strike');Chat(("You feel your pulse quicken."),3);var d=30000;hyperStrikeTimeout.kill();hyperStrikeTimeout=T.delayedCall(d/1000,function(){hyperStrikeExpire();});var spriteX=-160;hasteIconTimer.kill();hasteIconTimer=T.delayedCall(d/1000,function(){removeIcon("hasteIcon");});addBuffIcon("Hyper Strike","hasteIcon",d,spriteX);playAudio("quickness",0,1000,.7);CStat();g.drawMyMp(20);}
function animateHyperStrike(){flashScreen("#fff",.3,1);function Pgo(interval){var X1=M.random()*(640)-320;if(X1<0){var X2=-960;}else{var X2=960;}
var p1=can('whiteparticle50',5,X1,560,1280,200);p1.alpha=.1;T.to(p1,1.5,{x:X2,y:1000,scaleY:0,alpha:0,onComplete:function(){cRem(5,p1);}});if(interval<30){T.delayedCall(.012,function(){Pgo(++interval);});}}
Pgo(10);}
$(function(){$NG.window3.on('mouseenter','#hyperstrikeId',function(){var MP="20".fontcolor("#00ff00");var a=TTphy((attackFunct()/24),.7,"Hyper Strike");var minimum="30%".fontcolor("#00ff00");var duration="30".fontcolor("#00ff00");NG.tooltipname.innerHTML="Hyper Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Technique Points<br><br>"+"Hyper Strike hits for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Buffs your skill haste "+minimum+" for "+duration+" seconds.";});});function hyperStrikeExpire(){cooldownDurationBuff-=hyperStrikeValue;hyperStrikeValue=0;hyperStrikeTimeout.kill();CStat();}
function illusiveMistReset(){illusiveMistStatus=1;}
function illusiveMistReady(){if(D.getElementById('illusivemistId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('illusivemistId',false);BGP('illusivemistId',"-1600% 0%");refreshillusiveMist.kill();}
function illusiveMistTimer(){refreshillusiveMist=T.to('',.1,{repeat:-1,onRepeat:illusiveMistReady});}
function illusiveMist(){if(btn.d.illusivemistId===true||my.level<15){return;}
if(checkBashFear()===true){return;}
setD('illusivemistId',true);BGP('illusivemistId',"-1600% -100%");T.delayedCall(24,illusiveMistTimer);timerTick(D.getElementById('illusivemistId'),24000/1000,'illusivemistId');T.delayedCall(12,illusiveMistReset);Chat(("You dissipate into an ethereal mist."),3);illusiveMistStatus=0;var skillName="Illusive Mist";var buffId="illusiveMistIcon";var duration=12000;var spriteX=-512;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateIllusiveMist();}
playAudio("fade");}
function animateIllusiveMist(){function Pgo(interval){var X1=M.random()*(640)-320;var Y1=500;var X2=M.random()*(1280);var p1=can('purpleparticle50',5,X1,Y1,1280,300);p1.alpha=.1;T.to(p1,1,{x:X2,y:250,alpha:0,scaleX:.25,scaleY:.25,alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,p1);}});if(interval<40){T.delayedCall(interval/1000,function(){Pgo(++interval);});}}
Pgo(10);}
$(function(){$NG.window3.on('mouseenter','#illusivemistId',function(){var MP="12".fontcolor("#00ff00");var CD="24".fontcolor("#ff0000");var multiplier="50%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Illusive Mist";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Your outline shifts making you difficult to attack. All damage is reduced by "+multiplier+" for "+MP+" seconds.";});});function staggerShotReady(){if(D.getElementById('staggershotId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('staggershotId',false);BGP('staggershotId',"-1000% 0%");refreshstaggerShot.kill();g.checkRogueSkills();}
function staggerShotTimer(){refreshstaggerShot=T.to('',.1,{repeat:-1,onRepeat:staggerShotReady});}
function staggerShot(){if(my.mp<20||btn.d.staggershotId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('staggershotId',true);BGP('staggershotId',"-1000% -100%");T.delayedCall(25,staggerShotTimer);timerTick(D.getElementById('staggershotId'),25000/1000,'staggershotId');beginGlobalCooldown();var skillName="Stagger Shot";var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((my.mp+foo)/100+min70(agiTotal()/4))+1;var dam=minMax((attackFunct()/10)*multi,.7);var stunDuration=(my.mp*50)+1500;g.drawMyMp(-my.mp);var Slot=TGT;if(GLB.videoSetting==="High"){animateLineNova(Slot);}
var hit=g.myPhysicalDamage(dam,TGT,skillName);if(hit!==undefined){stunTarget(Slot,stunDuration,-320);playAudio("flshhit4");}}
function animateLineNova(Slot,img){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-200);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-200);if(!img){img="lineNovaWhite";}
function doit(count){var e1=can(img,5,x2,y2,400,400,true);T.to(e1,.15,{alpha:0,scaleX:.25,scaleY:.25,ease:ez.sout,onComplete:function(){cRem(5,e1);}});count++;if(count<3){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
$(function(){$NG.window3.on('mouseenter','#staggershotId',function(){var MP="All".fontcolor("#00ff00");var CD="25".fontcolor("#ff0000");var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((my.mp+foo)/100+min70(agiTotal()/4))+1;var a=TTphy((attackFunct()/10)*multi,.7,"Stagger Shot");var value2=((my.mp*50)+1500)/1000;var value1=(value2+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Stagger Shot";NG.tooltipmsg.innerHTML="Cost: "+MP+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Stagger Shot your target for "+a[0]+" to "+a[1]+" physical damage. The minimum damage and stun duration varies based on your TP value.<br><br>"+"Effect: Stun your target for "+value1+" seconds.";});});function hideRogue(){if(checkBashFear()===true||mobsFound()===true){return;}
if(hideStatus===1){$("#roguehideId").css({backgroundPosition:"-200% -300%"});Chat(("You disappear into the shadows."),3);setCurtainColor("#001");T.to(spellCurtain,1,{alpha:.5,ease:ez.Qin});hideStatus=0;}else{$("#roguehideId").css({backgroundPosition:"-200% -100%"});Chat(("You emerge from the shadows."),3);T.to(spellCurtain,.5,{alpha:0,ease:ez.Qin});hideStatus=1;}}
$(function(){$NG.window3.on('mouseenter','#roguehideId',function(){var bon=60;if(my.race==="Halfling"){bon+=30;}
NG.tooltipname.innerHTML="Hide";NG.tooltipmsg.innerHTML="Attacking while hidden will increase your initial attacks' damage by "+green(bon+"%")+" and stun your target for 5 seconds.";});});function widowStrike(){if(btn.d.widowstrikeId===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
beginGlobalCooldown();if(g.autoAttackStatus===1&&Lmy.autoAttackOption==="On"){toggleAutoAttackStatus();}
var skillName="Venom Strike";var Slot=TGT;g.drawMyMp(20);Chat((mob[TGT].name+" is inflicted by a venomous plague."),3);var damage=minMax(~~(attackFunct()/16),.9);mob[Slot].widowStrikeTickCount=0;mob[Slot].widowStrikeDamage=damage;mob[Slot].widowStrikeInterval.kill();mob[Slot].widowStrikeInterval=T.to('',1,{repeat:-1,onRepeat:function(){widowStrikeTick(Slot);}});if(mob[Slot].thornsActive===0){Chat(("You are pierced by thorns for "+M.ceil(mob[Slot].level/10)+" damage."),3);var dam2=M.ceil(mob[Slot].level/10);my.hp-=dam2;battleDamageTaken+=dam2;if(my.hp<=0){Chat(("You have been slain by a shield of thorns!").fontcolor("ff0000"));monsterKilledMe();}}
if(mob[Slot].lavaShieldActive===0){Chat(("You are burned by lava for "+M.ceil(mob[Slot].level/6)+" damage."),3);var dam1=M.ceil(mob[Slot].level/6);my.hp-=dam1;battleDamageTaken+=dam1;if(my.hp<=0){Chat(("You have been slain by a shield of lava!").fontcolor("ff0000"));monsterKilledMe();}}
addMobBuffIcon("Widow Strike",Slot,"widowStrikeIcon",24000,-192);if(GLB.videoSetting==="High"){animateWidowStrike(Slot);}
playAudio("stab");}
function widowStrikeTick(Slot){if(mob[Slot].name===""){mob[Slot].widowStrikeInterval.kill();mob[Slot].widowStrikeTickCount=0;return;}
if(GLB.videoSetting==="High"){animatePoisonDrop(Slot);}
g.myDotDamage(mob[Slot].widowStrikeDamage,Slot,"poison","Widow Strike");mob[Slot].widowStrikeTickCount+=1;if(mob[Slot].widowStrikeTickCount===24){mob[Slot].widowStrikeInterval.kill();mob[Slot].widowStrikeTickCount=0;}}
function animateWidowStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e1=can('widowStrike',5,x2,y2,0,0);T.to(e1,.1,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e1,.3,{scaleX:0,scaleY:0,x:x2-200,y:y2+200,alpha:0,onComplete:function(){cRem(5,e1);}});}});animateFlyingPoison(Slot,8);}
function flipImg(e,chance){if(chance===undefined){chance=.5;}
if(M.random()<chance){e.scaleX=e.scaleX*-1;}}
function animateFlyingPoison(Slot,total){if(Slot===undefined){Slot=TGT;}
if(mob[Slot].name===''){return;}
if(!total){total=1;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-50);for(var i=0;i<total;i++){var p4=can('poisonSpray',7,x2,y2,25,25,true);flipImg(p4);var goX=x2+M.random()*(420);var goY=M.random()*(55)+663;T.to(p4,.2,{y:goY,x:goX});fadePoison(p4);}}
function fadePoison(e){var val=3;if(e.scaleX<0){val=-3;}
T.to(e,8+(M.random()*(6)),{scaleX:val,scaleY:1.5,alpha:0,onComplete:function(){cRem(7,e);}});}
$(function(){$NG.window3.on('mouseenter','#widowstrikeId',function(){var MP="20".fontcolor("#00ff00");var a=TTdot(~~(attackFunct()/16),.9,"poison","Widow Strike");NG.tooltipname.innerHTML="Widow Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Technique Points<br><br>"+"Widow Strike inflicts "+a[0]+" to "+a[1]+" poison damage every second for 24 seconds. Damage is based on your weapon skill and your weapon's damage.<br><br>"+"Effect: Prevents all passive regeneration effects.";});});function lobotomizeReady(){if(D.getElementById('lobotomizeId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('lobotomizeId',false);BGP('lobotomizeId',"-1100% 0%");refreshlobotomize.kill();g.checkRogueSkills();}
function lobotomizeTimer(){refreshlobotomize=T.to('',.1,{repeat:-1,onRepeat:lobotomizeReady});}
function lobotomize(){if(my.mp<20||btn.d.lobotomizeId===true||my.level<24){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('lobotomizeId',true);BGP('lobotomizeId',"-1100% -100%");T.delayedCall(22,lobotomizeTimer);timerTick(D.getElementById('lobotomizeId'),22000/1000,'lobotomizeId');beginGlobalCooldown();var skillName="Lobotomize";var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((my.mp+foo)/100+min70(agiTotal()/5))+1;var dam=minMax((attackFunct()/7)*multi,.8);var silenceDuration=2000+(my.mp*50);if(mob[TGT].dauntless){silenceDuration*=dauntlessReduction();}
g.drawMyMp(-my.mp);Chat((mob[TGT].name+" is beset by a torpid haze."),3);var Slot=TGT;if(GLB.videoSetting==="High"){animateRings(Slot,6);}
var hit=g.myPhysicalDamage(dam,TGT,skillName);if(hit!==undefined){silenceTarget(Slot,silenceDuration,-352);}
playAudio("handofgod");}
function animateRings(Slot,total){if(!total){total=1;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var xHeight=mob[Slot].imageHeight;var y2=(MOB[Slot].offsetTop+xHeight);var xWidth=mob[Slot].imageWidth/2+40;function doIt(count){var p5=can('tremorFG',5,x2-xWidth,y2-50,xWidth*2,50);T.to(p5,.5,{y:y2-250,onComplete:function(){cRem(5,p5);}});var p4=can('tremorBG',7,x2-xWidth,y2-50,xWidth*2,50);T.to(p4,.5,{y:y2-250,onComplete:function(){cRem(7,p4);}});count++;if(count<total){T.delayedCall(.05,function(){doIt(count);})}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#lobotomizeId',function(){var MP="All".fontcolor("#00ff00");var CD="22".fontcolor("#ff0000");var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var multi=((my.mp+foo)/100+min70(agiTotal()/5))+1;var a=TTphy((attackFunct()/7)*multi,.8,"Lobotomize");var value1=(2000+(my.mp*50))/1000+"".fontcolor("#00ff00");NG.tooltipname.innerHTML="Lobotomize";NG.tooltipmsg.innerHTML="Cost: "+MP+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Lobotomize your target for "+a[0]+" to "+a[1]+" physical damage. The minimum damage and silence duration varies based on your TP value.<br><br>"+"Effect: Silences your target for "+value1+" seconds.";});});function ancientWillReady(){if(D.getElementById('ancientwillId').textContent!==''){return;}
if(castingGlobal==0){return;}
setD('ancientwillId',false);BGP('ancientwillId',"-1700% 0%");refreshancientwill.kill();ancientWillStatus=false;g.checkRogueSkills();}
function ancientWillTimer2(){refreshancientwill=T.to('',.1,{repeat:-1,onRepeat:ancientWillReady});}
function ancientWill(){if(fearStatus===1&&rootStatus===1&&bashStatus===1||paused===true){return;}
if(btn.d.ancientwillId===true||my.level<28){return;}
setD('ancientwillId',true);BGP('ancientwillId',"-1700% -100%");ancientWillStatus=true;ancientWillTimer.kill();ancientWillTimer=T.delayedCall(20,ancientWillTimer2);timerTick(D.getElementById('ancientwillId'),20000/1000,'ancientwillId');Chat(("An ancient force animates your spirit."),3);if(fearStatus===0||rootStatus===0||bashStatus===0){mirageStrikeStatus+=2;if(mirageStrikeStatus>5){mirageStrikeStatus=5;}
addBuffIcon("Mirage Strike","mirageStrikeIcon",0,-224);var newBuff1=$('<div>').css({width:32,height:32,color:"#0f0",position:"absolute",fontSize:14,top:22,left:2,padding:0,background:"transparent",zIndex:76}).attr("id","mirageStrikeCount").addClass("blackOutline3").appendTo("#mirageStrikeIcon").html(mirageStrikeStatus);g.drawMyMp(40);}
fearStatus=1;monsterFearCooldown.kill();if(rootStatus===0){setD('runId',false);BGP('runId',"-100% -200%");monsterRootCooldown.kill();}
rootStatus=1;stunCooldown.kill();bashStatus=1;$("#mobBashIcon,#mobFearIcon,#mobRootIcon").remove();lockoutTimer1.kill();globalCooldownEnd2();g.checkRogueSkills();if(GLB.videoSetting==="High"){animateAncientWill();}
playAudio("cobra");}
function animateAncientWill(){flashScreen("#ffa",.3,1);function doIt(count){var size=(M.random()*(20)+5);var x=M.random()*(1290);var y=M.random()*(50)+497;var p1=can('yellowparticle50',5,x,y,size,size);T.to(p1,.5,{scaleX:0,scaleY:0,x:"+="+(size/2),y:"+="+(50+(size/2)),ease:ez.Qin,onComplete:function(){cRem(5,p1);}});if(count<40){T.delayedCall(.025,function(){doIt(++count);});}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#ancientwillId',function(){var CD="20".fontcolor("#ff0000");var minimum=(M.ceil(1+((weaponSkillCheck()/4.4)/3))+"").fontcolor("#00ff00");var multiplier="50%".fontcolor("#00ff00");var value1="40".fontcolor("#00ff00");NG.tooltipname.innerHTML="Ancient Will";NG.tooltipmsg.innerHTML="Generate: "+value1+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"You are possessed by an ancient presence that breaks you from fear, stun, and root effects. In your moment of desperation you are shielded by two mirages.<br><br>"+"Ancient Will is activated when you are affected by stun, fear, or root.";});});function mirageStrikeReady(){if(D.getElementById('miragestrikeId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('miragestrikeId',false);BGP('miragestrikeId',"-700% 0%");refreshmirageStrike.kill();}
function mirageStrikeTimer(){refreshmirageStrike=T.to('',.1,{repeat:-1,onRepeat:mirageStrikeReady});}
function mirageStrike(){if(btn.d.miragestrikeId===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('miragestrikeId',true);BGP('miragestrikeId',"-700% -100%");var d=15000;if(my.talent4>=20){d-=2000;}
if(Set.Bloodletter>=6){d-=3000;}
T.delayedCall(d/1000,mirageStrikeTimer);timerTick(D.getElementById('miragestrikeId'),d/1000,'miragestrikeId');beginGlobalCooldown();var skillName="Mirage Strike";var dam=minMax((attackFunct()/4),.8);mirageStrikeStatus+=2;if(mirageStrikeStatus>5){mirageStrikeStatus=5;}
var Slot=TGT;if(GLB.videoSetting==="High"){animateMirageStrike(Slot);for(var i=1;i<=mirageStrikeStatus;i++){animateMirageStrike2(Slot);}}
g.myPhysicalDamage(dam,Slot,skillName);Chat("Mirror images appear to defend you.",3);var buffId="mirageStrikeIcon";var duration=0;var spriteX=-224;addBuffIcon(skillName,buffId,duration,spriteX);var newBuff1=$('<div>').css({width:32,height:32,color:"#0f0",position:"absolute",fontSize:14,top:22,left:2,padding:0,background:"transparent",zIndex:76}).attr("id","mirageStrikeCount").addClass("blackOutline3").appendTo("#mirageStrikeIcon").html(mirageStrikeStatus);playAudio("summon");g.drawMyMp(20);}
function animateMirageStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e1=can('mirageStrike',5,x2,y2,0,0);T.to(e1,.1,{scaleY:1,scaleX:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e1,.1,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}});}
function animateMirageStrike2(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var x3=M.random()*(600)-300;var y3=M.random()*(100)-50;var e1=can('mirageStrike',5,x2+x3,y2+y3,0,0);T.to(e1,.1,{scaleX:1,scaleY:1,x:x2-200+x3,ease:ez.Qin,onComplete:function(){T.to(e1,.1,{scaleX:0,scaleY:0,y:y2+200+y3,onComplete:function(){cRem(5,e1);}});}});}
$(function(){$NG.window3.on('mouseenter','#miragestrikeId',function(){var MP="20".fontcolor("#00ff00");var CD=green("15");if(my.talent4>=20){green("13");}
var a=TTphy((attackFunct()/4),.8,"Mirage Strike");NG.tooltipname.innerHTML="Mirage Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Technique Points<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Mirage Strike hits for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Create two mirages that act as decoys in combat. You can have up to five mirages at once. Mirages can absorb physical, magical, and dot-based damage.";});});$(function(){$NG.window3.on('mouseenter','#prowlinggashId',function(){var MP="All".fontcolor("#00ff00");var cooldown=green("30");if(my.talent12>=20){green("12");}
var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var hits=(((my.mp+foo)/20)*1.25);if(my.talent12>=20){hits=M.round(hits*2);}
hits=~~(hits);if(hits===0){hits='';}
hits=green(hits);var multi=((my.mp+foo)/100)+1;var a=TTphy((attackFunct()/8+min70(agiTotal()/3))*multi,.5,"Prowling Gash");NG.tooltipname.innerHTML="Prowling Gash";NG.tooltipmsg.innerHTML="Cooldown: "+cooldown+" Seconds<br>"+"Cost: "+MP+" Technique Points<br><br>"+"Unleash a cone of "+hits+" physical attacks for "+a[0]+" to "+a[1]+" physical damage. The damage varies based on your TP value.";});});function prowlingGashReady(){if(D.getElementById('prowlinggashId').textContent!==''){return;}
if(castingSpell===0){return;}
if(castingGlobal===0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('prowlinggashId',false);BGP('prowlinggashId',"-1200% 0%");refreshprowlingGash.kill();g.checkRogueSkills();}
function prowlingGashTimer(){refreshprowlingGash=T.to('',.1,{repeat:-1,onRepeat:prowlingGashReady});}
function prowlingGash(){if(my.mp<20||btn.d.prowlinggashId===true||my.level<38){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('prowlinggashId',true);BGP('prowlinggashId',"-1200% -100%");var d=30000;if(my.talent12>=20){d=12000;}
T.delayedCall(d/1000,prowlingGashTimer);timerTick(D.getElementById('prowlinggashId'),d/1000,'prowlinggashId');beginGlobalCooldown();var foo=0;if(mob[TGT].lacerate>0){foo=20;}
var savedMP=my.mp;var hits=(((my.mp+foo)/20)*1.25);g.drawMyMp(-savedMP);if(my.talent12>=20){hits=hits*2;}
hits=~~(hits);function doit(count){if(countMobs()===0){return;}
var Slot=selectFlayTarget();playAudio("slice");if(GLB.videoSetting==="High"){animateProwlingGash(Slot);}
var multi=((savedMP+foo)/100)+1;var dam=minMax((attackFunct()/8+min70(agiTotal()/3))*multi,.5);g.myPhysicalDamage(dam,Slot,'Prowling Gash');if(count<hits){T.delayedCall(.125,function(){doit(++count);});}}
doit(1);}
function animateProwlingGash(Slot){if(!mob[Slot].name){return;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+200);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-200);var e1=can('prowlingGash',5,x2,y2,0,0);T.to(e1,.1,{scaleX:2,scaleY:2,x:x2-400,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});var e2=can('prowlingGash',5,x2,y2,0,0);T.to(e2,.1,{scaleX:2,scaleY:2,x:x2-400,ease:ez.Qin,onComplete:function(){T.to(e2,1,{startAt:{alpha:.2},alpha:0,onComplete:function(){cRem(5,e2);}});}});}
function tigerStrike(){if(btn.d.tigerstrikeId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();for(var i=(TGT-1);i<=(TGT+1);i++){if(i>=0){if(mob[i].name){var dam=minMax((attackFunct()/16),.5);if(GLB.videoSetting==="High"){animateTigerStrike(i);}
g.myPhysicalDamage(dam,i,'Tiger Strike');}}}
g.drawMyMp(5);}
function animateTigerStrike(Slot){function doIt(count){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-(150-(count*50)));var e1=can('tigerStrike',5,x2,y2,0,0);T.to(e1,.125,{x:x2-200,scaleX:1,scaleY:1,ease:ez.Qin,onComplete:function(){T.to(e1,.125,{y:y2+200,scaleX:0,scaleY:0,onComplete:function(){cRem(5,e1);}});}});count++;if(count<3){T.delayedCall(.025,function(){doIt(count);});}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#tigerstrikeId',function(){var MP="5".fontcolor("#00ff00");var a=TTphy((attackFunct()/16),.5,"Tiger Strike");NG.tooltipname.innerHTML="Tiger Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Spirit<br><br>"+"Tiger Strike your target and adjacent targets for "+a[0]+" to "+a[1]+" physical damage.";});});function craneKick(){if(my.mp<20||btn.d.cranekickId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();var currentMana=my.mp;var Slot=TGT;function doit(){playAudio("flshhit5");for(var i=(Slot-1);i<=(Slot+1);i++){if(i>=0&&i<=4){if(mob[i].name){if(GLB.videoSetting==="High"){animateCraneKick(i);}
var multi=1+(currentMana/200);var dam=minMax(((attackFunct()/9)*(1+P.eq[11].armor/80))*multi,.7);g.myPhysicalDamage(dam,i,"Crane Kick");}}}}
doit();function doit2(){if(GLB.videoSetting==="High"){animateCraneKick(Slot);}
var multi=1+(currentMana/200);var dam=minMax(((attackFunct()/9)*(1+P.eq[11].armor/80))*multi,.7);g.myPhysicalDamage(dam,Slot,"Crane Kick");}
if(my.talent10>=20){T.delayedCall(.5,function(){doit2();});}
g.drawMyMp(-20);}
function animateCraneKick(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-150);var y2=(MOB[Slot].offsetTop+mob[Slot].cY+150);var e1=can('craneKick',5,x2,y2,0,0);T.to(e1,.15,{scaleY:1.5,scaleX:1.5,y:y2-300,ease:ez.Qin,onComplete:function(){T.to(e1,.1,{scaleX:0,scaleY:0,x:x2+300,onComplete:function(){cRem(5,e1);}});}});}
$(function(){$NG.window3.on('mouseenter','#cranekickId',function(){var MP="20".fontcolor("#00ff00");var multi=1+(my.mp/200);var a=TTphy(((attackFunct()/9)*(1+P.eq[11].armor/80))*multi,.7,"Crane Kick");NG.tooltipname.innerHTML="Crane Kick";NG.tooltipmsg.innerHTML="Cost: "+MP+" Spirit<br><br>"+"Crane Kick hits your target and adjacent targets causing "+a[0]+" to "+a[1]+" physical damage. Damage increases with your current spirit value. Your boots' armor value affects Crane Kick's damage.";});});function feignDeathReady(){if(D.getElementById('feigndeathId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('feigndeathId',false);BGP('feigndeathId',"-1300% 0%");g.checkMonkSkills();refreshfeignDeath.kill();}
function feignDeathTimer(){refreshfeignDeath=T.to('',.1,{repeat:-1,onRepeat:feignDeathReady});}
function feignDeath(){if(my.level<5){return;}
if(btn.d.feigndeathId===true){return;}
if(checkBashFear()===true){return;}
if(mobsFound()===true){setD('feigndeathId',true);BGP('feigndeathId',"-1300% -100%");T.delayedCall(15,feignDeathTimer);timerTick(D.getElementById('feigndeathId'),15000/1000,'feigndeathId');if(M.random()>.55){Chat("You fall to the ground. Convinced of your death, the enemy leaves the battle.");hideStatus=0;escapedFromBattle();return;}else{Chat("You fall to the ground, but nobody is fooled this time.");}}else{if(hideStatus===0){return;}
BGP('feigndeathId',"-1300% -100%");Chat("You feign your death.");hideStatus=0;}
var zit="death_mb";if(my.gender==="Female"){zit="death_fl";}
playAudio(zit);}
$(function(){$NG.window3.on('mouseenter','#feigndeathId',function(){var CD="15".fontcolor("#ff0000");NG.tooltipname.innerHTML="Feign Death";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Slow your heartbeat to a crawl and fall to the ground. Some opponents may be convinced you are actually dead. While feigning your death, you cannot be ambushed.";});});function resetCritBonus(){eagleStrikeStatus=false;CStat();}
function eagleStrikeReady(){if(D.getElementById('eaglestrikeId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
$NG.eaglestrikeId.removeClass("disabled").css({backgroundPosition:"-400% 0"});setD('eaglestrikeId',false);BGP('eaglestrikeId',"-400% 0%");g.checkMonkSkills();refresheagleStrike.kill();return;}
function eagleStrikeTimer(){refresheagleStrike=T.to('',.1,{repeat:-1,onRepeat:eagleStrikeReady});}
function eagleStrike(){if(btn.d.eaglestrikeId===true||my.level<3){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('eaglestrikeId',true);BGP('eaglestrikeId',"-400% -100%");T.delayedCall(12,eagleStrikeTimer);timerTick(D.getElementById('eaglestrikeId'),12000/1000,'eaglestrikeId');beginGlobalCooldown();var Slot=TGT;var skillName="Eagle Strike";var dam=minMax((attackFunct()/10),.9);if(GLB.videoSetting==="High"){animateEagleStrike(Slot);}
var hit=g.myPhysicalDamage(dam,Slot,skillName);if(my.talent1>=20){if(hit!==undefined){playAudio("flshhit3");stunTarget(Slot,3000,'-128px');}}
g.drawMyMp(5);eagleStrikeStatus=true;T.delayedCall(4,resetCritBonus);CStat();var buffId="eagleStrikeIcon";var duration=4000;var spriteX=-128;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function animateEagleStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('whiteLight3',5,x2-200,y2-720,400,400,true);e1.alpha=.2;T.to(e1,.5,{y:y2-175,ease:ez.xout,onComplete:function(){T.to(e1,.25,{scaleX:0,scaleY:0,onComplete:function(){cRem(5,e1);}});}});var p4=can('eagleStrike',5,x2-60,y2-352,0,0,true);T.to(p4,.5,{scaleX:1,scaleY:1,y:"+="+100,ease:ez.xout,onComplete:function(){T.to(p4,.25,{scaleX:0,scaleY:0,onComplete:function(){cRem(5,p4);}});}});animateBurst(Slot);}
$(function(){$NG.window3.on('mouseenter','#eaglestrikeId',function(){var MP="5".fontcolor("#00ff00");var CD="12".fontcolor("#ff0000");var a=TTphy((attackFunct()/10),.9,"Eagle Strike");var value1="50%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Eagle Strike";var s="Generate: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Eagle Strike your target for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Your critical hit rate is increased by "+value1+" for 4 seconds.";if(my.talent1>=20){s+="<br><br>Effect: Stun target for "+green("3")+" seconds.";}
NG.tooltipmsg.innerHTML=s;});});function windmillKickReady(){if(D.getElementById('windmillkickId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('windmillkickId',false);BGP('windmillkickId',"-900% 0%");g.checkMonkSkills();refreshwindmillKick.kill();}
function windmillKickTimer(){refreshwindmillKick=T.to('',.1,{repeat:-1,onRepeat:windmillKickReady});}
function windmillKick(){if(my.mp<25||btn.d.windmillkickId===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
var d=25000;if(Set.Friar>=6){d-=13000;}
setD('windmillkickId',true);BGP('windmillkickId',"-900% -100%");T.delayedCall(d/1000,windmillKickTimer);timerTick(D.getElementById('windmillkickId'),d/1000,'windmillkickId');beginGlobalCooldown();var skillName="Windmill Kick";var dam=minMax((attackFunct()/2.5)*(1+P.eq[11].armor/60),.8);var Slot=TGT;mob[Slot].spellActive.kill();interruptTarget(Slot);if(GLB.videoSetting==="High"){animateWindmillKick(Slot);}
g.myPhysicalDamage(dam,Slot,skillName);g.drawMyMp(-25);playAudio("flshhit4");startInvincible(1000);if(my.talent5>=20){playAudio('novaice');animateNova('frostNova');for(var i=0;i<=4;i++){if(mob[i].name){var dam=minMax(attackFunct()/3,.85);var hit=g.myMagicDamage('cold',dam,i,checkCrit(),"Wave of Frost");if(hit!==undefined){chillTarget(i,7000,-288);}}}}}
function animateWindmillKick(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-150);var y2=670;var p4=can('windmillKick',7,x2-600,y2,1500,0);p4.alpha=.3;T.to(p4,.2,{scaleY:3.5,y:y2-900,ease:ez.Qin,onComplete:function(){T.to(p4,.5,{alpha:0,scaleX:10.5,scaleY:1,x:x2-900,onComplete:function(){cRem(7,p4);}});}});var p3=can('windmillKick',5,x2,y2,300,0);T.to(p3,.2,{scaleY:3.5,y:y2-900,ease:ez.Qin,onComplete:function(){T.to(p3,.5,{alpha:0,scaleY:1,onComplete:function(){cRem(5,p3);}});}});T.delayedCall(.15,animateTremor,[x2+150,600,5]);}
$(function(){$NG.window3.on('mouseenter','#windmillkickId',function(){var MP="25".fontcolor("#00ff00");var CD=25;if(Set.Friar>=6){CD-=13;}
var a=TTphy((attackFunct()/2.5)*(1+P.eq[11].armor/60),.8,"Windmill Kick");var b=TTmag((attackFunct()/3),.85,"cold","Wave of Frost");NG.tooltipname.innerHTML="Windmill Kick";var s="Cost: "+MP+" Spirit<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Windmill Kick hits your target causing "+a[0]+" to "+a[1]+" physical damage. Your boots' armor value affects Windmill Kick's damage.<br><br>";if(my.talent5>=20){s+="A Wave of Frost hits your target for "+b[0]+" to "+b[1]+" cold damage, slowing all targets for seven seconds.<br><br>";}
s+="Effect: Casting targets are interrupted and makes you invincible for 1 second.";NG.tooltipmsg.innerHTML=s;});});function mendReady(){if(D.getElementById('mendId').textContent!==''){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('mendId',false);BGP('mendId',"-1400% 0%");g.checkMonkSkills();refreshmend.kill();}
function mendTimer(){refreshmend=T.to('',.1,{repeat:-1,onRepeat:mendReady});}
function mend(){if(btn.d.mendId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
setD('mendId',true);BGP('mendId',"-1400% -100%");T.delayedCall(30,mendTimer);timerTick(D.getElementById('mendId'),30000/1000,'mendId');var healAmount=M.round(my.maxHp*.25);g.popupHeal(healAmount);Chat(("You mend your wounds."),3);animateHealing('yellow');playAudio("spellCastHeal3");}
$(function(){$NG.window3.on('mouseenter','#mendId',function(){var CD="30".fontcolor("#ff0000");var MP="25%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Mend";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Mend your wounds and recover "+MP+" of your maximum health value.";});});function resetSpeedBonus(){hasteBuff+=333;cheetahStrikeStatus=false;CStat();}
function cheetahStrikeReady(){if(D.getElementById('cheetahstrikeId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cheetahstrikeId',false);BGP('cheetahstrikeId',"-500% 0%");g.checkMonkSkills();refreshcheetahStrike.kill();}
function cheetahStrikeTimer(){refreshcheetahStrike=T.to('',.1,{repeat:-1,onRepeat:cheetahStrikeReady});}
function cheetahStrike(){if(btn.d.cheetahstrikeId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('cheetahstrikeId',true);BGP('cheetahstrikeId',"-500% -100%");T.delayedCall(30,cheetahStrikeTimer);timerTick(D.getElementById('cheetahstrikeId'),30000/1000,'cheetahstrikeId');beginGlobalCooldown();var skillName="Cheetah Strike";var dam=minMax((attackFunct()/10),.8);if(GLB.videoSetting==="High"){animateCheetahStrike(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);g.drawMyMp(5);if(cheetahStrikeStatus===true){cheetahStrikeTimeout.kill();hasteBuff+=333;}
cheetahStrikeStatus=true;hasteBuff-=333;cheetahStrikeTimeout.kill();cheetahStrikeTimeout=T.delayedCall(12,resetSpeedBonus);var buffId="hasteIcon";var duration=12000;var spriteX=-160;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);playAudio("quickness",0,1000,.7);CStat();var Slot=TGT;if(my.talent6>=20){playAudio("lightning2");for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(GLB.videoSetting==="High"){animateLightningBlast(i);}
var dam=minMax(attackFunct()/1.5,.6);g.myMagicDamage('lightning',dam,i,checkCrit(),"Thunderbolt");}}}}
function animateCheetahStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var p3=can('whiteLight3',7,x2-1280,y2-720,2560,994);p3.alpha=.1;T.to(p3,.5,{y:y2-636,x:x2-1280,ease:ez.xout,onComplete:function(){cRem(7,p3);}});var p4=can('cheetahStrike',5,x2-75,y2-300,0,0,true);T.to(p4,.5,{y:"+="+100,scaleX:1,scaleY:1,ease:ez.xout,onComplete:function(){T.to(p4,.25,{scaleX:0,scaleY:0,onComplete:function(){cRem(5,p4);}});}});animateBurst(Slot);}
$(function(){$NG.window3.on('mouseenter','#cheetahstrikeId',function(){var MP="5".fontcolor("#00ff00");var CD="30".fontcolor("#ff0000");var haste="33%".fontcolor("#00ff00");var a=TTphy((attackFunct()/10),.8,"Cheetah Strike");var b=TTmag(attackFunct()/1.5,.6,"lightning","Thunderbolt");NG.tooltipname.innerHTML="Cheetah Strike";var s="Generate: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Cheetah Strike your target for "+a[0]+" to "+a[1]+" physical damage.<br><br>";if(my.talent6>=20){s+="A Thunderbolt hits three targets for "+b[0]+" to "+b[1]+" lightning damage.<br><br>";}
s+="Effect: Buff your haste by "+haste+" for 12 seconds.";NG.tooltipmsg.innerHTML=s;});});function ancestralFlurryReady(){if(D.getElementById('ancestralflurryId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('ancestralflurryId',false);BGP('ancestralflurryId',"-1000% 0%");g.checkMonkSkills();refreshancestralFlurry.kill();}
function ancestralFlurryTimer(){refreshancestralFlurry=T.to('',.1,{repeat:-1,onRepeat:ancestralFlurryReady});}
function ancestralFlurry(){if(my.mp<24||btn.d.ancestralflurryId===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('ancestralflurryId',true);BGP('ancestralflurryId',"-1000% -100%");T.delayedCall(35,ancestralFlurryTimer);timerTick(D.getElementById('ancestralflurryId'),35000/1000,'ancestralflurryId');beginGlobalCooldown();var skillName="Ancestral Flurry";var atk=attackFunct();for(var i=180;i<=2160;i+=180){ancestralFlurryTimeout=T.delayedCall(i/1000,function(){if(mob[TGT].name){playAudio("flshhit"+~~(M.random()*(3)+5));if(GLB.videoSetting==="High"){animateAncestralFlurry(TGT);}
var dam=minMax((atk/14),.5);g.myPhysicalDamage(dam,TGT,skillName);}});}
g.drawMyMp(-24);startInvincible(2160);}
function animateAncestralFlurry(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-25);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-25);var ranX=(M.random()*(120)-60)
var ranY=(M.random()*(80)-40);var x3=ranX+x2;var y3=ranY+y2;var e2=can('smoke',5,x3,y3,0,0,true);e2.alpha=.2;T.to(e2,.5,{delay:.2,alpha:0,scaleX:6,scaleY:6,onComplete:function(){cRem(5,e2);}});var e3=can('ancestralFlurry',5,x3,y3,0,0,true);T.to(e3,.125,{scaleY:2,scaleX:2,onComplete:function(){cRem(5,e3);}});var e1=can('ancestralFlurry2',5,x3,y3,0,0,true);T.to(e1,.033,{scaleX:2,scaleY:2,onComplete:function(){cRem(5,e1);}});}
$(function(){$NG.window3.on('mouseenter','#ancestralflurryId',function(){var MP="24".fontcolor("#00ff00");var CD="35".fontcolor("#ff0000");var a=TTphy((attackFunct()/14),.5,"Ancestral Flurry");NG.tooltipname.innerHTML="Ancestral Flurry";NG.tooltipmsg.innerHTML="Cost: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Unleash a 12-hit combo on your target. Each strike hits for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: You are invincible for the duration of the flurry.";});});function stoneFistsReady(){if(D.getElementById('stonefistsId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('stonefistsId',false);BGP('stonefistsId',"-1500% 0%");g.checkMonkSkills();refreshstoneFists.kill();}
function stoneFistsTimer(){refreshstoneFists=T.to('',.1,{repeat:-1,onRepeat:stoneFistsReady});}
function stoneFists(){if(btn.d.stonefistsId===true||my.level<9){return;}
if(checkBashFear()===true){return;}
setD('stonefistsId',true);BGP('stonefistsId',"-1500% -100%");T.delayedCall(20,stoneFistsTimer);timerTick(D.getElementById('stonefistsId'),20000/1000,'stonefistsId');Chat(("You assume a defensive stance, ready to counterattack."),3);function doit(){stoneFistStatus=1;}
stoneFistStatus=0;T.delayedCall(3,doit);if(GLB.videoSetting==="High"){animateStoneFists();}}
function animateStoneFists(){flashScreen("#f22222",.3,1);function doIt(count){var size=(M.random()*(50)+25);var x1=(M.random()*(200)-100+320);var x2=(M.random()*(200)-100+960);var y1=(M.random()*(80)-40+440);var y2=(M.random()*(80)-40+440);var p2=can('redparticle50',5,x1,720,size,size);T.to(p2,1,{x:(x1+(size/2)),y:(y1+25+(size/2)),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p2);}});var p1=can('redparticle50',5,x2,720,size,size);T.to(p1,1.2,{x:(x2+(size/2)),y:(y2+25+(size/2)),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});if(count<25){T.delayedCall(.1,function(){doIt(++count);});}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#stonefistsId',function(){var CD="20".fontcolor("#ff0000");var multiplier=(M.round(my.level/1.5)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Stone Fist Reversal";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Assume a defensive stance for three seconds. All physical attacks are countered for its duration.";});});function resetCobraStrikeBonus(){cobraStrikeBonus=1;}
function cobraStrikeReady(){if(D.getElementById('cobrastrikeId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cobrastrikeId',false);BGP('cobrastrikeId',"-600% 0%");g.checkMonkSkills();refreshcobraStrike.kill();}
function cobraStrikeTimer(){refreshcobraStrike=T.to('',.1,{repeat:-1,onRepeat:cobraStrikeReady});}
function cobraStrike(){if(btn.d.cobrastrikeId===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('cobrastrikeId',true);BGP('cobrastrikeId',"-600% -100%");T.delayedCall(20,cobraStrikeTimer);timerTick(D.getElementById('cobrastrikeId'),20000/1000,'cobrastrikeId');beginGlobalCooldown();var skillName="Cobra Strike";var dam=minMax((attackFunct()/20),.5);if(GLB.videoSetting==="High"){animateCobraStrike(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);g.drawMyMp(5);cobraStrikeBonus=0;T.delayedCall(15,resetCobraStrikeBonus);var buffId="cobraStrikeIcon";var duration=15000;var spriteX=-192;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function animateCobraStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var p2=can('whiteLight3',7,x2-1280,y2-720,2560,994);p2.alpha=.1;T.to(p2,.5,{y:y2-619,x:x2-1280,ease:ez.xout,onComplete:function(){cRem(7,p2);}});var p4=can('cobraStrike',5,x2-70,y2-307,0,0,true);T.to(p4,.5,{y:"+="+100,scaleX:1,scaleY:1,ease:ez.xout,onComplete:function(){T.to(p4,.25,{scaleX:0,scaleY:0,onComplete:function(){cRem(5,p4);}});}});animateBurst(Slot);}
function animateBurst(Slot,size,img){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);if(!size){size=250;}
if(!img){img='burst';}
var e1=can(img,5,x2,y2,0,0,true);T.to(e1,.125,{scaleX:size/200,scaleY:size/200,alpha:0,onComplete:function(){cRem(5,e1);}});}
$(function(){$NG.window3.on('mouseenter','#cobrastrikeId',function(){var MP="5".fontcolor("#00ff00");var CD="20".fontcolor("#ff0000");var minimum2="4%".fontcolor("#00ff00");var a=TTphy((attackFunct()/20),.5,"Cobra Strike");NG.tooltipname.innerHTML="Cobra Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Cobra Strike your target for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: "+minimum2+" of physical damage inflicted is converted to health.";});});function chakraBlastReady(){if(D.getElementById('chakrablastId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('chakrablastId',false);BGP('chakrablastId',"-1200% 0%");g.checkMonkSkills();refreshchakraBlast.kill();}
function chakraBlastTimer(){refreshchakraBlast=T.to('',.1,{repeat:-1,onRepeat:chakraBlastReady});}
function chakraBlast(){if(my.mp<35||btn.d.chakrablastId===true||my.level<24){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('chakrablastId',true);BGP('chakrablastId',"-1200% -100%");T.delayedCall(30,chakraBlastTimer);timerTick(D.getElementById('chakrablastId'),30000/1000,'chakrablastId');beginGlobalCooldown();var skillName="Chakra Blast";var dam=minMax((attackFunct()/5),.8);if(GLB.videoSetting==="High"){animateChakraBlast(TGT);}
g.myPhysicalDamage(dam,TGT,skillName,0,'range');g.drawMyMp(-35);playAudio("handofgod");startInvincible(1000);}
function animateChakraBlast(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('chakraBlast',5,x2,530,0,0);T.to(e1,.25,{scaleY:2,scaleX:2,y:405,x:x2-300,alpha:.25,onComplete:function(){T.to(e1,1.2,{alpha:0,onComplete:function(){cRem(5,e1);}});}});var e2=can('chakraBlast',5,x2,530,0,0);T.to(e2,.2,{scaleY:2,scaleX:2,y:405,x:x2-300,alpha:0,onComplete:function(){cRem(5,e2);}});function doIt(count){var size=(M.random()*(20)+5);var x=(M.random()*(500)-250+x2);var y=(M.random()*(200)-100+y2);if(x>x2){var x3=x*1.01+12;}else{var x3=x*.99+12;}
var p1=can('greenparticle50',5,x,y,25,25);T.to(p1,.75,{scaleX:0,scaleY:0,x:x3,y:y+37,onComplete:function(){cRem(5,p1);}});if(count<40){T.delayedCall(.015,function(){doIt(++count);});}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#chakrablastId',function(){var MP="35".fontcolor("#00ff00");var CD="30".fontcolor("#ff0000");var a=TTphy((attackFunct()/5),.8,"Chakra Blast",true);var b=TTmag(a[1]*3.4,.8,"magic","Chi Blast");var multiplier2="75%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Chakra Blast";var s="Cost: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Chakra Blast your target for "+green(a[0])+" to "+green(a[1])+" physical damage. You are healed for "+multiplier2+" of the inflicted damage value.<br><br>";if(my.talent4>=20){s+="A potent Chi Blast strikes all targets for "+b[0]+" to "+b[1]+" arcane damage<br><br>";}
s+="Effect: Makes you invincible for 1 second.";NG.tooltipmsg.innerHTML=s;});});function intimidationReady(){if(D.getElementById('intimidationId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('intimidationId',false);BGP('intimidationId',"-1600% 0%");g.checkMonkSkills();refreshintimidation.kill();}
function intimidationTimer(){refreshintimidation=T.to('',.1,{repeat:-1,onRepeat:intimidationReady});}
function intimidation(){if(btn.d.intimidationId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('intimidationId',true);BGP('intimidationId',"-1600% -100%");T.delayedCall(45,intimidationTimer);timerTick(D.getElementById('intimidationId'),45000/1000,'intimidationId');var Slot=TGT;var fearDuration=M.random()*8000+12000;if(my.talent3>=20){fearDuration*=2;}
if(mob[Slot].dauntless){fearDuration*=dauntlessReduction();}
if(fearDuration<3000){fearDuration=3000;}
fearTarget(Slot,fearDuration,-512,"Your imposing aura strikes fear into "+mob[Slot].name);playAudio("spellCastEvoke2");}
$(function(){$NG.window3.on('mouseenter','#intimidationId',function(){var CD="45".fontcolor("#ff0000");var minimum=(M.ceil(8+((weaponSkillCheck()/4.4)/7))+"").fontcolor("#00ff00");var multiplier="140%".fontcolor("#00ff00");var d='12-20';if(my.talent3>=20){d='24-40';}
NG.tooltipname.innerHTML="Intimidation";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Reveal your indomitable spirit and strike fear into your opponent.<br><br>"+"Effect: Fear your target for "+green(d)+" seconds.";});});function flyingKickReady(){if(D.getElementById('flyingkickId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('flyingkickId',false);BGP('flyingkickId',"-1100% 0%");g.checkMonkSkills();refreshflyingKick.kill();}
function flyingKickTimer(){refreshflyingKick=T.to('',.1,{repeat:-1,onRepeat:flyingKickReady});}
function flyingKick(){if(my.mp<25||btn.d.flyingkickId===true||my.level<28){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('flyingkickId',true);BGP('flyingkickId',"-1100% -100%");T.delayedCall(24,flyingKickTimer);timerTick(D.getElementById('flyingkickId'),24000/1000,'flyingkickId');beginGlobalCooldown();var skillName="Flying Kick";var dam=minMax((attackFunct()/1.2)*(1+P.eq[11].armor/40),.8);animateFlyingKick(TGT);g.myPhysicalDamage(dam,TGT,skillName);g.drawMyMp(-25);playAudio("flshhit3");startInvincible(1000);if(Set.Grandmaster>=6){stunTarget(TGT,6500,-352);}
var Slot=TGT;if(my.talent7>=20){playAudio("sanctuary");chillTarget(Slot,3000,-352);var dam=minMax(attackFunct()/4,.9);g.myMagicDamage('cold',dam,Slot,checkCrit(),"Ice Bolt");var dam=minMax(attackFunct()/2.6,.7);g.myMagicDamage('fire',dam,Slot,checkCrit(),"Fire Bolt");var dam=minMax(attackFunct()/2,.3);g.myMagicDamage('lightning',dam,Slot,checkCrit(),"Static Bolt");}}
function animateFlyingKick(Slot){if(GLB.videoSetting!=="High"){return;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var p4=can('flyingKick',5,x2+150,y2+150,0,0);T.to(p4,.15,{scaleX:1.5,scaleY:1.5,y:y2-150,x:x2-150,onComplete:function(){T.to(p4,.25,{alpha:0,ease:ez.lin,onComplete:function(){cRem(5,p4);}});}});var p3=can('lineNova',7,x2-200,y2-200,400,400,true);T.to(p3,.15,{alpha:.3,scaleX:1.25,scaleY:1.25,onComplete:function(){T.to(p3,.45,{alpha:0,scaleX:2,scaleY:2,ease:ez.lin,onComplete:function(){cRem(7,p3);}});}});}
$(function(){$NG.window3.on('mouseenter','#flyingkickId',function(){var MP="25".fontcolor("#00ff00");var CD="24".fontcolor("#ff0000");var a=TTphy((attackFunct()/1.2)*(1+P.eq[11].armor/40),.8,"Flying Kick");var b=TTmag(attackFunct()/4,.9,"cold","Ice Bolt");var c=TTmag(attackFunct()/2.6,.7,"fire","Fire Bolt");var d=TTmag(attackFunct()/2,.3,"lightning","Static Bolt");NG.tooltipname.innerHTML="Flying Kick";var s="Cost: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Perform a Flying Kick on your target causing "+a[0]+" to "+a[1]+" physical damage. Your boots' armor value affects Flying Kick's damage.<br><br>";if(my.talent7>=20){s+="An Ice Bolt hits your target for "+b[0]+" to "+b[1]+" cold damage.<br>";s+="A Fire Bolt hits your target for "+c[0]+" to "+c[1]+" fire damage.<br>";s+="A Static Bolt hits your target for "+d[0]+" to "+d[1]+" lightning damage.<br><br>";}
s+="Effect: Makes you invincible for 1 second.";NG.tooltipmsg.innerHTML=s;});});function dragonStrikeReady(){if(D.getElementById('dragonstrikeId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('dragonstrikeId',false);BGP('dragonstrikeId',"-700% 0%");g.checkMonkSkills();refreshdragonStrike.kill();}
function dragonStrikeTimer(){refreshdragonStrike=T.to('',.1,{repeat:-1,onRepeat:dragonStrikeReady});}
$(function(){$NG.window3.on('mouseenter','#dragonstrikeId',function(){var MP="12".fontcolor("#00ff00");var CD="20".fontcolor("#ff0000");var a=TTmag((attackFunct()/10),.8,"fire","Dragon Strike");NG.tooltipname.innerHTML="Dragon Strike";NG.tooltipmsg.innerHTML="Generate: "+MP+" Spirit<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Deliver a flaming uppercut on your current target for "+a[0]+" to "+a[1]+" fire damage. Hits your primary target three times and hits adjacent targets once.<br><br>"+"Effect: Makes you invincible for 1 second.";});});function dragonStrike(){if(btn.d.dragonstrikeId===true||my.level<38){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('dragonstrikeId',true);BGP('dragonstrikeId',"-700% -100%");T.delayedCall(20,dragonStrikeTimer);timerTick(D.getElementById('dragonstrikeId'),20000/1000,'dragonstrikeId');beginGlobalCooldown();var skillName="Dragon Strike";var Slot=TGT;g.drawMyMp(12);if(GLB.videoSetting==="High"){animateDragonStrike(Slot);}
var dam=minMax((attackFunct()/10),.8);g.myMagicDamage("fire",dam,Slot,checkCrit(),skillName);var dam=minMax((attackFunct()/10),.8);g.myMagicDamage("fire",dam,Slot,checkCrit(),skillName);var dam=minMax((attackFunct()/10),.8);g.myMagicDamage("fire",dam,Slot,checkCrit(),skillName);var LT=Slot-1;var RT=Slot+1;if(LT>=0){if(mob[LT].name!==""){var dam=minMax((attackFunct()/10),.8);g.myMagicDamage("fire",dam,LT,checkCrit(),skillName);}}
if(RT<=4){if(mob[RT].name!==""){var dam=minMax((attackFunct()/10),.8);g.myMagicDamage("fire",dam,RT,checkCrit(),skillName);}}
startInvincible(1000);playAudio("drakesat");}
function animateDragonStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var p2=can('whiteLight3',5,x2-1280,y2-720,2560,994);p2.alpha=.2;T.to(p2,.5,{y:y2-601,x:x2-1280,ease:ez.xout,onComplete:function(){cRem(5,p2);}});var p4=can('dragonStrike',5,x2-65,y2-326,0,0,true);T.to(p4,.5,{scaleX:1,scaleY:1,y:"+="+100,ease:ez.xout,onComplete:function(){T.to(p4,.25,{scaleX:0,scaleY:0,onComplete:function(){cRem(5,p4);}});}});animateBurst(Slot,250,'burstRed');}
function resetinnerPeaceBonus(){innerPeaceStatus=1;}
function innerPeaceReady(){if(D.getElementById('innerpeaceId').textContent!==''){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('innerpeaceId',false);BGP('innerpeaceId',"-1700% 0%");g.checkMonkSkills();refreshinnerPeace.kill();}
function innerPeaceTimer(){refreshinnerPeace=T.to('',.1,{repeat:-1,onRepeat:innerPeaceReady});}
function innerPeace(){if(btn.d.innerpeaceId===true||my.level<15){return;}
if(checkBashFear()===true){return;}
setD('innerpeaceId',true);BGP('innerpeaceId',"-1700% -100%");var d=75000;if(my.talent3>=20){d=60000;}
T.delayedCall(d/1000,innerPeaceTimer);timerTick(D.getElementById('innerpeaceId'),d/1000,'innerpeaceId');innerPeaceStatus=0;T.delayedCall(10,resetinnerPeaceBonus);Chat(("Your spirit embraces a tranquil resolve."),3);var skillName="Inner Peace";var buffId="innerPeaceIcon";var duration=10000;var spriteX=-544;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateInnerPeace();}
playAudio("holylight");}
function animateInnerPeace(){var e1=can('whiteRays',5,-384,-384,2560,2560,true);T.to(e1,1.5,{alpha:0,ease:ez.Qin});var s1=M.random()*(45)+45;var z1=s1+120;var s2=M.random()*(22);var z2=s2+60;T.set(e1,{rotation:s1});T.to(e1,1.5,{rotation:z1,ease:ez.lin,onComplete:function(){cRem(5,e1);}});var e2=can('whiteRays',5,-384,-384,2560,2560,true);T.to(e2,1.5,{alpha:0,ease:ez.Qin});T.set(e2,{rotation:s2});T.to(e2,1.5,{rotation:z2,ease:ez.lin,onComplete:function(){cRem(5,e2);}});var e5=can('whiteLight3',5,440,442,400,400,true);T.to(e5,1.25,{scaleX:0,scaleY:0,alpha:0});}
$(function(){$NG.window3.on('mouseenter','#innerpeaceId',function(){var MP="5".fontcolor("#00ff00");var CD="75".fontcolor("#ff0000");if(my.talent3>=20){CD=green("60");}
var minimum=(M.ceil(8+((weaponSkillCheck()/4.4)/7))+"").fontcolor("#00ff00");var multiplier="140%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Inner Peace";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Effect: Auto attacks generate an additional "+MP+" spirit for 10 seconds.";});});function palSlamReady(){if(D.getElementById('palslamId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('palslamId',false);BGP('palslamId',"-300% 0%");refreshpalSlam.kill();}
function palSlamTimer(){refreshpalSlam=T.to('',.1,{repeat:-1,onRepeat:palSlamReady});}
$(function(){$NG.window3.on('mouseenter','#palslamId',function(){var CD="12".fontcolor("#ff0000");var value1="3.5".fontcolor("#00ff00");var a=TTphy((attackFunct()/4)*(1+P.eq[13].armor/80),.7,"Slam");NG.tooltipname.innerHTML="Slam";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Slam your target for "+a[0]+" to "+a[1]+" physical damage. Your shield's armor value increases damage.<br><br>"+"Effect: Stuns your target for "+value1+" seconds.";});});function palSlam(){if(btn.d.palslamId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('palslamId',true);BGP('palslamId',"-300% -100%");T.delayedCall(12,palSlamTimer);timerTick(D.getElementById('palslamId'),12000/1000,'palslamId');beginGlobalCooldown();var skillName="Slam";var dam=minMax((attackFunct()/4)*(1+P.eq[13].armor/80),.7);var Slot=TGT;if(GLB.videoSetting==="High"){animateSlam(Slot);}
var hit=g.myPhysicalDamage(dam,Slot,skillName);if(hit!==undefined){stunTarget(Slot,3500,-96);playAudio("shldblk");}}
function repudiation(Slot){var dam=minMax((attackFunct()/5),.8);animateRepudiation(Slot);playAudio("holybolt");T.delayedCall(.25,function(){g.myPhysicalDamage(dam,Slot,'Repudiation',0,'range');});}
function rebukeReady(){if(D.getElementById('rebukeId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('rebukeId',false);BGP('rebukeId',"-400% 0%");refreshrebuke.kill();}
function rebukeTimer(){refreshrebuke=T.to('',.1,{repeat:-1,onRepeat:rebukeReady});}
function rebuke(){if(btn.d.rebukeId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('rebukeId',true);BGP('rebukeId',"-400% -100%");T.delayedCall(8,rebukeTimer);timerTick(D.getElementById('rebukeId'),8000/1000,'rebukeId');beginGlobalCooldown();var skillName="Rebuke";var dam=minMax((attackFunct()/9),.8);if(GLB.videoSetting==="High"){animateRebuke(TGT);}
g.myPhysicalDamage(dam,TGT,skillName);startInvincible(1000);var Slot=TGT;if(my.talent5>=20){if(GLB.videoSetting==="High"){animateLightningBlast(TGT);}
var dam=minMax(attackFunct()/2.2,.75);g.myMagicDamage('lightning',dam,TGT,checkCrit(),"Thunderbolt");playAudio("lightning2");for(var i=0;i<=3;i++){var Slot=selectRandomTarget();if(mob[Slot].name){if(GLB.videoSetting==="High"){animateLightningBlast(Slot);}
var dam=minMax(attackFunct()/2.2,.75);g.myMagicDamage('lightning',dam,Slot,checkCrit(),"Thunderbolt");}}}}
$(function(){$NG.window3.on('mouseenter','#rebukeId',function(){var CD="8".fontcolor("#ff0000");var Slot=TGT;var a=TTphy((attackFunct()/9),.8,"Rebuke");var b=TTmag((attackFunct()/2.2),.75,"lightning","Thunderbolt");NG.tooltipname.innerHTML="Rebuke";var s="Cooldown: "+CD+" Seconds<br><br>"+"Rebuke your target for "+a[0]+" to "+a[1]+" physical damage.<br><br>";if(my.talent5>=20){s+="A Thunderbolt hits five targets for "+b[0]+" to "+b[1]+" lightning damage.<br><br>";}
s+="Effect: Makes you invincible for 1 second. If attacked while invincible, you will automatically counter-attack with Repudiate.";NG.tooltipmsg.innerHTML=s;});});function animateRebuke(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e2=can('rebuke',5,x2,y2,0,0);T.to(e2,.1,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e2,.1,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e2);}});}});var e1=can('rebuke',5,x2,y2,0,0);T.to(e1,.1,{scaleX:1,scaleY:1,x:x2-200,alpha:.2,ease:ez.Qin,onComplete:function(){T.to(e1,.5,{alpha:0,onComplete:function(){cRem(5,e1);}});}});}
function animateRepudiation(Slot){if(GLB.videoSetting!=="High"){return;}
var x3=(MOB[Slot].offsetLeft+mob[Slot].cX);var y3=(MOB[Slot].offsetTop+mob[Slot].cY-60);var e1=can('retribution',5,x3-100,y3-565,200,0);T.to(e1,.15,{scaleY:1.5,ease:ez.sin});T.to(e1,.15,{delay:.125,scaleY:0,y:MOB[Slot].offsetTop+mob[Slot].cY-30,ease:ez.sout,onComplete:function(){cRem(5,e1);}});function doit(count){var finalX=x3+(M.random()*(1000)-500);var finalY=M.random()*(70)+640;var p1=can('yellowparticle50',7,x3,y3,12,12);var t=M.random()*(1)+.5;T.to(p1,t,{y:finalY,ease:ez.bout});T.to(p1,t,{x:finalX});T.to(p1,M.random()*(1)+3,{delay:1.5,ease:ez.qin,x:"+="+6,y:"+="+6,scaleX:0,scaleY:0,onComplete:function(){cRem(7,p1);}});if(count<12){doit(++count);}}
T.delayedCall(.25,function(){doit(0);});}
function purgeReady(){if(D.getElementById('purgeId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('purgeId',false);BGP('purgeId',"-500% 0%");refreshpurge.kill();}
function purgeTimer(){refreshpurge=T.to('',.1,{repeat:-1,onRepeat:purgeReady});}
function purge(){if(btn.d.purgeId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();var skillName="Purge";var dam=minMax((attackFunct()/16),.5);var Slot=TGT;if(GLB.videoSetting==="High"){animatePurge(Slot);}
g.myPhysicalDamage(dam,TGT,skillName);}
function animatePurge(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX+100);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-100);var e1=can('purge',5,x2,y2,0,0);T.to(e1,.12,{scaleX:1,scaleY:1,x:x2-200,ease:ez.Qin,onComplete:function(){T.to(e1,.12,{scaleX:0,scaleY:0,y:y2+200,onComplete:function(){cRem(5,e1);}});}});}
$(function(){$NG.window3.on('mouseenter','#purgeId',function(){var CD="12".fontcolor("#ff0000");var a=TTphy((attackFunct()/16),.5,"Purge");NG.tooltipname.innerHTML="Purge";NG.tooltipmsg.innerHTML="Purge your target for "+a[0]+" to "+a[1]+" weapon damage. Purge's damage is increased on undead targets.";});});function vengeanceReady(){if(D.getElementById('vengeanceId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('vengeanceId',false);BGP('vengeanceId',"-600% 0%");refreshvengeance.kill();}
function vengeanceTimer(){refreshvengeance=T.to('',.1,{repeat:-1,onRepeat:vengeanceReady});}
function vengeance(){if(btn.d.vengeanceId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('vengeanceId',true);BGP('vengeanceId',"-600% -100%");T.delayedCall(16,vengeanceTimer);timerTick(D.getElementById('vengeanceId'),16000/1000,'vengeanceId');beginGlobalCooldown();var dam=0;var newMax=my.maxHp;var kek=my.hp/newMax;if(kek>.8){dam=minMax((attackFunct()/5),.8);}else if(kek>.6){dam=minMax((attackFunct()/4),.8);}else if(kek>.4){dam=minMax((attackFunct()/3),.8);}else if(kek>.2){dam=minMax((attackFunct()/2),.8);}else if(kek>0){dam=minMax((attackFunct()),.8);}
var Slot=TGT;if(GLB.videoSetting==="High"){animateVengeance(Slot);}
var hit=g.myPhysicalDamage(dam,Slot,"Vengeance");if(hit!==undefined){if(mob[Slot].attackNow===true){stunTarget(Slot,1000,-192);}}
playAudio("zeal");if(my.talent6>=20){playAudio("handofgod");if(GLB.videoSetting==="High"){animateBenediction(TGT,true);}
var dam=minMax(attackFunct()/1.3,.4);g.myMagicDamage('magic',dam,TGT,checkCrit(),"Holy Bolt");for(var i=0;i<=11;i++){(function(){T.delayedCall(M.random()*12,function(){var Slot=selectRandomTarget();if(Slot!==undefined){playAudio("handofgod");if(GLB.videoSetting==="High"){animateBenediction(Slot,true);}
var dam=minMax(attackFunct()/1.3,.4);g.myMagicDamage('magic',dam,Slot,checkCrit(),"Holy Bolt");}});})();}}}
$(function(){$NG.window3.on('mouseenter','#vengeanceId',function(){var CD="16".fontcolor("#ff0000");var kek=my.hp/my.maxHp;var foo;if(kek>.8){foo=(attackFunct()/5);}else if(kek>.6){foo=(attackFunct()/4);}else if(kek>.4){foo=(attackFunct()/3);}else if(kek>.2){foo=(attackFunct()/2);}else if(kek>0){foo=(attackFunct());}
var a=TTphy(foo,.8,"Vengeance");var b=TTmag(attackFunct()/1.3,.4,"magic","Holy Bolt");NG.tooltipname.innerHTML="Vengeance";var s="Cooldown: "+CD+" Seconds<br><br>"+"Strikes your target for "+a[0]+" to "+a[1]+" physical damage. Vengeance's damage is increased as your health gets lower.<br><br>";if(my.talent5>=20){s+="A divine hail of twelve Holy Bolts hits random targets for "+b[0]+" to "+b[1]+" arcane damage.<br><br>";}
s+="Effect: Absorbs mana based on your damage inflicted.<br><br>"+"Effect: Vengeance stuns your target if you interrupt your target's physical attack.";NG.tooltipmsg.innerHTML=s;});});function animateVengeance(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('vengeance',5,x2+100,y2-100,0,0);T.to(e1,.12,{scaleX:1,scaleY:1,x:x2-100,ease:ez.Qin,onComplete:function(){T.to(e1,.12,{scaleX:0,scaleY:0,y:y2+100,onComplete:function(){cRem(5,e1);}});}});var e2=can('vengeanceL',5,x2-100,y2-100,0,0);T.to(e2,.12,{scaleX:1,scaleY:1,ease:ez.Qin,onComplete:function(){T.to(e2,.12,{scaleX:0,scaleY:0,x:x2+100,y:y2+100,onComplete:function(){cRem(5,e2);}});}});var e3=can('lineNovaPink',5,x2-200,y2-200,300,300,true);e3.alpha=.5;T.to(e3,.12,{scaleX:1,scaleY:1,ease:ez.Qin,onComplete:function(){T.to(e3,.25,{alpha:0,scaleX:1.25,scaleY:1.25,onComplete:function(){cRem(5,e3);}});}});}
function layHandsReady(){if(D.getElementById('layhandsId').textContent!==''){return;}
if(castingSpell==0){return;}
setD('layhandsId',false);BGP('layhandsId',"-700% 0%");g.checkPaladinSkills();refreshlayHands.kill();}
function layHandsTimer(){refreshlayHands=T.to('',.1,{repeat:-1,onRepeat:layHandsReady});}
function layHands(){if(my.hp<=0||paused===true){return;}
if(btn.d.layhandsId===true){return;}
setD('layhandsId',true);BGP('layhandsId',"-700% -100%");var d=300000-(talent2()*5000);T.delayedCall(d/1000,layHandsTimer);timerTick(D.getElementById('layhandsId'),d/1000,'layhandsId');Chat(("Your hands shimmer with holy light."),3);playAudio("spellDoneBuff");var healAmount=minMax(my.maxHp*.7,.9);g.popupHeal(healAmount);g.checkPaladinSkills();if(GLB.videoSetting==="High"){animateLayHands();}
if(my.talent2>=20){myCounter=true;T.delayedCall(20,function(){myCounter=false;});addBuffIcon("Divine Retaliation","layHandsId",20000,-224);}}
function TTheal(max,percent){var enh=0;if(my.job==="Magician"){if(my.talent7>=20){enh+=12;}}
var zod=(min70(wisTotal())/6.6);if(zod>0){enh+=zod;}
max=(max*(1+(enh/100)));var min=max*percent;var a=[];a[0]="<span class='green'>"+~~min+"</span>";a[1]="<span class='green'>"+~~max+"</span>";return a;}
function animateLayHands(){flashScreen("#ff7",.3,2);function doIt(count){var x=(M.random()*(426)+M.random()*(426)+M.random()*(426));var y=0;var ranY=(M.random()*(350)+150);var p1=can('yellowparticle50',5,x,y,15,15);T.to(p1,M.random()*(.5)+1,{scaleX:0,scaleY:0,y:ranY,onComplete:function(){cRem(5,p1);}});if(count<50){T.delayedCall(.033,function(){doIt(++count);});}}
doIt(0);}
$(function(){$NG.window3.on('mouseenter','#layhandsId',function(){var CD=(300000-(talent2()*5000))/1000;var a=TTheal(my.maxHp*.7,.9);NG.tooltipname.innerHTML="Lay Hands";var s="Cooldown: "+green(CD)+" Seconds<br><br>"+"Lay Hands to recover "+a[0]+" to "+a[1]+" health. Lay Hands can be used while feared or stunned.";if(my.talent2>=20){s+="<BR><BR>Effect: Lay Hands activates Divine Retaliation, riposting all physical attacks for 20 seconds.";}
NG.tooltipmsg.innerHTML=s;});});function checkSpellKnockback(Slot){if(castingSpell===0&&shieldHp<=0){if(my.job!=="Bard"){if(my.channeling<my.level*5){levelUpChanneling();}}
if(my.job==="Wizard"&&my.talent2>=20){}else{var knock=mob[Slot].level*10;if(knock>500){knock=500;}
if(M.random()*(knock)>channelingTotal()){var t1=tlSpellbar.progress();var t2;if(currentSpell==="Arcane Missiles"){}else{t2=t1-.02;if(t2<0){t2=0;}}
tlSpellbar.progress(t2);}}}}
function animateCastBar(chSpell){tlSpellbar=TM();tlSpellbar.to(mySpellBar,spellCastTime/1000,{startAt:{scaleX:0},scaleX:1,ease:ez.lin,onComplete:function(){var finish=true;if(my.job==="Bard"){finish=true;}else if(castingSpell===0){finish=true;}
if(finish===true){NG.spellbardiv.style.display="none";if(my.job!=="Bard"){g[chSpell+"Finish"]();}}}});}
function greaterHealingReady(){if(D.getElementById('greaterhealingId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('greaterhealingId',false);BGP('greaterhealingId',"-800% 0%");g.checkPaladinSkills();refreshgreaterHealing.kill();}
function greaterHealingTimer(){refreshgreaterHealing=T.to('',.1,{repeat:-1,onRepeat:greaterHealingReady});}
function greaterHealing(){if(btn.d.greaterhealingId===true||my.level<9){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.greaterHealing;if(my.mp<spellMpCost){return;}
currentSpell="Greater Healing";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("greaterHealing");playAudio("spellCastHeal",0,spellCastTime);}
g.greaterHealingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateHealing('blue');setD('greaterhealingId',true);BGP('greaterhealingId',"-800% -100%");T.delayedCall(20,greaterHealingTimer);timerTick(D.getElementById('greaterhealingId'),20000/1000,'greaterhealingId');var healAmount=minMax((alterationTotal()*1.6)*(((talent3()*1.35)/100)+1),.9);g.popupHeal(healAmount);g.drawMyMp(-spellMpCost);}
$(function(){$NG.window3.on('mouseenter','#greaterhealingId',function(){var spellType="Alteration";var CD="20".fontcolor("#ff0000");var a=TTheal((alterationTotal()*1.6)*(((talent3()*1.35)/100)+1),.9);NG.tooltipname.innerHTML="Greater Healing";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.greaterHealing)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Greater Healing heals for "+a[0]+" to "+a[1]+" hit points.";});});function holyMightReady(){if(D.getElementById('holymightId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('holymightId',false);BGP('holymightId',"-900% 0%");g.checkPaladinSkills();refreshholyMight.kill();}
function holyMightTimer(){refreshholyMight=T.to('',.1,{repeat:-1,onRepeat:holyMightReady});}
function holyMight(){if(btn.d.holymightId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=pal.cost.holyMight;if(my.mp<spellMpCost){return;}
currentSpell="Holy Might";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("holyMight");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#holymightId',function(){var spellType="Evocation";var CD="18".fontcolor("#ff0000");var a=TTmag(evocationTotal(),.9,"magic","Holy Might");var stunTime=(4.5+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Holy Might";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.holyMight)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Second<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Holy Might hits your target for "+a[0]+" to "+a[1]+" arcane damage.<br><br>"+"Effect: Stuns your target for "+stunTime+" seconds.";});});g.holyMightFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneSlam");setD('holymightId',true);BGP('holymightId',"-900% -100%");T.delayedCall(18,holyMightTimer);timerTick(D.getElementById('holymightId'),18000/1000,'holymightId');var dam=minMax(evocationTotal(),.9);Chat((mob[TGT].name+" is struck by a sudden force."),3);stunTarget(TGT,4500,-288);if(GLB.videoSetting==="High"){animateLineNova(TGT,'lineNovaMagenta');}
g.myMagicDamage("magic",dam,TGT,checkCrit(),"Holy Might");g.drawMyMp(-spellMpCost);}
function palRootReady(){if(D.getElementById('palrootId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('palrootId',false);BGP('palrootId',"-1000% 0%");g.checkPaladinSkills();refreshpalRoot.kill();}
function palRootTimer(){refreshpalRoot=T.to('',.1,{repeat:-1,onRepeat:palRootReady});}
function palRoot(){if(btn.d.palrootId===true||my.level<19){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=pal.cost.root;if(my.mp<spellMpCost){return;}
currentSpell="Root";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("palRoot");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#palrootId',function(){var spellType="Alteration";var CD="8".fontcolor("#ff0000");var stunTime=4500+"".fontcolor("#00ff00");NG.tooltipname.innerHTML="Root";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.root)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Roots your target in place. Rooted targets cannot melee you.";});});g.palRootFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");setD('palrootId',true);BGP('palrootId',"-1000% -100%");T.delayedCall(8,palRootTimer);timerTick(D.getElementById('palrootId'),8000/1000,'palrootId');g.drawMyMp(-spellMpCost);var Slot=TGT;if(checkRootImmune(Slot)===true){Chat((mob[TGT].name+" is immune to Root."),1);return;}
if(statusResist(Slot)===true){Chat((mob[TGT].name+" resisted Root."),1);return;}
Chat((mob[TGT].name+" is rooted."),3);var rootFlag=true;stopMob(Slot);mob[Slot].rootStatus=4;$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();animateRoot(Slot,rootFlag);var buffId="rootBuffIcon";var duration=0;var spriteX=-320;addMobBuffIcon("Root",Slot,buffId,duration,spriteX);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}}
function ardentJudgmentReady(){if(D.getElementById('ardentjudgment').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
$NG.ardentjudgment.removeClass("disabled").css({backgroundPosition:"-1100% 0"});setD('ardentjudgment',false);BGP('ardentjudgment',"-1100% 0%");refreshardentJudgment.kill();}
function ardentJudgmentTimer(){refreshardentJudgment=T.to('',.1,{repeat:-1,onRepeat:ardentJudgmentReady});}
function ardentJudgment(){if(btn.d.ardentjudgment===true||my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=pal.cost.ardentJudgment;if(my.mp<spellMpCost){return;}
currentSpell="Ardent Judgment";spellCastTime=castSpeedTotal(2000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("ardentJudgment");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#ardentjudgment',function(){var CD="12".fontcolor("#ff0000");var spellType="Evocation";var a=TTmag(evocationTotal()*2.7,.8,"magic","Ardent Judgment");var value1="50%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Ardent Judgment";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.ardentJudgment)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Ardent Judgment hits your target for "+a[0]+" to "+a[1]+" arcane damage. Undead targets take an additional "+value1+" damage.";});});g.ardentJudgmentFinish=function(){setD('ardentjudgment',true);BGP('ardentjudgment',"-1100% -100%");T.delayedCall(12,ardentJudgmentTimer);timerTick(D.getElementById('ardentjudgment'),12000/1000,'ardentjudgment');if(endSpell()===false){return;}
playAudio("spellDoneFlames");g.drawMyMp(-spellMpCost);var dam=minMax(evocationTotal()*2.7,.8);var Slot=TGT;if(GLB.videoSetting==="High"){animateArdentJudgment(Slot);}
g.myMagicDamage("magic",dam,Slot,checkCrit(),"Ardent Judgment");}
function animateArdentJudgment(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-100);var y2=-25;var e1=can('ardentJudgment',5,x2,y2,200,0);T.to(e1,.15,{scaleY:725/600,onComplete:function(){cRem(5,e1);}});var e2=can('ardentJudgment',5,x2,y2,200,0);T.to(e2,.15,{scaleY:725/600,alpha:.2,onComplete:function(){T.to(e2,1,{alpha:0,onComplete:function(){cRem(5,e2);}});}});T.delayedCall(.15,animateTremor,[x2+100,800]);}
function yaulpExpire(){yaulpStatus=false;CStat();}
function yaulpReady(){if(D.getElementById('yaulpId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('yaulpId',false);BGP('yaulpId',"-1200% 0%");refreshyaulp.kill();}
function yaulpTimer(){refreshyaulp=T.to('',.1,{repeat:-1,onRepeat:yaulpReady});}
function yaulp(){if(btn.d.yaulpId===true||my.level<21){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.yaulp;if(my.mp<spellMpCost){return;}
currentSpell="Yaulp";spellCastTime=castSpeedTotal(1000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("blue");animateCastBar("yaulp");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#yaulpId',function(){var spellType="Alteration";var d=8;if(Set.Duke>=6){d=12;}
var cd="30".fontcolor("#ff0000");var maximum=M.ceil(alterationTotal()/7+wisTotal()/9+talent11());NG.tooltipname.innerHTML="Yaulp";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.yaulp)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+cd+" Seconds<br><br>"+"Emit a mighty yaulp to boost your damage by "+green(maximum+"%")+" and unleash a frenzy of attacks for "+green(d)+" seconds.";});});g.yaulpFinish=function(){setD('yaulpId',true);BGP('yaulpId',"-1200% -100%");T.delayedCall(30,yaulpTimer);timerTick(D.getElementById('yaulpId'),30000/1000,'yaulpId');if(endSpell()===false){return;}
var d=8000;if(Set.Duke>=6){d+=4000;}
playAudio("fanaticism");g.drawMyMp(-spellMpCost);Chat(("You feel a surge of divine power as you let forth a mighty yaulp."),3);yaulpTimeout.kill();yaulpTimeout=T.delayedCall(d/1000,yaulpExpire);yaulpBonus=M.ceil(alterationTotal()/7+wisTotal()/9)+talent11();myAttack.kill();myAttack2.kill();myAttack=T.delayedCall(0,getDamage);myAttack2=T.delayedCall(0,getDamage2);autoAttackTimer(0);yaulpStatus=true;CStat();var buffId="yaulpIcon";yaulpIconTimer.kill();yaulpIconTimer=T.delayedCall(d/1000,function(){removeIcon(buffId);});addBuffIcon("Yaulp",buffId,d,-384);if(my.talent11>=20){var shd=M.ceil(armorFunct()/5);shieldHp=shd;removeIcon("yaulpShieldIcon");addBuffIcon("Protective Bubble","yaulpShieldIcon",0,-384);}}
function cleanse(){if(btn.d.cleanseId===true||my.level<24){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.cleanse;if(my.mp<spellMpCost){return;}
currentSpell="Fervent Prayer";spellCastTime=castSpeedTotal(1500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("white");animateCastBar("cleanse");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#cleanseId',function(){var spellType="Abjuration";NG.tooltipname.innerHTML="Fervent Prayer";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.cleanse)+" Mana Points<br>"+"Cooldown: "+red("30")+" Seconds<br><br>"+"Cast Time: "+castTimeTT(1500)+" Second<br>"+"Spell Type: "+spellType+"<br><br>"+"Fervent Prayer removes all damage-over-time spells and makes you invincible for five seconds.";});});function cleanseReady(){if(D.getElementById('cleanseId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cleanseId',false);BGP('cleanseId',"-1300% 0%");refreshcleanse.kill();}
function cleanseTimer(){refreshcleanse=T.to('',.1,{repeat:-1,onRepeat:cleanseReady});}
g.cleanseFinish=function(){if(endSpell()===false){return;}
setD('cleanseId',true);BGP('cleanseId',"-1300% -100%");T.delayedCall(30,cleanseTimer);timerTick(D.getElementById('cleanseId'),30000/1000,'cleanseId');playAudio("cleansing");Chat("Your prayer provides divine protection.",3);startInvincible(5000);addBuffIcon("Fervent Prayer","ferventPrayerIcon",5000,-416);g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){mob[i].dotActive.kill();mob[i].envenomTicks=0;mob[i].engulfingDarknessTicks=0;mob[i].staticFieldTicks=0;chilledTimer.kill();mob[i].blizzardTicks=0;chillStatus=false;mob[i].conflagrationTicks=0;$("#mobEnvenomIcon"+i).remove();$("#mobEngulfingDarknessIcon"+i).remove();$("#mobStaticFieldIcon"+i).remove();$("#mobBlizzardIcon"+i).remove();$("#mobConflagrationIcon"+i).remove();}
$("#mobChilledIcon").remove();g.drawMyMp();CStat();if(GLB.videoSetting==="High"){animateCleanse();}}
function animateCleanse(){animateHealing('white');animateBuffRings(0,10);}
function flashOfLightReady(){if(D.getElementById('flashoflightId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('flashoflightId',false);BGP('flashoflightId',"-1400% 0%");refreshflashOfLight.kill();}
function flashOfLightTimer(){refreshflashOfLight=T.to('',.1,{repeat:-1,onRepeat:flashOfLightReady});}
function flashOfLight(){if(btn.d.flashoflightId===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=pal.cost.flashOfLight;if(my.mp<spellMpCost){return;}
currentSpell="Flash of Light";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("flashOfLight");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#flashoflightId',function(){var spellType="Conjuration";var CD=green("60");if(my.talent12>=20){CD=green("30");}
var duration="45".fontcolor("#00ff00");var a=TTmag((attackFunct()*((talent12()*6.9)/100)),.85,"magic","Blinding Justice");var target="your target";if(my.talent12>=20){target="three targets";}
NG.tooltipname.innerHTML="Flash of Light";var s="Cost: "+green(pal.cost.flashOfLight)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Blast your target's eyes with a flash of holy light that dazes them for 25 seconds. Dazed targets have a "+green("30%")+" chance to miss.";if(my.talent12>0){s+="<BR><BR>Blinding Justice hits "+target+" for "+a[0]+" to "+a[1]+" arcane damage.";}
NG.tooltipmsg.innerHTML=s;});});g.flashOfLightFinish=function(){setD('flashoflightId',true);BGP('flashoflightId',"-1400% -100%");var d=60000;if(my.talent12>=20){d=30000;}
T.delayedCall(d/1000,flashOfLightTimer);timerTick(D.getElementById('flashoflightId'),d/1000,'flashoflightId');if(endSpell()===false){return;}
playAudio("spellCastHeal3");g.drawMyMp(-spellMpCost);Chat((mob[TGT].name+" is dazed by a flash of light."),3);var Slot=TGT;if(my.talent12<1){var blindDuration=25000;if(mob[Slot].level>my.level){blindDuration-=(M.pow((mob[Slot].level-my.level),1.25));}
blindTarget(Slot,blindDuration,-448);if(GLB.videoSetting==="High"){animateSearingRevelation(Slot);}}else{for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var blindDuration=25000;if(mob[i].level>my.level){blindDuration-=(M.pow((mob[i].level-my.level),1.25));}
var dam=minMax((attackFunct()*((talent12()*6.9)/100)),.85);if(my.talent12>0){g.myMagicDamage('magic',dam,i,checkCrit(),"Blinding Justice");}
blindTarget(i,blindDuration,-448);if(GLB.videoSetting==="High"){animateSearingRevelation(i);}}}}}
function blindTarget(Slot,duration,spriteX){if(mob[Slot].attackStatus===1){attackOn(true);}
mob[Slot].dazeStatus=true;mob[Slot].dazeTimer.kill();mob[Slot].dazeTimer=T.delayedCall(duration/1000,function(){flashOfLightExpire(Slot);});addMobBuffIcon("Blind",Slot,"dazeIcon",duration,spriteX);}
function valor(){if(btn.d.valorId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.valor;if(my.mp<spellMpCost){return;}
currentSpell="Valor";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("valor");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#valorId',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=M.ceil((abjurationTotal()*.44)*((talent4()*5.1/100)+1));var maximum=M.ceil((abjurationTotal()*.6)*((talent4()*10.75/100)+1));NG.tooltipname.innerHTML="Valor";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.valor)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your hit points by "+green(maximum)+" and your armor by "+green(minimum)+" for "+duration+" minutes.";});});g.valorFinish=function(){if(endSpell()===false){return;}
animateBuff("yellow",'easeInBack',5,25,120,4);playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel valorous."),3);if(valorStatus===true){armorBuff-=valorArmorBoost;maxHpBuff-=valorHpBoost;}
valorTimeout.kill();valorTimeout=T.delayedCall(3240,valorExpire);valorArmorBoost=M.ceil((abjurationTotal()*.44)*((talent4()*5.1/100)+1));valorHpBoost=M.ceil((abjurationTotal()*.6)*((talent4()*10.75/100)+1));maxHpBuff+=valorHpBoost;armorBuff+=valorArmorBoost;valorStatus=true;g.drawMyHp();CStat();var skillName="Valor";var buffId="valorIcon";var duration=3240000;var spriteX=-480;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function valorExpire(){valorStatus=false;armorBuff-=valorArmorBoost;maxHpBuff-=valorHpBoost;CStat();g.drawMyHp();}
function spiritArmor(){if(btn.d.spiritarmorId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.spiritArmor;if(my.mp<spellMpCost){return;}
currentSpell="Spirit Armor";spellCastTime=castSpeedTotal(6000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("blue");animateCastBar("spiritArmor");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#spiritarmorId',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.55)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Spirit Armor";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.spiritArmor)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your armor by "+minimum+" for "+duration+" minutes.";});});g.spiritArmorFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("Translucent armor gathers around you."),3);if(spiritArmorStatus===true){armorBuff-=spiritArmorArmorBoost;}
spiritArmorTimeout.kill();spiritArmorTimeout=T.delayedCall(3240,spiritArmorExpire);spiritArmorArmorBoost=M.ceil(abjurationTotal()*.55);armorBuff+=spiritArmorArmorBoost;spiritArmorStatus=true;CStat();var skillName="Spirit Armor";var buffId="spiritArmorIcon";var duration=3240000;var spriteX=-512;spiritArmorIconTimer.kill();spiritArmorIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('blue','easeInBack',5,25,150,5);}
function spiritArmorExpire(){spiritArmorStatus=false;armorBuff-=spiritArmorArmorBoost;CStat();}
function divineProvidence(){if(btn.d.divineprovidenceId===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.divineProvidence;if(my.mp<spellMpCost){return;}
currentSpell="Divine Providence";spellCastTime=castSpeedTotal(2500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("divineProvidence");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#divineprovidenceId',function(){var spellType="Abjuration";var duration="36".fontcolor("#00ff00");var minimum=M.ceil((abjurationTotal()*.12)+talent8()*2.6);NG.tooltipname.innerHTML="Divine Providence";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.divineProvidence)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your poison and magic resistance by "+green(minimum)+" for "+duration+" minutes.";});});g.divineProvidenceFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel protected from poison and lightning."),3);if(divineProvidenceStatus===true){svpoisonBuff-=divineProvidencePoisonBoost;svmagicBuff-=divineProvidenceMagicBoost;}
spiritArmorTimeout.kill();spiritArmorTimeout=T.delayedCall(2160,divineProvidenceExpire);divineProvidencePoisonBoost=M.ceil((abjurationTotal()*.12)+talent8()*2.6);divineProvidenceMagicBoost=M.ceil((abjurationTotal()*.12)+talent8()*2.6);svpoisonBuff+=divineProvidencePoisonBoost;svmagicBuff+=divineProvidenceMagicBoost;divineProvidenceStatus=true;CStat();var skillName="Divine Providence";var buffId="resistIcon";var duration=2160000;var spriteX=-544;resistIconTimer.kill();resistIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('white','easeInQuad',5,15,120,3);}
function divineProvidenceExpire(){divineProvidenceStatus=false;svpoisonBuff-=divineProvidencePoisonBoost;svmagicBuff-=divineProvidenceMagicBoost;CStat();}
function symbolOfRyltan(){if(btn.d.symbolofryltanId===true||my.level<38){return;}
if(checkBashFear()===true){return;}
spellMpCost=pal.cost.symbolOfRyltan;if(my.mp<spellMpCost){return;}
currentSpell="Symbol of Marshan";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("symbolOfRyltan");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#symbolofryltanId',function(){var DUR="4".fontcolor("#00ff00");var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.7)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Symbol of Marshan";NG.tooltipmsg.innerHTML="Cost: "+green(pal.cost.symbolOfRyltan)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your hit points by "+minimum+" for "+duration+" minutes.";});});g.symbolOfRyltanFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("The Symbol of Marshan flashes before your eyes."),3);if(symbolOfRyltanStatus===true){maxHpBuff-=symbolOfRyltanBoost;}
symbolOfRyltanTimeout.kill();symbolOfRyltanTimeout=T.delayedCall(3240,symbolOfRyltanExpire);symbolOfRyltanBoost=M.ceil(abjurationTotal()*.7);maxHpBuff+=symbolOfRyltanBoost;symbolOfRyltanStatus=true;CStat();g.drawMyHp();var buffId="symbolOfRyltanIcon";var duration=3240000;symbolOfRyltanIconTimer.kill();symbolOfRyltanIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon("Symbol of Marshan",buffId,duration,-64,-32);animateBuff('teal','easeInQuad',5,25,160,5);}
function symbolOfRyltanExpire(){symbolOfRyltanStatus=false;maxHpBuff-=symbolOfRyltanBoost;CStat();g.drawMyHp();}
function rangerKickReady(){if(D.getElementById('rangerkickId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('rangerkickId',false);BGP('rangerkickId',"-300% 0%");refreshrangerKick.kill();}
function rangerKickTimer(){refreshrangerKick=T.to('',.1,{repeat:-1,onRepeat:rangerKickReady});}
$(function(){$NG.window3.on('mouseenter','#rangerkickId',function(){var CD="8".fontcolor("#ff0000");var a=TTphy((attackFunct()/6)*(1+P.eq[11].armor/80),.7,"Kick");var rate=40+my.talent1*3;if(rate>100){rate=100;}
NG.tooltipname.innerHTML="Kick";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Kick hits your target and inflicts "+a[0]+" to "+a[1]+" physical damage. Your boots' armor value increases kick's damage.<br><br>"+"Effect: "+green(rate+"%")+" chance to interrupt your target's spell.";});});function rangerKick(){if(btn.d.rangerkickId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('rangerkickId',true);BGP('rangerkickId',"-300% -100%");T.delayedCall(8,rangerKickTimer);timerTick(D.getElementById('rangerkickId'),8000/1000,'rangerkickId');beginGlobalCooldown();var Slot=TGT;var dam=minMax((attackFunct()/6)*(1+P.eq[11].armor/80),.7);var success=40+(talent1()*3);if(M.random()*100<success){interruptTarget(Slot);}
if(GLB.videoSetting==="High"){animateKick(Slot);}
g.myPhysicalDamage(dam,Slot,"Kick");}
$(function(){$NG.window3.on('mouseenter','#rapidshotId',function(){var a=TTphy((attackFunct()/16),.2,"Rapid Shot",0,"bow");var b=TTmag(attackFunct()/7,.8,"fire","elemental");NG.tooltipname.innerHTML="Rapid Shot";var shots="three";if(my.talent12>=20){shots="four";}
var s="Rapid Strike hits "+shots+" times for "+a[0]+" to "+a[1]+" physical bow damage.<br><br>";if(my.talent8>=20){s+="Your arrows have a "+green("30%")+" chance to inflict "+b[0]+" to "+b[1]+" fire damage.<br><br>";}
s+="If no bow is equipped, magic arrows are fired instead.";NG.tooltipmsg.innerHTML=s;});});function rapidShotReady(){if(D.getElementById('rapidshotId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('rapidshotId',false);BGP('rapidshotId',"-400% 0%");g.checkRangerSkills();refreshrapidShot.kill();}
function rapidShotTimer(){refreshrapidShot=T.to('',.1,{repeat:-1,onRepeat:rapidShotReady});}
function rapidShot(){if(btn.d.rapidshotId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();var rapidShotCount=0;var shots=3;if(my.talent12>=20){shots=4;}
rapidShotExecute(0,shots);}
function rapidShotExecute(count,max){if(count>=max||!mob[TGT].name){return;}
if(GLB.videoSetting==="High"){animateRapidShot(TGT);}
var dam=minMax((attackFunct()/16),.2);g.myPhysicalDamage(dam,TGT,"Rapid Shot",0,'bow');playAudio("arrow"+~~(M.random()*(3)+3));rapidShotDelay=T.delayedCall(.25,function(){rapidShotExecute(++count,max);});}
function animateRapidShot(Slot){var xWidth=mob[Slot].imageWidth/2;var xHeight=mob[Slot].imageHeight/2;var x2=MOB[Slot].offsetLeft+mob[Slot].cX;var y2=MOB[Slot].offsetTop+mob[Slot].cY;var ranX=x2+M.random()*(xWidth-(xWidth/2))-50;var ranY=y2+M.random()*(xHeight-(xHeight/2))-50;var e1=can('rngSmoke',5,ranX,ranY,0,0,true);T.to(e1,.15,{scaleX:1,scaleY:1});T.to(e1,1.2,{scaleX:3,scaleY:3,alpha:0,delay:.15,onComplete:function(){cRem(5,e1);}});var e2=can('rngFire',5,ranX-25,ranY-25,50,50,true);T.to(e2,.125,{scaleX:1,scaleY:1,alpha:0,onComplete:function(){cRem(5,e2);}});var e3=can('rngFireOut',5,ranX-25,ranY-25,50,50,true);T.to(e3,.15,{scaleX:1,scaleY:1,alpha:0,onComplete:function(){cRem(5,e3);}});}
$(function(){$NG.window3.on('mouseenter','#countershotId',function(){var countershotChance="15%".fontcolor("#00ff00");var a=TTphy((attackFunct()/3),.8,"Counter Shot",0,'bow');var b=TTmag(attackFunct()/7,.8,"fire","elemental");NG.tooltipname.innerHTML="Counter Shot";var s="Physical damage received has a "+countershotChance+" chance to activate Counter Shot.<br><br>"+"Counter Shot hits for "+a[0]+" to "+a[1]+" physical bow damage. <br><br>";if(my.talent8>=20){s+="Your arrows have a "+green("30%")+" chance to inflict "+b[0]+" to "+b[1]+" fire damage.<br><br>";}
s+="Effect: Interrupts your target's spell and absorbs mana.<br><br>";if(my.talent5>=20){s+="Effect: Stuns your target for 1.5 seconds.<br><br>";}
s+="If no bow is equipped, magic arrows are fired instead.";NG.tooltipmsg.innerHTML=s;});});function counterShot(){if(my.level<3){return;}
if(counterShotStatus===false){return;}
BGP('countershotId',"-500% -300%");var dam=minMax((attackFunct()/3),.8);counterShotStatus=false;var Slot=TGT;if(GLB.videoSetting==="High"){animateCounterShot(Slot);}
var hit=g.myPhysicalDamage(dam,Slot,"Counter Shot",0,'bow');if(my.talent5>=20){if(hit!==undefined){stunTarget(Slot,1500,'-160px');playAudio("arrowhit");}}else{if(hit!==undefined){interruptTarget(Slot);playAudio("arrowhit");}}}
function animateCounterShot(Slot){var x2=MOB[Slot].offsetLeft+mob[Slot].cX-50;var y2=MOB[Slot].offsetTop+mob[Slot].cY-50;var e1=can('counterShot',5,x2,y2,100,100,true);e1.alpha=.5;T.to(e1,.25,{scaleX:2,scaleY:2,alpha:0,onComplete:function(){cRem(5,e1);}});var e2=can('counterShot',5,x2,y2,100,100,true);e2.alpha=.5;T.to(e2,.25,{scaleX:.5,scaleY:.5,alpha:0,onComplete:function(){cRem(5,e2);}});var e3=can('counterShot',5,x2,y2,100,100,true);e3.alpha=.5;T.to(e3,.5,{scaleX:3,scaleY:3,alpha:.1,onComplete:function(){T.to(e3,1.125,{scaleX:4,scaleY:4,alpha:0,onComplete:function(){cRem(5,e3);}});}});}
function trueshotArrowReady(bypass){if(bypass===false){if(D.getElementById('trueshotarrowId').textContent!==''){return;}}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
refreshtrueshotArrow.kill();setD('trueshotarrowId',false);BGP('trueshotarrowId',"-600% 0%");D.getElementById('trueshotarrowId').innerHTML='';g.checkRangerSkills();}
function trueshotArrowTimer(){refreshtrueshotArrow=T.to('',.1,{repeat:-1,onRepeat:trueshotArrowReady});}
$(function(){$NG.window3.on('mouseenter','#trueshotarrowId',function(){var CD=30;if(Set.Daimyo>=6){CD-=6;}
var a=TTphy(5+(attackFunct()/2),.8,"Trueshot Arrow",0,'bow');var b=TTmag(attackFunct()/7,.8,"fire","elemental");var value1=10;if(mob[TGT].snareStatus===true){value1+=7;}
if(sowStatus===true){value1+=7;}
NG.tooltipname.innerHTML="Trueshot Arrow";var target="your target twice";if(my.talent7>=20){target="your target twice and a third arrow hits three targets";}
var s="Cooldown: "+green(CD)+" Seconds<br><br>"+"Trueshot Arrow hits "+target+" for "+a[0]+" to "+a[1]+" physical bow damage.<br><br>"+"A successful parry has a "+green(value1+"%")+" chance to amplify your next trueshot arrow by 50%.<br><br>";var goy=empowerTrueshot;if(empowerTrueshot>=500){goy=500;}
s+="Current Amplification: "+green(goy+"%")+"<div id='ampWrap'><div id='ampBar'></div></div>";if(my.talent8>=20){s+="Your arrows have a "+green("30%")+" chance to inflict "+b[0]+" to "+b[1]+" fire damage.<br><br>";}
s+="If no bow is equipped, magic arrows are fired instead.";NG.tooltipmsg.innerHTML=s;var goy=(goy/500)*100;D.getElementById('ampBar').style.width=goy+'%';T.to('#ampBar',.3,{backgroundColor:'#aa8a00',repeat:-1,yoyo:true});});});function trueshotArrow(){if(btn.d.trueshotarrowId===true||my.level<6){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('trueshotarrowId',true);BGP('trueshotarrowId',"-600% -100%");trueshotCD.kill();var d=30000;if(Set.Daimyo>=6){d-=6000;}
trueshotCD=T.delayedCall(d/1000,function(){trueshotArrowTimer()});timerTick(D.getElementById('trueshotarrowId'),d/1000,'trueshotarrowId');beginGlobalCooldown();var skillName="Trueshot Arrow";var Slot=TGT;function doit(){if(countMobs()<1){return;}
playAudio("spellDoneBoom");var count=1;if(my.talent7>=20){count++;}
for(var i=0;i<=count;i++){if(GLB.videoSetting==="High"){animateTrueshotArrow(Slot);}
var dam=minMax(5+(attackFunct()/2),.8);g.myPhysicalDamage(dam,Slot,skillName,0,"bow");}
if(my.talent7>=20){if(Slot-1>=0){if(mob[Slot-1].name!==""){if(GLB.videoSetting==="High"){animateTrueshotArrow(Slot-1);}
var dam=minMax(5+(attackFunct()/2),.8);g.myPhysicalDamage(dam,Slot-1,skillName,0,"bow");}}
if(Slot+1<5){if(mob[Slot+1].name!==""){if(GLB.videoSetting==="High"){animateTrueshotArrow(Slot+1);}
var dam=minMax(5+(attackFunct()/2),.8);g.myPhysicalDamage(dam,Slot+1,skillName,0,"bow");}}}
empowerTrueshot=0;}
playAudio("bowdraw");T.delayedCall(1.2,doit);}
function animateTrueshotArrow(Slot){if(!mob[Slot].name){return;}
var xWidth=mob[Slot].imageWidth-80;var xHeight=mob[Slot].imageHeight-80;var x2=MOB[Slot].offsetLeft+mob[Slot].cX;var y2=MOB[Slot].offsetTop+mob[Slot].cY;var ranX=x2+M.random()*(xWidth-(xWidth/2));var ranY=y2+M.random()*(xHeight-(xHeight/2));var p1=can('rngSmoke',5,ranX,ranY,25,25,true);T.to(p1,.15,{scaleX:3,scaleY:3,alpha:0});T.to(p1,1.2,{scaleX:4,scaleY:4,alpha:0,delay:.15,onComplete:function(){cRem(5,p1);}});var p2=can('rngFire',5,ranX-50,ranY-50,100,100,true);T.to(p2,.25,{scaleX:3,scaleY:3,alpha:0,onComplete:function(){cRem(5,p2);}});var p3=can('rngFireOut',5,ranX-50,ranY-50,100,100,true);T.to(p3,.25,{scaleX:3,scaleY:3,alpha:0,onComplete:function(){cRem(5,p3);}});var p4=can('lineNova',5,x2-200,y2-200,400,400,true);p4.alpha=.4;T.to(p4,.5,{alpha:0,scaleX:1.25,scaleY:1.25,onComplete:function(){cRem(5,p4);}});}
function volleyShotReady(){if(D.getElementById('volleyshotId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('volleyshotId',false);BGP('volleyshotId',"-700% 0%");g.checkRangerSkills();refreshvolleyShot.kill();}
function volleyShotTimer(){refreshvolleyShot=T.to('',.1,{repeat:-1,onRepeat:volleyShotReady});}
function volleyShot(){if(btn.d.volleyshotId===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('volleyshotId',true);BGP('volleyshotId',"-700% -100%");T.delayedCall(20,volleyShotTimer);timerTick(D.getElementById('volleyshotId'),20000/1000,'volleyshotId');beginGlobalCooldown();volleyShotCount=0;var x=countMobs();var volleyShotTotalHits=3;if(x===1){volleyShotTotalHits=5;}
if(x===2){volleyShotTotalHits=7;}
if(x===3){volleyShotTotalHits=9;}
if(x===4){volleyShotTotalHits=12;}
if(x===5){volleyShotTotalHits=15;}
if(sowStatus===true){volleyShotTotalHits+=1;}
for(var i=0;i<=4;i++){if(mob[i].snareStatus===true){volleyShotTotalHits+=1;}}
if(my.talent10>=20){volleyShotTotalHits=M.round(volleyShotTotalHits*1.5);}
if(attackStatus===1){return;}
volleyShotExecute(volleyShotTotalHits);}
function volleyShotExecute(volleyShotTotalHits){if(volleyShotCount===volleyShotTotalHits){return;}
calculateVolleyDamage();volleyShotCount+=1;playAudio("arrow"+~~(M.random()*(3)+3));T.delayedCall(.1,function(){volleyShotExecute(volleyShotTotalHits);});}
function calculateVolleyDamage(){var Slot=selectRandomTarget();if(Slot===undefined){return;}
if(GLB.videoSetting==="High"){animateVolleyShot(Slot);}
T.delayedCall(.15,function(){var dam=minMax((attackFunct()/12),.6);g.myPhysicalDamage(dam,Slot,'Volley Shot',0,'bow');});}
$(function(){$NG.window3.on('mouseenter','#volleyshotId',function(){var CD="20".fontcolor("#ff0000");var a=TTphy((attackFunct()/12),.6,"Volley Shot",0,'bow');var b=TTmag(attackFunct()/7,.8,"fire","elemental");var shotBonus=0;if(sowStatus===true){shotBonus=1;}
for(var i=0;i<=4;i++){if(mob[i].snareStatus===true){shotBonus+=1;}}
var bonus=1;if(my.talent10>=20){bonus=1.5;}
var value1=(M.round((5+shotBonus)*bonus)+"").fontcolor("#00ff00");var value2=(M.round((7+shotBonus)*bonus)+"").fontcolor("#00ff00");var value3=(M.round((9+shotBonus)*bonus)+"").fontcolor("#00ff00");var value4=(M.round((12+shotBonus)*bonus)+"").fontcolor("#00ff00");var value5=(M.round((15+shotBonus)*bonus)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Volley Shot";var s="Cooldown: "+CD+" Seconds<br><br>"+"Volley Shot hits random targets for "+a[0]+" to "+a[1]+" physical bow damage. More arrows are fired as the number of targets increases.<br><br>"+"1 target: "+value1+" shots<br>"+"2 target: "+value2+" shots<br>"+"3 target: "+value3+" shots<br>"+"4 target: "+value4+" shots<br>"+"5 target: "+value5+" shots<br><br>";if(my.talent8>=20){s+="Your arrows have a "+green("30%")+" chance to inflict "+b[0]+" to "+b[1]+" fire damage.<br><br>";}
s+="If no bow is equipped, magic arrows are fired instead.";NG.tooltipmsg.innerHTML=s;});});function animateVolleyShot(Slot){var xWidth=mob[Slot].imageWidth/2;var xHeight=mob[Slot].imageHeight/2;var x2=MOB[Slot].offsetLeft+mob[Slot].cX;var y2=MOB[Slot].offsetTop+mob[Slot].cY;var ranX=x2+M.random()*(xWidth-(xWidth/2));var ranY=y2+M.random()*(xHeight-(xHeight/2));var e1=can('arrow',5,ranX-400,ranY-500,50,50);T.to(e1,.15,{x:ranX+25,y:ranY+25,ease:ez.lin,onComplete:function(){cRem(5,e1);}});function doit(){var e2=can('rngSmoke',5,ranX-50,ranY-50,0,0,true);T.to(e2,.15,{scaleX:1,scaleY:1});T.to(e2,1.2,{delay:.15,scaleX:3,scaleY:3,alpha:0,onComplete:function(){cRem(5,e2);}});var e3=can('rngFire',5,ranX-50,ranY-50,50,50,true);T.to(e3,.2,{scaleX:1,scaleY:1,alpha:0,onComplete:function(){cRem(5,e3);}});}
T.delayedCall(.15,doit);}
function lightHealingReady(){if(D.getElementById('lighthealingId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('lighthealingId',false);BGP('lighthealingId',"-800% 0%");g.checkRangerSkills();refreshlightHealing.kill();}
function lightHealingTimer(){refreshlightHealing=T.to('',.1,{repeat:-1,onRepeat:lightHealingReady});}
function lightHealing(){if(btn.d.lighthealingId===true||my.level<9){return;}
if(checkBashFear()===true){return;}
spellMpCost=rng.cost.lightHealing;if(my.mp<spellMpCost){return;}
currentSpell="Light Healing";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("teal");animateCastBar("lightHealing");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#lighthealingId',function(){var spellType="Alteration";var CD="16".fontcolor("#ff0000");var a=TTheal((alterationTotal()*1.4),.9);NG.tooltipname.innerHTML="Light Healing";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.lightHealing)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Light Healing heals for "+a[0]+" to "+a[1]+" hit points.";});});g.lightHealingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateHealing("teal");setD('lighthealingId',true);BGP('lighthealingId',"-800% -100%");T.delayedCall(16,lightHealingTimer);timerTick(D.getElementById('lighthealingId'),16000/1000,'lighthealingId');var healAmount=minMax((alterationTotal()*1.4),.9);g.popupHeal(healAmount);g.drawMyMp(-spellMpCost);}
function wardersRiftReady(){if(D.getElementById('wardersrift').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('wardersrift',false);BGP('wardersrift',"-1200% 0%");refreshwardersRift.kill();}
function wardersRiftTimer(){refreshwardersRift=T.to('',.1,{repeat:-1,onRepeat:wardersRiftReady});}
$(function(){$NG.window3.on('mouseenter','#wardersrift',function(){var spellType="Conjuration";var CD="45".fontcolor("#ff0000");NG.tooltipname.innerHTML="Warder's Rift";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.wardersRift)+" Mana Points<br>"+"Cast Time: Instant<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Warder's Rift envelopes your target inside an umbral barrier. All damage between you and the target is reduced by "+green(fix(wardersRiftReduction())+"%")+" for "+green("35")+" seconds.";});});function wardersRiftReduction(){return(30+(conjurationTotal()/9));}
function wardersRift(){if(btn.d.wardersrift===true||my.level<24){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
spellMpCost=rng.cost.wardersRift;if(my.mp<spellMpCost){return;}
setD('wardersrift',true);BGP('wardersrift',"-1200% -100%");T.delayedCall(45,wardersRiftTimer);timerTick(D.getElementById('wardersrift'),45000/1000,'wardersrift');var Slot=TGT;Chat((mob[Slot].name+" is trapped in a dark rift."),3);var stasisDuration=35000;if(mob[Slot].level>my.level){stasisDuration-=(M.pow((mob[Slot].level-my.level),1.2));}
if(stasisDuration<15000){stasisDuration=15000;}
mob[Slot].riftStatus=true;var id=mob[Slot].ID;blur(Slot,12);T.delayedCall(stasisDuration/1000,function(){mob[Slot].riftStatus=false;if(id===mob[Slot].ID){blur(Slot,0);}
T.to('#orbIcon'+Slot,.5,{opacity:0,onComplete:function(){$("#orbIcon"+Slot).remove();}});});animateRift(stasisDuration,Slot);spellType="conjuration";checkSpellLevelUp();g.drawMyMp(-spellMpCost);var buffId="stasisIcon";var duration=stasisDuration;var spriteX=-384;addMobBuffIcon("Warder's Rift",Slot,buffId,duration,spriteX);playAudio("novaelec");}
function animateRift(riftDuration,Slot){if(mob[Slot].hp<=0){return;}
var bottomAdjust=M.ceil(MOB[Slot].offsetTop+mob[Slot].cY);var leftAdjust=M.ceil(MOB[Slot].offsetLeft+mob[Slot].cX);var H1=IMG(leftAdjust,bottomAdjust,0,0,'orbIcon');H1.style.opacity=.75;H1.id='orbIcon'+Slot;NG.eWin2.appendChild(H1);if(GLB.videoSetting==="High"){T.to(H1,1.2,{height:400,width:400,opacity:.75,top:bottomAdjust-200,left:leftAdjust-200,force3D:"auto",ease:ez.bout});T.to(H1,40,{rotation:360,force3D:"auto",ease:ez.lin,repeat:-1});}}
function igniteReady(){if(D.getElementById('igniteId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('igniteId',false);BGP('igniteId',"-1000% 0%");g.checkRangerSkills();refreshignite.kill();}
function igniteTimer(){refreshignite=T.to('',.1,{repeat:-1,onRepeat:igniteReady});}
function ignite(){if(btn.d.igniteId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=rng.cost.ignite;if(my.mp<spellMpCost){return;}
currentSpell="Ignite";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("ignite");playAudio("spellCastEvoke1",0,spellCastTime);}
function castTimeTT(d){var x=castSpeedTotal(d/1000).toFixed(2);var y=x[2];var z=x[3];if(y==="0"&&z==="0"){x=(x*1).toFixed(0);}else if(z==="0"){x=(x*1).toFixed(1);}
return green(x);}
$(function(){$NG.window3.on('mouseenter','#igniteId',function(){var spellType="Evocation";var CD="10".fontcolor("#ff0000");var a=TTmag(evocationTotal()*2.7,.85,"fire","Ignite");NG.tooltipname.innerHTML="Ignite";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.ignite)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Ignite hits your target for "+a[0]+" to "+a[1]+" fire damage.";});});g.igniteFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneFlames");setD('igniteId',true);BGP('igniteId',"-1000% -100%");T.delayedCall(10,igniteTimer);timerTick(D.getElementById('igniteId'),10000/1000,'igniteId');g.drawMyMp(-spellMpCost);var dam=minMax(evocationTotal()*2.7,.85);if(GLB.videoSetting==="High"){animateStarfire(TGT);}
g.myMagicDamage("fire",dam,TGT,checkCrit(),"Ignite");}
function faerieFlameReady(){if(D.getElementById('faerieflameId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('faerieflameId',false);BGP('faerieflameId',"-900% 0%");g.checkRangerSkills();refreshfaerieFlame.kill();}
function faerieFlameTimer(){refreshfaerieFlame=T.to('',.1,{repeat:-1,onRepeat:faerieFlameReady});}
function faerieFlame(){if(btn.d.faerieflameId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=rng.cost.faerieFlame;if(my.mp<spellMpCost){return;}
currentSpell="Faerie Flame";spellCastTime=castSpeedTotal(2000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("faerieFlame");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#faerieflameId',function(){var spellType="Conjuration";var a=TTdot(1+conjurationTotal()*.28,.9,"magic","Faerie Flame");var value1="15%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Faerie Flame";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.faerieFlame)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Faerie Flame ticks for "+a[0]+" to "+a[1]+" arcane damage every second for 21 seconds.<br><br>"+"Effect: Increases all damage inflicted by "+value1+".";});});g.faerieFlameFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");var Slot=TGT;animateDot(Slot,'blue',125,50,35,250,ez.Qout,15,5,-150,1.2);g.drawMyMp(-spellMpCost);spellDamage=M.ceil(1+conjurationTotal()*.28);var mType="magic";Chat((mob[TGT].name+"'s outline is illuminated by faerie flames."),3);mob[Slot].faerieFlameTickCount=1;mob[Slot].faerieFlameTick=spellDamage;mob[Slot].faerieFlameTickInterval.kill();mob[Slot].faerieFlameTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){faerieFlameTick(mType,Slot);}});var buffId="faerieFlameIcon";var duration=21000;var spriteX=-288;addMobBuffIcon("Faerie Flame",Slot,buffId,duration,spriteX);if(mob[TGT].attackStatus===1){attackOn(true);}}
function faerieFlameTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].faerieFlameTickInterval.kill();mob[Slot].faerieFlameTickCount=0;}
g.myDotDamage(mob[Slot].faerieFlameTick,Slot,mType,"Faerie Flame");mob[Slot].faerieFlameTickCount+=1;if(mob[Slot].faerieFlameTickCount===22){mob[Slot].faerieFlameTickInterval.kill();mob[Slot].faerieFlameTickCount=0;}}
function unlockQuests(){if(location.pathname==='/ng/'){for(var i=0;i<=2;i++){P.Q[i].GreaterFaydark=4;P.Q[i].LesserFaydark=2;P.Q[i].Blackburrow=4;P.Q[i].Befallen=4;P.Q[i].Crushbone=4;P.Q[i].Najena=4;P.Q[i].UpperGuk=4;P.Q[i].EstateofUnrest=4;P.Q[i].CastleMistmoore=4;P.Q[i].LowerGuk=4;P.Q[i].CazicThule=4;P.Q[i].KedgeKeep=5;P.Q[i].PermafrostKeep=5;P.Q[i].NagafensLair=5;P.Q[i].PlaneofHate=2;P.Q[i].PlaneofFear=2;}}}
function snareReady(){if(D.getElementById('snareId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('snareId',false);BGP('snareId',"-1100% 0%");g.checkRangerSkills();refreshsnare.kill();}
function snareTimer(){refreshsnare=T.to('',.1,{repeat:-1,onRepeat:snareReady});}
function snare(){if(btn.d.snareId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=rng.cost.snare;if(my.mp<spellMpCost){return;}
currentSpell="Snare";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("snare");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#snareId',function(){var spellType="Alteration";var CD="5".fontcolor("#ff0000");var value1="7%".fontcolor("#00ff00");var value2="33%".fontcolor("#00ff00");var value3="5%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Snare";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.snare)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Snare reduces your target's mobility and attack speed by "+value2+".<br><br>"+"Effects:<br>"+"Increases the numbers of arrows fired by Volley Shot by 1.<br>"+"Increases parry's chance to amplify your next Trueshot Arrow by "+value1+".<br>"+"Increases received physical damage's chance to activate Counter Shot by "+value3+".";});});g.snareFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneHeal");setD('snareId',true);BGP('snareId',"-1100% -100%");T.delayedCall(5,snareTimer);timerTick(D.getElementById('snareId'),5000/1000,'snareId');g.drawMyMp(-spellMpCost);var Slot=TGT;snareTarget(Slot);addMobBuffIcon("Snare",Slot,"snareIcon",0,-352);}
function snareTarget(Slot,bypass){if(!bypass){if(GLB.videoSetting==="High"){animateSnare(Slot);}}
if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted Snare."),1);return;}
Chat((mob[Slot].name+" is ensnared."),3);mob[Slot].snareStatus=true;}
function animateSnare(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var x2=(cX-150);var y2=575;function doit(count){var ranX=M.random()*(200);var ranY=M.random()*(60);var p4=can('snare',7,x2+ranX,y2+ranY,100,100,true);p4.alpha=.3;T.to(p4,M.random()*(15)+5,{y:"+="+25,scaleX:6,scaleY:2,alpha:0,ease:ez.lin,onComplete:function(){cRem(7,p4);}});if(count<40){T.delayedCall(.01,function(){doit(++count);});}}
doit(0);}
function shieldOfBrambles(){if(btn.d.shieldofbramblesId===true||my.level<21){return;}
if(checkBashFear()===true){return;}
spellMpCost=rng.cost.shieldOfBrambles;if(my.mp<spellMpCost){return;}
currentSpell="Shield of Brambles";spellCastTime=castSpeedTotal(1500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("shieldOfBrambles");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shieldofbramblesId',function(){var DUR="1.5".fontcolor("#00ff00");var spellType="Abjuration";var duration="15".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.04)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Shield of Brambles";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.shieldOfBrambles)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Shield of Brambles reflects "+minimum+" damage when hit by physical attacks for "+duration+" minutes.";});});g.shieldOfBramblesFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('yellow','easeInBack',25,11,120,3.5);g.drawMyMp(-spellMpCost);Chat(("You are covered in a veil of thorns."),3);shieldOfBramblesStatus=true;shieldOfBramblesTimeout.kill();shieldOfBramblesTimeout=T.delayedCall(420,shieldOfBramblesExpire);var skillName="Shield of Brambles";var buffId="damageShieldIcon";var duration=900000;var spriteX=-512;damageShieldIconTimer.kill();damageShieldIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function shieldOfBramblesExpire(){shieldOfBramblesStatus=false;}
function weaponShieldReady(){if(D.getElementById('weaponshieldId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('weaponshieldId',false);BGP('weaponshieldId',"-1300% 0%");g.checkRangerSkills();refreshweaponShield.kill();}
function weaponShieldTimer(){refreshweaponShield=T.to('',.1,{repeat:-1,onRepeat:weaponShieldReady});}
$(function(){$NG.window3.on('mouseenter','#weaponshieldId',function(){var CD="40".fontcolor("#ff0000");var maximum="10".fontcolor("#00ff00");NG.tooltipname.innerHTML="Weapon Shield";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Weapon Shield ripostes all physical attacks for "+maximum+" seconds.";});});function weaponShield(){if(btn.d.weaponshieldId===true||my.level<38){return;}
if(checkBashFear()===true){return;}
setD('weaponshieldId',true);BGP('weaponshieldId',"-1300% -100%");T.delayedCall(40,weaponShieldTimer);timerTick(D.getElementById('weaponshieldId'),40000/1000,'weaponshieldId');beginGlobalCooldown();Chat(("You deftly twirl your blades."));weaponShieldStatus=true;T.delayedCall(10,function(){weaponShieldStatus=false;});var skillName="Weapon Shield";var buffId="weaponShieldIcon";var duration=10000;var spriteX=-416;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateWeaponShield();}}
function animateWeaponShield(){animateBardLight('whiteLight3');animateBuffRings(0,6);}
function thistlecoat(){if(btn.d.thistlecoatId===true||my.level<15){return;}
if(checkBashFear()===true){return;}
spellMpCost=rng.cost.thistlecoat;if(my.mp<spellMpCost){return;}
currentSpell="Thistlecoat";spellCastTime=castSpeedTotal(2500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("thistlecoat");playAudio("spellCastAbjure",0,spellCastTime);g.drawMyHp();}
$(function(){$NG.window3.on('mouseenter','#thistlecoatId',function(){var spellType="Abjuration";var duration="40".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.47)+"").fontcolor("#00ff00");var maximum=(M.ceil(abjurationTotal()*.0125)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Thistlecoat";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.thistlecoat)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Thistlecoat buffs your armor by "+minimum+" and reflects "+maximum+" damage when hit by physical attacks for "+duration+" minutes.";});});g.thistlecoatFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('green','easeInBack',5,25,120,4);g.drawMyMp(-spellMpCost);Chat(("Your skin is strengthened by a veil of barbs."),3);if(thistlecoatStatus===true){armorBuff-=thistlecoatArmorBoost;}
thistlecoatTimeout.kill();thistlecoatTimeout=T.delayedCall(2400,thistlecoatExpire);thistlecoatArmorBoost=M.ceil(abjurationTotal()*.47);armorBuff+=thistlecoatArmorBoost;thistlecoatStatus=true;CStat();var skillName="Thistlecoat";var buffId="thistlecoatIcon";var duration=2400000;var spriteX=-448;thistlecoatIconTimer.kill();thistlecoatIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function thistlecoatExpire(){thistlecoatStatus=false;armorBuff-=thistlecoatArmorBoost;CStat();}
function feetLikeCat(){if(btn.d.feetlikecatId===true||my.level<19){return;}
if(checkBashFear()===true){return;}
spellMpCost=rng.cost.feetLikeCat;if(my.mp<spellMpCost){return;}
currentSpell="Feet Like Cat";spellCastTime=castSpeedTotal(2500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("feetLikeCat");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#feetlikecatId',function(){var spellType="Abjuration";var duration="36".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.22)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Feet Like Cat";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.feetLikeCat)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Feet Like Cat buffs your agility by "+minimum+" for "+duration+" minutes.";});});g.feetLikeCatFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff("yellow",'easeInBack',5,25,0,3);g.drawMyMp(-spellMpCost);Chat(("You feel more agile."),3);if(feetLikeCatStatus===true){agiBuff-=feetLikeCatBonus;}
feetLikeCatTimeout.kill();feetLikeCatTimeout=T.delayedCall(2160,feetLikeCatExpire);feetLikeCatBonus=M.ceil(abjurationTotal()*.22);agiBuff+=feetLikeCatBonus;feetLikeCatStatus=true;CStat();var skillName="Feet Like Cat";var buffId="feetLikeCatIcon";var duration=2160000;var spriteX=-480;feetLikeCatIconTimer.kill();feetLikeCatIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function feetLikeCatExpire(){feetLikeCatStatus=false;agiBuff-=feetLikeCatBonus;CStat();}
function spiritOfTheWolf(){if(btn.d.rangersowId===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=rng.cost.spiritOfTheWolf;if(my.mp<spellMpCost){return;}
currentSpell="Spirit of the Wolf";spellCastTime=castSpeedTotal(3500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("spiritOfTheWolf");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#rangersowId',function(){var spellType="Alteration";var duration="30".fontcolor("#00ff00");var minimum="7%".fontcolor("#00ff00");var value1="5%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Spirit of the Wolf";NG.tooltipmsg.innerHTML="Cost: "+green(rng.cost.spiritOfTheWolf)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Spirit of the Wolf buffs your attack power by "+minimum+" and your mobility for "+duration+" minutes.<br><br>"+"Effects:<br>"+"Increases the numbers of arrows fired by Volley Shot by 1.<br>"+"Increases parry's chance to amplify your next Trueshot Arrow by "+minimum+".<br>"+"Increases received physical damage's chance to activate Counter Shot by "+value1+".";});});g.spiritOfTheWolfFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('teal','easeInSine',5,15,100,3);g.drawMyMp(-spellMpCost);Chat(("You are surrounded by a brief lupine aura."),3);spiritOfTheWolfTimeout.kill();spiritOfTheWolfTimeout=T.delayedCall(1800,spiritOfTheWolfExpire);sowStatus=true;CStat();var skillName="Spirit of the Wolf";var buffId="spiritOfTheWolfIcon";var duration=1800000;var spriteX=-544;spiritOfTheWolfIconTimer.kill();spiritOfTheWolfIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function spiritOfTheWolfExpire(){sowStatus=false;CStat();}
function shdSlamReady(){if(D.getElementById('shdslamId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shdslamId',false);BGP('shdslamId',"-300% 0%");refreshshdSlam.kill();}
function shdSlamTimer(){refreshshdSlam=T.to('',.1,{repeat:-1,onRepeat:shdSlamReady});}
$(function(){$NG.window3.on('mouseenter','#shdslamId',function(){var CD="15".fontcolor("#ff0000");var value1="2.5".fontcolor("#00ff00");var a=TTphy((attackFunct()/4)*(1+P.eq[13].armor/80),.7,"Slam");NG.tooltipname.innerHTML="Slam";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Slam inflicts "+a[0]+" to "+a[1]+" physical damage on your target. Your shield's armor value increases the damage.<br><br>"+"Effect: Stuns your target for "+value1+" seconds.";});});function shdSlam(){if(btn.d.shdslamId===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
function do1(){setD('shdslamId',true);BGP('shdslamId',"-300% -100%");T.delayedCall(15,shdSlamTimer);timerTick(D.getElementById('shdslamId'),15000/1000,'shdslamId');}
if(Set.GraveLord>=6){graveLordSlam++;if(graveLordSlam%2===0){do1();}}else{do1();}
beginGlobalCooldown();var dam=minMax((attackFunct()/4)*(1+P.eq[13].armor/80),.7);var Slot=TGT;var hit=g.myPhysicalDamage(dam,Slot,"Slam");if(hit!==undefined){stunTarget(Slot,2500,-96);playAudio("shldblk");}
if(GLB.videoSetting==="High"){animateSlam(Slot);}}
function crescentCleaveReady(){if(D.getElementById('crescentcleaveId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('crescentcleaveId',false);BGP('crescentcleaveId',"-400% 0%");refreshcrescentCleave.kill();}
function crescentCleaveTimer(){refreshcrescentCleave=T.to('',.1,{repeat:-1,onRepeat:crescentCleaveReady});}
$(function(){$NG.window3.on('mouseenter','#crescentcleaveId',function(){var CD="8".fontcolor("#ff0000");var a=TTphy((attackFunct()/16),.5,"Crescent Cleave");NG.tooltipname.innerHTML="Crescent Cleave";NG.tooltipmsg.innerHTML="Crescent Cleave hits your target and adjacent targets for "+a[0]+" to "+a[1]+" physical damage.";});});function crescentCleave(){if(btn.d.crescentcleaveId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
beginGlobalCooldown();var Slot=TGT;for(var i=(Slot-1);i<=(Slot+1);i++){if(i>=0){if(mob[i].name!==""){var dam=minMax((attackFunct()/16),.5);if(GLB.videoSetting==="High"){animateCrescentCleave(i);}
g.myPhysicalDamage(dam,i,"Crescent Cleave");}}}}
function animateCrescentCleave(Slot){var xWidth=mob[Slot].imageWidth+200;var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('crescentCleave',5,x2-100,y2-100,xWidth,xWidth,true);e1.rotation=M.random()*(360);T.to(e1,.25,{rotation:"+=360",scaleX:e1.scaleX*.4,scaleY:e1.scaleY*.4,ease:ez.sout,onComplete:function(){cRem(5,e1);}});}
function deathStrikeReady(){if(D.getElementById('deathstrikeId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('deathstrikeId',false);BGP('deathstrikeId',"-500% 0%");refreshdeathStrike.kill();}
function deathStrikeTimer(){refreshdeathStrike=T.to('',.1,{repeat:-1,onRepeat:deathStrikeReady});}
$(function(){$NG.window3.on('mouseenter','#deathstrikeId',function(){var CD="12".fontcolor("#ff0000");var a=TTphy((attackFunct()/3.3),.7,"Death Strike");NG.tooltipname.innerHTML="Death Strike";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Death Strike hits for "+a[0]+" to "+a[1]+" physical damage.<br><br>"+"Effect: Absorbs health based on damage inflicted.";});});function deathStrike(){if(btn.d.deathstrikeId===true||my.level<3){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('deathstrikeId',true);BGP('deathstrikeId',"-500% -100%");T.delayedCall(12,deathStrikeTimer);timerTick(D.getElementById('deathstrikeId'),12000/1000,'deathstrikeId');beginGlobalCooldown();var dam=minMax((attackFunct()/3.3),.7);deathStrikeStatus=true;if(GLB.videoSetting==="High"){animateDeathStrike(TGT);}
g.myPhysicalDamage(dam,TGT,"Death Strike");playAudio("slice");}
function animateDeathStrike(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-50);function doit(count){var y3=(y2+(count*20));var e1=can('deathStrike',5,x2,y3,0,0);T.to(e1,.25,{scaleX:1,scaleY:1,y:y3-200,ease:ez.sin,onComplete:function(){T.to(e1,.25,{alpha:0,y:"+="+20,onComplete:function(){cRem(5,e1);}});}});count++;if(count<5){T.delayedCall(.02,function(){doit(count);});}}
doit(0);if(GLB.videoSetting==="High"){animateFlyingBlood(Slot,20);}}
function gaspingFrenzyReady(){if(D.getElementById('gaspingfrenzyId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('gaspingfrenzyId',false);BGP('gaspingfrenzyId',"-600% 0%");refreshgaspingFrenzy.kill();}
function gaspingFrenzyTimer(){refreshgaspingFrenzy=T.to('',.1,{repeat:-1,onRepeat:gaspingFrenzyReady});}
$(function(){$NG.window3.on('mouseenter','#gaspingfrenzyId',function(){var a=TTphy((1+attackFunct()/4500)*(P.eq[12].damage*10),.5,"Gasping Frenzy");var c=TTphy((1+attackFunct()/4500)*(P.eq[12].damage*10),.2,"Gasping Frenzy");NG.tooltipname.innerHTML="Gasping Frenzy";var s="Cooldown: "+green("20")+" Seconds<br><br>";if(P.eq[12].type==="cleaved"||P.eq[12].type==="smashed"||"staff"===P.eq[12].type){s+="Gasping Frenzy hits for "+a[0]+" to "+a[1]+" physical damage. The number of attacks varies based on your health value.<br><br>";}else{s+="Gasping Frenzy hits for "+c[0]+" to "+c[1]+" physical damage. The number of attacks varies based on your health value.<br><br>";}
s+="Below 100% health: "+green("3")+" attacks<br>"+"Below 80% health: "+green("5")+" attacks<br>"+"Below 60% health: "+green("8")+" attacks<br>"+"Below 40% health: "+green("12")+" attacks<br>"+"Below 20% health: "+green("18")+" attacks<br><br>"+"Effect: Absorbs mana based on damage inflicted.";NG.tooltipmsg.innerHTML=s;});});function gaspingFrenzy(){if(btn.d.gaspingfrenzyId===true||my.level<6){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
setD('gaspingfrenzyId',true);BGP('gaspingfrenzyId',"-600% -100%");T.delayedCall(20,gaspingFrenzyTimer);timerTick(D.getElementById('gaspingfrenzyId'),20000/1000,'gaspingfrenzyId');beginGlobalCooldown();g.gaspingFrenzyStatus=true;myAttack.kill();myAttack=T.delayedCall(0,getDamage);autoAttackTimer(0);}
function animateGaspingFrenzy(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);if(mob[Slot].name){animateTremor(x2,600,1,'darkTremor');}}
function harmTouchReady(){if(D.getElementById('harmtouchId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('harmtouchId',false);BGP('harmtouchId',"-700% 0%");refreshharmTouch.kill();}
function harmTouchTimer(){refreshharmTouch=T.to('',.1,{repeat:-1,onRepeat:harmTouchReady});}
$(function(){$NG.window3.on('mouseenter','#harmtouchId',function(){var CD=120;var a=TTphy(40+(attackFunct()*2.25),.9,"Harm Touch");var target="your target";if(my.talent7>=20){CD-=40;target="three targets";}
if(Set.Augur>=6){CD-=40;}
NG.tooltipname.innerHTML="Harm Touch";NG.tooltipmsg.innerHTML="Cooldown: "+green(CD+" Seconds")+"<br><br>"+"Harm Touch hits "+target+" for "+a[0]+" to "+a[1]+" physical damage.";});});function harmTouch(){if(btn.d.harmtouchId===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
setD('harmtouchId',true);BGP('harmtouchId',"-700% -100%");var d=120000;if(my.talent7>=20){d=80000;}
if(Set.Augur>=6){d-=40000;}
T.delayedCall(d/1000,harmTouchTimer);timerTick(D.getElementById('harmtouchId'),d/1000,'harmtouchId');beginGlobalCooldown();playAudio("spellDoneHarm");g.coldBloodBonus=-2;var Slot=TGT;if(my.talent7>=20){for(var i=0;i<=4;i++){if(Slot===i-1||Slot===i||Slot===i+1){if(mob[i].name){Chat((mob[i].name+" writhes in the grip of agony."),3);var dam=minMax(40+(attackFunct()*2.25),.9);if(GLB.videoSetting==="High"){animateHarmTouch(i);}
g.myPhysicalDamage(dam,i,"Harm Touch");}}}}else{var dam=minMax(40+(attackFunct()*2.25),.9);Chat((mob[Slot].name+" writhes in the grip of agony."),3);if(GLB.videoSetting==="High"){animateHarmTouch(Slot);}
g.myPhysicalDamage(dam,Slot,"Harm Touch");}
g.coldBloodBonus=0;}
function animateHarmTouch(Slot){flashScreen("#ff0000",.4,1);var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-50);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-50);function doit(count){var e1=can('harmTouch',5,x2-150,y2-150,100,100,true);T.to(e1,.25,{scaleY:1.5,scaleX:1.5,ease:ez.sout,onComplete:function(){cRem(5,e1);}});T.to(e1,.2,{alpha:0,ease:ez.lin});count++;if(count<6){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
function killPet(){petHp=0;Chat((petName+" is dismissed."));$("#pethpbardiv").css('display','none');$NG.mob5.stop(true,true).animate({opacity:0},250,"easeOutQuad",function(){$(this).css('display','none');});g.petAlive=false;petImage="";petName="";}
function summonDead(){if(btn.d.summondeadId===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("skeleton_die");BGP('summondeadId',"-1600% -100%");g.checkShadowKnightSkills();return;}
spellMpCost=sk.cost.summonDead;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Summon Dead";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("summonDead");playAudio("spellCastAbjure");preload(['images1/a dark skeleton.png']);}}
$(function(){$NG.window3.on('mouseenter','#summondeadId',function(){var spellType="Conjuration";NG.tooltipname.innerHTML="Summon Dead";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.summonDead)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon Dead conjures a skeleton warrior to fight by your side.";});});g.summonDeadFinish=function(){if(endSpell()===false){return;}
playAudio("spellCastAbjure");castingSpell=1;playAudio("skeleton_att");g.drawMyMp(-spellMpCost);Chat((my.name+" animates an undead servant."),3);petLevel=~~(my.level/2.2)+1;petWidth=160+M.ceil(petLevel/3);petHeight=(petWidth*2.096);petImage="a dark skeleton";petMaxHp=M.ceil(50+(petLevel*50));if(my.talent9>=20){petMaxHp=petMaxHp*2;}
petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*2);petDef=M.ceil(petLevel*3);petPoison=100;petMagic=100;petLightning=100;petFire=100;petCold=100;petSkill1="kick";petSkill2="kick";petSkill3="kick";petSkill4="kick";petCastingFrequency=10;g.petAlive=true;petSpeed=3000;petPosition=1;g.checkShadowKnightSkills();$("#pethpbardiv").css('display','block');BGP('summondeadId',"-1600% -100%");g.drawMyHp();$NG.petImage.attr("src","images1/a dark skeleton.png").width(petWidth+"px");$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var leftAdjust=190+((290-petWidth)/2);var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function shdLifeTapReady(){if(D.getElementById('shdlifetapId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shdlifetapId',false);BGP('shdlifetapId',"-800% 0%");g.checkShadowKnightSkills();refreshshdLifeTap.kill();}
function shdLifeTapTimer(){refreshshdLifeTap=T.to('',.1,{repeat:-1,onRepeat:shdLifeTapReady});}
function shdLifeTap(){if(btn.d.shdlifetapId===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.lifeTap;if(my.mp<spellMpCost){return;}
currentSpell="Life Tap";spellCastTime=castSpeedTotal(2000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("shdLifeTap");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shdlifetapId',function(){var spellType="Evocation";var CD=green('40');if(my.talent6>=20){CD=green("30");}
var a=TTmag(evocationTotal()*2,.9,"magic","Life Tap");NG.tooltipname.innerHTML="Life Tap";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.lifeTap)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Life Tap hits your target for "+a[0]+" to "+a[1]+" arcane damage and you absorb it as health.";});});g.shdLifeTapFinish=function(){if(endSpell()===false){return;}
playAudio("spellCastAbjure");g.drawMyMp(-spellMpCost);setD('shdlifetapId',true);BGP('shdlifetapId',"-800% -100%");var d=40000;if(my.talent6>=20){d=30000;}
T.delayedCall(d/1000,shdLifeTapTimer);timerTick(D.getElementById('shdlifetapId'),d/1000,'shdlifetapId');spellDamage=minMax(evocationTotal()*2,.9);var mType="magic";Chat((my.name+' says, "Ah, I feel much better now."'));if(GLB.videoSetting==="High"){animateShdLifeTap(TGT);}
var foo=g.myMagicDamage("magic",spellDamage,TGT,false,"Life Tap");var healAmount=foo;g.popupHeal(healAmount,true);}
function animateShdLifeTap(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var e1=can('lifeTap',5,x2-150,y2-100,300,300,true);T.to(e1,1.2,{scaleX:.75,scaleY:.75,alpha:0,ease:ez.Qinout});T.to(e1,1.2,{rotation:1440,ease:ez.lin,onComplete:function(){cRem(5,e1);}});}
function doomingDarkness(){if(btn.d.doomingdarknessId===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.doomingDarkness;if(my.mp<spellMpCost){return;}
currentSpell="Dooming Darkness";spellCastTime=castSpeedTotal(2000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("doomingDarkness");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#doomingdarknessId',function(){var spellType="Conjuration";var target="your target";var a=TTdot(1+conjurationTotal()*.29,.9,"magic","Dooming Darkness");var value1="15%".fontcolor("#00ff00");if(my.talent8>=20){target="all targets";}
NG.tooltipname.innerHTML="Dooming Darkness";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.doomingDarkness)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Dooming Darkness ticks for "+a[0]+" to "+a[1]+" arcane damage on "+target+" every second for 15 seconds.<br><br>"+"Effect: Reduces run speed of "+target+".";});});g.doomingDarknessFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);var Slot=TGT;for(var i=0;i<=4;i++){if(i===TGT||(my.talent8>=20)){if(mob[i].name){spellDamage=minMax(1+conjurationTotal()*.29,.9);Chat((mob[i].name+" is engulfed in darkness."),3);mob[i].doomingDarknessTickCount=1;mob[i].doomingDarknessTick=spellDamage;executeDoomingDarkness(i);animateDot(i,'magenta',150,50,15,100,ez.Qout,25,5,-50,.5);}}}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function executeDoomingDarkness(Slot){mob[Slot].doomingDarknessInterval.kill();mob[Slot].doomingDarknessInterval=T.to('',1,{repeat:-1,onRepeat:function(){doomingDarknessTick("magic",Slot);}});addMobBuffIcon("Dooming Darkness",Slot,"doomingDarknessIcon",15000,-288);}
function doomingDarknessTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].doomingDarknessInterval.kill();mob[Slot].doomingDarknessTickCount=0;return;}
g.myDotDamage(mob[Slot].doomingDarknessTick,Slot,mType,"Dooming Darkness");mob[Slot].doomingDarknessTickCount+=1;if(mob[Slot].doomingDarknessTickCount===16){mob[Slot].doomingDarknessInterval.kill();doomingDarknessTickCount=0;}}
function heatBloodReady(){if(D.getElementById('heatbloodId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('heatbloodId',false);BGP('heatbloodId',"-1000% 0%");g.checkShadowKnightSkills();refreshheatBlood.kill();}
function heatBloodTimer(){refreshheatBlood=T.to('',.1,{repeat:-1,onRepeat:heatBloodReady});}
function heatBlood(){if(btn.d.heatbloodId===true||my.level<19){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.heatBlood;if(my.mp<spellMpCost){return;}
currentSpell="Heat Blood";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("heatBlood");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#heatbloodId',function(){var spellType="Alteration";var a=TTdot(alterationTotal()*.36,.9,"fire","Heat Blood");NG.tooltipname.innerHTML="Heat Blood";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.heatBlood)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Heat Blood ticks for "+a[0]+" to "+a[1]+" fire damage every second for 21 seconds.";});});g.heatBloodFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);spellDamage=minMax(alterationTotal()*.36,.9);var mType="fire";g.drawMyHp();g.drawMyMp();Chat((mob[TGT].name+"'s blood simmers."),3);var Slot=TGT;mob[Slot].heatBloodTickCount=0;mob[Slot].heatBloodTick=spellDamage;mob[Slot].heatBloodInterval.kill();mob[Slot].heatBloodInterval=T.to('',1,{repeat:-1,onRepeat:function(){heatBloodTick(mType,Slot);}});var buffId="heatBloodIcon";var duration=21000;var spriteX=-320;addMobBuffIcon("Heat Blood",Slot,buffId,duration,spriteX);animateDot(Slot,'red',200,60,10,250,ez.cin,15,9,-100,.5);if(mob[TGT].attackStatus===1){attackOn(true);}}
function heatBloodTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].heatBloodInterval.kill();mob[Slot].heatBloodTickCount=0;return;}
g.myDotDamage(mob[Slot].heatBloodTick,Slot,mType,"Heat Blood");mob[Slot].heatBloodTickCount+=1;if(mob[Slot].heatBloodTickCount===21){mob[Slot].heatBloodInterval.kill();mob[Slot].heatBloodTickCount=0;}}
function strengthenDeadReady(){if(D.getElementById('strengthendeadId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('strengthendeadId',false);BGP('strengthendeadId',"-1100% 0%");g.checkShadowKnightSkills();refreshstrengthenDead.kill();}
function strengthenDeadTimer(){refreshstrengthenDead=T.to('',.1,{repeat:-1,onRepeat:strengthenDeadReady});}
$(function(){$NG.window3.on('mouseenter','#strengthendeadId',function(){var CD="90".fontcolor("#ff0000");if(my.talent11>=20){CD=green("45");}
var duration="30".fontcolor("#00ff00");var a=TTheal((alterationTotal()*2),.9);NG.tooltipname.innerHTML="Strengthen Dead";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Command your pet to enrage in a vicious frenzy for "+duration+" seconds. Your pet recovers "+a[0]+" to "+a[1]+" health.";});});function strengthenDead(){if(btn.d.strengthendeadId===true||my.level<24||paused===true){return;}
if(g.petAlive===false){Chat(("Your companion is not here."));return;}
setD('strengthendeadId',true);BGP('strengthendeadId',"-1100% -100%");var d=90000;if(my.talent11>=20){d=45000;}
T.delayedCall(d/1000,strengthenDeadTimer);timerTick(D.getElementById('strengthendeadId'),d/1000,'strengthendeadId');Chat((petName+"'s eyes gleam with madness."),3);petSpeedBuff=.5;var healAmount=minMax(conjurationTotal()*2.6,.9);petHp+=healAmount;g.drawMyHp();T.delayedCall(30,strengthenDeadExpire);g.popupHealSlot(healAmount,5);if(GLB.videoSetting==="High"){var x2=(MOB[5].offsetLeft+(petWidth/2));var y2=(MOB[5].offsetTop+(petHeight/2));var p4=can('lineNovaRed',7,x2-200,y2-200,400,400,true);var tl=TM();tl.to(p4,.15,{alpha:.7,width:1.25,height:1.25,}).to(p4,.45,{alpha:0,scaleX:2,scaleY:2,ease:ez.lin,onComplete:function(){cRem(7,p4);}});}
playAudio("skeleton_att");}
function strengthenDeadExpire(){petSpeedBuff=1;}
function shdFearReady(){if(D.getElementById('shdfearId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shdfearId',false);BGP('shdfearId',"-1200% 0%");g.checkShadowKnightSkills();refreshshdFear.kill();}
function shdFearTimer(){refreshshdFear=T.to('',.1,{repeat:-1,onRepeat:shdFearReady});}
function shdFear(){if(btn.d.shdfearId===true||my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.fear;if(my.mp<spellMpCost){return;}
currentSpell="Fear";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("shdFear");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shdfearId',function(){var spellType="Alteration";var CD="45".fontcolor("#ff0000");var minimum=(M.ceil(alterationTotal()*1.4)+"").fontcolor("#00ff00");var maximum=(M.ceil((alterationTotal()*1.4)+(((wisTotal()-60)+(my.level/50))/3))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Fear";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.fear)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Fear your target for a random duration. Feared targets cower before you and will not attack.";});});function myStatusResist(Slot){var foo=magicTotal()/4;if(foo>100){foo=100;}
foo=foo/400;var qux=(mob[Slot].level-my.level);if(qux<=0){qux=0;}else{qux=qux*.02;}
foo-=qux;if(foo>.25){foo=.25;}
if(foo<.05){foo=.05;}
var kek=M.random()*(1);if(kek>foo){return false;}else{return true;}}
function statusResist(Slot){var foo=mob[Slot].magic;if(foo>100){foo=100;}
foo=(foo/100)-.1;var qux=(mob[Slot].level-my.level);if(qux<=0){qux=0;}else{qux=(M.pow(qux,2)/1000)*4;}
foo-=qux;if(foo<.1){foo=.1;}
foo=M.random()*foo;if(foo>.05){return false;}else{return true;}}
function statusDurationReduction(Slot){var foo=mob[Slot].magic;if(foo>100){foo=100;}
foo=(foo/100)-.1;var kek=1-foo;var qux=(mob[Slot].level-my.level);if(qux<=0){qux=0;}else{qux=(M.pow(qux,2)/1000)*4;}
foo-=qux;if(foo<.25){foo=.25;}
foo=M.random()*kek+foo;return foo;}
g.shdFearFinish=function(){if(endSpell()===false){return;}
playAudio("spellCastEvoke2");g.drawMyMp(-spellMpCost);setD('shdfearId',true);BGP('shdfearId',"-1200% -100%");T.delayedCall(45,shdFearTimer);timerTick(D.getElementById('shdfearId'),45000/1000,'shdfearId');var Slot=TGT;var fearDuration=(M.random()*(40000)+5000)*statusDurationReduction(Slot);if(mob[Slot].level>my.level){fearDuration-=(M.pow((mob[Slot].level-my.level),1.25));}
if(fearDuration<10000){fearDuration=10000;}
if(fearDuration>25000){fearDuration=25000;}
fearTarget(Slot,fearDuration,-384);}
function fearTarget(Slot,d,spriteX,skillName,msg){if(mob[Slot].name===""){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
if(!skillName){skillName="Fear";}
if(!msg){Chat(mob[Slot].name+" looks very afraid.",3);}else{Chat(msg,3);}
stopMob(Slot);setMobOpacity(Slot);mob[Slot].fearStatus=true;if(mob[Slot].dauntless){d*=dauntlessReduction();}
mob[Slot].fearTimer.kill();mob[Slot].fearTimer=T.delayedCall(d/1000,function(){mob[Slot].fearStatus=false;});interruptTarget(Slot);animateFear(Slot,d,true,.8,true);if(spriteX>0){addMobBuffIcon(skillName,Slot,"fearBuffIcon",d,spriteX);}else{mobSelfBuffIcon("Fear","mobFearIcon"+Slot,d,-32,Slot);}}
function siphonStrength(){if(btn.d.siphonstrengthId===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.siphonStrength;if(my.mp<spellMpCost){return;}
currentSpell="Siphon Strength";spellCastTime=castSpeedTotal(2500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("orange");animateCastBar("siphonStrength");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#siphonstrengthId',function(){var spellType="Alteration";var duration="5".fontcolor("#00ff00");var minimum=(M.ceil(alterationTotal()*.18)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Siphon Strength";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.siphonStrength)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Reduce your target's strength by "+green("12%")+" and buff your own strength by "+minimum+" for "+duration+" minutes.";});});g.siphonStrengthFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);Chat((mob[TGT].name+" weakens."),3);if(siphonStrengthStatus===true){strBuff-=siphonStrengthBonus;}
siphonStrengthTimeout.kill();siphonStrengthTimeout=T.delayedCall(300,siphonStrengthExpire);siphonStrengthBonus=M.ceil(alterationTotal()*.18);strBuff+=siphonStrengthBonus;siphonStrengthStatus=true;var Slot=TGT;mob[Slot].siphonStrength=12;CStat();var buffId="siphonStrengthIcon";var duration=300000;var spriteX=-416;addMobBuffIcon("Siphon Strength",Slot,buffId,duration,spriteX);var skillName="Siphon Strength";var buffId="siphonStrengthSelfIcon";var duration=300000;var spriteX=-416;siphonStrengthSelfIconTimer.kill();siphonStrengthSelfIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateSiphonStrength(Slot);}}
function animateSiphonStrength(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-3);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-3);flashScreen("#f80",.3,1);function doIt(count){var x=(M.random()*(320)+M.random()*(320)+M.random()*(320)+M.random()*(320));var y=500;var ranY=(M.random()*(300)+100);var p1=can('orangeparticle50',5,x2,y2,6,6);T.to(p1,M.random()*(1)+.25,{scaleX:1,scaleY:1,x:x-13,y:720,ease:ez.Qin,onComplete:function(){cRem(5,p1);}});if(count<40){doIt(++count);}}
doIt(0);}
function siphonStrengthExpire(){siphonStrengthStatus=false;strBuff-=siphonStrengthBonus;CStat();}
function shdFeignDeathReady(){if(D.getElementById('shdfeigndeathId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shdfeigndeathId',false);BGP('shdfeigndeathId',"-1400% 0%");g.checkShadowKnightSkills();refreshshdFeignDeath.kill();}
function shdFeignDeathTimer(){refreshshdFeignDeath=T.to('',.1,{repeat:-1,onRepeat:shdFeignDeathReady});}
function shdFeignDeath(){if(my.level<32){return;}
if(btn.d.shdfeigndeathId===true){return;}
if(checkBashFear()===true){return;}
spellMpCost=sk.cost.feignDeath;if(my.mp<spellMpCost){return;}
currentSpell="Feign Death";spellCastTime=castSpeedTotal(1500);spellType="abjuration";hideStatus=0;if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("shdFeignDeath");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shdfeigndeathId',function(){var spellType="Abjuration";var CD="25".fontcolor("#ff0000");NG.tooltipname.innerHTML="Feign Death";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.feignDeath)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Surrounded yourself in the stench of death. All foes may believe you have died and leave the battle. When used outside of combat, mobs cannot ambush you.";});});g.shdFeignDeathFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneSlam");g.drawMyMp(-spellMpCost);T.delayedCall(25,shdFeignDeathTimer);setD('shdfeigndeathId',true);BGP('shdfeigndeathId',"-1400% -100%");timerTick(D.getElementById('shdfeigndeathId'),25000/1000,'shdfeigndeathId');if(mobsFound()===true){if(M.random()>.65){Chat("You fall to the ground. Convinced of your death, the enemy leaves the battle.",3);escapedFromBattle();return;}else{Chat("You fall to the ground, but nobody is fooled this time.",3);}}else{Chat("You feign your death.");if(hideStatus===0){return;}
BGP('shdfeigndeathId',"-1300% -100%");Chat("You feign your death.");hideStatus=0;}
var zit="death_mb";if(my.gender==="Female"){zit="death_fl";}
playAudio(zit);}
function shadowVortex(){if(btn.d.shadowvortexId===true||my.level<21){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=sk.cost.shadowVortex;if(my.mp<spellMpCost){return;}
currentSpell="Shadow Vortex";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("shadowVortex");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shadowvortexId',function(){var spellType="Alteration";var duration="3".fontcolor("#00ff00");var minimum="10%".fontcolor("#00ff00");var maximum="10%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Shadow Vortex";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.shadowVortex)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Your target takes "+maximum+" more physical damage and all physical damage taken is reduced by "+minimum+" for "+duration+" minutes.";});});g.shadowVortexFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);Chat((mob[TGT].name+" is surrounded by a vortex of shadows."),3);shadowVortexTimeout.kill();shadowVortexTimeout=T.delayedCall(180,shadowVortexExpire);shadowVortexBonus=10;shadowVortexStatus=true;var Slot=TGT;mob[Slot].shadowVortex=shadowVortexBonus;CStat();var buffId="shadowVortexIcon";var duration=180000;var spriteX=-480;addMobBuffIcon("Shadow Vortex",Slot,buffId,duration,spriteX);var skillName="Shadow Vortex";var buffId="shadowVortexSelfIcon";shadowVortexSelfIconTimer.kill();shadowVortexSelfIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateShadowVortex(Slot);}}
function animateShadowVortex(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-3);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-3);flashScreen("#800",.4,1.2);function doIt(count){var x=(M.random()*(320)+M.random()*(320)+M.random()*(320)+M.random()*(320));var y=500;var ranY=(M.random()*(300)+100);var p1=can('purpleparticle50',5,x2,y2,6,6);T.to(p1,M.random()*(1)+.25,{x:x-13,y:720,ease:ez.Qin,scaleX:1,scaleY:1,onComplete:function(){cRem(5,p1);}});if(count<50){doIt(++count);}}
doIt(0);}
function shadowVortexExpire(){shadowVortexStatus=false;shadowVortexBonus=0;CStat();}
function vampiricEmbrace(){if(btn.d.vampiricembraceId===true||my.level<21){return;}
if(checkBashFear()===true){return;}
spellMpCost=sk.cost.vampiricEmbrace;if(my.mp<spellMpCost){return;}
currentSpell="Vampiric Embrace";spellCastTime=castSpeedTotal(3000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("vampiricEmbrace");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#vampiricembraceId',function(){var spellType="Alteration";var duration="30".fontcolor("#00ff00");NG.tooltipname.innerHTML="Vampiric Embrace";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.vampiricEmbrace)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Vampiric Embrace gives physical and arcane damage a chance to drain health based on damage inflicted for "+duration+" minutes.";});});g.vampiricEmbraceFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHarm");g.drawMyMp(-spellMpCost);Chat(("Your hand begins to glow."),3);vampiricEmbraceTimeout.kill();vampiricEmbraceTimeout=T.delayedCall(1800,vampiricEmbraceExpire);vampiricEmbraceStatus=true;var skillName="Vampiric Embrace";var buffId="vampiricEmbraceIcon";var duration=1800000;var spriteX=-544;vampiricEmbraceIconTimer.kill();vampiricEmbraceIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('green','easeInBack',5,15,120,3);}
function vampiricEmbraceExpire(){vampiricEmbraceStatus=false;}
function resistCold(){if(btn.d.resistcoldId===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=sk.cost.resistCold;if(my.mp<spellMpCost){return;}
currentSpell="Resist Cold";spellCastTime=castSpeedTotal(4500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("resistCold");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#resistcoldId',function(){var spellType="Abjuration";var duration="36".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.4)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Resist Cold";NG.tooltipmsg.innerHTML="Cost: "+green(sk.cost.resistCold)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your cold resistance by "+minimum+" for "+duration+" minutes.";});});g.resistColdFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel resistant to cold."),3);if(resistColdStatus===true){svcoldBuff-=resistColdBoost;}
resistColdTimeout.kill();resistColdTimeout=T.delayedCall(2160,resistColdExpire);resistColdBoost=M.ceil(abjurationTotal()*.4);svcoldBuff+=resistColdBoost;resistColdStatus=true;CStat();var skillName="Resist Cold";var buffId="resistIcon";var duration=2160000;var spriteX=-64;var spriteY=-32;resistIconTimer.kill();resistIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX,spriteY);animateBuff('teal','easeInBack',5,19,0,3.5);}
function resistColdExpire(){resistColdStatus=false;svcoldBuff-=resistColdBoost;CStat();}
function chantOfBattleExpire(){armorBuff-=chantOfBattleArmor;chantOfBattleArmor=0;strBuff-=chantOfBattleStr;chantOfBattleStr=0;dexBuff-=chantOfBattleDex;chantOfBattleDex=0;chantOfBattleStatus=false;CStat();Chat(("Your battle fury fades."),3);highestElement=setHighestElement();}
function chantOfBattle(){if(my.level<2){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
if(currentSpell===""){bardSinging();}
currentSpell="Chant of Battle";spellType="alteration";var tickCount=3;if(accelerandoStatus===true){tickCount+=3;}
var maxTick=tickCount;chantOfBattleTicking.kill();Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("blue");chantOfBattleTimeout.kill();var d=castSpeedTotal(2000);chantOfBattleTimeout=T.delayedCall(d/1000,function(){chantOfBattleStart(tickCount,maxTick)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#chantofbattle',function(){var spellType="Singing";var duration="3".fontcolor("#00ff00");if(accelerandoStatus===true){duration="6".fontcolor("#00ff00");}
var v1=alterationTotal();var value1=(M.ceil(v1*.06)+"").fontcolor("#00ff00");var value2=(M.ceil(v1*.1)+"").fontcolor("#00ff00");var value3=(M.ceil(v1*.1)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Chant of Battle";var s="Spell Type: "+spellType+"<br><br>"+"Chant of Battle buffs your armor by "+value1+", your strength by "+value2+", and your dexterity by "+value3+" for "+duration+" verses every 6 seconds.";if(my.talent1>0){var v4=(talent1()*3.5).toFixed(1)
s+="<BR><BR>All physical damage is enhanced "+green(v4+"%")+".";}
if(my.talent1>=20){var x5=~~(attackFunct()/20);s+="<BR><BR>While Chant of Battle is active, it enchants your weapons with "+green(x5)+" arcane damage.";}
NG.tooltipmsg.innerHTML=s;});});function chantOfBattleStart(tickCount,maxTick){if(tickCount===1){chantOfBattleExpire();return;}
if(tickCount===maxTick){checkSpellLevelUp();if(currentSpell==="Chant of Battle"){addBuffIcon("Chant of Battle","chantOfBattleIcon",maxTick*6000,-128);playAudio("might");}}
chantOfBattleStatus=true;armorBuff-=chantOfBattleArmor;strBuff-=chantOfBattleStr;dexBuff-=chantOfBattleDex;Chat(("You feel your pulse quicken."),3);highestElement=setHighestElement();if(GLB.videoSetting==="High"){animateBardLight('blueLight3');}
var v1=alterationTotal();chantOfBattleArmor=M.ceil(v1*.06);chantOfBattleStr=M.ceil(v1*.1);chantOfBattleDex=M.ceil(v1*.1);armorBuff+=chantOfBattleArmor;strBuff+=chantOfBattleStr;dexBuff+=chantOfBattleDex;CStat();if(currentSpell==="Chant of Battle"&&chantOfBattleStatus===true){chantOfBattleTicking=T.delayedCall(6,function(){chantOfBattleStart(tickCount,maxTick);});bardSinging();return;}
tickCount-=1;chantOfBattleTicking=T.delayedCall(6,function(){chantOfBattleStart(tickCount,maxTick);});}
function chordsOfDissonanceExpire(){chordsOfDissonanceStatus=false;for(var i=0;i<=4;i++){removeMobIcon("chordsOfDissonanceIcon",i);}}
function chordsOfDissonance(){if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.chordsOfDissonance;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Chords of Dissonance";spellType="abjuration";var tickCount=6;if(accelerandoStatus===true){tickCount+=3;}
if(my.talent5>=20){tickCount*=2;}
var maxTick=tickCount;chordsOfDissonanceTicking.kill();Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("purple");chordsOfDissonanceTimeout.kill();var d=castSpeedTotal(4000);chordsOfDissonanceTimeout=T.delayedCall(d/1000,function(){chordsOfDissonanceStart(tickCount,maxTick);});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#chordsofdissonance',function(){var spellType="String";var duration=6;if(accelerandoStatus===true){duration+=3;}
if(my.talent5>=20){duration*=2;}
var a=TTmag(abjurationTotal()*0.54+5,.8,"magic","Chords of Dissonance");NG.tooltipname.innerHTML="Chords of Dissonance";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.chordsOfDissonance)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Chords of Dissonance ticks on all targets for "+a[0]+" to "+a[1]+" arcane damage for "+green(duration)+" verses every 3 seconds.";});});function chordsOfDissonanceStart(tickCount,maxTick){if(tickCount===1){chordsOfDissonanceExpire();return;}
if(tickCount===maxTick){if(currentSpell==="Chords of Dissonance"){checkSpellLevelUp();g.drawMyMp(-spellMpCost);playAudio("dissonance");addBuffIcon("Chords of Dissonance","chordsOfDissonanceIcon",maxTick*3000,-96);}}
chordsOfDissonanceStatus=true;for(var i=0;i<=4;i++){if(mob[i].name){if(mob[i].charmStatus===false){if(my.talent7>=20){if(M.random()>.85){stunTarget(i,1500,-544,-32,"Chords of Dissonance");}}
if(my.talent8>=20){if(M.random()>.92){animateHealing('yellow');Chat(my.name+" recovers health from an inspiring melody.",3);g.popupHeal(minMax(abjurationTotal()/10,.8));}}
var songDamage=minMax(abjurationTotal()*0.54+5,.8);g.myMagicDamage("magic",songDamage,i,checkCrit(),"Chords of Dissonance");}}}
if(currentSpell==="Chords of Dissonance"&&chordsOfDissonanceStatus===true){chordsOfDissonanceTicking=T.delayedCall(3,function(){chordsOfDissonanceStart(tickCount);});bardSinging();return;}
tickCount-=1;chordsOfDissonanceTicking=T.delayedCall(3,function(){chordsOfDissonanceStart(tickCount);});}
function minMax(max,percent){var min=max*percent;var range=max-min;return M.round(M.random()*(range)+min);}
function accelerandoExpire(){accelerandoStatus=false;Chat(("You slow down."),3);}
function accelerando(){if(my.level<3){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
if(currentSpell===""){bardSinging();}
currentSpell="Accelerando";spellType="evocation";var tickCount=6;accelerandoTicking.kill();Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("green");var d=castSpeedTotal(4000);accelerandoTimeout.kill();accelerandoTimeout=T.delayedCall(d/1000,function(){accelerandoStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#accelerando',function(){var spellType="Percussion";var duration="6".fontcolor("#00ff00");NG.tooltipname.innerHTML="Accelerando";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br><br>"+"Accelerando extends the number of verses in your songs for "+duration+" verses over 36 seconds."});});function accelerandoStart(tickCount){if(tickCount===0){accelerandoExpire();return;}
if(tickCount===6){checkSpellLevelUp();if(currentSpell==="Accelerando"){var skillName=currentSpell;var buffId="accelerandoIcon";var duration=tickCount*6000;var spriteX=-160;accelerandoIconTimer.kill();accelerandoIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);playAudio("quickness",0,1000,.7);}}
accelerandoStatus=true;Chat(("Your feet move faster."),3);if(GLB.videoSetting==="High"){animateBardLight('greenLight3');}
if(currentSpell==="Accelerando"&&accelerandoStatus===true){accelerandoTicking=T.delayedCall(6,function(){accelerandoStart(tickCount)});bardSinging();return;}
tickCount-=1;accelerandoTicking=T.delayedCall(6,function(){accelerandoStart(tickCount)});}
function hymnOfRestorationExpire(){hymnOfRestorationStatus=false;Chat(("Your regenerative hymn ends."),3);}
function hymnOfRestoration(){if(my.level<5){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.hymnOfRestoration;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Hymn of Restoration";spellType="abjuration";var tickCount=3;if(accelerandoStatus===true){tickCount+=3;}
var maxTick=tickCount;hymnOfRestorationTicking.kill();Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("teal");var d=castSpeedTotal(4000);hymnOfRestorationTimeout.kill();hymnOfRestorationTimeout=T.delayedCall(d/1000,function(){hymnOfRestorationStart(tickCount,maxTick);});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#hymnofrestoration',function(){var spellType="String";var duration="3".fontcolor("#00ff00");if(accelerandoStatus===true){duration="6".fontcolor("#00ff00");}
if(my.talent2>0){var v1=(talent2()*1.55).toFixed(1);}
var a=TTheal((1+M.ceil((abjurationTotal()*0.35)*(1+(talent2()*1.35)/100))),1);NG.tooltipname.innerHTML="Hymn of Restoration";var s="Cost: "+green(brd.cost.hymnOfRestoration)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Hymn of Restoration restores "+a[1]+" hit points for "+duration+" verses every 6 seconds.";if(my.talent2>0){s+="<BR><BR>Maximum health is increased "+green(v1+"%")+" while the hymn is active.";}
NG.tooltipmsg.innerHTML=s;});});function hymnOfRestorationStart(tickCount,maxTick){if(tickCount===1){hymnOfRestorationExpire();return;}
if(tickCount===maxTick){var skillName=currentSpell;var buffId="hymnOfRestorationIcon";var duration=tickCount*6000;var spriteX=-192;addBuffIcon(skillName,buffId,duration,spriteX);checkSpellLevelUp();g.drawMyMp(-spellMpCost);playAudio("prayer");}
hymnOfRestorationStatus=true;var healAmount=1+M.ceil((abjurationTotal()*0.35)*(1+(talent2()*1.35)/100));g.popupHeal(healAmount);g.drawMyHp();Chat(("Your wounds begin to heal."),3);animateHealing("teal",false,20);if(currentSpell==="Hymn of Restoration"&&hymnOfRestorationStatus===true){hymnOfRestorationTicking=T.delayedCall(6,function(){hymnOfRestorationStart(tickCount);});bardSinging();return;}
tickCount-=1;hymnOfRestorationTicking=T.delayedCall(6,function(){hymnOfRestorationStart(tickCount)});}
function anthemDeArmsExpire(){strBuff-=anthemDeArmsStr;anthemDeArmsStr=0;hasteBuff-=anthemDeArmsHaste;anthemDeArmsHaste=0;anthemDeArmsStatus=false;CStat();Chat(("Your surge of strength fades."),3);}
function anthemDeArms(){if(my.level<24){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
if(currentSpell===""){bardSinging();}
currentSpell="Anthem De Arms";spellType="channeling";var tickCount=3;if(accelerandoStatus===true){tickCount+=3;}
var maxTick=tickCount;anthemDeArmsTicking.kill();Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("red");var d=castSpeedTotal(4000);anthemDeArmsTimeout.kill();anthemDeArmsTimeout=T.delayedCall(d/1000,function(){anthemDeArmsStart(tickCount,maxTick)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#anthemdearms',function(){var spellType="Brass";var duration="3".fontcolor("#00ff00");if(accelerandoStatus===true){duration="6".fontcolor("#00ff00");}
var value1=(M.ceil(channelingTotal()*.11)+"").fontcolor("#00ff00");var value3=(Math.abs(M.ceil((channelingTotal()*-.85)-(talent3()*11.5))/10)).toFixed(1);var value2=(value3+"%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Anthem De Arms";var s="Spell Type: "+spellType+"<br><br>"+"Anthem De Arms creates an aura that buffs your strength by "+value1+" and your haste by "+value2+" for "+duration+" verses every 6 seconds. This aura's haste effect also affects any charmed allies.";if(my.talent3>=0){var v4=(talent3()*1.68).toFixed(1);s+="<BR><BR>Anthem De Arms buffs your attack power by "+green(v4+"%")+" while active.";}
NG.tooltipmsg.innerHTML=s;});});function anthemDeArmsStart(tickCount,maxTick){if(tickCount===1){anthemDeArmsExpire();return;}
if(tickCount===maxTick){checkSpellLevelUp();if(currentSpell==="Anthem De Arms"){var skillName=currentSpell;var buffId="anthemDeArmsIcon";var duration=tickCount*6000;var spriteX=-448;addBuffIcon(skillName,buffId,duration,spriteX);playAudio("fanaticism");}}
strBuff-=anthemDeArmsStr;hasteBuff-=anthemDeArmsHaste;anthemDeArmsStatus=true;anthemDeArmsStr=M.ceil(channelingTotal()*.11);anthemDeArmsHaste=M.ceil((channelingTotal()*-.85)-(talent3()*11.5));strBuff+=anthemDeArmsStr;hasteBuff+=anthemDeArmsHaste;CStat();Chat(("A burst of strength surges through your body."),3);if(GLB.videoSetting==="High"){animateBardLight('redLight3');}
if(currentSpell==="Anthem De Arms"&&anthemDeArmsStatus===true){anthemDeArmsTicking=T.delayedCall(6,function(){anthemDeArmsStart(tickCount)});bardSinging();return;}
tickCount-=1;anthemDeArmsTicking=T.delayedCall(6,function(){anthemDeArmsStart(tickCount)});}
function boastfulBellow(){if(my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.boastfulBellow;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Brusco's Boastful Bellow";spellType="evocation";var tickCount=0;Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("orange");var d=castSpeedTotal(4000);boastfulBellowTimeout.kill();boastfulBellowTimeout=T.delayedCall(d/1000,function(){boastfulBellowStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#boastfulbellow',function(){var foo="3".fontcolor("00ff00");if(accelerandoStatus===true){foo="4".fontcolor("00ff00");}
var spellType="Percussion";var a=TTmag(evocationTotal()*1.6,.8,"magic","Boastful Bellow");NG.tooltipname.innerHTML="Boastful Bellow";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.boastfulBellow)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Boastful Bellow strikes your target for "+a[0]+" to "+a[1]+" arcane damage for "+foo+" verses every 6 seconds.<br><br>"+"Effect: Your target's spell is interrupted.";});});function boastfulBellowStart(tickCount){if(mob[TGT].charmStatus===true||attackStatus===1){bardSinging();return;}
function mobHit(){if(mob[Slot].name){var mType="magic";spellDamage=minMax(evocationTotal()*1.6,.8);Chat((mob[Slot].name+" reels in pain."),3);if(GLB.videoSetting==="High"){animateBoastfulBellow(Slot);}
count++;interruptTarget(Slot);if(count<=3&&mob[Slot].name){boastfulBellowTickTimeout.kill();boastfulBellowTickTimeout=T.delayedCall(6,mobHit);addMobBuffIcon("Boastful Bellow",Slot,"boastfulIcon",6000,-256);}
calculateBardDamage(mType,Slot);playAudio("holybolt");}}
checkSpellLevelUp();g.drawMyMp(-spellMpCost);bardSinging();var count=0;if(accelerandoStatus===true){count=-1;}
var Slot=TGT;mobHit();}
function animateBoastfulBellow(Slot){var x2=MOB[Slot].offsetLeft+mob[Slot].cX-50;var y2=MOB[Slot].offsetTop+mob[Slot].cY-50;var p4=can('rngSmoke',5,x2,y2,0,0,true);T.to(p4,.15,{scaleX:1,scaleY:1,onComplete:function(){T.to(p4,1.2,{scaleX:3,scaleY:3,alpha:0,onComplete:function(){cRem(5,p4);}});}});var p2=can('lineNovaMagenta',5,x2-150,y2-150,100,100,true);T.to(p2,.25,{scaleX:.75,scaleY:.75,alpha:0,onComplete:function(){cRem(5,p2);}});var p3=can('lineNovaMagenta',5,x2-150,y2-150,100,100,true);T.to(p3,.15,{scaleX:1,scaleY:1,alpha:.2,onComplete:function(){T.to(p3,1.125,{scaleX:.75,scaleY:.75,alpha:0,onComplete:function(){cRem(5,p3);}});}});}
function elementalRhythmsExpire(){svmagicBuff-=elementalRhythmsMagic;elementalRhythmsMagic=0;svlightningBuff-=elementalRhythmsLightning;elementalRhythmsLightning=0;svcoldBuff-=elementalRhythmsCold;elementalRhythmsCold=0;svfireBuff-=elementalRhythmsFire;elementalRhythmsFire=0;elementalRhythmsStatus=false;CStat();Chat(("The aura of protection fades."),3);}
function elementalRhythms(){if(my.level<11){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
if(currentSpell===""){bardSinging();}
currentSpell="Elemental Rhythms";spellType="evocation";var tickCount=4;if(elementalRhythmsStatus===true){tickCount+=1;}
var maxTick=tickCount;elementalRhythmsTicking.kill();Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("purple");var d=castSpeedTotal(4000);elementalRhythmsTimeout.kill();elementalRhythmsTimeout=T.delayedCall(d/1000,function(){elementalRhythmsStart(tickCount,maxTick);});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#elementalrhythms',function(){var spellType="Percussion";var duration="4".fontcolor("#00ff00");if(accelerandoStatus===true){duration="5".fontcolor("#00ff00");}
var value1=(M.ceil((evocationTotal()*.18)+(talent6()*2.3))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Elemental Rhythms";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br><br>"+"Elemental Rhythms buffs magic, lightning, cold, and fire resistance by "+value1+" for "+duration+" verses every 6 seconds."});});function elementalRhythmsStart(tickCount,maxTick){if(tickCount===1){elementalRhythmsExpire();return;}
if(tickCount===maxTick){checkSpellLevelUp();if(currentSpell==="Elemental Rhythms"){var skillName=currentSpell;var buffId="elementalRhythmsIcon";var duration=tickCount*6000;var spriteX=-288;addBuffIcon(skillName,buffId,duration,spriteX);}
playAudio("sanctuary");}
svmagicBuff-=elementalRhythmsMagic;svlightningBuff-=elementalRhythmsLightning;svcoldBuff-=elementalRhythmsCold;svfireBuff-=elementalRhythmsFire;elementalRhythmsStatus=true;var x=evocationTotal();var y=talent6();var v1=M.ceil((x*.18)+(y*2.3));elementalRhythmsMagic=v1;elementalRhythmsLightning=v1;elementalRhythmsCold=v1;elementalRhythmsFire=v1;svmagicBuff+=elementalRhythmsMagic;svlightningBuff+=elementalRhythmsLightning;svcoldBuff+=elementalRhythmsCold;svfireBuff+=elementalRhythmsFire;CStat();Chat(("You feel an aura of elemental protection surrounding you."),3);if(GLB.videoSetting==="High"){animateBardLight('purpleLight3');}
if(currentSpell==="Elemental Rhythms"&&elementalRhythmsStatus===true){elementalRhythmsTicking=T.delayedCall(6,function(){elementalRhythmsStart(tickCount)});bardSinging();return;}
tickCount-=1;elementalRhythmsTicking=T.delayedCall(6,function(){elementalRhythmsStart(tickCount)});}
function lucidLullaby(){if(my.level<13){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.lucidLullaby;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Lucid Lullaby";spellType="conjuration";var tickCount=0;Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("yellow");var d=castSpeedTotal(4000);lucidLullabyTimeout.kill();lucidLullabyTimeout=T.delayedCall(d/1000,function(){lucidLullabyStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#lucidlullaby',function(){var spellType="Wind";NG.tooltipname.innerHTML="Lucid Lullaby";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.lucidLullaby)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Lucid Lullaby puts all targets to sleep. Singing Lucid Lullaby automatically causes area effect damage songs to stop."});});function lucidLullabyStart(tickCount){playAudio("spellDoneBuff");checkSpellLevelUp();g.drawMyMp(-spellMpCost);var levelDifference;chordsOfDissonanceTicking.kill();desperateDirgeTicking.kill();if(mob[TGT].attackStatus===1){attackOn(true);}
for(var i=0;i<=4;i++){if(mob[i].name!==""&&mob[i].charmStatus===false){if(GLB.videoSetting==="High"){animateLucidLullaby(i);}
if(statusResist(i)===true||mob[i].rare===3){Chat((mob[i].name+" resisted Lucid Lullaby."),1);}else{var sleepDuration=(chaTotal()*150)+M.random()*(chaTotal()*75);sleepDuration+=g.conjurationEquip*500;if(mob[i].level>my.level){sleepDuration-=(M.pow((mob[i].level-my.level),1.3));}
Chat((mob[i].name+"'s head nods."),3);sleepTarget(i,sleepDuration,"Lucid Lullaby",-320)
sleepAnimation(i);}}}
bardSinging();}
function animateLucidLullaby(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-12);var y2=(MOB[Slot].offsetTop+mob[Slot].cY-12);var c2=img("yellowparticle50");function doit(count){var x3=x2+(M.random()*(300)-150);var y3=y2+(M.random()*(200)-100);var p1=cacheAdd(c2,5,x3,y3);T.to(p1,.9,{opacity:0});T.to(p1,1.15,{x:"+="+11,y:y3+25,scaleX:.1,scaleY:.1,ease:ez.sin,onComplete:function(){cRem(5,p1);}});if(count<25){T.delayedCall(.03,function(){doit(++count);});}}
doit(0);}
function consonantChainExpire(Slot){mob[Slot].consonantChain=0;Chat(("The musical chains fade."),3);}
function consonantChain(){if(my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.consonantChain;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Consonant Chain";spellType="alteration";var tickCount=0;Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("orange");var d=castSpeedTotal(4000);consonantChainTimeout.kill();consonantChainTimeout=T.delayedCall(d/1000,function(){consonantChainStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#consonantchain',function(){var spellType="Singing";var duration=((9000+(chaTotal()*140))/1000).toFixed();duration=(duration+"").fontcolor("#00ff00");var value1=(M.ceil((alterationTotal()*3)*(1+(talent11()*1.2)/100))/1000).toFixed(2);NG.tooltipname.innerHTML="Consonant Chain";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.consonantChain)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Consonant Chain slows your target's attacks by "+green(value1)+" seconds for "+duration+" seconds.";});});function consonantChainStart(tickCount){playAudio("confuse");if(mob[TGT].charmStatus===true||attackStatus===1){bardSinging();return;}
checkSpellLevelUp();g.drawMyMp(-spellMpCost);var Slot=TGT;if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted "+currentSpell+"."),1);}else{mob[Slot].consonantChain=M.ceil((alterationTotal()*3)*(1+(talent11()*1.2)/100));var chainDuration=9000+(chaTotal()*140);mob[Slot].slowTimer.kill();mob[Slot].slowTimer=T.delayedCall(chainDuration/1000,function(){consonantChainExpire(Slot);});Chat((mob[Slot].name+" is surrounded by chains of music."),3);if(GLB.videoSetting==="High"){animateCounterspell(Slot);}
var buffId="slowIcon";var duration=chainDuration;var spriteX=-352;addMobBuffIcon("Consonant Chain",Slot,buffId,duration,spriteX);if(my.talent11>=20){var ticks=~~(chainDuration/3000)
procDot(Slot,minMax(alterationTotal()/3,.9),"Venom Chains","poison",ticks,3000);}}
bardSinging();}
function dissension(){if(my.level<17){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.dissension;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Dissension";spellType="channeling";var tickCount=0;Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("white");var d=castSpeedTotal(4000);dissensionTimeout.kill();dissensionTimeout=T.delayedCall(d/1000,function(){dissensionStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#dissension',function(){var spellType="Brass";var a=TTheal(5+M.ceil(channelingTotal()*0.9),.9);NG.tooltipname.innerHTML="Dissension";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.dissension)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Dissension mana drains all targets and converts it to health. You recover "+a[0]+" to "+a[1]+" hit points from each target."});});function dissensionStart(tickCount){playAudio("spellDoneHeal");if(mobsFound()===true){checkSpellLevelUp();}
g.drawMyMp(-spellMpCost);var drainAmount=0;for(var i=0;i<=4;i++){if(mob[i].name!==""){drainAmount+=minMax(5+M.ceil(channelingTotal()*0.9),.9);}
if(mob[i].name!==""&&mob[i].charmStatus===false){mob[i].mp-=7;if(mob[i].mp<0){mob[i].mp=0;}
Chat((mob[i].name+"'s mind is drained by a strident wail."),3);if(GLB.videoSetting==="High"){animateDissension(i);}}}
if(drainAmount){Chat("You feel replenished.",3);g.popupHeal(drainAmount);}
if(mob[TGT].attackStatus===1){attackOn(true);}
bardSinging();}
function animateDissension(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var xHeight=mob[Slot].imageHeight;var y2=MOB[Slot].offsetTop;var xWidth=mob[Slot].imageWidth/2+40;function doIt(count){var p3=can('drainFG',5,x2-xWidth,y2-150,xWidth*2,100);T.to(p3,(800+(count*100))/1000,{y:600,alpha:0,ease:ez.qout,onComplete:function(){cRem(5,p3);}});var p4=can('drainBG',7,x2-xWidth,y2-150,xWidth*2,100);T.to(p4,(800+(count*100))/1000,{y:600,alpha:0,ease:ez.qout,onComplete:function(){cRem(7,p4);}});if(count<5){T.delayedCall(.1,function(){doIt(++count);});}}
doIt(0);function gogo(count2){var x6=(M.random()*(600)+340);var ranY=(M.random()*(250)+100);var p1=can('tealparticle50',5,x6,-25,25,25);T.to(p1,1.2,{scaleX:0,scaleY:0,x:x6+12,y:ranY,onComplete:function(){cRem(5,p1);}});if(count2<20){T.delayedCall(.02,function(){gogo(++count2);});}}
gogo(0);var p2=can('tealLight3',5,-640,-827,2560,1544);T.to(p2,1.5,{alpha:0,onComplete:function(){cRem(5,p2);}});}
function chorusOfClarityExpire(){chorusOfClarityStatus=false;Chat(("Your clarity of mind fades."),3);}
function chorusOfClarity(){if(my.level<20){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
if(currentSpell===""){bardSinging();}
currentSpell="Chorus of Clarity";spellType="alteration";var tickCount=3;if(accelerandoStatus===true){tickCount+=3;}
var maxTick=tickCount;chorusOfClarityTicking.kill();Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("blue");var d=castSpeedTotal(4000);chorusOfClarityTimeout.kill();chorusOfClarityTimeout=T.delayedCall(d/1000,function(){chorusOfClarityStart(tickCount,maxTick)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#chorusofclarity',function(){var spellType="Singing";var duration="3".fontcolor("#00ff00");if(accelerandoStatus===true){duration="6".fontcolor("#00ff00");}
var value1=(M.ceil(alterationTotal()*.1)+"").fontcolor("#00ff00");var value2=(M.ceil(alterationTotal()*.15)+"").fontcolor("#00ff00");var value3=(M.ceil(alterationTotal()*.15)+"").fontcolor("#00ff00");var v4=M.round((alterationTotal()/35)*(1+(talent7()*5.3)/100));NG.tooltipname.innerHTML="Chorus of Clarity";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br><br>"+"Chorus of Clarity increases your natural mana regeneration rate by "+green(v4)+" for "+duration+" verses every 6 seconds.";});});function chorusOfClarityStart(tickCount,maxTick){if(tickCount===1){chorusOfClarityExpire();return;}
if(tickCount===maxTick){checkSpellLevelUp();if(currentSpell==="Chorus of Clarity"){var skillName=currentSpell;var buffId="clarityIcon";var duration=tickCount*6000;var spriteX=-416;addBuffIcon(skillName,buffId,duration,spriteX);playAudio("clarity");}}
chorusOfClarityStatus=true;Chat(("Your mind begins to clear."),3);if(GLB.videoSetting==="High"){animateChorusOfClarity();}
if(currentSpell==="Chorus of Clarity"&&chorusOfClarityStatus===true){chorusOfClarityTicking=T.delayedCall(6,function(){chorusOfClarityStart(tickCount)});bardSinging();return;}
tickCount-=1;chorusOfClarityTicking=T.delayedCall(6,function(){chorusOfClarityStart(tickCount)});}
function animateChorusOfClarity(){function doit(count){var x=(M.random()*(640)+M.random()*(640));var y=0;var ranY=(M.random()*(100)+50);var p1=can('blueparticle50',5,x,y,25,25);T.to(p1,1.2,{scaleX:0,scaleY:0,x:x+12,y:ranY,onComplete:function(){cRem(5,p1);}});if(count<15){T.delayedCall(.02,function(){doit(++count);});}}
doit(0);}
function euphonicHymnExpire(Slot){mob[Slot].euphonicHymn=0;Chat(("The aural resonance fades."),3);}
function euphonicHymn(){if(my.level<28){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.euphonicHymn;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Euphonic Hymn";spellType="alteration";var tickCount=0;Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("orange");var d=castSpeedTotal(4000);euphonicHymnTimeout.kill();euphonicHymnTimeout=T.delayedCall(d/1000,function(){euphonicHymnStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#euphonichymn',function(){var spellType="Singing";var slowValue=((alterationTotal()*6)/30.30).toFixed(1);slowValue=(slowValue+"%").fontcolor("#00ff00");var defValue=(talent4()*4.75)+40;var duration=((9000+(chaTotal()*400))/1000).toFixed();duration=(duration+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Euphonic Hymn";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.euphonicHymn)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Euphonic Hymn enhances all physical damage on all targets by "+green(defValue+"%")+" for "+duration+" seconds.";});});function euphonicHymnStart(tickCount){playAudio("decrepify");checkSpellLevelUp();g.drawMyMp(-spellMpCost);var drainAmount=0;for(var i=0;i<=4;i++){if(mob[i].name!==""&&mob[i].charmStatus===false){if(statusResist(i)===true){Chat((mob[i].name+" resisted "+currentSpell+"."),1);}else{mob[i].euphonicHymn=40+(talent4()*4.75);var bindDuration=9000+(chaTotal()*400);mob[i].euphonicHymnTimer.kill();mob[i].euphonicHymnTimer=T.delayedCall(bindDuration/1000,function(){euphonicHymnExpire(i);});Chat((mob[i].name+" is rendered vulnerable by a euphonic hymn."),3);if(GLB.videoSetting==="High"){animateDebuff('yellow');}
addMobBuffIcon("Euphonic Hymn",i,"euphonicIcon",bindDuration,-480);}}}
bardSinging();}
$(function(){$NG.window3.on('mouseenter','#shieldofsongs',function(){var foo=M.ceil((channelingTotal()*.8)*(1+((talent12()*3.15)/100)));NG.tooltipname.innerHTML="Shield of Songs";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.shieldOfSongs)+" Mana Points<br>"+"Spell Type: Brass<br><br>"+"Shield of Songs protects you with a magical barrier that absorbs "+green(foo)+" health.";});});function shieldOfSongs(){if(my.level<32){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.shieldOfSongs;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Shield of Songs";spellType="channeling";Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("yellow");var d=castSpeedTotal(4000);shieldOfSongsTimeout.kill();shieldOfSongsTimeout=T.delayedCall(d/1000,function(){shieldOfSongsStart()});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
function shieldOfSongsStart(){checkSpellLevelUp();if(currentSpell==="Shield of Songs"){addBuffIcon("Shield of Songs","shieldOfSongsIcon",0,-512);g.drawMyMp(-spellMpCost);shieldHp=M.ceil((channelingTotal()*.8)*(1+((talent12()*3.15)/100)));playAudio("shieldofsongs");Chat(("You are surrounded by a shield of songs."),3);bardSinging();animateBardLight();}}
function animateBardLight(img){if(GLB.videoSetting!=="High"){return;}
if(!img){img="yellowLight3";}
var e1=can(img,5,50,68,2560,1594);e1.alpha=.2;T.to(e1,.25,{x:-625,y:0,ease:ez.Qin,onComplete:function(){T.to(e1,.25,{x:-1300,y:200,alpha:0});}});}
function desperateDirge(){if(my.level<38){return;}
if(checkBashFear()===true){return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.desperateDirge;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Desperate Dirge";spellType="abjuration";var tickCount=6;if(accelerandoStatus===true){tickCount+=3;}
var maxTick=tickCount;desperateDirgeTicking.kill();Chat(("You begin playing "+currentSpell+"."),3);animateParticlesDown("purple");var d=castSpeedTotal(4000);desperateDirgeTimeout.kill();desperateDirgeTimeout=T.delayedCall(d/1000,function(){desperateDirgeStart(tickCount,maxTick)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#desperatedirge',function(){var spellType="String";var duration="6".fontcolor("#00ff00");if(accelerandoStatus===true){duration="9".fontcolor("#00ff00");}
var a=TTmag(abjurationTotal()*2.5,.85,"magic","Desperate Dirge");NG.tooltipname.innerHTML="Desperate Dirge";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.desperateDirge)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Desperate Dirge ticks on all targets for "+a[0]+" to "+a[1]+" arcane damage for "+duration+" verses every 3 seconds.";});});function desperateDirgeStart(tickCount,maxTick){if(tickCount===0){desperateDirgeStatus=false;for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].charmStatus===false){removeMobIcon("desperateDirgeIcon",i);}}
return;}
if(tickCount===maxTick){if(currentSpell==="Desperate Dirge"){checkSpellLevelUp();g.drawMyMp(-spellMpCost);playAudio("dirge");addBuffIcon("Desperate Dirge","desperateDirgeIcon",maxTick*3000,-544);}}
desperateDirgeStatus=true;var mType="magic";var skillName="Desperate Dirge";for(var i=0;i<=4;i++){if(mob[i].name&&mob[i].charmStatus===false){if(my.talent7>=20){if(M.random()>.95){stunTarget(i,1250,-544,-32,"Desperate Dirge");}}
var songDamage=minMax(abjurationTotal()*2.5,.85);g.myMagicDamage(mType,songDamage,i,checkCrit(),skillName);}}
if(currentSpell==="Desperate Dirge"&&desperateDirgeStatus===true){desperateDirgeTicking=T.delayedCall(3,function(){desperateDirgeStart(tickCount,maxTick);});bardSinging();return;}
tickCount-=1;desperateDirgeTicking=T.delayedCall(3,function(){desperateDirgeStart(tickCount,maxTick);});}
function songOfTheSirens(){if(my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[charmSlot].charmStatus===true){songOfTheSirensTicking.kill();songOfTheSirensExpire(charmSlot);return;}
if(currentSpell!==""){bardSinging();return;}
spellMpCost=brd.cost.songOfTheSirens;if(my.mp<spellMpCost){return;}
if(currentSpell===""){bardSinging();}
currentSpell="Solon's Song of the Sirens";spellType="conjuration";var tickCount=true;Chat(("You begin singing "+currentSpell+"."),3);animateParticlesDown("teal");var d=castSpeedTotal(4000);songOfTheSirensTimeout.kill();songOfTheSirensTimeout=T.delayedCall(d/1000,function(){songOfTheSirensStart(tickCount)});referenceDate2=new Date();spellCastTime=d;mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";animateCastBar();}
$(function(){$NG.window3.on('mouseenter','#songofthesirens',function(){var spellType="Wind";var duration="3".fontcolor("#00ff00");if(accelerandoStatus===true){duration="6".fontcolor("#00ff00");}
NG.tooltipname.innerHTML="Song of the Sirens";NG.tooltipmsg.innerHTML="Cost: "+green(brd.cost.songOfTheSirens)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Solon's Song of the Sirens charms your target. Charmed mobs can be released by clicking the mob's charm icon."});});function songOfTheSirensStart(tickCount){playAudio("spellDoneBuff");if(mob[TGT].attackStatus===1){attackOn(true);}
if(tickCount===true&&mobsFound()===true){tickCount=false;if(currentSpell==="Solon's Song of the Sirens"){checkSpellLevelUp();g.drawMyMp(-spellMpCost);}}
var Slot=TGT;if(GLB.videoSetting==="High"){animateSongOfTheSirens(Slot);}
if(statusResist(Slot)===true||mob[Slot].rare===3){Chat((mob[Slot].name+" resisted "+currentSpell+"."),1);}else{Chat((mob[Slot].name+" is captivated by a haunting tune."),3);interruptTarget(Slot);mob[Slot].charmStatus=true;charmSlot=Slot;petName=mob[charmSlot].name;$("#pethpbardiv").css('display','block');if($("#petBarName").length===0){var e1=$('<div id="petBarName">').html(mob[charmSlot].level+" - "+petName);$("#pethpbardiv").append(e1);}else{$("#petBarName").html(mob[charmSlot].level+" - "+petName);}
g.drawMyHp();var charismaValue=(chaTotal()-60);if(charismaValue<10){charismaValue=10;}
var charmDuration=(20000+M.random()*(conjurationTotal()*100)+M.random()*((charismaValue)*600)+(charismaValue*1500))*statusDurationReduction(Slot);charmDuration+=g.conjurationEquip*1000;if(mob[Slot].level>my.level){charmDuration-=(M.pow((mob[Slot].level-my.level),3.2));}
if(charmDuration<=8000){charmDuration=8000;}
songOfTheSirensTicking.kill();songOfTheSirensTicking=T.delayedCall(charmDuration/1000,songOfTheSirensExpire);var buffId="charmIcon";var duration=charmDuration;var spriteX=-224;addMobBuffIcon("Charmed",Slot,buffId,duration,spriteX);}
bardSinging();}
function songOfTheSirensExpire(Slot){if(Slot){$("#charmIcon"+Slot).stop(true,true).remove();}
songOfTheSirensTicking.kill();mob[charmSlot].charmStatus=false;if(Slot){Chat("You release "+petName+" from your command.");}else{Chat((petName+" is no longer captivated."),3);}
petName="";$("#pethpbardiv").css('display','none');}
function animateSongOfTheSirens(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-25;var cY=MOB[Slot].offsetTop+mob[Slot].cY-25;function doit(count){var ranX=(M.random()*(150)-75);var ranY=(M.random()*(60)-30);var e1=can('heart',5,cX+ranX,cY+ranY,50,50);T.to(e1,1,{y:"+="+100,alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});count++;if(count<8){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
function smiteReady(){if(D.getElementById('smite').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('smite',false);BGP('smite',"-300% 0%");g.checkClericSkills();smiteMight.kill();}
function smiteTimer(){smiteMight=T.to('',.1,{repeat:-1,onRepeat:smiteReady});}
function smite(){if(btn.d.smite===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Smite";spellCastTime=castSpeedTotal(3000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("smite");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#smite',function(){var spellType="Evocation";var a=TTmag(3+(evocationTotal()*2.5),.8,"magic","Smite");NG.tooltipname.innerHTML="Smite";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Smite hits your target for "+a[0]+" to "+a[1]+" arcane damage.";});});g.smiteFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneFlames");animateSmite(TGT);var dam=minMax(3+(evocationTotal()*2.5),.8);g.myMagicDamage("magic",dam,TGT,checkCrit(),"Smite");}
function animateSmite(Slot,color){if(GLB.videoSetting!=="High"){return;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;if(!color){color="magenta";}
function doit(count,rStep,countMax,stepInc,radius){rStep+=stepInc;x3=radius*M.cos(rStep);y3=radius*M.sin(rStep);var p1=can(color+"particle50",5,cX+x3,cY+y3,25,25);T.to(p1,.75,{scaleX:0,scaleY:0,x:cX+x3+11,y:cY+y3+11,onComplete:function(){cRem(5,p1);}});if(count<countMax){doit(++count,rStep,countMax,stepInc,radius);}}
doit(0,0,20,.315,120);doit(0,0,12,.52,90);doit(0,0,6,1.1,60);doit(0,0,4,1.3,30);}
function soundOfForceReady(){if(D.getElementById('soundofforce').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('soundofforce',false);BGP('soundofforce',"-400% 0%");g.checkClericSkills();soundOfForceMight.kill();}
function soundOfForceTimer(){soundOfForceMight=T.to('',.1,{repeat:-1,onRepeat:soundOfForceReady});}
function soundOfForce(){if(btn.d.soundofforce===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=clr.cost.soundOfForce;if(my.mp<spellMpCost){return;}
currentSpell="Sound of Force";spellCastTime=castSpeedTotal(1000);spellType="evocation";playAudio("spellDoneSlam");if(GLB.videoSetting==="High"){animateLineNova(TGT,'lineNovaMagenta');}
setD('soundofforce',true);BGP('soundofforce',"-400% -100%");T.delayedCall(18,soundOfForceTimer);timerTick(D.getElementById('soundofforce'),18000/1000,'soundofforce');g.drawMyMp(-spellMpCost);var dam=minMax(evocationTotal()*1.8,.9);Chat((mob[TGT].name+" is struck by a sonic force."),3);stunTarget(TGT,5500,-128);g.myMagicDamage("magic",dam,TGT,checkCrit(),"Sound of Force");beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#soundofforce',function(){var spellType="Evocation";var CD="18".fontcolor("#ff0000");var a=TTmag(evocationTotal()*1.8,.9,"magic","Sound of Force");var value1="5.5".fontcolor("#00ff00");NG.tooltipname.innerHTML="Sound of Force";var s="Cost: "+green(clr.cost.soundOfForce)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Sound of Force hits your target for "+a[0]+" to "+a[1]+" arcane damage<br><br>"+"Effect: Stuns your target for "+value1+" seconds.";NG.tooltipmsg.innerHTML=s;});});function superiorHealingReady(){if(D.getElementById('superiorhealing').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('superiorhealing',false);BGP('superiorhealing',"-500% 0%");g.checkClericSkills();refreshsuperiorHealing.kill();}
function superiorHealingTimer(){refreshsuperiorHealing=T.to('',.1,{repeat:-1,onRepeat:superiorHealingReady});}
function superiorHealing(){if(btn.d.superiorhealing===true||my.level<3){return;}
if(checkBashFear()===true){return;}
spellMpCost=clr.cost.superiorHealing;if(my.mp<spellMpCost){return;}
currentSpell="Superior Healing";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("superiorHealing");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#superiorhealing',function(){var spellType="Alteration";var CD="7".fontcolor("#ff0000");var a=TTheal((alterationTotal()*2),.9);var value1=(M.ceil((alterationTotal()*1.6)+((wisTotal()-60)*(my.level/50)))+"").fontcolor("#00ff00");var value2=(M.ceil((alterationTotal()*1.6)+((wisTotal()-60)*(my.level/50))+(3+(spellSkillCheck())/4.4))+"").fontcolor("#00ff00");var zig;if(my.level>=28){zig="Mark of Judgement";}else{zig="(Level 28) Mark of Judgement";}
NG.tooltipname.innerHTML="Superior Healing";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.superiorHealing)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Superior Healing heals for "+a[0]+" to "+a[1]+" hit points.<br><br>"+"If "+zig+" is active, Superior Healing inflicts "+value1+" to "+value2+" arcane damage on all targets.";});});g.superiorHealingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateHealing('blue');setD('superiorhealing',true);BGP('superiorhealing',"-500% -100%");T.delayedCall(7,superiorHealingTimer);timerTick(D.getElementById('superiorhealing'),7000/1000,'superiorhealing');g.drawMyMp(-spellMpCost);var healAmount=minMax((alterationTotal()*2),.9);g.popupHeal(healAmount);if(markOfJudgementStatus===true||my.talent12>=20){for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=M.ceil(((((wisTotal()-60)*((evocationTotal()/5)/50)))+(alterationTotal()*1.6)+M.random()*(3+(spellSkillCheck())/4.4)));var mType="magic";var spellName="Superior Healing";g.myMagicDamage(mType,damage,i,checkCrit(),spellName);}}}}
function resolution(){if(btn.d.resolution===true||my.level<5){return;}
if(checkBashFear()===true){return;}
spellMpCost=clr.cost.resolution;if(my.mp<spellMpCost){return;}
currentSpell="Resolution";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("orange");animateCastBar("resolution");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#resolution',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.66)+"").fontcolor("#00ff00");var maximum=(M.ceil((abjurationTotal()*1.02)*((talent2()*12.5/100)+1))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Resolution";var s="Cost: "+green(clr.cost.resolution)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your hit points by "+maximum+" and your armor by "+minimum+" for "+duration+" minutes.";if(my.talent2>0){var x=(talent2()*1.4).toFixed(1)+"%";s+="<BR><BR>Casting haste is increased by "+green(x)+".";}
NG.tooltipmsg.innerHTML=s;});});g.resolutionFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel resolute."),3);if(resolutionStatus===true){armorBuff-=resolutionArmorBoost;maxHpBuff-=resolutionHpBoost;}
resolutionTimeout.kill();resolutionTimeout=T.delayedCall(3240,resolutionExpire);resolutionArmorBoost=M.ceil(abjurationTotal()*.66);resolutionHpBoost=M.ceil((abjurationTotal()*1.02)*((talent2()*12.5/100)+1));maxHpBuff+=resolutionHpBoost;armorBuff+=resolutionArmorBoost;resolutionStatus=true;CStat();g.drawMyHp();var skillName="Resolution";var buffId="hpbuffIcon";var duration=3240000;var spriteX=-448;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('orange','easeInBack',5,25,120,4);}
function resolutionExpire(){resolutionStatus=false;armorBuff-=resolutionArmorBoost;maxHpBuff-=resolutionHpBoost;CStat();g.drawMyHp();}
function resoluteMiracle(){miracleStatus=true;var d=300000;T.delayedCall(d/1000,function(){miracleStatus=false;});animateHealing('yellow');playAudio('spellDoneBuff');addBuffIcon("Miracle","Miracle",d,-448);my.hp=g.maxHpFunct()*.4;Chat("You have been saved by a Miracle!",3);g.drawMyHp();}
function bindingEarthReady(){if(D.getElementById('bindingearth').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('bindingearth',false);BGP('bindingearth',"-600% 0%");g.checkClericSkills();refreshbindingEarth.kill();}
function bindingEarthTimer(){refreshbindingEarth=T.to('',.1,{repeat:-1,onRepeat:bindingEarthReady});}
function bindingEarth(){if(btn.d.bindingearth===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=clr.cost.bindingEarth;if(my.mp<spellMpCost){return;}
currentSpell="Binding Earth";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("bindingEarth");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#bindingearth',function(){var spellType="Alteration";var CD="8".fontcolor("#ff0000");NG.tooltipname.innerHTML="Binding Earth";var s="Cost: "+green(clr.cost.bindingEarth)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Roots your target in place. Rooted targets cannot melee you.";if(my.talent3>0){var a=TTmag((alterationTotal())*((talent3()*1.85)/100),.9,"magic","elemental");s+="<BR><BR>Binding Earth inflicts "+a[0]+" to "+a[1]+" per second while active.";}
NG.tooltipmsg.innerHTML=s;});});g.bindingEarthFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");setD('bindingearth',true);BGP('bindingearth',"-600% -100%");T.delayedCall(8,bindingEarthTimer);timerTick(D.getElementById('bindingearth'),8000/1000,'bindingearth');g.drawMyMp(-spellMpCost);var Slot=TGT;if(checkRootImmune(Slot)===true){Chat((mob[TGT].name+" is immune to Binding Earth."),1);return;}
if(statusResist(Slot)===true){Chat((mob[TGT].name+" resisted Binding Earth."),1);return;}
Chat((mob[TGT].name+" is rooted."),3);var Slot=TGT;var rootFlag=true;stopMob(Slot);mob[Slot].rootStatus=5;$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();animateRoot(Slot,rootFlag);var buffId="rootBuffIcon";var duration=0;var spriteX=-192;addMobBuffIcon("Binding Earth",Slot,buffId,duration,spriteX);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}}
function expelCorruptionReady(){if(D.getElementById('expelcorruption').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('expelcorruption',false);BGP('expelcorruption',"-700% 0%");g.checkClericSkills();refreshexpelCorruption.kill();}
function expelCorruptionTimer(){refreshexpelCorruption=T.to('',.1,{repeat:-1,onRepeat:expelCorruptionReady});}
function expelCorruption(){if(btn.d.expelcorruption===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=clr.cost.expelCorruption;if(my.mp<spellMpCost){return;}
currentSpell="Expel Corruption";spellCastTime=castSpeedTotal(2500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("expelCorruption");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#expelcorruption',function(){var spellType="Evocation";var CD="8".fontcolor("#ff0000");var a=TTmag(evocationTotal()*3.7,.85,"magic","Expel Corruption");var target="your target";if(my.talent9>=20){target="three targets";}
NG.tooltipname.innerHTML="Expel Corruption";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.expelCorruption)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Expel Corruption hits "+target+" for "+a[0]+" to "+a[1]+" arcane damage. Undead targets take an additional "+green("50%")+" damage.";});});g.expelCorruptionFinish=function(bypass){if(!bypass){if(endSpell()===false){return;}}
playAudio("spellDoneFlames");if(!bypass){setD('expelcorruption',true);BGP('expelcorruption',"-700% -100%");T.delayedCall(8,expelCorruptionTimer);timerTick(D.getElementById('expelcorruption'),8000/1000,'expelcorruption');g.drawMyMp(-spellMpCost);}
var Slot=TGT;if(my.talent9>=20){for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(GLB.videoSetting==="High"){animateExpelCorruption(i);}
var dam=minMax(evocationTotal()*3.7,.85);g.myMagicDamage("magic",dam,i,checkCrit(),"Expel Corruption");}}}else{if(GLB.videoSetting==="High"){animateExpelCorruption(Slot);}
var dam=minMax(evocationTotal()*3.7,.85);g.myMagicDamage("magic",dam,Slot,checkCrit(),"Expel Corruption");}}
function animateExpelCorruption(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-100);var e1=can('expelCorruption',5,x2,-100,200,0);T.to(e1,.15,{scaleY:1.59,onComplete:function(){cRem(5,e1);}});var e2=can('expelCorruption',5,x2,-100,200,0);T.to(e2,.15,{scaleY:1.59,alpha:.2});T.to(e2,1.5,{alpha:0,ease:ez.lin,delay:.15,onComplete:function(){cRem(5,e2);}});T.delayedCall(.15,animateTremor,[x2+100,800]);}
function searingRevelationReady(){if(D.getElementById('searingrevelation').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('searingrevelation',false);BGP('searingrevelation',"-800% 0%");refreshsearingRevelation.kill();}
function searingRevelationTimer(){refreshsearingRevelation=T.to('',.1,{repeat:-1,onRepeat:searingRevelationReady});}
function searingRevelation(){if(btn.d.searingrevelation===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Searing Revelation";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("searingRevelation");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#searingrevelation',function(){var spellType="Conjuration";var CD="20".fontcolor("#ff0000");var a=TTmag(alterationTotal()*2.1,.8,"magic","Searing Revelation");var zig="(Level 28) Mark of Judgement";if(my.level>=28){zig="Mark of Judgement";}
NG.tooltipname.innerHTML="Searing Revelation";var s="Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Second<br><br>"+"Searing Revelation dazes your target for "+green("60")+" seconds. Dazed targets' physical attacks have a "+green("30%")+" chance to miss<br><br>"+"If "+zig+" is active, Searing Revelation inflicts "+a[0]+" to "+a[1]+" arcane damage.";if(my.talent10>=1){var b=TTmag(conjurationTotal()*(1+(talent10()*.389)),.8,"magic","Searing Revelation");s+="<BR><BR>Searing Revelation blasts your target for "+b[0]+" to "+b[1]+" arcane damage.";if(my.talent10>=20){s+="<BR><BR>Effect: Searing Revelation has a "+green("24%")+" chance to confuse your target.";}}
NG.tooltipmsg.innerHTML=s;});});g.searingRevelationFinish=function(){if(endSpell()===false){return;}
setD('searingrevelation',true);BGP('searingrevelation',"-800% -100%");T.delayedCall(20,searingRevelationTimer);timerTick(D.getElementById('searingrevelation'),20000/1000,'searingrevelation');playAudio("spellCastHeal3");if(GLB.videoSetting==="High"){animateSearingRevelation(TGT);}
var Slot=TGT;Chat((mob[Slot].name+" is dazed by blistering holy light."),3);var blindDuration=60000;if(mob[Slot].level>my.level){blindDuration-=(M.pow((mob[Slot].level-my.level),1.25));}
if(markOfJudgementStatus===true||my.talent12>=20){var dam=minMax(alterationTotal()*2.1,.8);g.myMagicDamage("magic",dam,Slot,checkCrit(),"Searing Revelation");}
blindTarget(Slot,blindDuration,-256);if(my.talent10>=1){var dam=minMax(conjurationTotal()*(1+(talent10()*.389)),.8);T.delayedCall(.25,function(){g.myMagicDamage("magic",dam,Slot,checkCrit(),"Searing Revelation");});}}
function animateSearingRevelation(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=-450;function doit(count){var y=y2+(90*count)+200;var e1=can('yellowLight3',5,x2-200,y,1000,1000,true);T.to(e1,(1000+(count*200))/1000,{alpha:0,scaleX:0,scaleY:0,onComplete:function(){cRem(5,e1);}});if(count<5){T.delayedCall(.05,function(){doit(++count);});}}
doit(0);}
function martyrsBlessingReady(){if(D.getElementById('martyrsblessing').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('martyrsblessing',false);BGP('martyrsblessing',"-900% 0%");refreshmartyrsBlessing.kill();}
function martyrsBlessingTimer(){refreshmartyrsBlessing=T.to('',.1,{repeat:-1,onRepeat:martyrsBlessingReady});}
$(function(){$NG.window3.on('mouseenter','#martyrsblessing',function(){var spellType="Conjuration";var CD="30".fontcolor("#ff0000");var minimum=30+(talent6()*12.5);var absorb="40%".fontcolor("#00ff00");var duration="10".fontcolor("#00ff00");var ouch=talent6()*6.3;NG.tooltipname.innerHTML="Martyr's Blessing";var s="Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Increase all arcane damage on your target by "+green(minimum+'%')+"."
if(my.talent6>=1){s+=" Damage received is increased by "+green(ouch+'%')+".";}
s+=" Converts "+absorb+" of damage received into mana. Effect lasts for "+duration+" seconds.";NG.tooltipmsg.innerHTML=s;});});function martyrsBlessing(){if(btn.d.martyrsblessing===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
currentSpell="Martyr's Blessing";spellType="conjuration";setD('martyrsblessing',true);BGP('martyrsblessing',"-900% -100%");T.delayedCall(30,martyrsBlessingTimer);timerTick(D.getElementById('martyrsblessing'),30000/1000,'martyrsblessing');castingSpell=1;checkSpellLevelUp();Chat((mob[TGT].name+" is beset by a martyr's will."),3);mob[TGT].martyr=true;CLR.martyr=true;mob[TGT].martyrTiming=T.delayedCall(10,function(){martyrsBlessingExpire(TGT);});var skillName="Martyr's Blessing";var buffId="martyrsBlessingIcon";var duration=10000;var spriteX=-288;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateMartyrsBlessing();}
playAudio("redemption");}
function martyrsBlessingExpire(Slot){mob[Slot].martyr=false;CLR.martyr=false;}
function animateMartyrsBlessing(){var x2=(MOB[TGT].offsetLeft+mob[TGT].cX-25);function doit(count){var rWidth=M.random()*(200)+300;var rHeight=568+M.random()*(100)+50;var p4=can('martyrsBlessing',7,x2,0,50,720);T.to(p4,1.5,{alpha:0,scaleX:rWidth/300,scaleY:rHeight/497,x:x2-(rWidth/2),y:0,onComplete:function(){cRem(7,p4);}});var ranY=M.random()*(90)+630;var ranX=x2+M.random()*(400)-200;var p1=can('yellowparticle50',7,x2-9,-30,7,7);T.to(p1,1.5,{y:ranY,ease:ez.bout});T.to(p1,1.5,{x:ranX,ease:ez.sout});T.to(p1,M.random()*(12)+4,{scaleX:0,scaleY:0,onComplete:function(){cRem(7,p1);}});count++;if(count<20){T.delayedCall(.08,function(){doit(count);});}}
doit(0);var e1=can('yellowLight3',5,x2-175,-300,2560,1544,true);T.to(e1,3.5,{alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});}
function armorOfFaith(){if(btn.d.armoroffaith===true||my.level<15){return;}
if(checkBashFear()===true){return;}
spellMpCost=clr.cost.armorOfFaith;if(my.mp<spellMpCost){return;}
currentSpell="Armor of Faith";spellCastTime=castSpeedTotal(6000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("blue");animateCastBar("armorOfFaith");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#armoroffaith',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var maximum=(M.ceil((abjurationTotal()*1.05)*(1+(talent7()*11.3)/100))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Armor of Faith";var s="Cost: "+green(clr.cost.armorOfFaith)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your armor by "+maximum+" for "+duration+" minutes.";if(my.talent7>0){var x=(talent7()*1.6).toFixed(1)+"%";s+="<BR><BR>Buffs attack haste by "+green(x)+".";}
NG.tooltipmsg.innerHTML=s;});});g.armorOfFaithFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel the favor of the gods upon you."),3);if(armorOfFaithStatus===true){armorBuff-=armorOfFaithArmorBoost;}
armorOfFaithTimeout.kill();armorOfFaithTimeout=T.delayedCall(3240,armorOfFaithExpire);armorOfFaithArmorBoost=M.ceil((abjurationTotal()*1.05)*(1+(talent7()*11.3)/100));armorBuff+=armorOfFaithArmorBoost;armorOfFaithStatus=true;CStat();var skillName="Armor of Faith";var buffId="armorOfFaithIcon";var duration=3240000;var spriteX=-480;armorOfFaithIconTimer.kill();armorOfFaithIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('blue','easeInBack',5,25,120,5);}
function armorOfFaithExpire(){armorOfFaithStatus=false;armorBuff-=armorOfFaithArmorBoost;CStat();}
function divineSanctuary(){if(btn.d.divinesanctuary===true||my.level<20){return;}
if(checkBashFear()===true){return;}
spellMpCost=clr.cost.divineSanctuary;if(my.mp<spellMpCost){return;}
currentSpell="Divine Sanctuary";spellCastTime=castSpeedTotal(3000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("divineSanctuary");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#divinesanctuary',function(){var spellType="Abjuration";var duration="36".fontcolor("#00ff00");var maximum=(M.ceil(abjurationTotal()*.3)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Divine Sanctuary";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.divineSanctuary)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs all resistances by "+maximum+" for "+duration+" minutes.";});});g.divineSanctuaryFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are protected by a chromatic shell."),3);if(divineSanctuaryStatus===true){svpoisonBuff-=divineSanctuaryPoisonBoost;svmagicBuff-=divineSanctuaryMagicBoost;svlightningBuff-=divineSanctuaryLightningBoost;svcoldBuff-=divineSanctuaryColdBoost;svfireBuff-=divineSanctuaryFireBoost;}
divineSanctuaryTimeout.kill();divineSanctuaryTimeout=T.delayedCall(2160,divineSanctuaryExpire);divineSanctuaryPoisonBoost=M.ceil(abjurationTotal()*.3);divineSanctuaryMagicBoost=M.ceil(abjurationTotal()*.3);divineSanctuaryLightningBoost=M.ceil(abjurationTotal()*.3);divineSanctuaryColdBoost=M.ceil(abjurationTotal()*.3);divineSanctuaryFireBoost=M.ceil(abjurationTotal()*.3);svpoisonBuff+=divineSanctuaryPoisonBoost;svmagicBuff+=divineSanctuaryMagicBoost;svlightningBuff+=divineSanctuaryLightningBoost;svcoldBuff+=divineSanctuaryColdBoost;svfireBuff+=divineSanctuaryFireBoost;divineSanctuaryStatus=true;CStat();var skillName="Divine Sanctuary";var buffId="divineSanctuaryIcon";var duration=2160000;var spriteX=-512;divineSanctuaryIconTimer.kill();divineSanctuaryIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff("yellow",'easeInBack',5,25,120,3);}
function divineSanctuaryExpire(){divineSanctuaryStatus=false;svpoisonBuff-=divineSanctuaryPoisonBoost;svmagicBuff-=divineSanctuaryMagicBoost;svlightningBuff-=divineSanctuaryLightningBoost;svcoldBuff-=divineSanctuaryColdBoost;svfireBuff-=divineSanctuaryFireBoost;CStat();}
function symbolOfNaltron(){if(btn.d.symbolofnaltron===true||my.level<32){return;}
if(checkBashFear()===true){return;}
spellMpCost=clr.cost.symbolOfNaltron;if(my.mp<spellMpCost){return;}
currentSpell="Symbol of Yentus";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("symbolOfNaltron");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#symbolofnaltron',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.95)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Symbol of Yentus";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.symbolOfNaltron)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your hit points by "+minimum+" for "+duration+" minutes.";});});g.symbolOfNaltronFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("The Symbol of Yentus flashes before your eyes."),3);if(symbolOfNaltronStatus===true){maxHpBuff-=symbolOfNaltronBoost;}
symbolOfNaltronTimeout.kill();symbolOfNaltronTimeout=T.delayedCall(3240,symbolOfNaltronExpire);symbolOfNaltronBoost=M.ceil(abjurationTotal()*.95);maxHpBuff+=symbolOfNaltronBoost;symbolOfNaltronStatus=true;CStat();g.drawMyHp();var skillName="Symbol of Yentus";var buffId="symbolOfNaltronIcon";var duration=3240000;var spriteX=-544;symbolOfNaltronIconTimer.kill();symbolOfNaltronIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('teal','easeInBack',5,25,150,6);}
function symbolOfNaltronExpire(){symbolOfNaltronStatus=false;maxHpBuff-=symbolOfNaltronBoost;CStat();g.drawMyHp();}
function guardianAngelReady(){if(D.getElementById('guardianangel').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
setD('guardianangel',false);BGP('guardianangel',"-1000% 0%");refreshguardianAngel.kill();g.checkClericSkills();guardianAngelStatus=true;}
function guardianAngelTimer(){refreshguardianAngel=T.to('',.1,{repeat:-1,onRepeat:guardianAngelReady});}
$(function(){$NG.window3.on('mouseenter','#guardianangel',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var CD="30".fontcolor("#ff0000");var shieldAmount=(M.ceil(((abjurationTotal()*.8)*(1+(talent8()*2.25)/100)))+"").fontcolor("#00ff00");var a=TTmag(alterationTotal()*1.7,.85,"magic","Guardian Angel");var zig;if(my.level>=28){zig="Mark of Judgement";}else{zig="(Level 28) Mark of Judgement";}
NG.tooltipname.innerHTML="Guardian Angel";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.guardianAngel)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"A guardian angel intervenes on your behalf to shield you from all damage. Your guardian angel absorbs "+shieldAmount+" damage.<br><br>"+"Effect: Can be used while stunned or feared.<br><br>"+"If "+zig+" is active, all targets receive "+a[0]+" to "+a[1]+" arcane damage.";});});function guardianAngel(){if(my.hp<=0||paused===true){return;}
if(btn.d.guardianangel===true||my.level<17){return;}
spellMpCost=clr.cost.guardianAngel;if(my.mp<spellMpCost){return;}
g.drawMyMp(-spellMpCost);setD('guardianangel',true);BGP('guardianangel',"-1000% -100%");T.delayedCall(30,guardianAngelTimer);timerTick(D.getElementById('guardianangel'),30000/1000,'guardianangel');currentSpell="Guardian Angel";spellType="abjuration";Chat(("A guardian angel intervenes on your behalf."),3);if(Set.Venova>=6){function doit2(count){if(count<5){T.delayedCall(.25,function(){g.expelCorruptionFinish(true);doit2(++count);});}}
T.delayedCall(1.25,function(){doit2(0);});}
checkSpellLevelUp();shieldHp=M.ceil(((abjurationTotal()*.8)*(1+(talent8()*2.25)/100)));guardianAngelStatus=false;if(markOfJudgementStatus===true||my.talent12>=20){for(var i=0;i<=4;i++){if(mob[i].name!==""){var dam=minMax(alterationTotal()*1.7,.85);g.myMagicDamage("magic",dam,i,checkCrit(),"Guardian Angel");}}}
removeIcon("guardianAngelIcon");addBuffIcon("Guardian Angel","guardianAngelIcon",0,-320);if(GLB.videoSetting==="High"){function doit(){animateGuardianAngel();}
var d=0;for(var i=0;i<10;i++){T.delayedCall(d/1000,function(){doit();});d+=150;}
animateBuffRings();}
playAudio("spellDoneBuff");}
function animateGuardianAngel(){flashScreen("#ff0",.3,2);var e1=can('guardianAngel',5,415,400,0,0,true);T.to(e1,3,{alpha:0,scaleX:1,scaleY:1,ease:ez.cout,onComplete:function(){cRem(5,e1);}});}
function holyWrathReady(){if(D.getElementById('holywrath').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('holywrath',false);BGP('holywrath',"-1100% 0%");g.checkClericSkills();refreshholyWrath.kill();}
function holyWrathTimer(){refreshholyWrath=T.to('',.1,{repeat:-1,onRepeat:holyWrathReady});}
function holyWrath(){if(btn.d.holywrath===true||my.level<24){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=clr.cost.holyWrath;if(my.mp<spellMpCost){return;}
currentSpell="Holy Wrath";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("holyWrath");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#holywrath',function(){var spellType="Evocation";var CD=40;if(my.talent3>=20){CD=24;}
var a=TTmag(evocationTotal()*3.1,.85,"magic","Holy Wrath");var duration="7.5".fontcolor("#00ff00");var target="your target";if(my.talent4>=20){target="three targets";}
NG.tooltipname.innerHTML="Holy Wrath";NG.tooltipmsg.innerHTML="Cost: "+green(clr.cost.holyWrath)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+red(CD)+" Seconds<br><br>"+"Holy Wrath hits "+target+" for "+a[0]+" to "+a[1]+" arcane damage. Summoned pets take devastating damage.<br><br>"+"Effect: Stuns "+target+" for "+duration+" seconds.";});});g.holyWrathFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneSlam");setD('holywrath',true);BGP('holywrath',"-1100% -100%");var d=40000;if(my.talent3>=20){d=24000;}
T.delayedCall(d/1000,holyWrathTimer);timerTick(D.getElementById('holywrath'),d/1000,'holywrath');g.drawMyMp(-spellMpCost);var Slot=TGT;if(my.talent4>=20){for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(GLB.videoSetting==="High"){animateHolyWrath(i);}
var dam=minMax(evocationTotal()*3.1,.85);if(mob[i].name.indexOf(" pet")!==-1){dam=dam*6;}
Chat((mob[i].name+" is struck by a sonic force."),3);stunTarget(i,7500,-352);g.myMagicDamage("magic",dam,i,checkCrit(),"Holy Wrath");}}}else{if(GLB.videoSetting==="High"){animateHolyWrath(Slot);}
var dam=minMax(evocationTotal()*3.1,.85);if(mob[Slot].name.indexOf(" pet")!==-1){dam=dam*6;}
Chat((mob[Slot].name+" is struck by a sonic force."),3);stunTarget(Slot,7500,-352);g.myMagicDamage("magic",dam,Slot,checkCrit(),"Holy Wrath");}}
function animateHolyWrath(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);var p3=can('holyMight',5,x2-100,y2-100,200,200);T.to(p3,.25,{alpha:0,onComplete:function(){cRem(5,p3);}});var p4=can('lineNova',7,x2-200,y2-200,400,400);p4.alpha=0;T.to(p4,.15,{alpha:.3,scaleX:1.25,scaleY:1.25,y:y2-250,x:x2-250,onComplete:function(){T.to(p4,.45,{alpha:0,scaleX:2,scaleY:2,y:y2-400,x:x2-400,ease:ez.lin,onComplete:function(){cRem(7,p4);}});}});}
function markOfJudgementReady(){if(D.getElementById('markofjudgement').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('markofjudgement',false);BGP('markofjudgement',"-1200% 0%");refreshmarkOfJudgement.kill();}
function markOfJudgementTimer(){refreshmarkOfJudgement=T.to('',.1,{repeat:-1,onRepeat:markOfJudgementReady});}
function markOfJudgement(){if(btn.d.markofjudgement===true||my.level<28){return;}
if(checkBashFear()===true){return;}
currentSpell="Mark of Judgement";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("markOfJudgement");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#markofjudgement',function(){var spellType="Conjuration";var CD="30".fontcolor("#ff0000");if(my.talent11>=20){CD=green("20");}
var duration="6".fontcolor("#00ff00");NG.tooltipname.innerHTML="Mark of Judgement";var s="Cast Time: "+castTimeTT(1500)+" Second<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Mark of Judgement empowers all holy magic by "+green("75%")+" and reduces cast time by "+green("50%")+" for "+duration+" seconds.";if(my.talent11>0){var a=TTmag(conjurationTotal()*(1+(talent11()*.26)),.8,"magic","Holy Nova");s+="<BR><BR>Holy Nova hits all targets for "+a[0]+" to "+a[1]+" arcane damage.";}
s+="<BR><BR>Effect: While Mark of Judgement is active, Superior Healing, Searing Revelation, Guardian Angel, and Benediction will unleash a magical offensive attack.";NG.tooltipmsg.innerHTML=s;});});g.markOfJudgementFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");if(GLB.videoSetting==="High"){animateMarkOfJudgement();}
setD('markofjudgement',true);BGP('markofjudgement',"-1200% -100%");var d=30000;if(my.talent11>=20){d=20000;}
T.delayedCall(d/1000,markOfJudgementTimer);timerTick(D.getElementById('markofjudgement'),d/1000,'markofjudgement');Chat(("You glimmer with the judgement of holy light."),3);var d=6000;var buffId="markOfJudgementIcon";markOfJudgementStatus=true;markOfJudgementTiming=T.delayedCall(d/1000,markOfJudgementExpire);T.delayedCall(d/1000,function(){removeIcon(buffId);});addBuffIcon("Mark of Judgement",buffId,d,-384);if(my.talent11>=1){animateNova('lightningNova');animateNova('lightningNova');for(var i=0;i<=4;i++){if(mob[i].name!==""){var dam=minMax(conjurationTotal()*(1+(talent11()*.26)),.8);g.myMagicDamage("magic",dam,i,checkCrit(),"Holy Nova");}}}}
function animateMarkOfJudgement(){var c1=img("yellowparticle50");function doIt(count){var x=(M.random()*(1380)-50);var y=(M.random()*425);var e1=cacheAdd(c1,5,x,y,.3,.3,true);T.to(e1,M.random()*(1)+1,{x:640,y:720,scaleX:1,scaleY:1,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});count++;if(count<40){doIt(count);}}
doIt(0);}
function markOfJudgementExpire(){markOfJudgementStatus=false;}
function benedictionReady(){if(D.getElementById('benediction').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('benediction',false);BGP('benediction',"-1300% 0%");g.checkClericSkills();refreshbenediction.kill();}
function benedictionTimer(){refreshbenediction=T.to('',.1,{repeat:-1,onRepeat:benedictionReady});}
$(function(){$NG.window3.on('mouseenter','#benediction',function(){var spellType="Conjuration";var duration="1".fontcolor("#00ff00");var a=TTmag(conjurationTotal()*(1+(talent12()*.475)),.75,"magic","Benediction");var duration1="7".fontcolor("#00ff00");var duration2="15".fontcolor("#00ff00");NG.tooltipname.innerHTML="Benediction";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br>"+"Cooldown: "+green("60")+" Seconds<br><br>"+"Benediction summons a blast of holy light, stunning all targets for "+duration1+" to "+duration2+" seconds.<br><br>"+"If Mark of Judgment is active, Benediction inflicts "+a[0]+" to "+a[1]+" arcane damage.";});});function benediction(){if(btn.d.benediction===true||my.level<38){return;}
if(checkBashFear()===true){return;}
setD('benediction',true);BGP('benediction',"-1300% -100%");T.delayedCall(60,benedictionTimer);timerTick(D.getElementById('benediction'),60000/1000,'benediction');currentSpell="Benediction";spellType="conjuration";Chat(("A pillar of light beams down from the heavens."),3);checkSpellLevelUp();g.drawMyMp(-spellMpCost);playAudio("handofgod");for(var i=0;i<=4;i++){if(mob[i].name!==""){if(!mob[i].phased&&mob[i].name){MOB[i].style.opacity=1;}
var stunDuration=7000+M.random()*(8000);if(GLB.videoSetting==="High"){animateBenediction(i);}
stunTarget(i,stunDuration,-416);if(my.talent12>=1){var dam=minMax(conjurationTotal()*(1+(talent12()*.475)),.75);g.myMagicDamage("magic",dam,i,checkCrit(),"Benediction");}}}
if(markOfJudgementStatus===true||my.talent12>=20){for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=M.ceil(((((wisTotal()-60)*((conjurationTotal()/5)/50)))+(alterationTotal()*3.5)+M.random()*(3+(spellSkillCheck())/4.4)));var mType="magic";var spellName="Benediction";g.myMagicDamage(mType,damage,i,checkCrit(),spellName);}}}}
function animateBenediction(Slot,disable){if(!mob[Slot].name){return;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-200);var p5=can('benediction',5,x2,-100,400,0);T.to(p5,.15,{y:0,scaleY:675/497,onComplete:function(){cRem(5,p5);}});var p3=can('benediction',5,x2,-100,400,0);T.to(p3,.15,{y:0,scaleY:675/497,alpha:.2,onComplete:function(){T.to(p3,1.5,{alpha:0,ease:ez.lin,onComplete:function(){cRem(5,p3);}});}});T.delayedCall(.15,animateTremor,[x2+200,1200]);if(!disable){var p4=can('benedictionFloor',7,0,397,1280,400);T.to(p4,3,{alpha:0,onComplete:function(){cRem(7,p4);}});}}
function starfireReady(){if(D.getElementById('starfire').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('starfire',false);BGP('starfire',"-300% 0%");g.checkDruidSkills();refreshStarfire.kill();}
function starfireTimer(){refreshStarfire=T.to('',.1,{repeat:-1,onRepeat:starfireReady});}
function starfire(){if(btn.d.starfire===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Starfire";spellCastTime=castSpeedTotal(3000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("starfire");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#starfire',function(){var spellType="Evocation";var a=TTmag(3+evocationTotal()*2.7,.8,"fire","Starfire");NG.tooltipname.innerHTML="Starfire";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Starfire hits your target for "+a[0]+" to "+a[1]+" fire damage.";});});g.starfireFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBoom");if(GLB.videoSetting==="High"){animateStarfire(TGT);}
var dam=minMax(3+evocationTotal()*2.7,.8);g.myMagicDamage("fire",dam,TGT,checkCrit(),"Starfire");}
function animateStarfire(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var x2=(cX-100);var y2=(cY-100);var e1=can('ignite',5,x2,y2,200,200,true);T.to(e1,.6,{scaleX:2,scaleY:2,alpha:0,onComplete:function(){cRem(5,e1);}});particleBurst(Slot,'orange','blank');}
function dronesOfDoomReady(){if(D.getElementById('dronesofdoom').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('dronesofdoom',false);BGP('dronesofdoom',"-400% 0%");g.checkDruidSkills();refreshdronesOfDoom.kill();}
function dronesOfDoomTimer(){refreshdronesOfDoom=T.to('',.1,{repeat:-1,onRepeat:dronesOfDoomReady});}
function dronesOfDoom(){if(btn.d.dronesofdoom===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=dru.cost.dronesOfDoom;if(my.mp<spellMpCost){return;}
currentSpell="Drones of Doom";spellCastTime=castSpeedTotal(2000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("dronesOfDoom");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#dronesofdoom',function(){var spellType="Conjuration";var a=TTdot(1+conjurationTotal()*.33,.9,"magic","Drones of Doom");var value1="15%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Drones of Doom";var s="Cost: "+green(dru.cost.dronesOfDoom)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Drones of Doom ticks for "+a[0]+" to "+a[1]+" arcane damage every second for 18 seconds.";if(my.talent1>=20){s+="<BR><BR>Affected mobs' damage is reduced by "+green("10%")+".";}
NG.tooltipmsg.innerHTML=s;});});g.dronesOfDoomFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateDot(TGT,"yellow",150,40,20,200,ez.Bin,15,3,-100,.9);g.drawMyMp(-spellMpCost);spellDamage=minMax(1+conjurationTotal()*.33,.9);Chat((mob[TGT].name+" is engulfed by a swarm."),3);var Slot=TGT;mob[Slot].dronesOfDoomTickCount=1;mob[Slot].dronesOfDoomTick=spellDamage;mob[Slot].dronesOfDoomTickInterval.kill();mob[Slot].dronesOfDoomTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){dronesOfDoomTick("magic",Slot);}});g.checkDruidSkills();addMobBuffIcon("Drones of Doom",Slot,"dronesOfDoomIcon",18000,-128);if(mob[TGT].attackStatus===1){attackOn(true);}}
function dronesOfDoomTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].dronesOfDoomTickInterval.kill();mob[Slot].dronesOfDoomTickCount=0;return;}
g.myDotDamage(mob[Slot].dronesOfDoomTick,Slot,mType,"Drones of Doom");mob[Slot].dronesOfDoomTickCount+=1;if(mob[Slot].dronesOfDoomTickCount===19){mob[Slot].dronesOfDoomTickInterval.kill();mob[Slot].dronesOfDoomTickCount=0;}}
function procDot(Slot,damage,name,type,ticks,interval,sound){if(!mob[Slot].name){return;}
var proc=uniqueId();addMobBuffIcon(name,Slot,name.replace(/ /g,'')+"Icon"+proc,0,-32);function tick(count,proc,damage){if(mob[Slot].name===""){return;}
g.myDotDamage(damage,Slot,type);count++;if(name==="Curse of the Spirits"){damage+=7;}
if(count===ticks){removeMobIcon(name.replace(/ /g,'')+"Icon"+proc,Slot);}else{T.delayedCall(interval/1000,function(){tick(count,proc,damage);});}}
T.delayedCall(1,function(){tick(0,proc,damage);});if(!sound){playAudio("spellDoneHeal");}else{playAudio(sound);}}
function bleedTarget(Slot,ticks,interval,spriteX){if(!mob[Slot].name){return;}
if(!spriteX){spriteX=-32;}
addMobBuffIcon("Bleed",Slot,"bleedIcon",ticks*interval,spriteX,-32);if(typeof timers.bleed==='object'){timers.bleed.kill();}else{timers.bleed=TDC();}
var d=interval/1000;var multi=3;var t=P.eq[12].type;if(t==="pierced"){multi=17;}else if(t==="slashed"){multi=13;}else if(t==="crushed"||t==="punched"){multi=9;}else if(t==="cleaved"){multi=4;}else{multi=3;}
var dam=M.ceil(P.eq[12].damage*multi);function tick(count){if(mob[Slot].name!==""){g.myDotDamage(M.ceil(dam),Slot,"physical");animateBloodDrop(Slot);count++;if(count<ticks){timers.bleed=T.delayedCall(d,function(){tick(count);});}}}
timers.bleed=T.delayedCall(d,function(){tick(0);});}
function druHealingReady(){if(D.getElementById('druhealing').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('druhealing',false);BGP('druhealing',"-500% 0%");g.checkDruidSkills();refreshdruHealing.kill();}
function druHealingTimer(){refreshdruHealing=T.to('',.1,{repeat:-1,onRepeat:druHealingReady});}
function druHealing(){if(btn.d.druhealing===true||my.level<3){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.greaterHealing;if(my.mp<spellMpCost){return;}
currentSpell="Greater Healing";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("teal");animateCastBar("druHealing");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#druhealing',function(){var spellType="Alteration";var CD="6".fontcolor("#ff0000");var a=TTheal((alterationTotal()*1.8)*(1+((talent2()*1.25)/100)),.9);var b=TTheal(((alterationTotal()*1.8)*(1+((talent2()*1.25)/100)))/20,.9);NG.tooltipname.innerHTML="Greater Healing";var s="Cost: "+green(dru.cost.greaterHealing)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Greater Healing heals for "+a[0]+" to "+a[1]+" hit points.";if(my.talent2>=20){s+="<BR><BR>Greater Healing leaves a regen effect healing "+b[0]+" to "+b[1]+" health every second over six seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.druHealingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateHealing("teal");setD('druhealing',true);BGP('druhealing',"-500% -100%");T.delayedCall(6,druHealingTimer);timerTick(D.getElementById('druhealing'),6000/1000,'druhealing');g.drawMyMp(-spellMpCost);var healAmount=minMax((alterationTotal()*1.8)*(1+((talent2()*1.25)/100)),.9);g.popupHeal(healAmount);if(my.talent2>=20){var heal2=M.ceil(healAmount/20);var proc=uniqueId();addBuffIcon("Rinara's Kiss","tunaresKissIcon"+proc,7000,-160);function doit3(count,proc){if(my.hp<=0){removeIcon("tunaresKissIcon"+proc);return;}
count++;g.popupHeal(heal2);if(count<6){T.delayedCall(1,function(){doit3(count,proc);});}else{removeIcon("tunaresKissIcon"+proc);}}
var count=0;T.delayedCall(1,function(){doit3(count,proc);});}}
function skinLikeNature(){if(btn.d.skinlikenature===true||my.level<5){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.skinLikeNature;if(my.mp<spellMpCost){return;}
currentSpell="Skin Like Nature";spellCastTime=castSpeedTotal(4500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("skinLikeNature");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#skinlikenature',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.35)+"").fontcolor("#00ff00");var maximum=(M.ceil((abjurationTotal()*.6)*((talent4()*9.5/100)+1))+"").fontcolor("#00ff00");var value1=((M.ceil(my.level/12)+1)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Skin Like Nature";NG.tooltipmsg.innerHTML="Cost: "+green(dru.cost.skinLikeNature)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Skin Like Nature buffs your hit points by "+maximum+" and your armor by "+minimum+" for "+duration+" minutes.<br><br>"+"Effect: Buffs your passive health regeneration by "+value1+" per tick.";});});g.skinLikeNatureFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('green','easeInBack',5,25,120,4);g.drawMyMp(-spellMpCost);Chat(("Your skin shimmers with divine power."),3);if(skinLikeNatureStatus===true){maxHpBuff-=skinLikeNatureHpBoost;armorBuff-=skinLikeNatureArmorBoost;}
skinLikeNatureTimeout.kill();skinLikeNatureTimeout=T.delayedCall(3240,skinLikeNatureExpire);skinLikeNatureArmorBoost=M.ceil(abjurationTotal()*.35);skinLikeNatureHpBoost=M.ceil((abjurationTotal()*.6)*((talent4()*9.5/100)+1));maxHpBuff+=skinLikeNatureHpBoost;armorBuff+=skinLikeNatureArmorBoost;skinLikeNatureStatus=true;CStat();g.drawMyHp();var skillName="Skin Like Nature";var buffId="skinLikeNatureIcon";var duration=3240000;var spriteX=-448;skinLikeNatureIconTimer.kill();skinLikeNatureIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);setEquipValues();}
function skinLikeNatureExpire(){skinLikeNatureStatus=false;armorBuff-=skinLikeNatureArmorBoost;maxHpBuff-=skinLikeNatureHpBoost;CStat();g.drawMyHp();setEquipValues();}
function tornadoReady(){if(D.getElementById('tornado').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('tornado',false);BGP('tornado',"-600% 0%");g.checkDruidSkills();refreshtornado.kill();}
function tornadoTimer(){refreshtornado=T.to('',.1,{repeat:-1,onRepeat:tornadoReady});}
function tornado(){if(btn.d.tornado===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Tornado";spellType="evocation";playAudio("windcast");if(my.talent5<20){setD('tornado',true);BGP('tornado',"-600% -100%");T.delayedCall(6,tornadoTimer);timerTick(D.getElementById('tornado'),6000/1000,'tornado');}
var dam=minMax((evocationTotal()*1.6)*(1+((talent5()*3)/100))*(g.mobDefense(TGT)),.8);executeTornado(TGT,dam,0);var delay=0;cache.tornado=img("tornado",250,373);while(M.random()>.25){delay+=100;var Slot=selectRandomTarget();var dam=minMax((evocationTotal()*.55)*(1+((talent5()*3)/100))*(g.mobDefense(Slot)),.8);executeTornado(Slot,dam,delay);}
T.delayedCall(.5,function(){playAudio("windcast");});beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#tornado',function(){var spellType="Evocation";var CD="6".fontcolor("#ff0000");var a=TTmag((evocationTotal()*1.6)*(1+((talent5()*3)/100)),.8,"physical","Tornado");var b=TTmag((evocationTotal()*.55)*(1+((talent5()*3)/100)),.8,"physical","Tornado");NG.tooltipname.innerHTML="Tornado";var s="Spell Type: "+spellType;if(my.talent5<20){s+="<br>Cooldown: "+CD+" Seconds";}
s+="<br><br>Tornado hits your target for "+a[0]+" to "+a[1]+" physical damage. <BR><BR>Secondary tornadoes have a chance to hit random targets for "+b[0]+" to "+b[1]+" physical damage.";NG.tooltipmsg.innerHTML=s;});});function executeTornado(Slot,dam,delay){if(mob[Slot].name===""){return;}
if(GLB.videoSetting==="High"){T.delayedCall(delay/1000,function(){animateTornado(Slot);});};T.delayedCall((500+delay)/1000,function(){g.myMagicDamage("physical",dam,Slot,checkCrit(),"Tornado");});}
function animateTornado(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var e1=cacheAdd(cache.tornado,5,(M.random()*400+315),480,1,1,true);flipImg(e1);T.to(e1,.5,{scaleX:e1.scaleX*.75,scaleY:e1.scaleY*.75,x:cX,y:490,onComplete:function(){cRem(5,e1);}});}
function engulfingRootsReady(){if(D.getElementById('engulfingroots').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('engulfingroots',false);BGP('engulfingroots',"-700% 0%");g.checkDruidSkills();refreshengulfingRoots.kill();}
function engulfingRootsTimer(){refreshengulfingRoots=T.to('',.1,{repeat:-1,onRepeat:engulfingRootsReady});}
function engulfingRoots(){if(btn.d.engulfingroots===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=dru.cost.engulfingRoots;if(my.mp<spellMpCost){return;}
currentSpell="Engulfing Roots";spellCastTime=castSpeedTotal(1000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("engulfingRoots");playAudio("spellCastAbjure",0,spellCastTime);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}}
$(function(){$NG.window3.on('mouseenter','#engulfingroots',function(){var spellType="Alteration";var a=TTmag((alterationTotal()*1.6),.85,"physical","Engulfing Roots");NG.tooltipname.innerHTML="Engulfing Roots";var s="Cost: "+green(dru.cost.engulfingRoots)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+red(6)+" Seconds<br><br>"+"Engulfing Roots hits your target for "+a[0]+" to "+a[1]+" hit points. Your target is rooted, leaving them unable to physically attack you.";if(my.talent3>0){var b=TTmag((alterationTotal()/6)*((talent3()*6.5)/100),.9,"poison","elemental");s+="<BR><BR>Elemental damage strikes for "+b[0]+" to "+b[1]+" poison damage every second while rooted.";}
NG.tooltipmsg.innerHTML=s;});});g.engulfingRootsFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");setD('engulfingroots',true);BGP('engulfingroots',"-700% -100%");T.delayedCall(6,engulfingRootsTimer);timerTick(D.getElementById('engulfingroots'),6000/1000,'engulfingroots');g.drawMyMp(-spellMpCost);var Slot=TGT;if(checkRootImmune(Slot)===true){Chat((mob[Slot].name+" is immune to Engulfing Roots."),1);return;}
if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted Engulfing Roots."),1);return;}
Chat((mob[Slot].name+" is rooted."),3);var rootFlag=true;stopMob(Slot);mob[Slot].rootStatus=5;$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();animateRoot(Slot,rootFlag);var dam=minMax((alterationTotal()*1.6)*(g.mobDefense(TGT)),.85);g.myMagicDamage("physical",dam,TGT,checkCrit(),"Engulfing Roots");var buffId="rootBuffIcon";addMobBuffIcon("Engulfing Roots",Slot,buffId,0,-224);}
function shieldOfSpikes(){if(btn.d.shieldofspikes===true||my.level<11){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.shieldOfSpikes;if(my.mp<spellMpCost){return;}
currentSpell="Shield of Spikes";spellCastTime=castSpeedTotal(1500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("shieldOfSpikes");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shieldofspikes',function(){var spellType="Abjuration";var duration="15".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.11)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Shield of Spikes";NG.tooltipmsg.innerHTML="Cost: "+green(dru.cost.shieldOfSpikes)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buff yourself with a shield of spikes for "+duration+" minutes. Shield of Spikes reflects "+minimum+" physical damage every time you take physical damage.";});});g.shieldOfSpikesFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff("green",'easeInQuad',25,11,120,3);g.drawMyMp(-spellMpCost);Chat(("You are covered in a veil of thorns."),3);shieldOfSpikesStatus=true;shieldOfBramblesTimeout.kill();shieldOfBramblesTimeout=T.delayedCall(720,shieldOfSpikesExpire);var skillName="Shield of Spikes";var buffId="shieldOfSpikesIcon";var duration=900000;var spriteX=-480;shieldOfSpikesIconTimer.kill();shieldOfSpikesIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function shieldOfSpikesExpire(){shieldOfBramblesStatus=false;}
function driftingDeathReady(){if(D.getElementById('driftingdeath').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('driftingdeath',false);BGP('driftingdeath',"-800% 0%");g.checkDruidSkills();refreshdriftingDeath.kill();}
function driftingDeathTimer(){refreshdriftingDeath=T.to('',.1,{repeat:-1,onRepeat:driftingDeathReady});}
function driftingDeath(){if(btn.d.driftingdeath===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.driftingDeath;if(my.mp<spellMpCost){return;}
currentSpell="Drifting Death";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("driftingDeath");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#driftingdeath',function(){var spellType="Conjuration";var a=TTdot(conjurationTotal()*.5,.9,"magic","Drifting Death");NG.tooltipname.innerHTML="Drifting Death";var s="Cost: "+green(dru.cost.driftingDeath)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Drifting Death engulfs all targets and ticks for "+a[0]+" to "+a[1]+" arcane damage every second for 24 seconds.";if(my.talent10>=20){s+="<BR><BR>Spells ignore all resists of mobs affected by Drifting Death.";}
NG.tooltipmsg.innerHTML=s;});});g.driftingDeathFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name){spellDamage=minMax(conjurationTotal()*.5,.9);Chat((mob[i].name+" is engulfed by a thousand stings."),3);mob[i].driftingDeathTickCount=1;mob[i].driftingDeathTick=spellDamage;mob[i].driftingDeathTickInterval.kill();driftingDeathTickDelay("magic",i);addMobBuffIcon("Drifting Death",i,"driftingDeathIcon",24000,-256);animateDot(i,'green',300,40,20,-300,ez.Qin,5,12,100,1.5);}}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function driftingDeathTickDelay(mType,i){mob[i].driftingDeathTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){driftingDeathTick(mType,i);}});}
function driftingDeathTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].driftingDeathTickInterval.kill();mob[Slot].driftingDeathTickCount=0;return;}
g.myDotDamage(mob[Slot].driftingDeathTick,Slot,mType,"Drifting Death");mob[Slot].driftingDeathTickCount+=1;if(mob[Slot].driftingDeathTickCount===25){mob[Slot].driftingDeathTickInterval.kill();mob[Slot].driftingDeathTickCount=0;}}
function druSow(){if(btn.d.drusow===true||my.level<15){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.spiritOfTheWolf;if(my.mp<spellMpCost){return;}
currentSpell="Spirit of the Wolf";spellCastTime=castSpeedTotal(3500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("druSow");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#drusow',function(){var spellType="Alteration";var duration="30".fontcolor("#00ff00");var minimum="15%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Spirit of the Wolf";NG.tooltipmsg.innerHTML="Cost: "+green(dru.cost.spiritOfTheWolf)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Spirit of the Wolf buffs your attack power by "+minimum+" and your chance to run from battle for "+duration+" minutes.";});});g.druSowFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('teal','easeInSine',5,15,100,3);g.drawMyMp(-spellMpCost);Chat(("You are surrounded by a brief lupine aura."),3);spiritOfTheWolfTimeout.kill();spiritOfTheWolfTimeout=T.delayedCall(1800,druSowExpire);sowStatus=true;CStat();var skillName="Spirit of the Wolf";var buffId="spiritOfTheWolfIcon";var duration=1800000;var spriteX=-512;spiritOfTheWolfIconTimer.kill();spiritOfTheWolfIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function druSowExpire(){sowStatus=false;CStat();}
function lightningBlastReady(){if(D.getElementById('lightningblast').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('lightningblast',false);BGP('lightningblast',"-900% 0%");g.checkDruidSkills();refreshlightningBlast.kill();}
function lightningBlastTimer(){refreshlightningBlast=T.to('',.1,{repeat:-1,onRepeat:lightningBlastReady});}
function lightningBlast(){if(btn.d.lightningblast===true||my.level<17){return;}
if(checkBashFear()===true){return;}
spellMpCost=0;currentSpell="Lightning Blast";spellCastTime=castSpeedTotal(2000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("lightningBlast");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#lightningblast',function(){var spellType="Evocation";var CD="10".fontcolor("#ff0000");var a=TTmag(evocationTotal()*4,.4,"lightning","Lightning Blast");NG.tooltipname.innerHTML="Lightning Blast";var s="Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Lightning Blast hits all targets for "+a[0]+" to "+a[1]+" lightning damage.";if(my.talent11>=20){s+="<BR><BR>Effect: Lightning Blast stuns each target for a random duration.";}
NG.tooltipmsg.innerHTML=s;});});g.lightningBlastFinish=function(){if(endSpell()===false){return;}
playAudio("lightning"+~~(M.random()*(3)+1));setD('lightningblast',true);BGP('lightningblast',"-900% -100%");T.delayedCall(10,lightningBlastTimer);timerTick(D.getElementById('lightningblast'),10000/1000,'lightningblast');for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=minMax(evocationTotal()*4,.4);var mType="lightning";var spellName="Lightning Blast";if(GLB.videoSetting==="High"){animateLightningBlast(i);}
g.myMagicDamage(mType,damage,i,checkCrit(),spellName);if(my.talent11>=20){stunTarget(i,(M.pow(M.random()*(1)+1,2)*1000),-288);}}}}
function animateLightningBlast(Slot){if(!mob[Slot].name||GLB.videoSetting==="Low"){return;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var x2=(cX-175);var e1=can('lightningBlast',5,x2,100,350,697,true);flipImg(e1);T.to(e1,.25,{alpha:.1,onComplete:function(){T.to(e1,2.5,{alpha:0,onComplete:function(){cRem(5,e1);}});}});}
function earthquakeReady(){if(D.getElementById('earthquake').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('earthquake',false);BGP('earthquake',"-1000% 0%");g.checkDruidSkills();refreshearthquake.kill();}
function earthquakeTimer(){refreshearthquake=T.to('',.1,{repeat:-1,onRepeat:earthquakeReady});}
function earthquake(){if(btn.d.earthquake===true||my.level<20){return;}
if(checkBashFear()===true){return;}
spellMpCost=0;currentSpell="Earthquake";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("orange");animateCastBar("earthquake");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#earthquake',function(){var spellType="Evocation";var CD="50".fontcolor("#ff0000");if(my.talent6>=20){CD=red("38");}
var a=TTdot(((evocationTotal()*.95)*(1+((talent6()*3.75)/100))),.7,"physical","Earthquake");NG.tooltipname.innerHTML="Earthquake";var s="Cast Time: "+castTimeTT(1500)+" Second<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Second<br><br>"+"Earthquake for "+a[0]+" to "+a[1]+" physical damage. Earthquake hits random targets 32 times.";if(my.talent6>=20){s+="<BR><BR>Earthquake has an "+green("8%")+" chance to stun for "+green("2.5")+" seconds.";}
s+="<BR><BR>Effect: Interrupts the spellcaster when they take damage.";NG.tooltipmsg.innerHTML=s;});});g.earthquakeFinish=function(){if(endSpell()===false){return;}
setD('earthquake',true);BGP('earthquake',"-1000% -100%");var d=50000;if(my.talent6>=20){d=38000;}
T.delayedCall(d/1000,earthquakeTimer);timerTick(D.getElementById('earthquake'),d/1000,'earthquake');playAudio("earthquakeloop1",0,1500);function earthquakeTick(earthquakeTickCount){if(countMobs()>0){var Slot=selectRandomTarget();if(earthquakeTickCount%3===0){playAudio("earthquakeloop1",0,1200);}
if(earthquakeTickCount%5===0){playAudio("earthquakeloop2",0,500);}
if(mob[Slot].name!==""){var damage=minMax(((evocationTotal()*.95)*(1+((talent6()*3.75)/100)))*(g.mobDefense(Slot)),.7);interruptTarget(Slot);if(my.talent6>=20){if(M.random()>.92){stunTarget(Slot,2500,-320);}}
g.myDotDamage(damage,Slot,"physical","Earthquake");}}
earthquakeTickCount++;if(earthquakeTickCount<=32){T.delayedCall(.333,function(){earthquakeTick(earthquakeTickCount)});}}
var earthquakeTickCount=0;earthquakeTick(earthquakeTickCount);}
function screenShake(count,d,d2,interval){var foo=0;function doit(count,d,d2,interval){var randomLeft=M.ceil(M.random()*(d)-d2);var randomTop=M.ceil(M.random()*(d)-d2);var randomLeft2=M.ceil(M.random()*(d)-d2);var randomTop2=M.ceil(M.random()*(d)-d2);var randomLeft3=M.ceil(M.random()*(d)-d2);var randomTop3=M.ceil(M.random()*(d)-d2);T.to(NG.gameView,interval/1000,{top:randomTop,left:randomLeft,onComplete:function(){T.to(NG.gameView,interval/1000,{top:randomTop3,left:randomLeft3,onComplete:function(){T.to(NG.gameView,interval/1000,{top:randomTop2,left:randomLeft2,onComplete:function(){T.to(NG.gameView,interval/1000,{top:0,left:0,onComplete:function(){foo++;if(foo<count){doit(count,d,d2,interval);}}});}});}});}});}
doit(count,d,d2,interval);}
function chloroplast(){if(btn.d.chloroplast===true||my.level<24){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.chloroplast;if(my.mp<spellMpCost){return;}
currentSpell="Chloroplast";spellCastTime=castSpeedTotal(3000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("chloroplast");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#chloroplast',function(){var spellType="Abjuration";var duration="8".fontcolor("#00ff00");var a=M.ceil(alterationTotal()/16);NG.tooltipname.innerHTML="Chloroplast";NG.tooltipmsg.innerHTML="Cost: "+green(dru.cost.chloroplast)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Chloroplast regenerates "+green(a)+" health every 3 seconds for "+duration+" minutes.";});});g.chloroplastFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateBuff('green','easeInBack',25,11,120,6);g.drawMyMp(-spellMpCost);Chat(("You begin to regenerate."),3);chloroplastStatus=true;chloroplastTickCount=0;var healAmount=M.ceil(alterationTotal()/16);chloroplastInterval.kill();chloroplastInterval=T.to('',3,{repeat:-1,onRepeat:function(){chloroplastTick(healAmount);}});var skillName="Chloroplast";var buffId="chloroplastIcon";var duration=480000;var spriteX=-544;chloroplastIconTimer.kill();chloroplastIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function chloroplastTick(healAmount){chloroplastTickCount+=1;g.popupHeal(healAmount);g.drawMyHp();if(chloroplastTickCount===160){chloroplastInterval.kill();chloroplastStatus=false;}}
function hurricaneReady(){if(D.getElementById('hurricane').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('hurricane',false);BGP('hurricane',"-1100% 0%");g.checkDruidSkills();refreshhurricane.kill();}
function hurricaneTimer(){refreshhurricane=T.to('',.1,{repeat:-1,onRepeat:hurricaneReady});}
function hurricane(){if(btn.d.hurricane===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=0;currentSpell="Hurricane";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("hurricane");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#hurricane',function(){var spellType="Conjuration";var CD="18".fontcolor("#ff0000");var a=TTdot((conjurationTotal()*.3)*(1+((talent7()*4.15)/100)),.85,"cold","Hurricane");var value1="33%".fontcolor("#00ff00");var value2="15".fontcolor("#00ff00");NG.tooltipname.innerHTML="Hurricane";var s="Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Hurricane hits all targets for "+a[0]+" to "+a[1]+" cold damage every second for "+value2+" seconds.";if(my.talent7>=20){s+="<BR><BR>Hurricane has a "+green("12%")+" chance to freeze your target for "+green("3.5")+" seconds.";}
s+="<BR><BR>Effect: Reduces all targets' attack speed by "+value1+" and their run speed is reduced.";NG.tooltipmsg.innerHTML=s;});});function chillTarget(i,d,spriteX,bypass,name){if(mob[i].name===""){return;}
if(!name){name="Chilled";}
mob[i].coldTimer.kill();mob[i].coldTimer=T.delayedCall(d/1000,function(){mob[i].chillStatus=false;});mob[i].chillStatus=true;addMobBuffIcon(name,i,"slowIcon",d,spriteX);if(!bypass){tint(i,'cold',d/1000);}}
g.hurricaneFinish=function(){if(endSpell()===false){return;}
if(GLB.videoSetting==="High"){animateHurricane();}
setD('hurricane',true);BGP('hurricane',"-1100% -100%");T.delayedCall(18,hurricaneTimer);timerTick(D.getElementById('hurricane'),18000/1000,'hurricane');function hurricaneTick(hurricaneTickCount){for(var i=0;i<=4;i++){if(mob[i].name!==""){playAudio('blue3')
var damage=minMax((conjurationTotal()*.3)*(1+((talent7()*4.15)/100)),.85);chillTarget(i,5000,-352);if(my.talent7>=20){if(M.random()>.88){freezeTarget(i,3500,-352);}}
g.myDotDamage(damage,i,"cold","Hurricane");}}
hurricaneTickCount+=1;if(hurricaneTickCount<15){T.delayedCall(1,function(){hurricaneTick(hurricaneTickCount);});}}
var hurricaneTickCount=0;hurricaneTick(hurricaneTickCount);}
function animateHurricane(){var H1=IMG(0,240,3840,597,'hurricane');H1.style.opacity=0;var zag=H1.cloneNode();zag.id="hurricaneImage";NG.eWin3.appendChild(zag);T.to(zag,7.5,{left:-2580,force3D:"auto",ease:ez.lin,onComplete:function(){zag.style.left='0px';T.to(zag,7.5,{force3D:"auto",left:-2580,ease:ez.lin});}});T.to(zag,2,{opacity:1,ease:ez.lin});T.to(zag,1,{opacity:0,ease:ez.lin,delay:14,onComplete:function(){remove(this);}});var zig=H1.cloneNode();zig.id="hurricaneImage2";NG.eWin3.appendChild(zig);T.to(zig,15,{left:-2580,force3D:"auto",ease:ez.sinout});T.to(zig,2,{opacity:1,ease:ez.lin});T.to(zig,1,{opacity:0,ease:ez.lin,delay:14,onComplete:function(){remove(this);}});}
function sylvanGraspReady(){if(D.getElementById('sylvangrasp').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('sylvangrasp',false);BGP('sylvangrasp',"-1200% 0%");g.checkDruidSkills();refreshsylvanGrasp.kill();}
function sylvanGraspTimer(){refreshsylvanGrasp=T.to('',.1,{repeat:-1,onRepeat:sylvanGraspReady});}
function sylvanGrasp(){if(btn.d.sylvangrasp===true||my.level<32){return;}
if(checkBashFear()===true){return;}
spellMpCost=dru.cost.sylvanGrasp;if(my.mp<spellMpCost){return;}
currentSpell="Sylvan Creep";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("sylvanGrasp");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#sylvangrasp',function(){var spellType="Alteration";var CD="60".fontcolor("#ff0000");if(my.talent8>=20){CD=green("30");}
var a=TTmag(((alterationTotal()*1.5)*(1+((talent8()*6.7)/100))),.9,"physical","Sylvan Creep");NG.tooltipname.innerHTML="Sylvan Creep";var s="Cost: "+green(dru.cost.sylvanGrasp)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Sylvan Creep hits all targets for "+a[0]+" to "+a[1]+" physical damage. All targets are snared, reducing their attack speed and casting speed.";if(my.talent3>0){var b=TTmag((alterationTotal()/6)*((talent3()*6.5)/100),.9,"poison","elemental");s+="<BR><BR>Elemental damage strikes for "+b[0]+" to "+b[1]+" poison damage every second.";}
NG.tooltipmsg.innerHTML=s;});});g.sylvanGraspFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");setD('sylvangrasp',true);BGP('sylvangrasp',"-1200% -100%");var d=60000;if(my.talent8>=20){d=30000;}
T.delayedCall(d/1000,sylvanGraspTimer);timerTick(D.getElementById('sylvangrasp'),d/1000,'sylvangrasp');g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""){snareTarget(i);damage=minMax(((alterationTotal()*1.5)*(1+((talent8()*6.7)/100)))*(g.mobDefense(i)),.85);var sName="Sylvan Creep";g.myMagicDamage("physical",damage,i,checkCrit(),sName);addMobBuffIcon(sName,i,"snareBuffIcon",0,-384);if(my.talent3>=1){(function(){var Slot=i;mob[Slot].sylvanCreepInterval.kill();mob[Slot].sylvanCreepInterval=T.to('',1,{repeat:-1,onRepeat:function(){sylvanCreepTick("poison",Slot);}});})();}}}
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function sylvanCreepTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].sylvanCreepInterval.kill();mob[Slot].snareStatus=false;}else{var dam=minMax((alterationTotal()/6)*((talent3()*6.5)/100),.9);g.myDotDamage(dam,Slot,mType,"Sylvan Creep");}}
function volcanoReady(){if(D.getElementById('volcano').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('volcano',false);BGP('volcano',"-1300% 0%");g.checkDruidSkills();refreshvolcano.kill();}
function volcanoTimer(){refreshvolcano=T.to('',.1,{repeat:-1,onRepeat:volcanoReady});}
function volcano(){if(btn.d.volcano===true||my.level<38){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=0;currentSpell="Volcano";spellCastTime=castSpeedTotal(3000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("volcano");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#volcano',function(){var spellType="Evocation";var CD="60".fontcolor("#ff0000");if(my.talent12>=20){CD="30".fontcolor("#ff0000");}
var a=TTdot(evocationTotal()*.18,.82,"fire","Volcano");var b=TTmag((evocationTotal()*3.5),.5,"lightning","Thunder Storm");var value1="10".fontcolor("#00ff00");NG.tooltipname.innerHTML="Volcano";var s="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Volcano hits your target for "+a[0]+" to "+a[1]+" fire damage 100 times over "+value1+" seconds.";if(my.talent12>=20){s+="<BR><BR>Effect: Volcano summons a violent thunderstorm that strikes random targets 35 times for "+b[0]+" to "+b[1]+" over a long duration. Multiple thunder storms can overlap.";}
NG.tooltipmsg.innerHTML=s;});});function summonThunderstorm(){function strike(count){var Slot=selectRandomTarget();if(Slot!==undefined){animateLightningBlast(Slot);playAudio('lightning'+~~(M.random()*(3)+1));var dam=minMax((evocationTotal()*3.5),.5);g.myMagicDamage("lightning",dam,Slot,false,"Thunder Storm");}
if(count<35){T.delayedCall((M.random()*(5.5)+.5),function(){strike(++count);});}}
T.delayedCall(3,function(){strike(0);});}
g.volcanoFinish=function(){if(endSpell()===false){return;}
setD('volcano',true);BGP('volcano',"-1300% -100%");var d=60000;if(my.talent12>=20){d=30000;}
T.delayedCall(d/1000,volcanoTimer);timerTick(D.getElementById('volcano'),d/1000,'volcano');function volcanoTick(volcanoTickCount,Slot){if(mob[Slot].name!==""){var damage=minMax(evocationTotal()*.18,.82);if(GLB.videoSetting==="High"){animateVolcano(Slot);}
g.myDotDamage(damage,Slot,"fire","Volcano");playAudio("explode"+~~(M.random()*(3)+1));}
volcanoTickCount++;if(volcanoTickCount<=100){T.delayedCall(.1,function(){volcanoTick(volcanoTickCount,Slot);});}}
var Slot=TGT;var volcanoTickCount=0;cache.boulder=img("boulder",150,150);cache.fissure=img("fissure",600,180);volcanoTick(volcanoTickCount,Slot);if(my.talent12>=20){summonThunderstorm();}}
function animateVolcano(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var e2=can('fissure',7,x2-300,668,0,0,true);T.to(e2,1,{scaleX:1.25,scaleY:1.25});T.to(e2,1.5,{scaleX:.5,scaleY:.5,alpha:0,delay:1,onComplete:function(){cRem(7,e2);}});var x3=(x2-25+M.random()*(800)-400);var e1=cacheAdd(cache.boulder,5,x2-75,720,1,1);T.to(e1,.3,{y:-160,x:x3,onComplete:function(){cRem(5,e1);}});}
function rangerTrackReady(){if(D.getElementById('rangertrackId').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('rangertrackId',false);BGP('rangertrackId',"-200% -100%");refreshrangerTrack.kill();}
function rangerTrackTimer(){refreshrangerTrack=T.to('',.1,{repeat:-1,onRepeat:rangerTrackReady});}
$(function(){$NG.window3.on('mouseenter','#rangertrackId',function(){var CD="3".fontcolor("#ff0000");NG.tooltipname.innerHTML="Track";NG.tooltipmsg.innerHTML="Cooldown: "+green("180")+" Seconds<br><br>"+"Attempt to track your quarry to find valued targets in the zone.";});});function rangerTrack(){if(btn.d.rangertrackId===true){return;}
if(btn.d.addmonsterId===true){return;}
if(checkBashFear()===true){return;}
setD('rangertrackId',true);BGP('rangertrackId',"-200% -300%");T.delayedCall(180,rangerTrackTimer);timerTick(D.getElementById('rangertrackId'),180000/1000,'rangertrackId');rangerTrackStatus=true;addMonster();}
function frostStrikeReady(){if(D.getElementById('froststrike').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('froststrike',false);BGP('froststrike',"-300% 0%");g.checkShamanSkills();refreshfrostStrike.kill();}
function frostStrikeTimer(){refreshfrostStrike=T.to('',.1,{repeat:-1,onRepeat:frostStrikeReady});}
function frostStrike(){if(btn.d.froststrike===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Frost Strike";spellCastTime=castSpeedTotal(3000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("frostStrike");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#froststrike',function(){var spellType="Evocation";var a=TTmag(3+(evocationTotal()*2.1),.85,"cold","Frost Strike");NG.tooltipname.innerHTML="Frost Strike";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Frost Strike hits your target for "+a[0]+" to "+a[1]+" cold damage.";});});g.frostStrikeFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneSlam");if(GLB.videoSetting==="High"){animateFrostStrike(TGT);}
var dam=minMax(3+(evocationTotal()*2.1),.85);g.myMagicDamage("cold",dam,TGT,checkCrit(),"Frost Strike");}
function animateFrostStrike(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var x2=(cX-100);var y2=(cY-100);var e1=can('frostStrike',5,x2,y2,200,200,true);T.to(e1,.8,{scaleY:2,scaleX:2,alpha:0,onComplete:function(){cRem(5,e1);}});particleBurst(Slot,"teal");}
function scourgeReady(){if(D.getElementById('scourge').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('scourge',false);BGP('scourge',"-400% 0%");g.checkShamanSkills();refreshscourge.kill();}
function scourgeTimer(){refreshscourge=T.to('',.1,{repeat:-1,onRepeat:scourgeReady});}
function scourge(){if(btn.d.scourge===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.scourge;if(my.mp<spellMpCost){return;}
currentSpell="Scourge";spellType="conjuration";playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);var Slot=TGT;animateDot(Slot,'green',280,150,10,-250,ez.Qin,25,5,100,1.2);spellDamage=minMax(1+conjurationTotal()*.42,.9);var mType="poison";Chat((mob[Slot].name+" sweats and shivers, looking feverish."),3);var zig=my.level;if(zig>50){zig=50;}
if(mob[Slot].scourgeStatus===false){mob[Slot].scourgeStatus=true;}
mob[Slot].scourgeTickCount=1;mob[Slot].scourgeTick=spellDamage;mob[Slot].scourgeTickInterval.kill();mob[Slot].scourgeTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){scourgeTick(Slot,mType);}});var buffId="scourgeIcon";var duration=18000;var spriteX=-128;addMobBuffIcon("Scourge",Slot,buffId,duration,spriteX);if(mob[TGT].attackStatus===1){attackOn(true);}
beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#scourge',function(){var spellType="Conjuration";var CD="5".fontcolor("#ff0000");var a=TTdot(1+conjurationTotal()*.42,.9,"poison","Scourge");var value1=("12%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Scourge";var s="Cost: "+green(shm.cost.scourge)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Scourge ticks for "+a[0]+" to "+a[1]+" poison damage every second for 18 seconds.<br><br>";s+="Effect: Decreases your target's physical damage and increases physical damage received by "+value1+".";NG.tooltipmsg.innerHTML=s;});});function scourgeTick(Slot,mType){if(mob[Slot].name===""){mob[Slot].scourgeTickInterval.kill();mob[Slot].scourgeTickCount=0;mob[Slot].scourgeStatus=false;return;}
g.myDotDamage(mob[Slot].scourgeTick,Slot,mType,"Scourge");mob[Slot].scourgeTickCount+=1;if(mob[Slot].scourgeTickCount===19){mob[Slot].scourgeTickInterval.kill();mob[Slot].scourgeTickCount=0;}}
function shmHealingReady(){if(D.getElementById('shmhealing').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shmhealing',false);BGP('shmhealing',"-500% 0%");g.checkShamanSkills();refreshshmHealing.kill();}
function shmHealingTimer(){refreshshmHealing=T.to('',.1,{repeat:-1,onRepeat:shmHealingReady});}
function shmHealing(){if(btn.d.shmhealing===true||my.level<3){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.greaterHealing;if(my.mp<spellMpCost){return;}
currentSpell="Greater Healing";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("blue");animateCastBar("shmHealing");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shmhealing',function(){var spellType="Alteration";var CD="7".fontcolor("#ff0000");var a=TTheal((alterationTotal()*1.8),.9);NG.tooltipname.innerHTML="Greater Healing";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.greaterHealing)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Greater Healing heals for "+a[0]+" to "+a[1]+" hit points.";});});g.shmHealingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateHealing('blue');setD('shmhealing',true);BGP('shmhealing',"-500% -100%");T.delayedCall(7,shmHealingTimer);timerTick(D.getElementById('shmhealing'),7000/1000,'shmhealing');var healAmount=minMax((alterationTotal()*1.8),.9);g.popupHeal(healAmount);g.drawMyMp(-spellMpCost);}
function animateHealing(color,orb,total){if(!color){color='teal';}
if(orb===undefined){orb=true;flashScreen(color,.2,1);}
if(!total||total>60){total=partAdj(60);}
if(GLB.videoSetting!=="High"){return;}
var s2=img(color+"particle50");function doIt(count){var spread=M.pow(M.random()*(24),2);if(M.random()>.5){var x=(640-spread);}else{var x=(640+spread);}
var p1=cacheAdd(s2,5,x,0);T.to(p1,M.random()*(1)+.5,{y:(M.random()*(200)+100),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});if(count<total){T.delayedCall(.01,function(){doIt(++count);});}}
doIt(0);if(orb===true){var e1=can(color+"Light3",5,640,720,2560,1544,true);T.to(e1,1.5,{alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});}}
function callOfTheAncients(){if(btn.d.calloftheancients===true||my.level<5){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.callOfTheAncients;if(my.mp<spellMpCost){return;}
currentSpell="Call of the Ancients";spellCastTime=castSpeedTotal(3000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("callOfTheAncients");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#calloftheancients',function(){var spellType="Abjuration";var duration="24".fontcolor("#00ff00");var minimum=(M.ceil((1+abjurationTotal()*.15)*(1+(talent9()*.026)))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Call of the Ancients";var s="Cost: "+green(shm.cost.callOfTheAncients)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your strength, stamina, agility, dexterity, and wisdom by "+minimum+" for "+duration+" minutes.";if(my.talent9>=20){s+="<BR><BR>While Call of the Ancients is active, your attack haste is enhanced by "+green("42%")+".";}
NG.tooltipmsg.innerHTML=s;});});g.callOfTheAncientsFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are strengthened by the might of your ancestors."),3);if(callOfTheAncientsStatus===true){strBuff-=callOfTheAncientsStr;staBuff-=callOfTheAncientsSta;agiBuff-=callOfTheAncientsAgi;dexBuff-=callOfTheAncientsDex;wisBuff-=callOfTheAncientsWis;}
callOfTheAncientsTimeout.kill();callOfTheAncientsTimeout=T.delayedCall(1440,callOfTheAncientsExpire);var bonus=M.ceil((1+abjurationTotal()*.15)*(1+(talent9()*.026)));callOfTheAncientsStr=bonus
callOfTheAncientsSta=bonus
callOfTheAncientsAgi=bonus
callOfTheAncientsDex=bonus
callOfTheAncientsWis=bonus
strBuff+=callOfTheAncientsStr;staBuff+=callOfTheAncientsSta;agiBuff+=callOfTheAncientsAgi;dexBuff+=callOfTheAncientsDex;wisBuff+=callOfTheAncientsWis;callOfTheAncientsStatus=true;g.drawMyHp();CStat();var buffId="callOfTheAncientsIcon";var d=1440000;callOfTheAncientsIconTimer.kill();callOfTheAncientsIconTimer=T.delayedCall(d/1000,function(){removeIcon(buffId);});addBuffIcon("Call of the Ancients",buffId,d,-448);animateBuff('purple','easeInBack',5,25,120,4);}
function animateBuff(color,easing,startSize,endSize,total,d){if(GLB.videoSetting!=="High"){return;}
if(!color){color="blue";}
if(!easing){easing="easeInBack";}
if(!startSize){startSize=5;}
startSize=25;if(!endSize){endSize=5;}
endSize=5;if(!total||total>80){total=partAdj(80);}
d=2.5;var s2=img(color+"particle50");var diff=M.ceil(endSize/2);var ez1=ez.Bin;var ez2=ez.Qout;function doIt(count){var x1=(M.random()*(1480)-100);var y1=(M.random()*(550)-100);var p1=cacheAdd(s2,6,x1,y1,.4,.4);var d2=M.random()*(d-(d/3))+d/3;T.to(p1,d2,{ease:ez2,bezier:{curviness:1.5,values:[{x:(320+(M.random()*640)),y:(668+(M.random()*150))},{x:640-diff,y:778-diff}]}});T.to(p1,d2,{ease:ez1,scaleX:1,scaleY:1,onComplete:function(){cRem(6,p1);}});if(count<total){doIt(++count);}}
doIt(0);var e1=can(color+"Light3",5,640,720,2560,1544,true);T.to(e1,2,{scaleX:0,scaleY:0,alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});}
function callOfTheAncientsExpire(){callOfTheAncientsStatus=false;strBuff-=callOfTheAncientsStr;staBuff-=callOfTheAncientsSta;agiBuff-=callOfTheAncientsAgi;dexBuff-=callOfTheAncientsDex;wisBuff-=callOfTheAncientsWis;CStat();g.drawMyHp();}
function togorsInsectsReady(){if(D.getElementById('togorsinsects').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('togorsinsects',false);BGP('togorsinsects',"-600% 0%");g.checkShamanSkills();refreshtogorsInsects.kill();}
function togorsInsectsTimer(){refreshtogorsInsects=T.to('',.1,{repeat:-1,onRepeat:togorsInsectsReady});}
function togorsInsects(){if(btn.d.togorsinsects===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.togorsInsects;if(my.mp<spellMpCost){return;}
currentSpell="Togor's Insects";spellCastTime=castSpeedTotal(2500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("white");animateCastBar("togorsInsects");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#togorsinsects',function(){var spellType="Alteration";var CD="20".fontcolor("#ff0000");var value1=(((alterationTotal()/5)*42)/30.3).toFixed(1);var target="your target";if(my.talent2>=20){target="all targets";}
value1=(value1+"%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Togor's Insects";var s="Cost: "+green(shm.cost.togorsInsects)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Togor's Insects slows the attack speed of "+target+" by two seconds for 60 seconds.";if(my.talent2>=1){var a=TTdot((alterationTotal()*(1+(talent2()*.165)))/20,.9,"poison","Togor's Pestilence");s+="<BR><BR>Togor's Pestilence plagues your target for "+a[0]+" to "+a[1]+" poison damage every seconds over 50 seconds.";}
NG.tooltipmsg.innerHTML=s;});});function executeTogorsEffect(Slot,buffId,d){mob[Slot].slowStatus=true;Chat((mob[Slot].name+" yawns."),3);mob[Slot].togorsInsectsTimeout.kill();mob[Slot].togorsInsectsTimeout=T.delayedCall(d/1000,function(){togorsInsectsExpire(Slot)});addMobBuffIcon("Togor's Insects",Slot,buffId,d,-192);}
g.togorsInsectsFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneHeal");setD('togorsinsects',true);BGP('togorsinsects',"-600% -100%");T.delayedCall(20,togorsInsectsTimer);timerTick(D.getElementById('togorsinsects'),20000/1000,'togorsinsects');g.drawMyMp(-spellMpCost);var Slot=TGT;var buffId="slowIcon";var d=60000;var dam=minMax((alterationTotal()*(1+(talent2()*.165)))/20,.9);if(my.talent2>=20){for(var i=0;i<=4;i++){if(mob[i].name){if(GLB.videoSetting==="High"){animateDot(i,"white");}
executeTogorsEffect(i,buffId,d);executeDot(i,dam,50,1000,"poison","Togor's Pestilence","togorsPestilence",-192,-32,true);}}}else{if(GLB.videoSetting==="High"){animateDot(Slot,"white");}
executeTogorsEffect(Slot,buffId,d);if(my.talent2>=1){executeDot(Slot,dam,50,1000,"poison","Togor's Pestilence","togorsPestilence",-192,-32,true);}}}
function executeDot(Slot,dam,ticks,interval,mType,spellName,buffId,spriteX,spriteY,stack){function doit(count){if(mob[Slot].name===""||count>ticks){return;}
if(spellName==="Chill of Death"&&mob[Slot].fearStatus===false){removeMobIcon(buffId,i);return;}
g.myDotDamage(dam,Slot,mType,spellName);T.delayedCall(interval/1000,function(){doit(++count);});}
T.delayedCall(interval/1000,function(){doit(1);});var d=ticks*interval;if(buffId){if(!spriteY){spriteY=0;}
if(!stack){stack=false;}
addMobBuffIcon(spellName,Slot,buffId,d,spriteX,spriteY,false,stack);}}
function animateDot(Slot,color,spread,total,interval,distance,easeType,startSize,endSize,startY,d){if(GLB.videoSetting!=="High"){return;}
if(startSize===undefined){startSize=3;}
if(endSize===undefined){endSize=15;}
if(startY===undefined){startY=0;}
if(!d){d=.6;}
var diff=M.ceil((endSize-startSize)/2);var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY+startY);function doit(count){var x3=x2+(M.random()*(spread)-(spread/2));var y3=y2+(M.random()*(spread)-(spread/2));var p1=can(color+"particle50",5,x3,y3,startSize,startSize);T.to(p1,d,{scaleX:endSize/25,scaleY:endSize/25,x:x3-diff,y:y3+distance,ease:easeType,onComplete:function(){cRem(5,p1);}});if(++count<total){T.delayedCall(interval,function(){doit(count);});}}
if(!spread){spread=200;}
if(!total){total=30;}
if(total>50){total=50;}
if(!interval){interval=25;}
interval=interval/1000;if(!distance){distance=12;}
if(!easeType){easeType=ez.Qout;}
doit(0);}
function togorsInsectsExpire(Slot){mob[Slot].togorsInsectsTimeout.kill();mob[Slot].slowStatus=false;}
function cannibalizeReady(){if(D.getElementById('cannibalize').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cannibalize',false);BGP('cannibalize',"-700% 0%");g.checkShamanSkills();refreshcannibalize.kill();}
function cannibalizeTimer(){refreshcannibalize=T.to('',.1,{repeat:-1,onRepeat:cannibalizeReady});}
$(function(){$NG.window3.on('mouseenter','#cannibalize',function(){var CD="45".fontcolor("#ff0000");var minimum=(M.round(my.maxHp*.18)+"").fontcolor("#00ff00");var maximum=(M.round(my.maxHp*.33)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Cannibalize";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Cannibalize sacrifices "+minimum+" health for "+maximum+" mana.";});});function cannibalize(){if(btn.d.cannibalize===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(my.hp<M.round(my.maxHp*.18)){return;}
setD('cannibalize',true);BGP('cannibalize',"-700% -100%");T.delayedCall(45,cannibalizeTimer);timerTick(D.getElementById('cannibalize'),45000/1000,'cannibalize');var healAmount=M.round(my.maxHp*.18);my.hp-=healAmount;if(my.hp<0){my.hp=1;}
var mpAmount=M.round(my.maxHp*.33);my.mp+=mpAmount;g.drawMyHp();g.drawMyMp();Chat(("Your body aches as your mind clears."),3);beginGlobalCooldown();if(GLB.videoSetting==="High"){animateCannibalize();}
playAudio("spellDoneSlam");}
function animateCannibalize(){flashScreen("#b55555",.3,.6);var c3=img("redparticle50");function doIt(count){var x=(M.random()*(320)+M.random()*(320)+M.random()*(320)+M.random()*(320));var ranY=(M.random()*(250)+197);var ranX=0;if(x>640){ranX+=300;}else{ranX-=300;}
var d=M.random()*(1500)+250;var e3=cacheAdd(c3,5,x,720);T.to(e3,d/1000,{scaleX:.1,scaleY:.1,y:ranY,onComplete:function(){cRem(5,e3);}});T.to(e3,d/1000,{x:(x+8+ranX)});if(count<50){T.delayedCall(.015,function(){doIt(++count);});}}
doIt(0);var c2=img("redLight3",400,400);for(var i=0;i<=2;i++){var e1=cacheAdd(c2,5,640,720,2560/400,1544/400,true);tween.cannibalize(e1);}}
tween.cannibalize=function(e1){T.to(e1,2,{alpha:0,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});}
function poisonNovaReady(){if(D.getElementById('poisonnova').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('poisonnova',false);BGP('poisonnova',"-900% 0%");g.checkShamanSkills();refreshpoisonNova.kill();}
function poisonNovaTimer(){refreshpoisonNova=T.to('',.1,{repeat:-1,onRepeat:poisonNovaReady});}
function poisonNova(){if(btn.d.poisonnova===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.poisonNova;if(my.mp<spellMpCost){return;}
currentSpell="Poison Nova";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("poisonNova");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#poisonnova',function(){var spellType="Evocation";var CD="6".fontcolor("#ff0000");var a=TTmag(evocationTotal()*2.4,.9,"poison","Poison Nova");var b=TTdot(conjurationTotal()/3.3,.9,"poison","Blighted Breath");NG.tooltipname.innerHTML="Poison Nova";var s="Cost: "+green(shm.cost.poisonNova)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Second<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Poison Nova hits all targets for "+a[0]+" to "+a[1]+" poison damage.";if(my.talent6>=20){s+="<BR><BR>Poison Nova does an additional "+b[0]+" to "+b[1]+" poison damage every second over six seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.poisonNovaFinish=function(){if(endSpell()===false){return;}
playAudio("poisonnova");animateNova('poisonNova');setD('poisonnova',true);BGP('poisonnova',"-900% -100%");T.delayedCall(6,poisonNovaTimer);timerTick(D.getElementById('poisonnova'),6000/1000,'poisonnova');g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""){if(my.talent6>=20){var dam=minMax(conjurationTotal()/3.3,.9);executeDot(i,dam,6,1000,"poison","Blighted Breath","blightedBreath",-288);}
var dam=minMax(evocationTotal()*2.4,.9);g.myMagicDamage("poison",dam,i,checkCrit(),"Poison Nova");}}}
function enstillReady(){if(D.getElementById('enstill').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('enstill',false);BGP('enstill',"-800% 0%");g.checkShamanSkills();refreshenstill.kill();}
function enstillTimer(){refreshenstill=T.to('',.1,{repeat:-1,onRepeat:enstillReady});}
function enstill(){if(btn.d.enstill===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.enstill;if(my.mp<spellMpCost){return;}
currentSpell="Enstill";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("enstill");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#enstill',function(){var spellType="Alteration";var CD="9".fontcolor("#ff0000");var a=TTdot((alterationTotal()*(1+(talent3()*.235)))/20,.9,"poison","elemental");var b=TTheal((alterationTotal()-50)/8,.75);NG.tooltipname.innerHTML="Enstill";var s="Cost: "+green(shm.cost.enstill)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Enstill roots your target, leaving them unable to physically attack you.";if(my.talent3>=0){s+="<BR><BR>Enstill plagues your target for "+a[0]+" to "+a[1]+" poison damage every second that root is active.";if(my.talent3>=20){s+="<BR><BR>If root is active when a target is slain, you recover "+a[0]+" to "+a[1]+" health and mana.";}}
NG.tooltipmsg.innerHTML=s;});});g.enstillFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");setD('enstill',true);BGP('enstill',"-800% -100%");T.delayedCall(9,enstillTimer);timerTick(D.getElementById('enstill'),9000/1000,'enstill');g.drawMyMp(-spellMpCost);var Slot=TGT;if(checkRootImmune(Slot)===true){Chat((mob[TGT].name+" is immune to Enstill."),1);return;}
if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted Enstill."),1);return;}
Chat((mob[Slot].name+" is rooted."),3);var rootFlag=true;stopMob(Slot);mob[Slot].rootStatus=4;$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();animateRoot(Slot,rootFlag);var buffId="rootBuffIcon";var duration=0;var spriteX=-256;addMobBuffIcon("Enstill",Slot,buffId,duration,spriteX);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}}
function shmSow(){if(btn.d.shmsow===true||my.level<15){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.spiritOfTheWolf;if(my.mp<spellMpCost){return;}
currentSpell="Spirit of the Wolf";spellCastTime=castSpeedTotal(3500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("shmSow");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shmsow',function(){var spellType="Alteration";var duration="40".fontcolor("#00ff00");var minimum=15;if(my.talent11>0){minimum=15+(15*((talent11()*5.8)/100));minimum=minimum.toFixed(1);}
NG.tooltipname.innerHTML="Spirit of the Wolf";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.spiritOfTheWolf)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Buffs your attack power by "+green(minimum+"%")+" and your chance to run from battle for "+duration+" minutes.";});});g.shmSowFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('teal','easeInSine',5,15,100,3);g.drawMyMp(-spellMpCost);Chat(("You are surrounded by a brief lupine aura."),3);spiritOfTheWolfTimeout.kill();spiritOfTheWolfTimeout=T.delayedCall(2400,shmSowExpire);sowStatus=true;CStat();var buffId="spiritOfTheWolfIcon";var d=2400000;spiritOfTheWolfIconTimer.kill();spiritOfTheWolfIconTimer=T.delayedCall(d/1000,function(){removeIcon(buffId);});addBuffIcon("Spirit of the Wolf",buffId,d,-512);}
function shmSowExpire(){sowStatus=false;CStat();}
function afflictionReady(){if(D.getElementById('affliction').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('affliction',false);BGP('affliction',"-1000% 0%");g.checkShamanSkills();refreshaffliction.kill();}
function afflictionTimer(){refreshaffliction=T.to('',.1,{repeat:-1,onRepeat:afflictionReady});}
function affliction(){if(btn.d.affliction===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.affliction;if(my.mp<spellMpCost){return;}
currentSpell="Affliction";spellCastTime=castSpeedTotal(2500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("affliction");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#affliction',function(){var spellType="Conjuration";var a=TTdot(conjurationTotal()*.53,.9,"poison","Affliction");var value1=("10%").fontcolor("#00ff00");var target="your target";if(my.talent7>=20){target="three targets";}
NG.tooltipname.innerHTML="Affliction";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.affliction)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Affliction hits "+target+" and ticks for "+a[0]+" to "+a[1]+" poison damage every second for 24 seconds.<br><br>"+"Effect: Increases all arcane damage by "+value1+".";});});g.afflictionFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);var Slot=TGT;var d=24000;if(my.talent7>=20){for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var Slot=i;if(mob[Slot].name){afflictionTarget(Slot,d);}}}}else{afflictionTarget(Slot,d);}}
function afflictionTarget(Slot,d){animateDot(Slot,'green',300,50,20,100,ez.Qin,5,15,-50,1.1);spellDamage=minMax(conjurationTotal()*.53,.9);mob[Slot].afflictionTick=spellDamage;Chat((mob[Slot].name+"'s constitution is wracked by pestilence."),3);mob[Slot].afflictionTickCount=1;mob[Slot].afflictionStatus=true;mob[Slot].afflictionTickInterval.kill();mob[Slot].afflictionTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){afflictionTick(Slot,"poison");}});addMobBuffIcon("Affliction",Slot,"afflictionIcon",d,-320);if(mob[TGT].attackStatus===1){attackOn(true);}}
function afflictionTick(Slot,mType){if(mob[Slot].name===""){mob[Slot].afflictionTickInterval.kill();mob[Slot].afflictionTickCount=0;mob[Slot].afflictionStatus=false;return;}
g.myDotDamage(mob[Slot].afflictionTick,Slot,mType,"Affliction");mob[Slot].afflictionTickCount+=1;if(mob[Slot].afflictionTickCount===25){mob[Slot].afflictionTickInterval.kill();mob[Slot].afflictionTickCount=0;mob[Slot].afflictionStatus=false;}}
function reclaimBloodReady(){if(D.getElementById('reclaimblood').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('reclaimblood',false);BGP('reclaimblood',"-1100% 0%");g.checkShamanSkills();refreshreclaimBlood.kill();}
function reclaimBloodTimer(){refreshreclaimBlood=T.to('',.1,{repeat:-1,onRepeat:reclaimBloodReady});}
function reclaimBlood(){if(btn.d.reclaimblood===true||my.level<24){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.reclaimBlood;if(my.mp<spellMpCost){return;}
currentSpell="Reclaim Blood";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("reclaimBlood");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#reclaimblood',function(){var spellType="Alteration";var CD="45".fontcolor("#ff0000");var a=TTheal((alterationTotal()/5.7)*(1+(talent12()*.024)),.9);var duration="21".fontcolor("#00ff00");NG.tooltipname.innerHTML="Reclaim Blood";var s="Cost: "+green(shm.cost.reclaimBlood)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Reclaim Blood regenerates "+a[0]+" to "+a[1]+" health every 3 seconds for "+duration+" seconds.";if(my.talent12>=20){s+="<BR><BR>Effect: Reclaim Blood triggers Bloodlust. Bloodlust reduces all spellcasting time by "+green("60%")+" and enhances all physical damage by "+green("60%")+".";}
NG.tooltipmsg.innerHTML=s;});});g.reclaimBloodFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");if(GLB.videoSetting==="High"){animateReclaimBlood(TGT);}
setD('reclaimblood',true);BGP('reclaimblood',"-1100% -100%");T.delayedCall(45,reclaimBloodTimer);timerTick(D.getElementById('reclaimblood'),45000/1000,'reclaimblood');g.drawMyMp(-spellMpCost);Chat(("You reclaim the lifeblood of fallen spirits."),3);reclaimBloodTickCount=0;var healAmount=minMax((alterationTotal()/5.7)*(1+(talent12()*.024)),.9);reclaimBloodInterval.kill();reclaimBloodInterval=T.to('',3,{repeat:-1,onRepeat:function(){reclaimBloodTick(healAmount);}});var buffId="reclaimBloodIcon";var d=21000;addBuffIcon("Reclaim Blood",buffId,d,-352);if(my.talent12>=20){bloodlustStatus=true;var d=10000;addBuffIcon("Bloodlust","bloodlust",d,-352,-32);T.delayedCall(d/1000,function(){bloodlustStatus=false;});}}
function animateReclaimBlood(Slot){for(var i=0;i<=50;i++){var X1=~~(M.random()*(1280));var Y2=~~(M.random()*(50)+300);var sX=~~(M.random()*(20)+5);if(sX<10){Y1=510;}else if(sX>=10&&sX<15){Y1=530;}else if(sX>=15&&sX<20){Y1=560;}else{Y1=595;}
if(sX<15){var p1=can('redparticle50',5,X1,Y1,25,25);T.to(p1,(M.random()*(2)+.5),{y:Y2,ease:ez.sinout,scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});}else{var p1=can('redparticle50',5,X1,Y1,25,25);T.to(p1,(M.random()*(2)+.5),{y:Y2,scaleX:0,scaleY:0,ease:ez.sinout,onComplete:function(){cRem(5,p1);}});}}}
function reclaimBloodTick(healAmount){reclaimBloodTickCount+=1;g.popupHeal(healAmount);if(reclaimBloodTickCount===7){reclaimBloodInterval.kill();}}
function talismanOfAltuna(){if(btn.d.talismanofaltuna===true||my.level<32){return;}
if(checkBashFear()===true){return;}
spellMpCost=shm.cost.talismanOfAltuna;if(my.mp<spellMpCost){return;}
currentSpell="Talisman of Trogmaar";spellCastTime=castSpeedTotal(3000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("talismanOfAltuna");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#talismanofaltuna',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.77)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Talisman of Trogmaar";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.talismanOfAltuna)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Talisman of Trogmaar buffs your hit points by "+minimum+" for "+duration+" minutes.";});});g.talismanOfAltunaFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('green','easeInBack',5,25,150,5);g.drawMyMp(-spellMpCost);Chat(("You feel tough."),3);if(talismanOfAltunaStatus===true){maxHpBuff-=talismanOfAltunaBoost;}
talismanOfAltunaTimeout.kill();talismanOfAltunaTimeout=T.delayedCall(3240,talismanOfAltunaExpire);talismanOfAltunaBoost=M.ceil(abjurationTotal()*.77);maxHpBuff+=talismanOfAltunaBoost;talismanOfAltunaStatus=true;CStat();g.drawMyHp();var skillName="Talisman of Trogmaar";var buffId="talismanOfAltunaIcon";var duration=3240000;var spriteX=-544;talismanOfAltunaIconTimer.kill();talismanOfAltunaIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function talismanOfAltunaExpire(){talismanOfAltunaStatus=false;maxHpBuff-=talismanOfAltunaBoost;CStat();g.drawMyHp();}
function glacialImpactReady(){if(D.getElementById('glacialimpact').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('glacialimpact',false);BGP('glacialimpact',"-1200% 0%");g.checkShamanSkills();glacialImpactMight.kill();}
function glacialImpactTimer(){glacialImpactMight=T.to('',.1,{repeat:-1,onRepeat:glacialImpactReady});}
function glacialImpact(){if(btn.d.glacialimpact===true||my.level<28){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.glacialImpact;if(my.mp<spellMpCost){return;}
currentSpell="Glacial Impact";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateCastBar("glacialImpact");animateParticlesDown("teal");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#glacialimpact',function(){var spellType="Evocation";var CD="20".fontcolor("#ff0000");var freezeD=7;if(Set.Mendicant>=6){freezeD+=5;}
var a=TTmag(evocationTotal()*2.3,.9,"cold","Glacial Impact");var value1="25%".fontcolor("#00ff00");var target="your target";if(my.talent4>=20){target="three targets";}
NG.tooltipname.innerHTML="Glacial Impact";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.glacialImpact)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Glacial Impact hits "+target+" for "+a[0]+" to "+a[1]+" cold damage<br><br>"+"Effect: Freezes your target in place for "+green(freezeD)+" seconds. Frozen targets take "+value1+" more damage.";});});g.glacialImpactFinish=function(Slot,shmProc){if(endSpell()===false&&!shmProc){return;}
playAudio("spellDoneSlam");if(!shmProc){var d=20000;if(my.talent7>=20){d=10000;}
setD('glacialimpact',true);BGP('glacialimpact',"-1200% -100%");T.delayedCall(d/1000,glacialImpactTimer);timerTick(D.getElementById('glacialimpact'),d/1000,'glacialimpact');g.drawMyMp(-spellMpCost);}
if(Slot===undefined){Slot=TGT;}
var freezeD=7000;if(Set.Mendicant>=6){freezeD+=5000;}
if(my.talent4>=20){for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){freezeTarget(i,freezeD,-384);var dam=minMax(evocationTotal()*2.3,.9);g.myMagicDamage("cold",dam,i,checkCrit(),"Glacial Impact");}}}else{freezeTarget(Slot,freezeD,-384);var dam=minMax(evocationTotal()*2.3,.9);g.myMagicDamage("cold",dam,Slot,checkCrit(),"Glacial Impact");}}
function devouringPlagueReady(){if(D.getElementById('devouringplague').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('devouringplague',false);BGP('devouringplague',"-1300% 0%");g.checkShamanSkills();refreshdevouringPlague.kill();}
function devouringPlagueTimer(){refreshdevouringPlague=T.to('',.1,{repeat:-1,onRepeat:devouringPlagueReady});}
function devouringPlague(){if(btn.d.devouringplague===true||my.level<38){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=shm.cost.devouringPlague;if(my.mp<spellMpCost){return;}
currentSpell="Devouring Plague";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("devouringPlague");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#devouringplague',function(){var spellType="Conjuration";var CD="90".fontcolor("#ff0000");var a=TTdot(conjurationTotal()*.36,.9,"poison","Devouring Plague");var value1="30%".fontcolor("#00ff00");var v2='';if(my.talent8>=20){v2=" and "+green("10%")+" of the damage as mana";}
NG.tooltipname.innerHTML="Devouring Plague";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.devouringPlague)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Devouring Plague ticks for "+a[0]+" to "+a[1]+" poison damage every 3 seconds for 27 seconds. Devouring Plague spreads to adjacent targets.<br><br>"+"Effect: Absorb "+value1+" of the damage as health"+v2+".";});});g.devouringPlagueFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");animateDot(TGT,'purple',320,20,45,-180,ez.sin,7,12,100,.8);setD('devouringplague',true);BGP('devouringplague',"-1300% -100%");T.delayedCall(90,devouringPlagueTimer);timerTick(D.getElementById('devouringplague'),90000/1000,'devouringplague');g.drawMyMp(-spellMpCost);var Slot=TGT;Chat((mob[Slot].name+" is infected with a voracious plague."),3);mob[Slot].devouringPlagueTickCount=1;for(var i=0;i<=4;i++){spellDamage=minMax(conjurationTotal()*.36,.9);mob[i].devouringPlagueTick=spellDamage;}
mob[Slot].devouringPlagueInterval.kill();mob[Slot].devouringPlagueInterval=T.to('',3,{repeat:-1,onRepeat:function(){devouringPlagueTick(Slot,"poison");}});addMobBuffIcon("Devouring Plague",Slot,"devouringPlagueIcon",24000,-416);if(mob[TGT].attackStatus===1){attackOn(true);}}
function devouringPlagueTick(Slot,mType){if(mob[Slot].name===""){mob[Slot].devouringPlagueInterval.kill();mob[Slot].devouringPlagueTickCount=0;return;}
animateDot(TGT,'purple',320,20,45,-180,ez.sin,7,12,100,.8);g.myDotDamage(mob[Slot].devouringPlagueTick,Slot,"poison","Devouring Plague");mob[Slot].devouringPlagueTickCount+=1;var buffId="devouringPlagueIcon";var d=24000-(mob[Slot].devouringPlagueTickCount*3000-3000);if(Slot-1>-1&&mob[Slot-1].devouringPlagueTickCount===0){if(mob[Slot-1].name!==""){mob[Slot-1].devouringPlagueTickCount=mob[Slot].devouringPlagueTickCount;mob[Slot-1].devouringPlagueInterval=T.to('',3,{repeat:-1,onRepeat:function(){devouringPlagueTick(Slot-1,"poison");}});addMobBuffIcon("Devouring Plague",Slot-1,buffId,d,-416);if(mob[Slot-1].devouringPlagueTickCount===9){mob[Slot-1].devouringPlagueInterval.kill();mob[Slot-1].devouringPlagueTickCount=0;}}}
if(Slot+1<5&&mob[Slot+1].devouringPlagueTickCount===0){if(mob[Slot+1].name!==""){mob[Slot+1].devouringPlagueTickCount=mob[Slot].devouringPlagueTickCount;mob[Slot+1].devouringPlagueInterval=T.to('',3,{repeat:-1,onRepeat:function(){devouringPlagueTick(Slot+1,"poison");}});addMobBuffIcon("Devouring Plague",Slot+1,buffId,d,-416);if(mob[Slot+1].devouringPlagueTickCount===9){mob[Slot+1].devouringPlagueInterval.kill();mob[Slot+1].devouringPlagueTickCount=0;}}}
if(mob[Slot].devouringPlagueTickCount===9){mob[Slot].devouringPlagueInterval.kill();mob[Slot].devouringPlagueTickCount=0;}}
function guardianSpirit(){if(btn.d.guardianspirit===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();BGP('guardianspirit',"-1500% 0%");g.checkShamanSkills();return;}
spellMpCost=shm.cost.guardianSpirit;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Guardian Spirit";spellCastTime=castSpeedTotal(4500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("guardianSpirit");playAudio("spellCastAbjure");preload(['images1/a wolf.png']);}}
$(function(){$NG.window3.on('mouseenter','#guardianspirit',function(){var spellType="Conjuration";NG.tooltipname.innerHTML="Guardian Spirit";NG.tooltipmsg.innerHTML="Cost: "+green(shm.cost.guardianSpirit)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon a Guardian Spirit to fight by your side.";});});g.guardianSpiritFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");castingSpell=1;g.drawMyMp(-spellMpCost);Chat(("You summon a Guardian Spirit."),3);petLevel=~~(my.level/1.7)+1;var levelVariation=~~(M.random()*(petLevel*.15));petLevel-=levelVariation;petWidth=300+M.ceil(petLevel/3);petHeight=(petWidth*.7435);petImage="a wolf";petMaxHp=M.ceil((50+(petLevel*45))*(1+(talent10()*.147)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*2);petDef=M.ceil(petLevel*2);petPoison=100;petMagic=100;petLightning=100;petFire=100;petCold=100;petSkill1="kick";petSkill2="kick";petSkill3="kick";petSkill4="kick";petCastingFrequency=10;g.petAlive=true;petSpeed=2600;petPosition=1;g.checkShamanSkills();$("#pethpbardiv").css('display','block');BGP('guardianspirit',"-1500% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/a wolf.png").width(petWidth);$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function boneSpiritReady(){if(D.getElementById('bonespirit').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('bonespirit',false);BGP('bonespirit',"-300% 0%");g.checkNecromancerSkills();refreshboneSpirit.kill();}
function boneSpiritTimer(){refreshboneSpirit=T.to('',.1,{repeat:-1,onRepeat:boneSpiritReady});}
function boneSpirit(){if(btn.d.bonespirit===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Bone Spirit";spellType="evocation";var d=3000;if(my.talent4>=20){d=2500;}
spellCastTime=castSpeedTotal(d);if(startSpell()===false){return;}
if(my.talent4<20){animateParticlesDown("purple");}else{animateParticlesDown("orange");}
animateCastBar("boneSpirit");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#bonespirit',function(){var DUR=3000;var name="Bone Spirit";var type="magic";var a=TTmag(3+evocationTotal()*2.25,.8,"magic","Bone Spirit");if(my.talent4>=20){DUR=2500;name="Fireball";type="fire";a=TTmag(3+evocationTotal()*4.3,.8,"fire","Fireball");}
var spellType="Evocation";NG.tooltipname.innerHTML=name;NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(DUR)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+
name+" hits your target for "+a[0]+" to "+a[1]+" "+type+" damage.";});});g.boneSpiritFinish=function(Slot){if(Slot===undefined){if(endSpell()===false){return;}
Slot=TGT;}
if(my.talent4<20){playAudio("bonespirit",0,1000);animateBoneSpirit(Slot);function boneSpiritHit(){playAudio("holybolt");g.myMagicDamage("magic",damage,Slot,checkCrit(),"Bone Spirit");}
var damage=minMax(3+evocationTotal()*2.25,.8);T.delayedCall(1.2,boneSpiritHit);}else{g.fireballFinish(true,Slot);}
if(my.talent5>=20&&petName===""){g.invokeDeathFinish(true);petTarget=TGT;togglePetAutoAttackStatus();}}
function animateBoneSpirit(Slot){if(GLB.videoSetting!=="High"||!mob[Slot].name){return;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX-50;var cY=MOB[Slot].offsetTop+mob[Slot].cY-50;var radius=200;var c2=img("boneSpirit",200,200);var e1=cacheAdd(c2,5,540,597);e1.alpha=.7;T.to(e1,1.2,{y:cY,x:cX,scaleX:.5,scaleY:.5,ease:ez.Qin,onComplete:function(){particleBurst(Slot,'purple','blank');cRem(5,e1);}});function doit2(count){var e2=cacheAdd(c2,5,540,597,1,1,false,true);e2.set({x:e1.x,y:e1.y,scaleX:e1.scaleX,scaleY:e1.scaleY,alpha:e1.alpha});T.to(e2,1.5,{alpha:0,onComplete:function(){cRem(5,e2);}});count++;if(count<6){T.delayedCall(.2,function(){doit2(count);});}}
doit2(0);}
function invokeDeath(){if(btn.d.invokedeath===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("skeleton_die");BGP('invokedeath',"-1600% 0%");g.checkNecromancerSkills();return;}
spellMpCost=nec.cost.invokeDeath;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Invoke Death";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
playAudio("spellCastAbjure");animateParticlesUp("purple");animateCastBar("invokeDeath");preload(['images1/a dark skeleton.png']);}}
$(function(){$NG.window3.on('mouseenter','#invokedeath',function(){var spellType="Conjuration";var minimum=(M.ceil((3+evocationTotal()*1.8)+(((intTotal())-70)/8))+"").fontcolor("#00ff00");var maximum=(M.ceil(((3+evocationTotal()*1.8)+(((intTotal())-70)/8)+(spellSkillCheck()/4.4)/2))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Invoke Death";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.invokeDeath)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Invoke Death conjures a skeleton warrior to fight by your side.";});});g.invokeDeathFinish=function(proc){if(!proc){if(endSpell()===false){return;}
castingSpell=1;g.drawMyMp(-spellMpCost);}
playAudio("spellCastAbjure");playAudio("skeleton_att");Chat((my.name+" animates an undead servant."),3);petLevel=~~(my.level/1.2)+1;petWidth=175+M.ceil(petLevel/3);petHeight=(petWidth*2.096);petImage="a dark skeleton";petMaxHp=M.ceil((50+(petLevel*50))*(1+(talent5()*.163)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*2);petDef=M.ceil(petLevel*3);petPoison=100;petMagic=100;petLightning=100;petFire=100;petCold=100;petSkill1="kick";petSkill2="kick";petSkill3="kick";petSkill4="kick";if(my.talent5>=20){petSkill1="bash";petSkill2="bash";petSkill3="bash";petSkill4="bash";}
petCastingFrequency=9;g.petAlive=true;petSpeed=2500;petPosition=1;g.checkNecromancerSkills();$("#pethpbardiv").css('display','block');BGP('invokedeath',"-1600% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/a dark skeleton.png").width(petWidth);$NG.mob5.stop(true,true).height(petHeight).width(petWidth).css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function cascadingDarknessReady(){if(D.getElementById('cascadingdarkness').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cascadingdarkness',false);BGP('cascadingdarkness',"-400% 0%");g.checkNecromancerSkills();refreshcascadingDarkness.kill();}
function cascadingDarknessTimer(){refreshcascadingDarkness=T.to('',.1,{repeat:-1,onRepeat:cascadingDarknessReady});}
function cascadingDarkness(){if(btn.d.cascadingdarkness===true||my.level<3){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=nec.cost.cascadingDarkness;if(my.mp<spellMpCost){return;}
currentSpell="Cascading Darkness";spellType="conjuration";playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);var Slot=TGT;animateDot(Slot,'magenta',200,60,10,150,ez.Bout,25,5,-50,1);spellDamage=minMax(1+conjurationTotal()*.38,.9);var mType="magic";Chat((mob[Slot].name+" is engulfed in darkness."),3);mob[Slot].cascadingDarknessTickCount=1;mob[Slot].cascadingDarknessTick=spellDamage;mob[Slot].cascadingDarknessTickInterval.kill();mob[Slot].cascadingDarknessTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){cascadingDarknessTick(mType,Slot);}});var buffId="cascadingDarknessIcon";var duration=18000;var spriteX=-128;addMobBuffIcon("Cascading Darkness",Slot,buffId,duration,spriteX);if(mob[TGT].attackStatus===1){attackOn(true);}
beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#cascadingdarkness',function(){var spellType="Conjuration";var CD="5".fontcolor("#ff0000");var a=TTdot(1+conjurationTotal()*.38,.9,"magic","Cascading Darkness");NG.tooltipname.innerHTML="Cascading Darkness";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.cascadingDarkness)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Cascading Darkness ticks for "+a[0]+" to "+a[1]+" arcane damage every second for 18 seconds. Damage increases with each successive tick.";});});function cascadingDarknessTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].cascadingDarknessTickInterval.kill();mob[Slot].cascadingDarknessTickCount=0;return;}
g.myDotDamage(mob[Slot].cascadingDarknessTick,Slot,mType,"Cascading Darkness");mob[Slot].cascadingDarknessTickCount+=1;mob[Slot].cascadingDarknessTick=M.ceil(mob[Slot].cascadingDarknessTick*1.01);if(mob[Slot].cascadingDarknessTickCount===19){mob[Slot].cascadingDarknessTickInterval.kill();mob[Slot].cascadingDarknessTickCount=0;}}
$(function(){$NG.window3.on('mouseenter','#corpseexplosion',function(){var spellType="Evocation";var a=TTmag((evocationTotal()*2.4),.85,"physical","Corpse Explosion");NG.tooltipname.innerHTML="Corpse Explosion";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.corpseExplosion)+" Mana Points<br>"+"Spell Type: "+spellType+"<br><br>"+"Corpse Explosion hits all targets for "+a[0]+" to "+a[1]+" physical damage. Corpse Explosion is activated for five seconds when you kill any mob.";});});function corpseExplosion(){if(my.level<17){return;}
if(corpseExplosionStatus===false){return;}
if(fearStatus===true||bashStatus===true){return;}
spellMpCost=nec.cost.corpseExplosion;if(my.mp<spellMpCost){return;}
corpseExplosionStatus=false;spellType="evocation";g.drawMyMp(-spellMpCost);checkSpellLevelUp();beginGlobalCooldown();for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=minMax((evocationTotal()*2.4)*(g.mobDefense(i)),.85);var spellName="Corpse Explosion";if(GLB.videoSetting==="High"){animateCorpseExplosion(i);}
playAudio("corpseexplode4");g.myMagicDamage("physical",damage,i,checkCrit(),spellName);}}}
function animateCorpseExplosion(Slot,fire){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);if(!fire){var img1='corpseExplosion';var img2='red';}else{var img1='petExplosion';var img2='orange';}
var e1=can(img1,5,x2-150,580-68,0,0,true);T.to(e1,.4,{scaleY:4,scaleX:4,alpha:0,onComplete:function(){cRem(5,e1);}});var c2=img(img2+"particle50");function doIt(count){var x=(M.random()*(500)-250+x2);var y=(M.random()*(200)-100+y2);if(x>x2){var x3=x*1.01+12;}else{var x3=x*.99+12;}
var p2=cacheAdd(c2,5,x,y);T.to(p2,.75,{x:x3,y:y+37,scaleX:0,scaleY:0,onComplete:function(){cRem(5,p2);}});if(count<30){T.delayedCall(.01,function(){doIt(++count);});}}
if(!fire){doIt(0);}}
function invokeFearReady(){if(D.getElementById('invokefear').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('invokefear',false);BGP('invokefear',"-500% 0%");g.checkNecromancerSkills();refreshinvokeFear.kill();}
function invokeFearTimer(){refreshinvokeFear=T.to('',.1,{repeat:-1,onRepeat:invokeFearReady});}
function invokeFear(){if(btn.d.invokefear===true||my.level<5){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=nec.cost.invokeFear;if(my.mp<spellMpCost){return;}
currentSpell="Invoke Fear";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("invokeFear");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#invokefear',function(){var spellType="Alteration";var CD="25".fontcolor("#ff0000");var a=TTdot((alterationTotal()*(1+(talent4()*.27)))/20,.8,"cold","Chill of Death");NG.tooltipname.innerHTML="Invoke Fear";var s="Cost: "+green(nec.cost.invokeFear)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Fear your target for a random duration. Feared targets cower before you and will not attack.";if(my.talent4>0){s+="<BR><BR>Chill of Death hits your target for "+a[0]+" to "+a[1]+" cold damage every second until fear expires.";}
NG.tooltipmsg.innerHTML=s;});});g.invokeFearFinish=function(){if(endSpell()===false){return;}
playAudio("spellCastEvoke2");g.drawMyMp(-spellMpCost);setD('invokefear',true);BGP('invokefear',"-500% -100%");T.delayedCall(25,invokeFearTimer);timerTick(D.getElementById('invokefear'),25000/1000,'invokefear');var Slot=TGT;var fearDuration=(M.random()*(40000)+5000)*statusDurationReduction(Slot);if(mob[Slot].level>my.level){fearDuration-=(M.pow((mob[Slot].level-my.level),1.25));}
if(fearDuration<10000){fearDuration=10000;}
if(fearDuration>25000){fearDuration=25000;}
fearTarget(Slot,fearDuration,-160);if(my.talent4>=1){var max=M.ceil((alterationTotal()*(1+(talent4()*.27)))/20);executeDot(Slot,minMax(max,.8),30,1000,"cold","Chill of Death","chillOfDeath",-480);}}
function drainSoulReady(){if(D.getElementById('drainsoul').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('drainsoul',false);BGP('drainsoul',"-600% 0%");g.checkNecromancerSkills();refreshdrainSoul.kill();}
function drainSoulTimer(){refreshdrainSoul=T.to('',.1,{repeat:-1,onRepeat:drainSoulReady});}
function drainSoul(){if(btn.d.drainsoul===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=nec.cost.drainSoul;if(my.mp<spellMpCost){return;}
currentSpell="Drain Soul";spellCastTime=castSpeedTotal(1500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("drainSoul");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#drainsoul',function(){var spellType="Evocation";var CD=30;if(Set.Wraith>=6){CD-=6;};var a=TTmag(evocationTotal()*1.8,.9,"magic","Drain Soul");NG.tooltipname.innerHTML="Drain Soul";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.drainSoul)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Drain Soul hits your target for "+a[0]+" to "+a[1]+" arcane damage and it is absorbed as health.";});});g.drainSoulFinish=function(){if(endSpell()===false){return;}
playAudio("spellCastAbjure");if(GLB.videoSetting==="High"){animateShdLifeTap(TGT);}
g.drawMyMp(-spellMpCost);setD('drainsoul',true);BGP('drainsoul',"-600% -100%");var d=30000;if(Set.Wraith>=6){d-=6000;};T.delayedCall(d/1000,drainSoulTimer);timerTick(D.getElementById('drainsoul'),d/1000,'drainsoul');spellDamage=minMax(evocationTotal()*1.8,.9);Chat((my.name+' says, "Ah, I feel much better now."'));if(my.talent1>=20){bleedTarget(TGT,45,1000,-192);}
var foo=g.myMagicDamage("magic",spellDamage,TGT,false,"Drain Soul");var healAmount=foo;g.popupHeal(healAmount,true);}
function archShielding(){if(btn.d.archshielding===true||my.level<9){return;}
if(checkBashFear()===true){return;}
spellMpCost=nec.cost.archShielding;if(my.mp<spellMpCost){return;}
currentSpell="Arch Shielding";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("archShielding");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#archshielding',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var v1=abjurationTotal();var minimum=(M.ceil(v1*.1)+"").fontcolor("#00ff00");var value1=(M.ceil(v1*.07)+"").fontcolor("#00ff00");var value2=(M.ceil(v1*.4)+"").fontcolor("#00ff00");var value3=(M.ceil(v1*.1)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Arch Shielding";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.archShielding)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Arch Shielding buffs your armor by "+value1+", your health by "+value2+", and your poison and magic resistance by "+value3+" for "+duration+" minutes.";});});g.archShieldingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You feel protected by a vile presence."),3);if(archShieldingStatus===true){maxHpBuff-=archShieldingHpBoost;armorBuff-=archShieldingArmorBoost;svpoisonBuff-=archShieldingPoisonBoost;svmagicBuff-=archShieldingMagicBoost;}
archShieldingTimeout.kill();archShieldingTimeout=T.delayedCall(3240,archShieldingExpire);var v1=abjurationTotal();archShieldingArmorBoost=M.ceil(v1*.07);archShieldingHpBoost=M.ceil(v1*.4);archShieldingPoisonBoost=M.ceil(v1*.1);archShieldingMagicBoost=M.ceil(v1*.1);maxHpBuff+=archShieldingHpBoost;armorBuff+=archShieldingArmorBoost;svpoisonBuff+=archShieldingPoisonBoost;svmagicBuff+=archShieldingMagicBoost;archShieldingStatus=true;g.drawMyHp();CStat();var skillName="Arch Shielding";var buffId="hpbuffIcon";var duration=3240000;var spriteX=-544;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('green','easeInQuad',5,15,120,4);}
function archShieldingExpire(){archShieldingStatus=false;maxHpBuff-=archShieldingHpBoost;armorBuff-=archShieldingArmorBoost;svpoisonBuff-=archShieldingPoisonBoost;svmagicBuff-=archShieldingMagicBoost;CStat();g.drawMyHp();}
function necFeignDeathReady(){if(D.getElementById('feigndeath').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('feigndeath',false);BGP('feigndeath',"-700% 0%");g.checkNecromancerSkills();refreshnecFeignDeath.kill();}
function necFeignDeathTimer(){refreshnecFeignDeath=T.to('',.1,{repeat:-1,onRepeat:necFeignDeathReady});}
function necFeignDeath(){if(my.level<11){return;}
if(btn.d.feigndeath===true){return;}
if(checkBashFear()===true){return;}
spellMpCost=nec.cost.feignDeath;if(my.mp<spellMpCost){return;}
currentSpell="Feign Death";spellCastTime=castSpeedTotal(1500);spellType="abjuration";hideStatus=0;if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("necFeignDeath");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#feigndeath',function(){var spellType="Abjuration";var CD="25".fontcolor("#ff0000");NG.tooltipname.innerHTML="Feign Death";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.feignDeath)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Your heart stops and you fall to the ground. All targets may believe you have died and leave the battlefield. When used out of combat, you cannot be ambushed.";});});g.necFeignDeathFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneSlam");g.drawMyMp(-spellMpCost);T.delayedCall(25,necFeignDeathTimer);timerTick(D.getElementById('feigndeath'),25000/1000,'feigndeath');setD('feigndeath',true);BGP('feigndeath',"-700% -100%");if(mobsFound()===true){if(M.random()>.65){Chat(("You fall to the ground. Convinced of your death, all enemies leave the battle."),3);hideStatus=0;escapedFromBattle();}else{Chat(("You fall to the ground, but nobody is fooled this time."),3);}}else{Chat("You feign your death.");if(hideStatus===0){return;}
BGP('feigndeath',"-700% -100%");Chat("You feign your death.");hideStatus=0;}
var zit="death_mb";if(my.gender==="Female"){zit="death_fl";}
playAudio(zit);}
function augmentDeathReady(){if(D.getElementById('augmentdeath').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('augmentdeath',false);BGP('augmentdeath',"-800% 0%");g.checkNecromancerSkills();refreshaugmentDeath.kill();}
function augmentDeathTimer(){refreshaugmentDeath=T.to('',.1,{repeat:-1,onRepeat:augmentDeathReady});}
$(function(){$NG.window3.on('mouseenter','#augmentdeath',function(){var CD="90".fontcolor("#ff0000");var value1="30".fontcolor("#00ff00");var value2=(M.ceil((conjurationTotal()*3.5)+M.random()*(my.level/6))+"").fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*.15)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Augment Death";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Heal your pet for "+value2+" health and buff your pet's attack speed for "+value1+" seconds";});});function augmentDeath(){if(btn.d.augmentdeath===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===false){Chat(("Your companion is not here."));return;}
setD('augmentdeath',true);BGP('augmentdeath',"-800% -100%");T.delayedCall(90,augmentDeathTimer);timerTick(D.getElementById('augmentdeath'),90000/1000,'augmentdeath');Chat((petName+"'s eyes gleam with madness."),3);petSpeedBuff=.5;var healAmount=M.ceil(((conjurationTotal()*3.5)+M.random()*(my.level/6))*(1+(talent6()*2.25)/100))
petHp+=healAmount;g.drawMyHp();T.delayedCall(30,augmentDeathExpire);g.popupHealSlot(healAmount,5);if(GLB.videoSetting==="High"){animateAugmentDeath();}
playAudio("skeleton_att");}
function animateAugmentDeath(){if(GLB.videoSetting==="High"){var x2=(MOB[5].offsetLeft+(petWidth/2));var y2=(MOB[5].offsetTop+(petHeight/2));var e1=can('lineNovaRed',5,x2-200,y2-200,400,400,true);T.to(e1,.15,{alpha:.7,scaleX:1.25,scaleY:1.25,onComplete:function(){T.to(e1,.45,{alpha:0,scaleX:2,scaleY:2,ease:ez.lin});}});}}
function augmentDeathExpire(){petSpeedBuff=1;}
function igniteBloodReady(){if(D.getElementById('igniteblood').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('igniteblood',false);BGP('igniteblood',"-900% 0%");g.checkNecromancerSkills();refreshigniteBlood.kill();}
function igniteBloodTimer(){refreshigniteBlood=T.to('',.1,{repeat:-1,onRepeat:igniteBloodReady});}
function igniteBlood(){if(btn.d.igniteblood===true||my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1&&my.talent2<20){targetRequired();return;}
spellMpCost=M.ceil(conjurationTotal()/5);if(my.mp<spellMpCost){return;}
currentSpell="Ignite Blood";spellCastTime=castSpeedTotal(2500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("red");animateCastBar("igniteBlood");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#igniteblood',function(){var MP=(M.ceil(conjurationTotal()/5)+"").fontcolor("#00ff00");var spellType="Conjuration";var a=TTdot(conjurationTotal()*.64,.9,"fire","Ignite Blood");var target="your target";if(my.talent2>=20){target="all targets";}
NG.tooltipname.innerHTML="Ignite Blood";NG.tooltipmsg.innerHTML="Cost: "+MP+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Ignite Blood hits "+target+" and ticks for "+a[0]+" to "+a[1]+" fire damage every second for 24 seconds.";});});g.igniteBloodFinish=function(){var multi=false;if(my.talent2>=20){multi=true;}
if(endSpell()===false){return;}
playAudio("spellDoneHeal");var Slot=TGT;var buffId="igniteBloodIcon";g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name){if(i===Slot||multi===true){animateDot(i,'red',150,0,10,-200,ez.sinout,25,3,100);spellDamage=minMax(conjurationTotal()*.64,.9);Chat((mob[i].name+"'s blood ignites."),3);mob[i].igniteBloodTickCount=1;mob[i].igniteBloodTick=spellDamage;executeIgniteBlood("fire",i);addMobBuffIcon("Ignite Blood",i,buffId,24000,-288);}}}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function executeIgniteBlood(mType,Slot){mob[Slot].igniteBloodTickInterval.kill();mob[Slot].igniteBloodTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){igniteBloodTick("fire",Slot);}});}
function igniteBloodTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].igniteBloodTickInterval.kill();mob[Slot].igniteBloodTickCount=0;return;}
g.myDotDamage(mob[Slot].igniteBloodTick,Slot,mType,"Ignite Blood");mob[Slot].igniteBloodTickCount+=1;if(mob[Slot].igniteBloodTickCount===25){mob[Slot].igniteBloodTickInterval.kill();mob[Slot].igniteBloodTickCount=0;}}
function diamondSkinReady(){if(D.getElementById('diamondskin').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
setD('diamondskin',false);BGP('diamondskin',"-1200% 0%");g.checkNecromancerSkills();refreshdiamondSkin.kill();}
function diamondSkinTimer(){refreshdiamondSkin=T.to('',.1,{repeat:-1,onRepeat:diamondSkinReady});}
$(function(){$NG.window3.on('mouseenter','#diamondskin',function(){var spellType="Abjuration";var CD=red("120")+" Seconds";var duration="24".fontcolor("#00ff00");var minimum=(M.ceil(abjurationTotal()*1.25)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Diamond Skin";var fade="The barrier fades after "+green(9)+" seconds.";if(my.talent12>=20){fade='';CD=red("60")+" Seconds";}
var s="Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+"<br><br>"+"Surround yourself with a diamond barrier that can absorb "+minimum+" damage."+fade;NG.tooltipmsg.innerHTML=s;});});function diamondSkin(){if(btn.d.diamondskin===true||my.level<24){return;}
if(checkBashFear()===true){return;}
setD('diamondskin',true);BGP('diamondskin',"-1200% -100%");var d=120000;if(my.talent12>=20){d=60000;}
T.delayedCall(d/1000,diamondSkinTimer);timerTick(D.getElementById('diamondskin'),d/1000,'diamondskin');beginGlobalCooldown();currentSpell="Diamond Skin";spellType="abjuration";checkSpellLevelUp();Chat(("Your skin becomes like a diamond."),3);shieldHp=M.ceil(abjurationTotal()*1.25);if(my.talent12<20){T.delayedCall(9,diamondSkinExpire);var duration=9000;T.delayedCall(duration/1000,function(){removeIcon("diamondSkinIcon");});}else{var duration=0;}
addBuffIcon("Diamond Skin","diamondSkinIcon",duration,-384);if(GLB.videoSetting==="High"){animateDiamondSkin();}
playAudio("spellDoneBuff");}
function animateDiamondSkin(){flashScreen("#08f",.3,2);var e1=can('diamondSkin',5,440,397,400,400,true);T.to(e1,3,{y:667,alpha:0,scaleX:.5,scaleY:.5,onComplete:function(){cRem(5,e1);}});T.to(e1,3,{scaleX:1.5,scaleY:1.5,});animateBuffRings();}
function diamondSkinExpire(){shieldHp=0;$("#diamondSkinIcon").remove();}
function bondOfDeathReady(){if(D.getElementById('bondofdeath').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('bondofdeath',false);BGP('bondofdeath',"-1100% 0%");g.checkNecromancerSkills();refreshbondOfDeath.kill();}
function bondOfDeathTimer(){refreshbondOfDeath=T.to('',.1,{repeat:-1,onRepeat:bondOfDeathReady});}
function bondOfDeath(){if(btn.d.bondofdeath===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=nec.cost.bondOfDeath;if(my.mp<spellMpCost){return;}
currentSpell="Bond of Death";spellCastTime=castSpeedTotal(2000);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("yellow");animateCastBar("bondOfDeath");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#bondofdeath',function(){var spellType="Alteration";var a=TTdot(alterationTotal()*.166,.9,"magic","Bond of Death");var target="your target";if(my.talent3>=20){target="three targets";}
NG.tooltipname.innerHTML="Bond of Death";NG.tooltipmsg.innerHTML="Cost: "+green(nec.cost.bondOfDeath)+" Mana Points<br>"+"Cooldown: "+red("30")+" Seconds<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Bond of Death hits "+target+" and ticks for "+a[0]+" to "+a[1]+" arcane damage every 3 seconds for one minute. You absorb all damage as health.";});});g.bondOfDeathFinish=function(){if(endSpell()===false){return;}
setD('bondofdeath',true);BGP('bondofdeath',"-1100% -100%");T.delayedCall(30,bondOfDeathTimer);timerTick(D.getElementById('bondofdeath'),30000/1000,'bondofdeath');playAudio("spellDoneHeal");var Slot=TGT;g.drawMyMp(-spellMpCost);var multi=false;if(my.talent3>=20){multi=true;}
for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(i===Slot||multi===true){animateDot(i,'yellow',150,0,10,100,ez.cout);Chat((mob[i].name+"'s life force drains away."),3);mob[i].bondOfDeathTickCount=1;spellDamage=minMax(alterationTotal()*.166,.9);mob[i].bondOfDeathTick=spellDamage;executeBondOfDeath(i);addMobBuffIcon("Bond of Death",i,"bondOfDeathIcon",60000,-352);}}}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function executeBondOfDeath(Slot){mob[Slot].bondOfDeathInterval.kill();mob[Slot].bondOfDeathInterval=T.to('',3,{repeat:-1,onRepeat:function(){bondOfDeathTick("magic",Slot);}});}
function bondOfDeathTick(mType,Slot){if(mob[Slot].name===""){mob[Slot].bondOfDeathInterval.kill();mob[Slot].bondOfDeathTickCount=0;return;}
g.myDotDamage(mob[Slot].bondOfDeathTick,Slot,mType,"Bond of Death");mob[Slot].bondOfDeathTickCount+=1;if(mob[Slot].bondOfDeathTickCount===21){mob[Slot].bondOfDeathInterval.kill();mob[Slot].bondOfDeathTickCount=0;}}
function asystoleReady(){if(D.getElementById('asystole').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('asystole',false);BGP('asystole',"-1300% 0%");g.checkNecromancerSkills();refreshasystole.kill();}
function asystoleTimer(){refreshasystole=T.to('',.1,{repeat:-1,onRepeat:asystoleReady});}
function asystole(){if(btn.d.asystole===true||my.level<28){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Asystole";spellCastTime=castSpeedTotal(2500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("asystole");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#asystole',function(){var spellType="Conjuration";var a=TTdot(alterationTotal()*.466,.9,"poison","Asystole");var value1=("8%").fontcolor("#00ff00");var value2=("24%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Asystole";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Asystole ticks for "+a[0]+" to "+a[1]+" poison damage every second for 30 seconds.<br><br>"+"Effect: Debuffs your target's physical damage by "+value1+" and increases their physical damage received by "+value2+".";});});g.asystoleFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");var Slot=TGT;animateDot(Slot,'green',250,0,10,50,ez.Bout);spellDamage=minMax(alterationTotal()*.466,.9);var mType="poison";g.drawMyMp();Chat((mob[Slot].name+" clutches their chest."),3);var zig=my.level;if(zig>50){zig=50;}
if(mob[Slot].asystoleStatus===false){mob[Slot].asystoleStatus=true;}
mob[Slot].asystoleTickCount=1;mob[Slot].asystoleTick=spellDamage;mob[Slot].asystoleTickInterval.kill();mob[Slot].asystoleTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){asystoleTick(Slot,mType);}});var buffId="asystoleIcon";var duration=30000;var spriteX=-416;addMobBuffIcon("Asystole",Slot,buffId,duration,spriteX);if(mob[TGT].attackStatus===1){attackOn(true);}}
function asystoleTick(Slot,mType){if(mob[Slot].name===""){mob[Slot].asystoleTickInterval.kill();mob[Slot].asystoleTickCount=0;mob[Slot].asystoleStatus=false;return;}
g.myDotDamage(mob[Slot].asystoleTick,Slot,mType,"Asystole");mob[Slot].asystoleTickCount+=1;if(mob[Slot].asystoleTickCount===31){mob[Slot].asystoleTickInterval.kill();mob[Slot].asystoleTickCount=0;}}
function detonateSoulReady(){if(D.getElementById('detonatesoul').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('detonatesoul',false);BGP('detonatesoul',"-1400% 0%");g.checkNecromancerSkills();refreshdetonateSoul.kill();}
function detonateSoulTimer(){refreshdetonateSoul=T.to('',.1,{repeat:-1,onRepeat:detonateSoulReady});}
function detonateSoul(){if(btn.d.detonatesoul===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=nec.cost.detonateSoul;if(my.mp<spellMpCost){return;}
currentSpell="Detonate Soul";spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
animateParticlesDown("green");animateCastBar("detonateSoul");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#detonatesoul',function(){var spellType="Evocation";var CD="30".fontcolor("#ff0000");var a=TTmag((evocationTotal()*3)*(1+((talent8()*7.8)/100)),.85,"magic","Detonate Soul");NG.tooltipname.innerHTML="Detonate Soul";var s="Cost: "+green(nec.cost.detonateSoul)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Detonate Soul hits your target after 5 seconds for "+a[0]+" to "+a[1]+" arcane damage.<br><br>"+"Effect: If you kill the mob before it detonates, you will harvest mana from your target's spirit.";if(my.talent8>=20){s+="<BR><BR>Detonate Soul chills all targets for 9 seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.detonateSoulFinish=function(){if(endSpell()===false){return;}
playAudio("confuse");var Slot=TGT;var sameMob=mob[Slot].ID;if(GLB.videoSetting==="High"){animateDetonateSoul(Slot,sameMob);}
setD('detonatesoul',true);BGP('detonatesoul',"-1400% -100%");T.delayedCall(30,detonateSoulTimer);timerTick(D.getElementById('detonatesoul'),30000/1000,'detonatesoul');g.drawMyMp(-spellMpCost);function detonateSoulHit(Slot){if(mob[Slot].ID===sameMob&&mob[Slot].name){playAudio("corpseexplodecast");if(my.talent8>=20){for(var i=0;i<=4;i++){if(mob[i].name){chillTarget(i,9000,-448);}}}
g.myMagicDamage("magic",damage,Slot,checkCrit(),"Detonate Soul");}
detonateSoulStatus=false;}
var damage=minMax((evocationTotal()*3)*(1+((talent8()*7.8)/100)),.85);detonateSoulStatus=true;Chat(("A pulsing charge is affixed to "+mob[Slot].name+"'s soul."),3);detonateSoulTimeout.kill();detonateSoulTimeout=T.delayedCall(5,function(){detonateSoulHit(Slot);});addMobBuffIcon("Detonate Soul",Slot,"detonateSoulIcon",5000,-448);}
function animateDetonateSoul(Slot,sameMob){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var size=150;var H1=IMG(cX-(size/2),cY-(size/2),size,size,'asystole');H1.id='detonateSoul'+Slot;NG.eWin.appendChild(H1);T.to(H1,5,{force3D:"auto",width:8,height:8,left:cX-4,top:cY-4,onComplete:function(){Remove(H1);if(sameMob===mob[Slot].ID&&mob[Slot].name){particleBurst(Slot,'green','blank');animateSoulExplosion(Slot);flashScreen("#fff",.3,1);}}});T.to(H1,5,{rotation:360*30,ease:ez.lin,onComplete:function(){T.set((this.target),{rotation:0});}});function goX(Slot,ttd){if(ttd>0){var x=MOB[Slot].offsetLeft+mob[Slot].cX;var w1=parseInt(H1.style.width,10);T.to(H1,.25,{left:x-(w1/2),ease:ez.lin});ttd-=250;T.delayedCall(.25,function(){goX(Slot,ttd);});}}
goX(Slot,5000);}
function animateExplosion(Slot,img){if(Slot===undefined){Slot=TGT;}
if(!img){img="detonation";}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var e1=can(img,5,x2-150,490,0,0,true);T.to(e1,.2,{scaleY:2.66,scaleX:2.66,ease:ez.cout});T.to(e1,1.3,{alpha:0,ease:ez.xout,onComplete:function(){cRem(5,e1);}});var e2=can(img,5,x2-150,490,0,0,true);T.to(e2,1,{scaleY:2.66,scaleX:2.66,alpha:0,ease:ez.cout,onComplete:function(){cRem(5,e2);}});}
function animateSoulExplosion(Slot){if(mob[Slot].name===""){return;}
var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);animateExplosion(Slot);function doIt(count){var x=(M.random()*(500)-250+x2);var y=(M.random()*(200)-100+y2);if(x>x2){var x3=x*1.01+12;}else{var x3=x*.99+12;}
var p1=can('greenparticle50',5,x,y,25,25);T.to(p1,.75,{x:x3,y:y+37,scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});if(count<30){T.delayedCall(.01,function(){doIt(++count);});}}
doIt(0);}
function howlingTerrorReady(){if(D.getElementById('howlingterror').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('howlingterror',false);BGP('howlingterror',"-1500% 0%");g.checkNecromancerSkills();refreshhowlingTerror.kill();}
function howlingTerrorTimer(){refreshhowlingTerror=T.to('',.1,{repeat:-1,onRepeat:howlingTerrorReady});}
$(function(){$NG.window3.on('mouseenter','#howlingterror',function(){var spellType="Alteration";var CD="90".fontcolor("#ff0000");var a=TTdot((alterationTotal()*(1+(talent4()*.27)))/20,.8,"cold","Chill of Death");NG.tooltipname.innerHTML="Howling Terror";var s="Cost: "+green(nec.cost.howlingTerror)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Howling Terror fears all targets for a random duration.";if(my.talent4>0){s+="<BR><BR>Chill of Death hits all feared targets for "+a[0]+" to "+a[1]+" cold damage every second.";}
NG.tooltipmsg.innerHTML=s;});});function howlingTerror(){if(btn.d.howlingterror===true||my.level<38){return;}
if(checkBashFear()===true){return;}
spellMpCost=nec.cost.howlingTerror;if(my.mp<spellMpCost){return;}
currentSpell="Howling Terror";spellType="alteration";checkSpellLevelUp();g.drawMyMp(-spellMpCost);playAudio("spellCastEvoke2");setD('howlingterror',true);BGP('howlingterror',"-1500% -100%");T.delayedCall(90,howlingTerrorTimer);timerTick(D.getElementById('howlingterror'),90000/1000,'howlingterror');if(GLB.videoSetting==="High"){animateNova('howlingTerror');}
for(var i=0;i<=4;i++){if(mob[i].name!==""){var fearDuration=(M.random()*(28000)+3000)*statusDurationReduction(i);if(mob[i].level>my.level){fearDuration-=(M.pow((mob[i].level-my.level),1.25));}
if(fearDuration<7000){fearDuration=7000;}
if(fearDuration>20000){fearDuration=20000;}
fearTarget(i,fearDuration,-480,mob[i].name+" runs in terror.");if(my.talent4>=1){var dam=minMax((alterationTotal()*(1+(talent4()*.27)))/20,.8);executeDot(i,dam,20,1000,"cold","Chill of Death","chillOfDeath",-480,-32);}}}}
function chaosFluxReady(){if(D.getElementById('chaosflux').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('chaosflux',false);BGP('chaosflux',"-300% 0%");g.checkEnchanterSkills();refreshchaosFlux.kill();}
function chaosFluxTimer(){refreshchaosFlux=T.to('',.1,{repeat:-1,onRepeat:chaosFluxReady});}
function chaosFlux(){if(btn.d.chaosflux===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].charmStatus===true){Chat(("You cannot attack your charmed pet."),3);return;}
currentSpell="Chaos Flux";spellType="evocation";spellCastTime=castSpeedTotal(3000);if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("chaosFlux");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#chaosflux',function(){var spellType="Evocation";var a=TTmag(3+evocationTotal()*2.1,.8,"magic","Chaos Flux");NG.tooltipname.innerHTML="Chaos Flux";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Chaos Flux hits your target for "+a[0]+" to "+a[1]+" arcane damage.<br><br>"+"Effect: Interrupts your target's spell. There is a 25% chance that your target will be launched into the air and take falling damage upon landing.";});});g.chaosFluxFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneFlames");var Slot=TGT;animateSmite(Slot);function chaosFluxHit(){var damage2=0;var S=mob[Slot];if(S.rare===3){damage2=M.round(S.maxHp*.025);}else if(S.rare===1){damage2=M.round(S.maxHp*.1);}else{damage2=M.round(S.maxHp*.066);}
calculateSpellDamage3(damage2,Slot);function doneFalling(){mob[Slot].fallingStatus=false;}
T.delayedCall(1.4,doneFalling);}
var damage=minMax(3+evocationTotal()*2.1,.8);var mType="magic";if(M.random()>.75){mob[Slot].fallingStatus=true;animateFlux(Slot);T.delayedCall(1.4,chaosFluxHit);addMobBuffIcon("Gravity Flux",Slot,"fallingIcon",1400,-96);}
var spellName="Chaos Flux";g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);interruptTarget(Slot);}
function gaspingEmbraceReady(){if(D.getElementById('gaspingembrace').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('gaspingembrace',false);BGP('gaspingembrace',"-400% 0%");g.checkEnchanterSkills();refreshgaspingEmbrace.kill();}
function gaspingEmbraceTimer(){refreshgaspingEmbrace=T.to('',.1,{repeat:-1,onRepeat:gaspingEmbraceReady});}
function gaspingEmbrace(){if(btn.d.gaspingembrace===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].charmStatus===true){Chat(("You cannot attack your charmed pet."),3);return;}
spellMpCost=enc.cost.gaspingEmbrace;if(my.mp<spellMpCost){return;}
currentSpell="Gasping Embrace";spellCastTime=castSpeedTotal(2500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("gaspingEmbrace");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#gaspingembrace',function(){var spellType="Conjuration";var CD="5".fontcolor("#ff0000");var a=TTdot(1+conjurationTotal()*.355,.9,"magic","Gasping Embrace");var target="your target";if(my.talent9>=20){target="all targets";}
NG.tooltipname.innerHTML="Gasping Embrace";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.gaspingEmbrace)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Gasping Embrace hits "+target+" and ticks for "+a[0]+" to "+a[1]+" arcane damage every second for 21 seconds.<br><br>"+"Effect: Debuffs your target's strength by "+green("12%")+".";});});g.gaspingEmbraceFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);var Slot=TGT;var multi=false;if(my.talent9>=20){multi=true;}
for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(i===Slot||multi===true){if(mob[i].charmStatus===false){animateDot(i,"magenta",250);spellDamage=minMax(1+conjurationTotal()*.355,.9);Chat((mob[i].name+" feels a shortness of breath."),3);mob[i].gaspingEmbraceStatus=true;mob[i].gaspingEmbraceTickCount=1;mob[i].gaspingEmbraceTick=spellDamage;executeGaspingEmbrace(i,"magic");addMobBuffIcon("Gasping Embrace",i,"gaspingEmbraceIcon",21000,-128);}}}}
if(mob[TGT].attackStatus===1){attackOn(true);}}
function executeGaspingEmbrace(Slot,mType){mob[Slot].gaspingEmbraceTickInterval.kill();mob[Slot].gaspingEmbraceTickInterval=T.to('',1,{repeat:-1,onRepeat:function(){gaspingEmbraceTick(mType,Slot);}});}
function gaspingEmbraceTick(mType,Slot){if(mob[Slot].name===""||mob[Slot].name===""){mob[Slot].gaspingEmbraceTickInterval.kill();mob[Slot].gaspingEmbraceTickCount=0;mob[Slot].gaspingEmbraceStatus=false;return;}
g.myDotDamage(mob[Slot].gaspingEmbraceTick,Slot,mType,"Gasping Embrace");mob[Slot].gaspingEmbraceTickCount+=1;if(mob[Slot].gaspingEmbraceTickCount===22){mob[Slot].gaspingEmbraceTickInterval.kill();mob[Slot].gaspingEmbraceTickCount=0;}}
function cajolingWhispersReady(){if(D.getElementById('cajolingwhispers').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('cajolingwhispers',false);BGP('cajolingwhispers',"-500% 0%");g.checkEnchanterSkills();refreshcajolingWhispers.kill();}
function cajolingWhispersTimer(){refreshcajolingWhispers=T.to('',.1,{repeat:-1,onRepeat:cajolingWhispersReady});}
function cajolingWhispers(){if(btn.d.cajolingwhispers===true||my.level<3){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[charmSlot].charmStatus===true){cajolingWhispersTicking.kill();cajolingWhispersExpire(charmSlot);return;}
spellMpCost=enc.cost.cajolingWhispers;if(my.mp<spellMpCost){return;}
currentSpell="Cajoling Whispers";spellCastTime=castSpeedTotal(1500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("cajolingWhispers");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#cajolingwhispers',function(){var spellType="Alteration";var CD="5".fontcolor("#ff0000");NG.tooltipname.innerHTML="Cajoling Whispers";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.cajolingWhispers)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Cajoling Whispers charms your target to fight by your side. Charmed mobs can be released by clicking the mob's charm icon.";});});g.cajolingWhispersFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneBuff");var Slot=TGT;if(GLB.videoSetting==="High"){animateCajolingWhispers(Slot);}
setD('cajolingwhispers',true);BGP('cajolingwhispers',"-500% -100%");T.delayedCall(5,cajolingWhispersTimer);timerTick(D.getElementById('cajolingwhispers'),5000/1000,'cajolingwhispers');currentSpell="Cajoling Whispers";g.drawMyMp(-spellMpCost);if(statusResist(Slot)===true||mob[Slot].rare===3){Chat((mob[Slot].name+" resisted "+currentSpell+"."),1);}else{Chat((mob[Slot].name+" has been charmed."),3);interruptTarget(Slot);mob[Slot].charmStatus=true;charmSlot=Slot;petName=mob[charmSlot].name;$("#pethpbardiv").css('display','block');if($("#petBarName").length===0){var e1=$('<div id="petBarName">').html(mob[charmSlot].level+" - "+petName);$("#pethpbardiv").append(e1);}else{$("#petBarName").html(mob[charmSlot].level+" - "+petName);}
g.drawMyHp();var charismaValue=(chaTotal()-60);if(charismaValue<10){charismaValue=10;}
var charmDuration=(20000+M.random()*(conjurationTotal()*100)+M.random()*((charismaValue)*600)+(charismaValue*1500))*statusDurationReduction(Slot);charmDuration+=g.alterationEquip*1000;if(mob[Slot].level>my.level){charmDuration-=(M.pow((mob[Slot].level-my.level),2.2));}
if(charmDuration<=8000){charmDuration=8000;}
if(my.talent8<20){cajolingWhispersTicking.kill();cajolingWhispersTicking=T.delayedCall(charmDuration/1000,cajolingWhispersExpire);}else{charmDuration=0;}
addMobBuffIcon("Charmed",Slot,"charmIcon",charmDuration,-160);}}
function animateCajolingWhispers(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-25;var cY=MOB[Slot].offsetTop+mob[Slot].cY-25;var c2=img("heart",50,50);function doit(count){var ranX=(M.random()*150-75);var ranY=(M.random()*(60)-30);var e1=cacheAdd(c2,5,cX+ranX,cY+ranY);T.to(e1,1,{y:"+="+100,alpha:0,ease:ez.Qin});count++;if(count<8){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
function cajolingWhispersExpire(Slot){if(Slot){cajolingWhispersTicking.kill();$("#charmIcon"+Slot).stop(true,true).remove();}
mob[charmSlot].charmStatus=false;if(Slot){Chat(("You release "+petName+" from your command."));}else{Chat((petName+" is no longer captivated."),3);}
petName="";$("#pethpbardiv").css('display','none');}
$(".mobIcons").on('click','#charmIcon0,#charmIcon1,#charmIcon2,#charmIcon3,#charmIcon4',function(){if(my.job==="Enchanter"){cajolingWhispersExpire(TGT);}
if(my.job==="Bard"){songOfTheSirensExpire(TGT)}});function colorShiftReady(){if(D.getElementById('colorshift').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('colorshift',false);BGP('colorshift',"-600% 0%");g.checkEnchanterSkills();refreshcolorShift.kill();}
function colorShiftTimer(){refreshcolorShift=T.to('',.1,{repeat:-1,onRepeat:colorShiftReady});}
function colorShift(){if(btn.d.colorshift===true||my.level<5){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.colorShift;if(my.mp<spellMpCost){return;}
currentSpell="Color Shift";spellType="alteration";playAudio("novaice");if(GLB.videoSetting==="High"){animateNova('colorShift');}
setD('colorshift',true);BGP('colorshift',"-600% -100%");g.drawMyMp(-spellMpCost);T.delayedCall(20,colorShiftTimer);timerTick(D.getElementById('colorshift'),20000/1000,'colorshift');for(var i=0;i<=4;i++){if(mob[i].name!==""&&mob[i].charmStatus===false){if(statusResist(i)===true){Chat((mob[i].name+" resisted "+currentSpell+"."),1);}else{var stunDuration=6000;if(my.talent2>=20&&M.random()>.65){stunDuration*=1.6;T.to(canvas[i],stunDuration/1000,{startAt:{rotationY:18000},rotationY:0});Chat(mob[i].name+" begins to spin.");}else{Chat(mob[i].name+" is stunned by scintillating colors.");}
stunTarget(i,stunDuration,-192);if(my.talent2>=1){var dam=minMax((alterationTotal())*(1+(talent2()*8.7)/100),.87);g.myMagicDamage("magic",dam,i,checkCrit(),"Color Shift");}}}}
beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#colorshift',function(){var spellType="Alteration";var CD="20".fontcolor("#ff0000");var a=TTmag((alterationTotal())*(1+(talent2()*8.7)/100),.87,"magic","Color Shift");NG.tooltipname.innerHTML="Color Shift";var s="Cost: "+green(enc.cost.colorShift)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Color Shift stuns all target for 6 seconds.";if(my.talent2>=1){s+="<BR><BR>Color Shift hits all targets for "+a[0]+" to "+a[1]+" arcane damage.";}
if(my.talent2>=20){s+="<BR><BR>Effect: Color Shift has a "+green("35%")+" chance of Whirl Till You Hurl, which stuns your target for an additional "+green("3.6")+" seconds.";}
NG.tooltipmsg.innerHTML=s;});});function mesmerizeReady(){if(D.getElementById('mesmerize').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('mesmerize',false);BGP('mesmerize',"-700% 0%");g.checkEnchanterSkills();refreshmesmerize.kill();}
function mesmerizeTimer(){refreshmesmerize=T.to('',.1,{repeat:-1,onRepeat:mesmerizeReady});}
function mesmerize(){if(btn.d.mesmerize===true||my.level<7){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].charmStatus===true){Chat(("You cannot mesmerize your charmed pet."),3);return;}
spellMpCost=enc.cost.mesmerize;if(my.mp<spellMpCost){return;}
currentSpell="Mesmerize";spellCastTime=castSpeedTotal(2500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("mesmerize");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#mesmerize',function(){var spellType="Conjuration";var CD="6".fontcolor("#ff0000");var a=TTmag((alterationTotal())*((talent10()*18.5)/100),.85,"magic","Jubilee");if(my.talent10===0){var desc="Mesmerize your target for a random duration. Mesmerized targets will not attack until you attack them.";var name="Mesmerize";}else{var desc="Jubilee hits three targets for "+a[0]+" to "+a[1]+" arcane damage.";var name="Jubilee";}
NG.tooltipname.innerHTML=name;var s="Cost: "+green(enc.cost.mesmerize)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>";s+=desc;NG.tooltipmsg.innerHTML=s;});});g.mesmerizeFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);setD('mesmerize',true);BGP('mesmerize',"-700% -100%");T.delayedCall(6,mesmerizeTimer);timerTick(D.getElementById('mesmerize'),6000/1000,'mesmerize');var Slot=TGT;if(my.talent10<1){if(statusResist(Slot)===true||mob[Slot].rare===3){Chat((mob[Slot].name+" resisted "+currentSpell+"."),1);return;}
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
animateMesmerize(Slot);Chat((mob[Slot].name+" has been mesmerized."),3);var d=(5000+((chaTotal()-70)*450)+(M.random()*(chaTotal()*100)))*statusDurationReduction(Slot);d+=g.conjurationEquip*500;if(mob[Slot].level>my.level){d-=(M.pow((mob[Slot].level-my.level),1.2));}
if(d<15000){d=15000;}
if(d>75000){d=75000;}
sleepTarget(Slot,d,"Mesmerized",-224);}else{for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){animateJubilee(i);Chat((mob[i].name+" is blasted by a jubilee of light."),3);var d=2500*statusDurationReduction(i);var dam=minMax((alterationTotal())*((talent10()*18.5)/100),.85);g.myMagicDamage("magic",dam,i,checkCrit(),"Jubilee");if(mob[i].name!==''){sleepTarget(i,d,"Mesmerized",-224);}}}}}
function animateMesmerize(Slot,size,color){if(GLB.videoSetting!=="High"){return;}
if(!size){size=25;}
var diff=(size-3)/2;if(!color){color='white';}
var cY=MOB[Slot].offsetTop-(size/2);function animateLoop(count){var randomLeft=MOB[Slot].offsetLeft+((mob[Slot].imageWidth)/2)+M.random()*(200)-100-(size/2);var randomTop=cY+M.random()*(mob[Slot].cY)+10;var p1=can(color+"particle50",5,randomLeft,randomTop,size,size);var speed=M.random()*(2)+1;T.to(p1,speed,{scaleX:.1,scaleY:.1,x:randomLeft+diff,ease:ez.qin,onComplete:function(){cRem(5,p1);}});T.to(p1,speed,{y:"+="+(M.random()*(mob[Slot].cY*2.5)+size),ease:ez.sin});count++;if(count<=40){animateLoop(count);}}
animateLoop(0);}
function animateJubilee(Slot,size,color){if(GLB.videoSetting!=="High"){return;}
if(!size){size=50;}
var diff=(size-3)/2;if(!color){color='white';}
var cY=MOB[Slot].offsetTop-(size/2);function animateLoop(count){var randomLeft=MOB[Slot].offsetLeft+((mob[Slot].imageWidth)/2)+M.random()*(200)-100-(size/2);var randomTop=cY+M.random()*(mob[Slot].cY)+10;var p1=can(color+"particle50",5,randomLeft,randomTop,25,25);var speed=M.random()*(1.5)+.5;T.to(p1,speed,{x:randomLeft+diff,scaleX:.1,scaleY:.1,onComplete:function(){cRem(5,p1);}});T.to(p1,speed,{y:"+="+(M.random()*(mob[Slot].cY*2.5)+size),ease:ez.Qin});if(count<=60){animateLoop(++count);}}
animateLoop(0);}
function discordantBarrier(){if(btn.d.discordantbarrier===true||my.level<9){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.discordantBarrier;if(my.mp<spellMpCost){return;}
currentSpell="Discordant Barrier";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("discordantBarrier");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#discordantbarrier',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var v1=abjurationTotal();var v2=talent3();var value1=(M.ceil((v1*.18)*((v2*6.8/100)+1))+"").fontcolor("#00ff00");var value2=(M.ceil((v1*.4)*((v2*8.3/100)+1))+"").fontcolor("#00ff00");var value3=(M.ceil(v1*.3)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Discordant Barrier";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.discordantBarrier)+" Mana Points<br>"+"Cast Time: "+castTimeTT(4000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Discordant Barrier buffs your armor by "+value1+", your hit points by "+value2+", and your magic resistance by "+value3+" for "+duration+" minutes.";});});g.discordantBarrierFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are encased by a translucent shield."),3);if(discordantBarrierStatus===true){maxHpBuff-=discordantBarrierHpBoost;armorBuff-=discordantBarrierArmorBoost;svmagicBuff-=discordantBarrierMagicBoost;}
discordantBarrierTimeout.kill();discordantBarrierTimeout=T.delayedCall(3240,discordantBarrierExpire);var v1=abjurationTotal();var v2=talent3();discordantBarrierArmorBoost=M.ceil((v1*.18)*((v2*6.8/100)+1));discordantBarrierHpBoost=M.ceil((v1*.4)*((v2*8.3/100)+1));discordantBarrierMagicBoost=M.ceil(v1*.3);maxHpBuff+=discordantBarrierHpBoost;armorBuff+=discordantBarrierArmorBoost;svmagicBuff+=discordantBarrierMagicBoost;discordantBarrierStatus=true;g.drawMyHp();CStat();var skillName="Discordant Barrier";var buffId="hpbuffIcon";var duration=3240000;var spriteX=-448;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff("teal",'easeInBack',5,25,120,4);}
function discordantBarrierExpire(){discordantBarrierStatus=false;maxHpBuff-=discordantBarrierHpBoost;armorBuff-=discordantBarrierArmorBoost;svmagicBuff-=discordantBarrierMagicBoost;CStat();g.drawMyHp();}
function shiftlessDeedsReady(){if(D.getElementById('shiftlessdeeds').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('shiftlessdeeds',false);BGP('shiftlessdeeds',"-800% 0%");g.checkEnchanterSkills();refreshshiftlessDeeds.kill();}
function shiftlessDeedsTimer(){refreshshiftlessDeeds=T.to('',.1,{repeat:-1,onRepeat:shiftlessDeedsReady});}
function shiftlessDeeds(){if(btn.d.shiftlessdeeds===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].charmStatus===true){Chat(("You cannot slow your charmed pet."),3);return;}
spellMpCost=enc.cost.shiftlessDeeds;if(my.mp<spellMpCost){return;}
currentSpell="Shiftless Deeds";spellCastTime=castSpeedTotal(2500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("white");animateCastBar("shiftlessDeeds");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shiftlessdeeds',function(){var spellType="Alteration";var CD="15".fontcolor("#ff0000");var target="your target's";if(my.talent6>=20){target="three targets";}
var a=TTdot((alterationTotal()/3.7)*((talent6()/24)),.9,"cold","Shiftless Frost");NG.tooltipname.innerHTML="Shiftless Deeds";var s="Cost: "+green(enc.cost.shiftlessDeeds)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Shiftless Deeds slows "+target+"' attack speed by 1.5 seconds for 2 minutes.";if(my.talent6>=1){s+="<BR><BR>Shiftless Frost hits "+target+" and ticks for "+a[0]+" to "+a[1]+" cold damage every second for 35 seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.shiftlessDeedsFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
playAudio("spellDoneHeal");var Slot=TGT;setD('shiftlessdeeds',true);BGP('shiftlessdeeds',"-800% -100%");T.delayedCall(15,shiftlessDeedsTimer);timerTick(D.getElementById('shiftlessdeeds'),15000/1000,'shiftlessdeeds');g.drawMyMp(-spellMpCost);if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted "+currentSpell+"."),1);}else{var multi=false;if(my.talent6>=20){multi=true;}
for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(i===Slot||multi===true){if(mob[i].charmStatus===false){animateDot(i,"white",250,60,50,100,ez.Qinout);shiftlessTarget(i);if(my.talent6>=1){var max=M.ceil((alterationTotal()/3.7)*((talent6()/24)))
executeDot(i,minMax(max,.9),35,1000,"cold","Shiftless Frost","shiftlessFrost",-256,-32,true);}}}}}}}
function shiftlessTarget(Slot){mob[Slot].shiftlessStatus=true;Chat((mob[Slot].name+" slows down."),3);mob[Slot].shiftlessDeedsTimeout.kill();mob[Slot].shiftlessDeedsTimeout=T.delayedCall(120,function(){shiftlessDeedsExpire(Slot);});addMobBuffIcon("Shiftless Deeds",Slot,"slowIcon",120000,-256);}
function shiftlessDeedsExpire(Slot){mob[Slot].shiftlessDeedsTimeout.kill();mob[Slot].shiftlessStatus=false;}
function enchantWeapon(){if(btn.d.enchantweapon===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.enchantWeapon;if(my.mp<spellMpCost){return;}
currentSpell="Enchant Weapon";spellCastTime=castSpeedTotal(3000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("enchantWeapon");playAudio("spellCastAbjure",0,spellCastTime);}
function charmEnchantStrike(){var max=M.ceil((conjurationTotal()/2.4)*(1+(talent7()*6.2)/100));g.myMagicDamage("magic",minMax(max,.85),TGT,false,"Enchant Weapon");if(my.talent7>=20){var x=M.random()*(1);if(x>.75){var max=M.ceil((conjurationTotal()/2.8)*(1+(talent7()*6.2)/100));g.myMagicDamage("poison",minMax(max,.8),TGT,false,"Enchant Weapon");}else if(x>.5){var max=M.ceil((conjurationTotal()/2)*(1+(talent7()*6.2)/100));g.myMagicDamage("lightning",minMax(max,.25),TGT,false,"Enchant Weapon");}else if(x>.25){var max=M.ceil((conjurationTotal()/3.3)*(1+(talent7()*6.2)/100));g.myMagicDamage("cold",minMax(max,.9),TGT,false,"Enchant Weapon");}else{var max=M.ceil((conjurationTotal()/2.5)*(1+(talent7()*6.2)/100));g.myMagicDamage("fire",minMax(max,.6),TGT,false,"Enchant Weapon");}}}
$(function(){$NG.window3.on('mouseenter','#enchantweapon',function(){var spellType="Conjuration";var duration="30".fontcolor("#00ff00");var a=TTmag(M.ceil((conjurationTotal()/2.4)*(1+(talent7()*6.2)/100)),.85,"magic","Enchant Weapon");NG.tooltipname.innerHTML="Enchant Weapon";var s="Cost: "+green(enc.cost.enchantWeapon)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Enchant Weapon enchants your weapon with "+a[0]+" to "+a[1]+" arcane damage for "+duration+" minutes.";if(my.talent7>=20){s+="<BR><BR>A second random type of magical attack hits your target:";var b=TTmag(M.ceil((conjurationTotal()/2.8)*(1+(talent7()*6.2)/100)),.8,"poison","Enchant Weapon");s+="<br>"+b[0]+" to "+b[1]+" poison damage";var c=TTmag(M.ceil((conjurationTotal()/2)*(1+(talent7()*6.2)/100)),.25,"lightning","Enchant Weapon");s+="<br>"+c[0]+" to "+c[1]+" lightning damage";var d=TTmag(M.ceil((conjurationTotal()/3.3)*(1+(talent7()*6.2)/100)),.9,"cold","Enchant Weapon");s+="<br>"+d[0]+" to "+d[1]+" cold damage";var e=TTmag(M.ceil((conjurationTotal()/2.5)*(1+(talent7()*6.2)/100)),.6,"fire","Enchant Weapon");s+="<br>"+e[0]+" to "+e[1]+" fire damage";}
NG.tooltipmsg.innerHTML=s;});});g.enchantWeaponFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");animateBuff('teal','easeInBack',5,25,150,3);g.drawMyMp(-spellMpCost);Chat(("Your weapon shimmers with fluxing strands of chaos."),3);enchantWeaponStatus=true;enchantWeaponTimeout.kill();enchantWeaponTimeout=T.delayedCall(1800,enchantWeaponExpire);var skillName="Enchant Weapon";var buffId="enchantWeaponIcon";var duration=1800000;var spriteX=-480;enchantWeaponIconTimer.kill();enchantWeaponIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);}
function enchantWeaponExpire(){enchantWeaponStatus=false;}
function adorningGrace(){if(btn.d.adorninggrace===true||my.level<15){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.adorningGrace;if(my.mp<spellMpCost){return;}
currentSpell="Adorning Grace";spellCastTime=castSpeedTotal(3500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("purple");animateCastBar("adorningGrace");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#adorninggrace',function(){var spellType="Abjuration";var duration="24".fontcolor("#00ff00");var v1=abjurationTotal();var value1=(M.ceil(v1*.2)+"").fontcolor("#00ff00");var value2=(M.ceil(v1*.08)+"").fontcolor("#00ff00");var value3=(M.ceil(v1*.08)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Adorning Grace";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.adorningGrace)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Adorning Grace buffs your wisdom by "+value1+", your intelligence by "+value2+", and your charisma by "+value3+" for "+duration+" minutes.";});});g.adorningGraceFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are adorned by an aura of radiant grace."),3);if(adorningGraceStatus===true){chaBuff-=adorningGraceCha;intelBuff-=adorningGraceIntel;wisBuff-=adorningGraceWis;}
adorningGraceTimeout.kill();adorningGraceTimeout=T.delayedCall(1440,adorningGraceExpire);var v1=abjurationTotal();adorningGraceCha=M.ceil(v1*.08);adorningGraceIntel=M.ceil(v1*.08);adorningGraceWis=M.ceil(v1*.2);chaBuff+=adorningGraceCha;intelBuff+=adorningGraceIntel;wisBuff+=adorningGraceWis;adorningGraceStatus=true;CStat();var skillName="Adorning Grace";var buffId="adorningGraceIcon";var duration=1440000;var spriteX=-512;adorningGraceIconTimer.kill();adorningGraceIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('purple','easeInBack',5,25,120,3);}
function adorningGraceExpire(){adorningGraceStatus=false;chaBuff-=adorningGraceCha;intelBuff-=adorningGraceIntel;wisBuff-=adorningGraceWis;CStat();}
function alacrityReady(){if(D.getElementById('alacrity').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('alacrity',false);BGP('alacrity',"-900% 0%");g.checkEnchanterSkills();refreshalacrity.kill();}
function alacrityTimer(){refreshalacrity=T.to('',.1,{repeat:-1,onRepeat:alacrityReady});}
function alacrity(){if(btn.d.alacrity===true||my.level<17){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.alacrity;if(my.mp<spellMpCost){return;}
currentSpell="Alacrity";spellCastTime=castSpeedTotal(2500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("alacrity");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#alacrity',function(){var spellType="Alteration";var minimum="40%".fontcolor("#00ff00");var duration="5".fontcolor("#00ff00");NG.tooltipname.innerHTML="Alacrity";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.alacrity)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Alacrity creates an aura that buffs your haste by "+minimum+" for "+duration+" minutes. This aura automatically affects charmed allies.";});});g.alacrityFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);var Slot=TGT;Chat(("You feel much faster."),3);alacrityTimeout.kill();alacrityTimeout=T.delayedCall(300,function(){alacrityExpire(Slot)});alacrityStatus=true;addBuffIcon("Alacrity","hasteIcon",300000,-288);animateBuff("teal",'easeInQuad',25,11,120,2);CStat();}
function alacrityExpire(Slot){alacrityStatus=false;CStat();}
function gravityFluxReady(){if(D.getElementById('gravityflux').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('gravityflux',false);BGP('gravityflux',"-1000% 0%");g.checkEnchanterSkills();refreshgravityFlux.kill();}
function gravityFluxTimer(){refreshgravityFlux=T.to('',.1,{repeat:-1,onRepeat:gravityFluxReady});}
function gravityFlux(){if(btn.d.gravityflux===true||my.level<20){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.gravityFlux;if(my.mp<spellMpCost){return;}
currentSpell="Gravity Flux";spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
animateParticlesDown("magenta");animateCastBar("gravityFlux");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#gravityflux',function(){var spellType="Evocation";var CD="20".fontcolor("#ff0000");if(my.talent11>=20){CD=green("12");}
var a=TTmag(evocationTotal()*2.7,.85,"magic","Gravity Flux");NG.tooltipname.innerHTML="Gravity Flux";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.gravityFlux)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Gravity Flux hits all targets for "+a[0]+" to "+a[1]+" arcane damage. All targets are launched up in the air and take falling damage upon landing.<br><br>"+"Effect: Interrupts all targets' spells.";});});g.gravityFluxFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneFlames");setD('gravityflux',true);BGP('gravityflux',"-1000% -100%");var d=20000;if(my.talent11>=20){d=12000;}
T.delayedCall(d/1000,gravityFluxTimer);timerTick(D.getElementById('gravityflux'),d/1000,'gravityflux');g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""&&mob[i].charmStatus===false){var damage=minMax(evocationTotal()*2.7,.85);animateSmite(i);g.myMagicDamage("magic",damage,i,checkCrit(),"Gravity Flux");interruptTarget(i);mob[i].fallingStatus=true;animateFlux(i);addMobBuffIcon("Gravity Flux",i,"stunIcon",1400,-320);gravityFluxLand(i);}}}
function animateFlux(i){if(mob[i].name===''){return;}
var tl1=TM();var tl2=TM();stopMob(i);if(!mob[i].phased){MOB[i].style.opacity=1;canvas[i].style.opacity=1;}else{MOB[i].style.opacity=1;canvas[i].style.opacity=.5;}
tl1.to(MOB[i],.7,{bottom:1056,force3D:"auto",ease:ez.qout}).to(MOB[i],.7,{bottom:floorB,force3D:"auto",ease:ez.qin});tl2.to(MOBSHADOW[i],.7,{width:"60%",height:30,bottom:-890,force3D:"auto",ease:ez.qout}).to(MOBSHADOW[i],.7,{width:"100%",height:50,bottom:0,force3D:"auto",ease:ez.qin});}
function gravityFluxLand(Slot){function gravityFluxHit(Slot){var damage2=0;var S=mob[Slot];if(S.rare===3){damage2=M.round(S.maxHp*.025);}else if(S.rare===1){damage2=M.round(S.maxHp*.1);}else{damage2=M.round(S.maxHp*.066);}
calculateSpellDamage3(damage2,Slot);function doneFalling(){mob[Slot].fallingStatus=false;}
T.delayedCall(1.4,doneFalling);}
T.delayedCall(1.4,function(){gravityFluxHit(Slot);removeMobIcon("stunIcon",Slot);});}
function animatePsychicBeam(Slot,total){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX-150);var y2=580-1200;function doit(count){if(mob[Slot].sleepStatus===true||mob[Slot].charmStatus===true||mob[Slot].name===''){return;}
var p5=can('windmillKick',7,x2,y2,300,0);T.to(p5,.2,{scaleY:1300/200,ease:ez.Qin});T.to(p5,.2,{scaleY:0,alpha:0,y:560,delay:.2,onComplete:function(){cRem(7,p5);}});var p4=can('windmillKick',7,x2-600,y2,1500,0);T.to(p4,.2,{scaleY:1300/200,ease:ez.Qin});T.to(p4,.75,{alpha:0,scaleX:2100/200,x:x2-900,delay:.2,onComplete:function(){cRem(7,p4);}});animateTremor();var max=M.ceil(evocationTotal()/8);g.myMagicDamage("magic",minMax(max,.2),Slot,false,"Psychic Beam");if(count<total){T.delayedCall(.1,function(){doit(++count);});}}
doit(0);}
function mysticRuneReady(){if(D.getElementById('mysticrune').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
setD('mysticrune',false);BGP('mysticrune',"-1100% 0%");g.checkEnchanterSkills();refreshmysticRune.kill();}
function mysticRuneTimer(){refreshmysticRune=T.to('',.1,{repeat:-1,onRepeat:mysticRuneReady});}
function mysticRune(){if(my.hp<=0||paused===true){return;}
if(btn.d.mysticrune===true||my.level<24){return;}
spellMpCost=enc.cost.mysticRune;if(my.mp<spellMpCost){return;}
currentSpell="Mystic Rune";spellType="abjuration";spellCastTime=castSpeedTotal(1500);if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("mysticRune");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#mysticrune',function(){var spellType="Abjuration";var CD=40;if(Set.Satyr>=6){CD-=10;}
var minimum=(M.ceil((abjurationTotal()*1.1)*(1+(talent4()*2.1)/100))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Mystic Rune";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.mysticRune)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Mystic Rune surrounds you and absorbs "+minimum+" damage until it is depleted.";});});g.mysticRuneFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");setD('mysticrune',true);BGP('mysticrune',"-1100% -100%");var d=40000;if(Set.Satyr>=6){d-=10000;}
T.delayedCall(d/1000,mysticRuneTimer);timerTick(D.getElementById('mysticrune'),d/1000,'mysticrune');Chat(("A dark shimmer of runes surrounds you."),3);g.drawMyMp(-spellMpCost);shieldHp=M.ceil((abjurationTotal()*1.1)*(1+(talent4()*2.1)/100));var buffId="shieldHpIcon";removeIcon(buffId);addBuffIcon("Mystic Rune",buffId,0,-352);if(GLB.videoSetting==="High"){animateMysticRune();}}
function animateMysticRune(){flashScreen("#08f",.3,2);var e1=can('mysticRune',5,440,297,400,400,true);T.to(e1,3,{y:720,alpha:0,rotation:1440,onComplete:function(){cRem(5,e1);}});animateBuffRings();}
function animateBuffRings(img,total){if(!img){img='buffRings';}
if(!total){total=5;}
function goRings(count){var p1=can(img,6,0,-60,1280,50);T.to(p1,.8,{y:720,ease:ez.sout,onComplete:function(){cRem(6,p1);}});count++;if(count<total){T.delayedCall(.1,function(){goRings(count);});}}
goRings(0);}
function tashaniaReady(){if(D.getElementById('tashania').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
setD('tashania',false);BGP('tashania',"-1200% 0%");g.checkEnchanterSkills();refreshtashania.kill();}
function tashaniaTimer(){refreshtashania=T.to('',.1,{repeat:-1,onRepeat:tashaniaReady});}
function tashania(){if(btn.d.tashania===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.tashania;if(my.mp<spellMpCost){return;}
currentSpell="Tashania";spellCastTime=castSpeedTotal(1500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesDown("orange");animateCastBar("tashania");playAudio("spellCastDot",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#tashania',function(){var spellType="Abjuration";var CD="8".fontcolor("#00ff00");var value1=(M.round(abjurationTotal()/20)+"%").fontcolor("#00ff00");var a=TTdot((abjurationTotal()/2.1)*((talent12()/24)),.9,"magic","Tashania's Bark");NG.tooltipname.innerHTML="Tashania";var s="Cost: "+green(enc.cost.tashania)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Tashania increases arcane damage on all targets' by "+value1+".";if(my.talent12>=20){s+="<BR><BR>Tashania's Bark hits all targets and ticks for "+a[0]+" to "+a[1]+" arcane damage over "+green("20")+" seconds. Tashania's Bark can stack multiple times.";}
NG.tooltipmsg.innerHTML=s;});});g.tashaniaFinish=function(){if(endSpell()===false){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
setD('tashania',true);BGP('tashania',"-1200% -100%");T.delayedCall(8,tashaniaTimer);timerTick(D.getElementById('tashania'),8000/1000,'tashania');playAudio("spellDoneHeal");g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""){mob[i].tashaniaStatus=true;Chat((mob[i].name+" hears the barking of Tashania."),3);addMobBuffIcon("Tashania",i,"tashaniaIcon",0,-384);if(my.talent12>=1){var dam=minMax((abjurationTotal()/2.1)*((talent12()/24)),.9);executeDot(i,dam,20,1000,"magic","Tashania's Bark","tashaniasBark",-384,-32,true);}}}
animateDebuff("orange");}
function clarity(){if(checkBashFear()===true){return;}
if(btn.d.clarity===true||my.level<32){return;}
spellMpCost=enc.cost.clarity;if(my.mp<spellMpCost){return;}
currentSpell="Clarity";spellType="alteration";spellCastTime=castSpeedTotal(3000);if(startSpell()===false){return;}
animateParticlesUp("blue");animateCastBar("clarity");}
$(function(){$NG.window3.on('mouseenter','#clarity',function(){var spellType="Alteration";var duration="30".fontcolor("#00ff00");NG.tooltipname.innerHTML="Clarity";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.clarity)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Clarity buffs your mana regeneration for "+duration+" minutes.";});});g.clarityFinish=function(){if(endSpell()===false){return;}
Chat(("A cool breeze slips through your mind."),3);g.drawMyMp(-spellMpCost);clarityTimeout.kill();clarityTimeout=T.delayedCall(1800,function(){clarityExpire()});clarityStatus=true;var skillName="Clarity";var buffId="clarityIcon";var duration=1800000;var spriteX=-544;clarityIconTimer.kill();clarityIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('blue','easeInBack',5,25,100,6);}
function clarityExpire(Slot){clarityStatus=false;}
function enthrallReady(){if(D.getElementById('enthrall').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('enthrall',false);BGP('enthrall',"-1300% 0%");g.checkEnchanterSkills();refreshenthrall.kill();}
function enthrallTimer(){refreshenthrall=T.to('',.1,{repeat:-1,onRepeat:enthrallReady});}
function enthrall(){if(btn.d.enthrall===true||my.level<38){return;}
if(checkBashFear()===true){return;}
spellMpCost=enc.cost.enthrall;if(my.mp<spellMpCost){return;}
currentSpell="Enthrall";spellCastTime=castSpeedTotal(1500);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesDown("purple");animateCastBar("enthrall");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#enthrall',function(){var spellType="Conjuration";var CD="25".fontcolor("#ff0000");NG.tooltipname.innerHTML="Enthrall";NG.tooltipmsg.innerHTML="Cost: "+green(enc.cost.enthrall)+" Mana Points<br>"+"Cast Time: "+castTimeTT(1500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Enthrall mesmerizes all targets for a random duration. Mesmerized targets will not attack until you attack them.";});});g.enthrallFinish=function(){if(endSpell()===false){return;}
if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
playAudio("spellDoneBuff");setD('enthrall',true);BGP('enthrall',"-1300% -100%");T.delayedCall(25,enthrallTimer);timerTick(D.getElementById('enthrall'),25000/1000,'enthrall');g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""&&mob[i].charmStatus===false){if(statusResist(i)===true||mob[i].rare===3){Chat((mob[i].name+" resisted "+currentSpell+"."),1);continue;}else{Chat((mob[i].name+" has been enthralled."),3);var d=(2500+(((chaTotal()-70)*380)+(M.random()*(chaTotal()*70))))*statusDurationReduction(i);d+=g.conjurationEquip*600;if(mob[i].level>my.level){d-=(M.pow((mob[i].level-my.level),1.2));}
if(d<11000){d=11000;}
if(d>55000){d=55000;}
if(!mob[i].phased&&mob[i].name){MOB[i].style.opacity=1;}
sleepTarget(i,d,"Mesmerized",-416);animateMesmerize(i);}}}}
function lavaBoltReady(){if(D.getElementById('lavabolt').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('lavabolt',false);BGP('lavabolt',"-300% 0%");g.checkMagicianSkills();refreshlavaBolt.kill();}
function lavaBoltTimer(){refreshlavaBolt=T.to('',.1,{repeat:-1,onRepeat:lavaBoltReady});}
function lavaBolt(){if(btn.d.lavabolt===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Lava Bolt";spellType="conjuration";spellCastTime=castSpeedTotal(3000);if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("lavaBolt");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#lavabolt',function(){var spellType="Conjuration";var a=TTmag(3+conjurationTotal()*2.3,.8,"fire","Lava Bolt");NG.tooltipname.innerHTML="Lava Bolt";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Lava Bolt hits your target for "+a[0]+" to "+a[1]+" fire damage.";});});g.lavaBoltFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBoom");var Slot=TGT;if(GLB.videoSetting==="High"){animateLavaBolt(Slot);}
var damage=minMax(3+conjurationTotal()*2.3,.8);g.myMagicDamage("fire",damage,Slot,checkCrit(),"Lava Bolt");if(my.talent5>=20&&petName===""){if(!petImage||petImage==='a fire elemental'){g.fireElementalFinish(true);}else if(petImage==='an earth elemental'){g.earthElementalFinish(true);}else if(petImage==='an air elemental'){g.airElementalFinish(true);}else if(petImage==='a frost elemental'){g.frostElementalFinish(true);}
petTarget=TGT;togglePetAutoAttackStatus();}}
function animateLavaBolt(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var x2=(cX-100);var y2=(cY-100);var e1=can('lavaBolt',5,x2,y2,200,200,true);T.to(e1,.8,{scaleX:2,scaleY:2,alpha:0,onComplete:function(){cRem(5,e1);}});particleBurst(Slot,'orange','blank');}
function earthElemental(){if(btn.d.earthelemental===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("elem_die3");BGP('earthelemental',"-1700% 0");g.checkMagicianSkills();return;}
spellMpCost=mag.cost.elemental;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Earth Elemental";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("earthElemental");playAudio("spellCastAbjure");preload(['images1/an earth elemental.png']);}}
$(function(){$NG.window3.on('mouseenter','#earthelemental',function(){var spellType="Conjuration";NG.tooltipname.innerHTML="Earth Elemental";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.elemental)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon an Earth Elemental to fight by your side. Earth Elementals have high health, good resistance against all elements, strong lightning resistance, strong defense, and cast snare.";});});g.earthElementalFinish=function(proc){if(!proc){if(endSpell()===false){return;}
castingSpell=1;g.drawMyMp(-spellMpCost);}
playAudio("elem_att3");Chat((my.name+" summons an Earth Elemental."),3);petLevel=~~(my.level/1.2)+1;petWidth=300+M.ceil(petLevel/3);petHeight=(petWidth*1.156);petImage="an earth elemental";petMaxHp=M.ceil((50+(petLevel*55))*(1+(talent5()*.131)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*2);petDef=M.ceil(petLevel*3);petPoison=150;petMagic=150;petLightning=300;petFire=150;petCold=150;petSkill1="snare";petSkill2="snare";petSkill3="snare";petSkill4="snare";petCastingFrequency=5;g.petAlive=true;petSpeed=3000;petPosition=1;$("#pethpbardiv").css('display','block');BGP('earthelemental',"-200% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/an earth elemental.png").width(petWidth+"px");$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function airElemental(){if(btn.d.airelemental===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("elem_die3");BGP('airelemental',"-1700% -100%");g.checkMagicianSkills();return;}
spellMpCost=mag.cost.elemental;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Air Elemental";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("white");animateCastBar("airElemental");playAudio("spellCastAbjure");preload(['images1/an air elemental.png']);}}
$(function(){$NG.window3.on('mouseenter','#airelemental',function(){var spellType="Conjuration";NG.tooltipname.innerHTML="Air Elemental";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.elemental)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon an Air Elemental to fight by your side. Air Elementals have medium health, good magic and lightning resistance, strong offense, increased attack speed, and bash their targets.";});});g.airElementalFinish=function(proc){if(!proc){if(endSpell()===false){return;}
castingSpell=1;g.drawMyMp(-spellMpCost);}
playAudio("elem_att3");Chat((my.name+" summons an Air Elemental."),3);petLevel=~~(my.level/1.2)+1;petWidth=300+M.ceil(petLevel/3);petHeight=(petWidth*1.13);petImage="an air elemental";petMaxHp=M.ceil((50+(petLevel*45))*(1+(talent5()*.131)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*3);petDef=M.ceil(petLevel*2);petPoison=100;petMagic=200;petLightning=200;petFire=100;petCold=100;petSkill1="bash";petSkill2="bash";petSkill3="bash";petSkill4="bash";petCastingFrequency=9;g.petAlive=true;petSpeed=2400;petPosition=1;$("#pethpbardiv").css('display','block');BGP('airelemental',"-200% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/an air elemental.png").width(petWidth+"px");$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function fireElemental(){if(btn.d.fireelemental===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("elem_die3");BGP('fireelemental',"-1700% -200%");g.checkMagicianSkills();return;}
spellMpCost=mag.cost.elemental;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Fire Elemental";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("red");animateCastBar("fireElemental");playAudio("spellCastAbjure");preload(['images1/a fire elemental.png']);}}
$(function(){$NG.window3.on('mouseenter','#fireelemental',function(){var spellType="Conjuration";NG.tooltipname.innerHTML="Fire Elemental";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.elemental)+" Mana Points<br>"+"Cast Time: "+castTimeTT(6000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon an Fire Elemental to fight by your side. Fire Elementals have weak health, strong offense, strong fire resistance, increased attack speed, and cast burst of flame. They are covered in a shield of flames which reflects fire damage when physically attacked.";});});g.fireElementalFinish=function(proc){if(!proc){if(endSpell()===false){return;}
castingSpell=1;g.drawMyMp(-spellMpCost);}
playAudio("elem_att3");Chat((my.name+" summons a Fire Elemental."),3);petLevel=~~(my.level/1.2)+1;petWidth=300+M.ceil(petLevel/3);petHeight=(petWidth*1.12);petImage="a fire elemental";petMaxHp=M.ceil((50+(petLevel*35))*(1+(talent5()*.131)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*3);petDef=M.ceil(petLevel*2);petPoison=100;petMagic=100;petLightning=100;petFire=300;petCold=50;petSkill1="burstofflame";petSkill2="burstofflame";petSkill3="burstofflame";petSkill4="burstofflame";petCastingFrequency=7;g.petAlive=true;petSpeed=2200;petPosition=1;$("#pethpbardiv").css('display','block');BGP('fireelemental',"-200% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/a fire elemental.png").width(petWidth+"px");$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function frostElemental(){if(btn.d.frostelemental===true||my.level<2){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===true){killPet();playAudio("elem_die3");BGP('frostelemental',"-1700% -300%");g.checkMagicianSkills();return;}
spellMpCost=mag.cost.elemental;if(my.mp<spellMpCost){return;}
if(g.petAlive===false){currentSpell="Frost Elemental";spellCastTime=castSpeedTotal(6000);spellType="conjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("frostElemental");playAudio("spellCastAbjure");preload(['images1/a frost elemental.png']);}}
$(function(){$NG.window3.on('mouseenter','#frostelemental',function(){var DUR="6".fontcolor("#00ff00");var spellType="Conjuration";NG.tooltipname.innerHTML="Frost Elemental";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.elemental)+" Mana Points<br>"+"Cast Time: "+DUR+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Summon an Frost Elemental to fight by your side. Frost Elementals have strong health, strong cold resistance, strong defense, and cast freeze.";});});g.frostElementalFinish=function(proc){if(!proc){if(endSpell()===false){return;}
castingSpell=1;g.drawMyMp(-spellMpCost);}
playAudio("elem_att3");Chat((my.name+" summons a Frost Elemental."),3);petLevel=~~(my.level/1.2)+1;petWidth=300+M.ceil(petLevel/3);petHeight=(petWidth*1.2594);petImage="a frost elemental";petMaxHp=M.ceil((50+(petLevel*55))*(1+(talent5()*.131)));petHp=petMaxHp;createPetName();petStr=M.ceil(petLevel*2);petDef=M.ceil(petLevel*3);petPoison=100;petMagic=100;petLightning=100;petFire=50;petCold=300;petSkill1="freeze";petSkill2="freeze";petSkill3="freeze";petSkill4="freeze";petCastingFrequency=9;g.petAlive=true;petSpeed=3000;petPosition=1;$("#pethpbardiv").css("display","block");BGP('frostelemental',"-200% -100%");g.drawMyHp();var leftAdjust=190+((290-petWidth)/2);$NG.petImage.attr("src","images1/a frost elemental.png").width(petWidth+"px");$NG.mob5.stop(true,true).height(petHeight).width(petWidth+"px").css({"left":leftAdjust,"bottom":60,opacity:1,display:"block"});var nameWid=$("#petName").width();var ADJ=(petWidth/2)-(nameWid/2);$("#petName").css("left",ADJ);}
function shieldOfLava(){if(btn.d.shieldoflava===true||my.level<3){return;}
if(checkBashFear()===true){return;}
spellMpCost=mag.cost.shieldOfLava;if(my.mp<spellMpCost){return;}
currentSpell="Shield of Lava";spellCastTime=castSpeedTotal(2500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("red");animateCastBar("shieldOfLava");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#shieldoflava',function(){var spellType="Abjuration";var duration="15".fontcolor("#00ff00");var value1=(M.ceil(abjurationTotal()*.18)+"").fontcolor("#00ff00");var a=TTmag(abjurationTotal()/2.6,.8,"fire","Magma Burst");NG.tooltipname.innerHTML="Shield of Lava";var s="Cost: "+green(mag.cost.shieldOfLava)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"You are surrounded by a Shield of Lava, which reflects "+value1+" fire damage every time you are physically attacked for "+duration+" minutes.";if(my.talent2>=20){s+="<BR><BR>While Shield of Lava is active, Magma Burst hits all targets for "+a[0]+" to "+a[1]+" fire damage every "+green("4.2")+" seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.shieldOfLavaFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are enveloped by lava."),3);shieldOfLavaStatus=true;shieldOfBramblesTimeout.kill();shieldOfBramblesTimeout=T.delayedCall(900,shieldOfLavaExpire);var skillName="Shield of Lava";var buffId="damageShieldIcon";var duration=900000;var spriteX=-448;damageShieldIconTimer.kill();damageShieldIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff('red','easeInBack',15,5,120,3);}
function shieldOfLavaExpire(){shieldOfLavaStatus=false;}
function firestormReady(){if(D.getElementById('firestorm').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('firestorm',false);BGP('firestorm',"-400% 0%");g.checkMagicianSkills();refreshfirestorm.kill();}
function firestormTimer(){refreshfirestorm=T.to('',.1,{repeat:-1,onRepeat:firestormReady});}
function firestorm(){if(btn.d.firestorm===true||my.level<5){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=mag.cost.firestorm;if(my.mp<spellMpCost){return;}
currentSpell="Firestorm";spellCastTime=castSpeedTotal(2000);spellType="evocation";playAudio("infernoloop",0,1000);setD('firestorm',true);BGP('firestorm',"-400% -100%");T.delayedCall(15,firestormTimer);timerTick(D.getElementById('firestorm'),15000/1000,'firestorm');g.drawMyMp(-spellMpCost);var damage=minMax(evocationTotal()*.7,.75);cacheFirestorm=img("petExplosion",300,135);if(GLB.videoSetting==="High"){animateFirestorm(TGT);}
g.myMagicDamage("fire",damage,TGT,checkCrit(),"Firestorm");var hits=3+M.ceil(M.random()*(M.ceil(evocationTotal()/40)));if(my.talent3>=20){hits=~~(hits*2);}
var evoT=evocationTotal();var intT=intTotal();var spSk=spellSkillCheck();var anm=false;if(GLB.videoSetting==="High"){anm=true;}
for(var i=0;i<=hits;i++){var Slot=selectRandomTarget();if(Slot!==undefined){var damage=M.ceil((((evoT*.4)+(((intT)-70)/5))+M.random()*(spSk/8.4)));if(anm===true){(function(S){T.delayedCall(.1,function(){animateFirestorm(S);});})(Slot);}
g.myMagicDamage("fire",damage,Slot,checkCrit(),"Firestorm");}}
beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#firestorm',function(){var spellType="Evocation";var CD="15".fontcolor("#ff0000");var a=TTmag(evocationTotal()*.7,.7,"fire","Firestorm");var hits=3+M.ceil(evocationTotal()/40);if(my.talent3>=20){hits=M.round(hits*2);}
hits=green(hits);NG.tooltipname.innerHTML="Firestorm";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.firestorm)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Firestorm hits your primary target and hits random targets up to "+hits+" additional times for "+a[0]+" to "+a[1]+" fire damage.";});});function animateFirestorm(Slot){function doit(count){var e1=cacheAdd(cacheFirestorm,5,(Slot*240)+(M.random()*(60)-30),710-((count+1)*80),1,1,true,true);T.to(e1,.6,{startAt:{alpha:.6},scaleY:(1.6-(count/2)),scaleX:(1.6-(count/2)),alpha:0,onComplete:function(){cRem(5,e1);}});count++;if(count<2){T.delayedCall(.25,function(){doit(count);});}}
doit(0);}
function phantomPlate(){if(btn.d.phantomplate===true||my.level<7){return;}
if(checkBashFear()===true){return;}
spellMpCost=mag.cost.phantomPlate;if(my.mp<spellMpCost){return;}
currentSpell="Phantom Plate";spellCastTime=castSpeedTotal(3500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("green");animateCastBar("phantomPlate");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#phantomplate',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var minimum=(M.ceil((abjurationTotal()*.66)*(1+(talent9()*9.7)/100))+"").fontcolor("#00ff00");var value1=(M.ceil((abjurationTotal()*.12)*(1+(talent9()*11.1)/100))+"").fontcolor("#00ff00");var value2=((M.ceil(my.level/10)+2)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Phantom Plate";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.phantomPlate)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Phantom Plate buffs your armor by "+value1+", your health by "+minimum+", and your health regeneration by "+value2+" for "+duration+" minutes.";});});g.phantomPlateFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are covered in illusionary armor."),3);if(phantomPlateStatus===true){maxHpBuff-=phantomPlateHpBoost;armorBuff-=phantomPlateArmorBoost;}
phantomPlateTimeout.kill();phantomPlateTimeout=T.delayedCall(3240,phantomPlateExpire);phantomPlateArmorBoost=M.ceil((abjurationTotal()*.12)*(1+(talent9()*11.1)/100));phantomPlateHpBoost=M.ceil((abjurationTotal()*.66)*(1+(talent9()*9.7)/100));maxHpBuff+=phantomPlateHpBoost;armorBuff+=phantomPlateArmorBoost;phantomPlateStatus=true;g.drawMyHp();CStat();var skillName="Phantom Plate";var buffId="hpbuffIcon";var duration=3240000;var spriteX=-480;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);animateBuff("green",'easeInBack',5,25,120,4);setEquipValues();}
function phantomPlateExpire(){phantomPlateStatus=false;maxHpBuff-=phantomPlateHpBoost;armorBuff-=phantomPlateArmorBoost;CStat();g.drawMyHp();setEquipValues();}
function frozenOrbReady(){if(D.getElementById('frozenorb').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('frozenorb',false);BGP('frozenorb',"-500% 0%");g.checkMagicianSkills();refreshfrozenOrb.kill();}
function frozenOrbTimer(){refreshfrozenOrb=T.to('',.1,{repeat:-1,onRepeat:frozenOrbReady});}
function frozenOrb(){if(btn.d.frozenorb===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=mag.cost.frozenOrb;if(my.mp<spellMpCost){return;}
currentSpell="Frozen Orb";spellCastTime=castSpeedTotal(2500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("teal");animateCastBar("frozenOrb");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#frozenorb',function(){var spellType="Evocation";var CD="16".fontcolor("#ff0000");var a=TTmag(evocationTotal()*.2,.87,"cold","Frozen Orb");var value1="33%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Frozen Orb";var s="Cost: "+green(mag.cost.frozenOrb)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Frozen Orb hits all targets "+green("10")+" times for "+a[0]+" to "+a[1]+" cold damage. Adjacent targets take diminished damage based on distance.";s+="<BR><BR>Effect: All targets' attack speed is reduced by "+value1+".";if(my.talent10>=20){s+="<BR><BR>Effect: All targets are frozen for "+green("3")+" seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.frozenOrbFinish=function(){if(endSpell()===false){return;}
setD('frozenorb',true);BGP('frozenorb',"-500% -100%");T.delayedCall(16,frozenOrbTimer);timerTick(D.getElementById('frozenorb'),16000/1000,'frozenorb');g.drawMyMp(-spellMpCost);var Slot=TGT;function modifyOrbDamage(foo,bar){if(bar-1===Slot||bar+1===Slot){foo=M.ceil(foo*.8);}
if(bar-2===Slot||bar+2===Slot){foo=M.ceil(foo*.6);}
if(bar-3===Slot||bar+3===Slot){foo=M.ceil(foo*.4);}
if(bar-4===Slot||bar+4===Slot){foo=M.ceil(foo*.2);}
return foo;}
function damageHit(){if(orbTickCount===10){return;}
playAudio("icespike"+~~(M.random()*(3)+1));var mType="cold";for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=minMax(evocationTotal()*.2,.87);damage=modifyOrbDamage(damage,i);chillTarget(i,6000,-160);g.myMagicDamage(mType,damage,i,checkCrit(),"Frozen Orb");}}
orbTickCount++;T.delayedCall(.1,damageHit);}
var orbTickCount=0;if(my.talent10>=20){for(var i=0;i<=4;i++){if(mob[i].name){freezeTarget(i,3000,-160);}}}
damageHit();if(GLB.videoSetting==="High"){animateFrozenOrb(Slot);}}
function animateFrozenOrb(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-320;var e1=can('frozenOrb',5,cX,-640,640,640,true);T.to(e1,.75,{y:470,onComplete:function(){T.to(e1,1,{y:540,alpha:0,ease:ez.lin});}});T.to(e1,2,{rotation:-1800,ease:ez.cin,onComplete:function(){cRem(5,e1);}});var c2=img("tealparticle50");function doit(count){x2=(M.random()*1330-25);y2=(M.random()*125+550);y3=count*13;var p1=cacheAdd(c2,5,628,y3);T.to(p1,1.5,{x:x2,scaleX:.2,scaleY:.2,onComplete:function(){cRem(5,p1);}});T.to(p1,1.5,{y:y2,ease:ez.bout});if(count<40){T.delayedCall(.01,function(){doit(++count);});}}
doit(0);}
function burnoutReady(){if(D.getElementById('burnout').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('burnout',false);BGP('burnout',"-600% 0%");g.checkMagicianSkills();refreshburnout.kill();}
function burnoutTimer(){refreshburnout=T.to('',.1,{repeat:-1,onRepeat:burnoutReady});}
$(function(){$NG.window3.on('mouseenter','#burnout',function(){var CD="35".fontcolor("#ff0000");var value1="60%".fontcolor("#00ff00");var duration="25".fontcolor("#00ff00");var heal=M.ceil((conjurationTotal()*5.2)+M.random()*(my.level/6));NG.tooltipname.innerHTML="Burnout";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Burnout boosts your pet's attack speed by "+value1+" for "+duration+" seconds and recovers "+green(heal)+" health.";});});function burnout(){if(btn.d.burnout===true||my.level<11||paused===true){return;}
if(g.petAlive===false){Chat(("Your minion is not here."));return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('burnout',true);BGP('burnout',"-600% -100%");T.delayedCall(35,burnoutTimer);timerTick(D.getElementById('burnout'),35000/1000,'burnout');Chat((petName+" goes berserk."),3);petSpeedBuff=.4;var healAmount=M.ceil((conjurationTotal()*5.2)+M.random()*(my.level/6));petHp+=healAmount;g.popupHealSlot(healAmount,5);g.drawMyHp();T.delayedCall(25,burnoutExpire);g.popupHealSlot(healAmount,4);if(GLB.videoSetting==="High"){animateBurnout();}
playAudio("elem_att3");}
function animateBurnout(){var x2=MOB[5].offsetLeft+(petWidth/2);var y2=MOB[5].offsetTop+(petHeight/2);function doit(count){var size=(M.random()*150+75);var x3=x2+(M.random()*(300)-150)-(size/2);var y3=y2+(M.random()*(100)-200);var p1=can('fireparticle50',6,x2-100,y3,size,size);T.to(p1,.6,{alpha:0,y:(y3+75),ease:ez.Qin,onComplete:function(){cRem(6,p1);}});count++;if(count<12){T.delayedCall(.01,function(){doit(count);});}}
doit(0);function doFlash(count2){var p2=can('orangeLight3',5,x2-1280,y2-827,2560,1544);T.to(p2,.8,{alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,p2);}});count2++;if(count2<3){doFlash(count2);}}
doFlash(0);}
function burnoutExpire(){petSpeedBuff=1;}
function elementalArmor(){if(btn.d.elementalarmor===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellMpCost=mag.cost.elementalArmor;if(my.mp<spellMpCost){return;}
currentSpell="Elemental Armor";spellCastTime=castSpeedTotal(2500);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("orange");animateCastBar("elementalArmor");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#elementalarmor',function(){var spellType="Abjuration";var duration="36".fontcolor("#00ff00");var minimum=(M.ceil((abjurationTotal()*.17)*(1+(talent11()*3.3)/100))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Elemental Armor";var s="Cost: "+green(mag.cost.elementalArmor)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Elemental Armor buffs your cold and fire resistance by "+minimum+" for "+duration+" minutes.";if(my.talent11>=20){s+="<BR><BR>While Elemental Armor is active, your casting haste is enhanced by "+green("35%")+".";}
NG.tooltipmsg.innerHTML=s;});});g.elementalArmorFinish=function(){if(endSpell()===false){return;}
g.drawMyMp(-spellMpCost);Chat(("You feel protected from fire and ice."),3);if(elementalArmorStatus===true){svcoldBuff-=elementalArmorColdBoost;svfireBuff-=elementalArmorFireBoost;}
spiritArmorTimeout.kill();spiritArmorTimeout=T.delayedCall(2160,elementalArmorExpire);var goy=M.ceil((abjurationTotal()*.17)*(1+(talent11()*3.3)/100));elementalArmorColdBoost=goy;elementalArmorFireBoost=goy;svcoldBuff+=elementalArmorColdBoost;svfireBuff+=elementalArmorFireBoost;elementalArmorStatus=true;CStat();var buffId="resistIcon";var duration=2160000;resistIconTimer.kill();resistIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon("Elemental Armor",buffId,duration,-512);animateBuff('orange','easeInBack',5,25,120,3);}
function elementalArmorExpire(){elementalArmorStatus=false;svcoldBuff-=elementalArmorColdBoost;svfireBuff-=elementalArmorFireBoost;CStat();}
function manaShieldReady(){if(D.getElementById('manashield').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('manashield',false);BGP('manashield',"-700% 0%");g.checkMagicianSkills();refreshmanaShield.kill();}
function manaShieldTimer(){refreshmanaShield=T.to('',.1,{repeat:-1,onRepeat:manaShieldReady});}
$(function(){$NG.window3.on('mouseenter','#manashield',function(){var spellType="Conjuration";var CD="45".fontcolor("#ff0000");var duration="16".fontcolor("#00ff00");var value1="75%".fontcolor("#00ff00");var value2="75%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Mana Shield";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Mana Shield mitigates all damage by "+value1+". Damage taken also reduces your mana. Mana shield lasts for "+duration+" seconds.<br><br>"+"Effect: All mana gained is increased by 280%";});});function manaShield(){if(btn.d.manashield===true||my.level<13){return;}
if(checkBashFear()===true){return;}
spellType="conjuration";setD('manashield',true);BGP('manashield',"-700% -100%");T.delayedCall(45,manaShieldTimer);timerTick(D.getElementById('manashield'),45000/1000,'manashield');beginGlobalCooldown();checkSpellLevelUp();g.drawMyMp();Chat(("You are shielded by an azure ether."),3);manaShieldStatus=true;manaShieldTimeout.kill();manaShieldTimeout=T.delayedCall(16,manaShieldExpire);var skillName="Mana Shield";var buffId="manaShieldIcon";var duration=16000;var spriteX=-224;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);if(GLB.videoSetting==="High"){animateManaShield();}
playAudio("energyshield");}
function animateManaShield(){flashScreen("#08f",.3,2);var e1=can('manaShield',5,440,397,400,400,true);T.to(e1,3,{y:797,alpha:0});T.to(e1,1.5,{rotation:720,onComplete:function(){cRem(5,e1);}});animateBuffRings();}
function manaShieldExpire(){manaShieldStatus=false;Chat(("The ether fades."),3);}
function psionicStormReady(){if(D.getElementById('psionicstorm').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('psionicstorm',false);BGP('psionicstorm',"-800% 0%");g.checkMagicianSkills();refreshpsionicStorm.kill();}
function psionicStormTimer(){refreshpsionicStorm=T.to('',.1,{repeat:-1,onRepeat:psionicStormReady});}
function psionicStorm(){if(btn.d.psionicstorm===true||my.level<17){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=mag.cost.psionicStorm;if(my.mp<spellMpCost){return;}
currentSpell="Psionic Storm";spellCastTime=castSpeedTotal(2500);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("psionicStorm");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#psionicstorm',function(){var spellType="Evocation";var CD=25;if(Set.Summoner>=6){CD-=13;}
var a=TTmag(evocationTotal()*1.5,.33,"lightning","Psionic Storm");var target="your target";if(my.talent12>=20){target="three targets";}
NG.tooltipname.innerHTML="Psionic Storm";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.psionicStorm)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Psionic Storm hits "+target+" "+green("6")+" times for "+a[0]+" to "+a[1]+" lightning damage.";});});g.psionicStormFinish=function(){if(endSpell()===false){return;}
setD('psionicstorm',true);BGP('psionicstorm',"-800% -100%");var d=25000;if(Set.Summoner>=6){d-=13000;}
T.delayedCall(d/1000,psionicStormTimer);timerTick(D.getElementById('psionicstorm'),d/1000,'psionicstorm');var Slot=TGT;var loopCount=0;g.drawMyMp(-spellMpCost);var multi=false;if(my.talent12>=20){multi=true;}
function castStorm(){if(multi){for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var damage=minMax(evocationTotal()*1.5,.33);animatePsionicStorm(i);g.myMagicDamage("lightning",damage,i,checkCrit(),"Psionic Storm");}}}else{var damage=minMax(evocationTotal()*1.5,.33);animatePsionicStorm(Slot);g.myMagicDamage("lightning",damage,Slot,checkCrit(),"Psionic Storm");}
playAudio("zap"+~~(M.random()*(3)+1));loopCount++;if(loopCount!==6){T.delayedCall(.25,castStorm);}}
castStorm();}
function animatePsionicStorm(Slot){if(GLB.videoSetting!=="High"){return;}
var x2=MOB[Slot].offsetLeft+mob[Slot].cX-75;var y2=MOB[Slot].offsetTop+mob[Slot].cY-75;function doit(count){var x3=x2+(M.random()*(300)-150);var y3=y2+(M.random()*(200)-100);var img1="psionic"+(~~(M.random()*(4)+1));var e1=can(img1,5,x3,y3,100,100,true);T.to(e1,.5,{scaleX:0,scaleY:0,rotation:(M.random()*(180)-90),onComplete:function(){cRem(5,e1);}});if(count<12){T.delayedCall(.033,function(){doit(++count);});}}
doit(0);}
function reclaimElementsReady(){if(D.getElementById('reclaimelements').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('reclaimelements',false);BGP('reclaimelements',"-900% 0%");g.checkMagicianSkills();refreshreclaimElements.kill();}
function reclaimElementsTimer(){refreshreclaimElements=T.to('',.1,{repeat:-1,onRepeat:reclaimElementsReady});}
function reclaimElements(){if(btn.d.reclaimelements===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(g.petAlive===false){Chat(("Your minion is not here."));return;}
spellMpCost=mag.cost.reclaimElements;if(my.mp<spellMpCost){return;}
currentSpell="Reclaim Elements";spellCastTime=castSpeedTotal(2500);spellType="alteration";if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("reclaimElements");playAudio("spellCastHeal",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#reclaimelements',function(){var spellType="Alteration";var CD="24".fontcolor("#ff0000");var a=TTheal((alterationTotal()*2.1)*(1+(talent7()*2.2)/100),.9);NG.tooltipname.innerHTML="Reclaim Elements";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.reclaimElements)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2500)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Reclaim Elements drains health from your pet, absorbing "+a[0]+" to "+a[1]+" health. Your pet loses double the amount healed.";});});g.reclaimElementsFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneHeal");T.delayedCall(24,reclaimElementsTimer);timerTick(D.getElementById('reclaimelements'),24000/1000,'reclaimelements');setD('reclaimelements',true);BGP('reclaimelements',"-900% -100%");g.drawMyMp(-spellMpCost);Chat((petName+" channels elemental power to you."),3);var healAmount=minMax((alterationTotal()*2.1)*(1+(talent7()*2.2)/100),.9);var hurtAmount=M.ceil(healAmount*2);if(hurtAmount>petHp){petHp=1;}else{petHp-=hurtAmount;}
if(GLB.videoSetting==="High"){animateReclaimElements();}
g.popupHeal(healAmount);}
function animateReclaimElements(){var x2=(MOB[5].offsetLeft+(petWidth/2)-100);var y2=(MOB[5].offsetTop+(petHeight/2)-100);function doit(count){var p1=can('yellowOrb',6,x2,y2,200,200);T.to(p1,.2,{y:660,x:540,ease:ez.Qin,onComplete:function(){T.to(p1,.5,{alpha:0,ease:ez.lin,onComplete:function(){cRem(6,p1);}});}});count++;if(count<10){T.delayedCall(.05,function(){doit(count);});}}
doit(0);}
function elementalFuryReady(){if(D.getElementById('elementalfury').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
refreshelementalFury.kill();setD('elementalfury',false);BGP('elementalfury',"-1000% 0%");g.checkMagicianSkills();}
function elementalFuryTimer(){refreshelementalFury=T.to('',.1,{repeat:-1,onRepeat:elementalFuryReady});}
function elementalFury(){if(paused===true){return;}
if(attackStatus===1){targetRequired();return;}
if(btn.d.elementalfury===true||my.level<24){return;}
if(g.petAlive===false){Chat(("Your minion is not here."));return;}
if(checkBashFear()===true){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
var d=40000;if(my.talent8>=20){d=20000;}
T.delayedCall(d/1000,elementalFuryTimer);timerTick(D.getElementById('elementalfury'),d/1000,'elementalfury');setD('elementalfury',true);BGP('elementalfury',"-1000% -100%");if(petImage==="an earth elemental"){playAudio("spellDoneHeal");for(var i=0;i<=4;i++){if(mob[i].name!==""){snareTarget(i);addMobBuffIcon("Root",i,"rootBuffIcon",0,-544);}}}else if(petImage==="an air elemental"){Chat(petName+" summons a lightning storm.");preload(['images1/lightningBlast.png']);var hits=2+M.round((conjurationTotal()/60));for(var i=0;i<=hits;i++){var duration=1000+M.random()*17000;T.delayedCall(duration/1000,function(){doAir();});}}else if(petImage==="a fire elemental"){preload(['images1/fireNova.png']);for(var i=0;i<7;i++){T.delayedCall((i*3)+3,function(){doFire();});}}else if(petImage==="a frost elemental"){if(countMobs()<1){return;}
playAudio('blue3')
var Slot=petTarget;for(var i=(Slot-1);i<=(Slot+1);i++){if(i>=0&&i<=4){if(mob[i].name){stopMob(i);if(!mob[i].phased){MOB[i].style.opacity=1;}
var damage=minMax(evocationTotal()*1.6,.9);g.myMagicDamage("cold",damage,i,checkCrit(),"Glacier");var duration=5000+M.random()*(5000);mob[i].spellActive.kill();mob[i].frozenTimer.kill();$("#iceIcon"+i).remove();T.to(bmp[i],1,{easel:{tint:"#08f",tintAmount:0}});freezeTarget(i,duration,-320);}}}}
function doAir(){if(countMobs()<1){return;}
playAudio("lightning"+~~(M.random()*(3)+1));if(mob[petTarget].name!==""){var damage=minMax(conjurationTotal()*3,.35);if(GLB.videoSetting==="High"){animateLightningBlast(petTarget);}
g.myMagicDamage("lightning",damage,petTarget,checkCrit(),"Chaos Lightning");}}
function doFire(){if(countMobs()<1){return;}
playAudio("poisonnova");animateNova('fireNova',true);for(var i=0;i<=4;i++){if(mob[i].name!==""){var damage=minMax(evocationTotal()*1.1,.77);g.myMagicDamage("fire",damage,i,checkCrit(),"Pulsing Inferno");}}}}
$(function(){$NG.window3.on('mouseenter','#elementalfury',function(){var minimum=(M.ceil((3+evocationTotal()*6.2)+(((intTotal())-70)/6))+"").fontcolor("#00ff00");var maximum=(M.ceil(((3+evocationTotal()*6.2)+(((intTotal())-70)/6)+(evocationTotal()/2)))+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Elemental Fury";var cd=40;if(my.talent8>=20){cd=20;}
var s="Cooldown: "+green(cd)+" Seconds<br><br>"+"Command your elemental to unleash its fury.<br><br>";if(petImage==='an earth elemental'){s+="Earth Elemental casts Punishing Earth which snares all targets.";}else if(petImage==='an air elemental'){var a=TTmag(conjurationTotal()*3,.35,"lightning","Chaos Lightning");var hits=2+M.round((conjurationTotal()/60));s+="Air Elemental casts Chaos Lightning, striking your pet's target "+green(hits)+" times for "+a[0]+" to "+a[1]+" lightning damage.";}else if(petImage==='a fire elemental'){var a=TTmag(evocationTotal()*1.1,.77,"fire","Pulsing Inferno");s+="Fire Elemental casts Pulsing Inferno, striking all targets "+green("7")+" times for "+a[0]+" to "+a[1]+" fire damage.";}else if(petImage==='a frost elemental'){var a=TTmag(evocationTotal()*1.6,.9,"cold","Glacier");s+="Frost Elemental casts Glacier, striking three targets for "+a[0]+" to "+a[1]+" cold damage."+"<BR><BR>Effect: Your targets are frozen for "+green("5")+" to "+green("10")+" seconds.";}"Earth: Snares all targets<br>"+"Air: Strikes target with lightning<br>"+"Fire: Bursts forth a flame nova<br>"+"Frost: Freezes nearby targets";NG.tooltipmsg.innerHTML=s;});});function armageddonReady(){if(D.getElementById('armageddon').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('armageddon',false);BGP('armageddon',"-1100% 0%");g.checkMagicianSkills();refresharmageddon.kill();}
function armageddonTimer(){refresharmageddon=T.to('',.1,{repeat:-1,onRepeat:armageddonReady});}
function armageddon(){if(btn.d.armageddon===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=mag.cost.armageddon;if(my.mp<spellMpCost){return;}
currentSpell="Armageddon";spellCastTime=castSpeedTotal(3000);spellType="evocation";if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("armageddon");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#armageddon',function(){var spellType="Evocation";var CD="30".fontcolor("#ff0000");var duration="45".fontcolor("#00ff00");var a=TTmag(evocationTotal()*.6,.69,"fire","Armageddon");NG.tooltipname.innerHTML="Armageddon";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.armageddon)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Armageddon creates a meteor shower to rain fiery destruction on all targets. Each meteor hits for "+a[0]+" to "+a[1]+" fire damage.";});});function armageddonHits(Slot,damage){T.delayedCall(.5,function(){g.myMagicDamage("fire",damage,Slot,checkCrit(),"Armageddon");});}
g.armageddonFinish=function(){if(endSpell()===false){return;}
setD('armageddon',true);BGP('armageddon',"-1100% -100%");T.delayedCall(30,armageddonTimer);timerTick(D.getElementById('armageddon'),30000/1000,'armageddon');g.drawMyMp(-spellMpCost);function armageddonTick(armageddonTickCount){if(mobsFound()===false){if(armageddonTickCount<=45){T.delayedCall((M.random()*(.25)+.05),function(){armageddonTick(++armageddonTickCount);});}}else{var Slot=selectFlayTarget();animateArmageddon(Slot);playAudio("explode"+~~(M.random()*(3)+1));if(mob[Slot].name!==""){var damage=minMax(evocationTotal()*.6,.69);armageddonHits(Slot,damage);}
if(armageddonTickCount<=45){T.delayedCall((M.random()*(.25)+.05),function(){armageddonTick(++armageddonTickCount);});}}}
T.delayedCall(2,function(){armageddonTick(0);});}
function animateArmageddon(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);if(!mob[Slot].name){var x2=((Slot*320)+240);}
var y2=467;var e1=can('armageddon',5,x2-1500,y2-1500,400,400);T.to(e1,.5,{x:(x2-300),y:(y2-200),ease:ez.lin,onComplete:function(){cRem(5,e1);animateTremor(x2,800);}});}
function stasisFieldReady(){if(D.getElementById('stasisfield').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('stasisfield',false);BGP('stasisfield',"-1200% 0%");refreshstasisField.kill();}
function stasisFieldTimer(){refreshstasisField=T.to('',.1,{repeat:-1,onRepeat:stasisFieldReady});}
$(function(){$NG.window3.on('mouseenter','#stasisfield',function(){var spellType="Conjuration";var CD="80".fontcolor("#ff0000");var value1="35".fontcolor("#00ff00");var value2="45".fontcolor("#00ff00");NG.tooltipname.innerHTML="Stasis Field";NG.tooltipmsg.innerHTML="Cost: "+green(mag.cost.stasisField)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Stasis Field seals your target in a dimensional rift. Your target cannot attack or be attacked for "+value1+" to "+value2+" seconds.";});});function stopMob(Slot){if(mob[Slot].name!==""){T.killTweensOf(MOB[Slot]);T.killChildTweensOf(MOB[Slot]);}}
function stasisField(){if(btn.d.stasisfield===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=mag.cost.stasisField;if(my.mp<spellMpCost){return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
spellType="conjuration";setD('stasisfield',true);BGP('stasisfield',"-1200% -100%");T.delayedCall(80,stasisFieldTimer);timerTick(D.getElementById('stasisfield'),80000/1000,'stasisfield');var Slot=TGT;var stasisDuration=M.random()*(10000)+35000;if(mob[Slot].level>my.level){stasisDuration-=(M.pow((mob[Slot].level-my.level),1.2));}
if(stasisDuration<15000){stasisDuration=15000;}
stasisTarget(Slot,stasisDuration,-384,"Stasis Field");g.drawMyMp(-spellMpCost);addMobBuffIcon("Stasis Field",Slot,"stasisIcon",stasisDuration,-384);checkSpellLevelUp();}
function stasisTarget(Slot,d,img,name){if(mob[Slot].rare===3){Chat(mob[Slot].name+" is immune to stasis.");}else{Chat(mob[Slot].name+" is sealed in a dimensional rift.",3);interruptTarget(Slot);stopMob(Slot);T.to(canvas[Slot],1,{opacity:.2,});blur(Slot,12);d=d/1000;mob[Slot].stasisFieldStatus=true;if(mob[Slot].phased){T.delayedCall(d,function(){T.to(canvas[Slot],.5,{opacity:.5});mob[Slot].stasisFieldStatus=false;blur(Slot,0);});}else{T.delayedCall(d,function(){T.to(canvas[Slot],.5,{opacity:1});mob[Slot].stasisFieldStatus=false;blur(Slot,0);});}
animateStasis("purple",25,Slot);addMobBuffIcon(name,Slot,"stasisIcon",d*1000,img);playAudio("novaelec");}}
function alteredStateReady(){if(D.getElementById('alteredstate').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('alteredstate',false);BGP('alteredstate',"-1300% 0%");refreshalteredState.kill();}
function alteredStateTimer(){refreshalteredState=T.to('',.1,{repeat:-1,onRepeat:alteredStateReady});}
$(function(){$NG.window3.on('mouseenter','#alteredstate',function(){var spellType="Evocation";var CD="60".fontcolor("#ff0000");var minimum=(M.ceil((3+evocationTotal()*1.8)+(((intTotal())-70)/8))+"").fontcolor("#00ff00");var maximum=(M.ceil(((3+evocationTotal()*1.8)+(((intTotal())-70)/8)+(spellSkillCheck()/4.4)/2))+"").fontcolor("#00ff00");var d="6".fontcolor("#00ff00");NG.tooltipname.innerHTML="Altered State";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Seconds<br><br>"+"Altered State reverses the state of reality and causes all damage to heal you for "+d+" seconds.";});});function alteredState(){if(btn.d.alteredstate===true||my.level<38){return;}
if(checkBashFear()===true){return;}
setD('alteredstate',true);BGP('alteredstate',"-1300% -100%");T.delayedCall(60,alteredStateTimer);timerTick(D.getElementById('alteredstate'),60000/1000,'alteredstate');beginGlobalCooldown();var Slot=TGT;Chat(("A dimensional abnormality ripples around your body."),3);g.drawMyMp();if(GLB.videoSetting==="High"){animateAlteredState();}
playAudio("fade");alteredStateStatus=true;function doit(){alteredStateStatus=false;}
T.delayedCall(6,doit);T.delayedCall(6,function(){removeIcon("alteredStateIcon");});addBuffIcon("Altered State","alteredStateIcon",6000,-416);}
function animateAlteredState(){var c2=img("alteredState2",1380,100);function doit(count){var e1=cacheAdd(c2,5,(-50+M.random()*(25)),-100+(count*50),1,1,true);T.to(e1,.1,{alpha:.4,onComplete:function(){T.to(e1,3,{alpha:0,onComplete:function(){cRem(5,e1);},ease:ez.cout});}});count++;if(count<16){T.delayedCall(.01,function(){doit(count);});}}
doit(0);}
function iceBoltReady(){if(D.getElementById('icebolt').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('icebolt',false);BGP('icebolt',"-300% 0%");g.checkWizardSkills();refreshiceBolt.kill();}
function iceBoltTimer(){refreshiceBolt=T.to('',.1,{repeat:-1,onRepeat:iceBoltReady});}
function iceBolt(){if(btn.d.icebolt===true){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
if(my.talent1<20&&my.talent10<20){currentSpell="Ice Bolt";}
if(my.talent1>=20){currentSpell="Static Bolt";}
if(my.talent10>=20){currentSpell="Fire Bolt";}
spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
if(my.talent1<20&&my.talent10<20){animateParticlesDown("teal");}
if(my.talent1>=20&&my.talent10<20){animateParticlesDown("white");}
if(my.talent10>=20){animateParticlesDown("orange");}
animateCastBar("iceBolt");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#icebolt',function(){var mType="cold";if(my.talent1>=20){mType='lightning';}
if(my.talent10>=20){mType='fire';}
if(mType==='cold'){var spellName="Ice Bolt";var a=TTmag(3+evocationTotal()*1.85,.85,"cold","Ice Bolt");}else if(mType==='lightning'){var spellName="Static Bolt";var a=TTmag(3+evocationTotal()*3.1,.45,"lightning","Static Bolt");}else{var spellName="Fire Bolt";var a=TTmag(3+evocationTotal()*2.5,.75,"lightning","Fire Bolt");}
NG.tooltipname.innerHTML=spellName;var s="Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: Evocation<br><br>"+
spellName+" hits your target for "+a[0]+" to "+a[1]+" "+mType+" damage.";if(mType==='cold'){s+="<br><br>Effect: Slows your target "+green("33%")+" for "+green("5")+" seconds.";}
NG.tooltipmsg.innerHTML=s;});});g.iceBoltFinish=function(){if(endSpell()===false){return;}
var Slot=TGT;var mType="cold";if(my.talent1>=20){mType='lightning';}
if(my.talent10>=20){mType='fire';}
if(GLB.videoSetting==="High"){animateIceBolt(Slot,mType);}
function boltHit(){if(mType==='cold'){var damage=minMax(3+evocationTotal()*1.85,.85);var spellName="Ice Bolt";playAudio("spellDoneSlam");}else if(mType==='lightning'){var damage=minMax(3+evocationTotal()*3.1,.45);var spellName="Static Bolt";playAudio('zap'+M.ceil(M.random()*(3)));}else{var damage=minMax(3+evocationTotal()*2.5,.75);var spellName="Fire Bolt";playAudio("explode"+~~(M.random()*(3)+1));}
g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);if(mType==="cold"){chillTarget(Slot,5000,-96);}
checkMirrorImages(mType,damage,Slot);}
T.delayedCall(.2,boltHit);}
function animateIceBolt(Slot,mType){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-100;var cY=MOB[Slot].offsetTop+mob[Slot].cY-100;var img1='iceBolt';var color="teal";if(mType==='lightning'){img1='staticBolt';color='yellow';}
if(mType==='fire'){img1='fireBolt';color='orange';}
var e1=can(img1,5,540,618,300,300,true);T.to(e1,.2,{rotation:540,scaleX:.4,scaleY:.4,x:cX+100,y:cY+100,onComplete:function(){cRem(5,e1);particleBurst(Slot,color,'blank');}});}
function chargedBoltsReady(){if(D.getElementById('chargedbolts').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('chargedbolts',false);BGP('chargedbolts',"-400% 0%");g.checkWizardSkills();refreshchargedBolts.kill();}
function chargedBoltsTimer(){refreshchargedBolts=T.to('',.1,{repeat:-1,onRepeat:chargedBoltsReady});}
function chargedBolts(){function chargedBoltsHit(Slot){T.delayedCall(.75,function(){if(mob[Slot].name!==""){var damage=minMax(evocationTotal()*1.6,.2);g.myMagicDamage("lightning",damage,Slot,checkCrit(),"Charged Bolts");playAudio("zap"+~~(M.random()*(3)+1));checkMirrorImages("lightning",damage,Slot);}});}
if(btn.d.chargedbolts===true||my.level<2){return;}
if(checkBashFear()===true){return;}
spellMpCost=wiz.cost.chargedBolts;if(my.mp<spellMpCost){return;}
currentSpell="Charged Bolts";spellType="evocation";playAudio("chargedbolt");setD('chargedbolts',true);BGP('chargedbolts',"-400% -100%");var d=8000;if(my.talent3>=20){d=4000;}
T.delayedCall(d/1000,chargedBoltsTimer);timerTick(D.getElementById('chargedbolts'),d/1000,'chargedbolts');g.drawMyMp(-spellMpCost);function goBolt(Slot){if(Slot===undefined){Slot=selectRandomTarget();}
if(Slot!==undefined){left=(Slot+1)*256-220+(M.random()*(100));animateChargedBolts(Slot,left);chargedBoltsHit(Slot);}}
goBolt(TGT);var hits=M.ceil(evocationTotal()/65)+1;for(var i=0;i<hits;i++){goBolt();}
function doit(count){var e1=can('whiteLight3',5,-640,0,2560,1597);T.to(e1,.75,{startAt:{alpha:.3},alpha:0});count++;if(count<4){doit(count);}}
doit(0);beginGlobalCooldown();checkSpellLevelUp();}
$(function(){$NG.window3.on('mouseenter','#chargedbolts',function(){var spellType="Evocation";var CD=8
if(my.talent3>=20){CD/=2;}
var a=TTmag(evocationTotal()*1.6,.2,"lightning","Charged Bolts");var hits=M.ceil(evocationTotal()/65)+1;NG.tooltipname.innerHTML="Charged Bolts";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.chargedBolts)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Charged Bolts hits random targets up to "+green(hits)+" times for "+a[0]+" to "+a[1]+" lightning damage. Your current target takes a guaranteed hit.";});});function animateChargedBolts(Slot,left){if(GLB.videoSetting!=="High"){return;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX-40;var img1='chargedBolts';if(M.random()>.5){img1='chargedBolts2';}
var e1=can(img1,5,590,655,100,100);T.to(e1,.75,{scaleX:.8,scaleY:.8,y:550,x:left,onComplete:function(){cRem(5,e1);}});function doit(count){count-=50;flipImg(e1);if(count>0){T.delayedCall(.1,function(){doit(count);});}}
doit(750);}
function frostNovaReady(){if(D.getElementById('frostnova').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('frostnova',false);BGP('frostnova',"-500% 0%");g.checkWizardSkills();refreshfrostNova.kill();}
function frostNovaTimer(){refreshfrostNova=T.to('',.1,{repeat:-1,onRepeat:frostNovaReady});}
$(function(){$NG.window3.on('mouseenter','#frostnova',function(){var spellType="Alteration";var CD="12".fontcolor("#ff0000");NG.tooltipname.innerHTML="Frost Nova";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.frostNova)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Frost Nova roots all targets to the ground in an ice formation.";});});function frostNova(){if(btn.d.frostnova===true||my.level<3){return;}
if(checkBashFear()===true){return;}
spellMpCost=wiz.cost.frostNova;if(my.mp<spellMpCost){return;}
setD('frostnova',true);BGP('frostnova',"-500% -100%");beginGlobalCooldown();currentSpell="Frost Nova";spellType="alteration";var d=12000;T.delayedCall(d/1000,frostNovaTimer);timerTick(D.getElementById('frostnova'),d/1000,'frostnova');checkSpellLevelUp();g.drawMyMp(-spellMpCost);for(var i=0;i<=4;i++){if(mob[i].name!==""){var Slot=i;if(statusResist(Slot)===true){Chat((mob[Slot].name+" resisted Frost Nova."),1);}else{Chat((mob[Slot].name+" is immobilized by a wave of frost."),3);stopMob(Slot);setMobOpacity(Slot);mob[Slot].rootStatus=4;$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();animateRoot(Slot,true);addMobBuffIcon("Root",Slot,"rootBuffIcon",0,-160);}}}
animateNova('frostNova');playAudio("novaice");if(g.autoAttackStatus===0){toggleAutoAttackStatus();}}
function magicMissilesReady(){if(D.getElementById('magicmissiles').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('magicmissiles',false);BGP('magicmissiles',"-600% 0%");g.checkWizardSkills();refreshmagicMissiles.kill();}
function magicMissilesTimer(){refreshmagicMissiles=T.to('',.1,{repeat:-1,onRepeat:magicMissilesReady});}
function magicMissiles(){if(btn.d.magicmissiles===true||my.level<5){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.magicMissiles;if(my.mp<spellMpCost){return;}
setD('magicmissiles',true);BGP('magicmissiles',"-600% -100%");T.delayedCall(15,magicMissilesTimer);timerTick(D.getElementById('magicmissiles'),15000/1000,'magicmissiles');referenceDate2=new Date();currentSpell="Arcane Missiles";spellType="conjuration";checkSpellLevelUp();spellCastTime=2700;Chat(("You cast "+currentSpell+"."),3);beginGlobalCooldown();g.drawMyMp(-spellMpCost);function launchMissile(count){var Slot=TGT;if(count>=5||fearStatus===0||bashStatus===0||!mob[Slot].name){return;}
count++;playAudio("icebolt"+~~(M.random()*(3)+1));var damage=minMax(conjurationTotal()*1.1,.77);if(GLB.videoSetting==="High"){animateMagicMissile(Slot);}
T.delayedCall(.25,function(){g.myMagicDamage("magic",damage,Slot,checkCrit(),"Arcane Missiles");});checkMirrorImages("magic",damage,Slot);if(fearStatus===1&&bashStatus===1){T.delayedCall(.5,function(){launchMissile(count);});}}
T.delayedCall(.25,function(){launchMissile(0);});}
$(function(){$NG.window3.on('mouseenter','#magicmissiles',function(){var a=TTmag(conjurationTotal()*1.1,.77,"magic","Arcane Missiles");NG.tooltipname.innerHTML="Arcane Missiles";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.magicMissiles)+" Mana Points<br>"+"Spell Type: Conjuration<br>"+"Cooldown: "+green("15")+" Seconds<br><br>"+"Arcane Missiles launches five projectiles at your target for "+a[0]+" to "+a[1]+" arcane damage.<br><br>"+"Effect: Arcane Missiles absorb health and mana on a killing blow. The amount absorbed is based on your target's level";});});function magicMissileAbsorb(Slot){g.popupMana(M.ceil(mob[Slot].level*1.5));g.popupHeal(M.ceil(mob[Slot].level*2.5));}
function animateMagicMissile(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-100;var cY=MOB[Slot].offsetTop+mob[Slot].cY-100;var e1=can('magicMissile',5,490,618,300,300,true);T.to(e1,.25,{startAt:{rotation:(M.random()*(360))},rotation:"+=540",ease:ez.lin});T.to(e1,.25,{scaleX:.25,scaleY:.25,x:cX-38+125,y:cY-38+125,onComplete:function(){cRem(5,e1);var c2=img("purpleparticle50");function doit(count){var ranX=cX+88+(M.random()*(300)-150);var ranY=cY+88+(M.random()*(250)-175);var p1=cacheAdd(c2,5,ranX,ranY,1,1,true);T.to(p1,1,{y:"+="+(M.random()*(30)+10),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});count++;if(count<15){doit(count);}}
doit(0);}});}
function viziersShielding(){if(btn.d.viziersshielding===true||my.level<7){return;}
if(checkBashFear()===true){return;}
spellMpCost=wiz.cost.viziersShielding;if(my.mp<spellMpCost){return;}
currentSpell="Vizier's Shielding";spellCastTime=castSpeedTotal(4000);spellType="abjuration";if(startSpell()===false){return;}
animateParticlesUp("teal");animateCastBar("viziersShielding");playAudio("spellCastAbjure",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#viziersshielding',function(){var spellType="Abjuration";var duration="54".fontcolor("#00ff00");var v1=abjurationTotal();var v2=talent9();var value1=(M.ceil((v1*.75)*((v2*11.3/100)+1))+"").fontcolor("#00ff00");var value2=(M.ceil((v1*.12)*((v2*6.1/100)+1))+"").fontcolor("#00ff00");var value3=(M.ceil(v1*.11)+"").fontcolor("#00ff00");NG.tooltipname.innerHTML="Vizier's Shielding";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.viziersShielding)+" Mana Points<br>"+"Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br><br>"+"Vizier's Shielding buffs your armor by "+value2+", your health by "+value1+", and all resistances by "+value3+" for "+duration+" minutes.";});});g.viziersShieldingFinish=function(){if(endSpell()===false){return;}
playAudio("spellDoneBuff");g.drawMyMp(-spellMpCost);Chat(("You are shielded by strands of flowing ether."),3);if(viziersShieldingStatus===true){maxHpBuff-=viziersShieldingHpBoost;armorBuff-=viziersShieldingArmorBoost;svpoisonBuff-=viziersShieldingPoisonBoost;svmagicBuff-=viziersShieldingMagicBoost;svlightningBuff-=viziersShieldingLightningBoost;svcoldBuff-=viziersShieldingColdBoost;svfireBuff-=viziersShieldingFireBoost;}
viziersShieldingTimeout.kill();viziersShieldingTimeout=T.delayedCall(3240,viziersShieldingExpire);var v2=abjurationTotal();viziersShieldingHpBoost=M.ceil((v2*.75)*((talent9()*11.3/100)+1));viziersShieldingArmorBoost=M.ceil((v2*.12)*((talent9()*6.1/100)+1));var v1=M.ceil(v2*.11);viziersShieldingPoisonBoost=v1;viziersShieldingMagicBoost=v1;viziersShieldingLightningBoost=v1;viziersShieldingColdBoost=v1;viziersShieldingFireBoost=v1;maxHpBuff+=viziersShieldingHpBoost;armorBuff+=viziersShieldingArmorBoost;svpoisonBuff+=viziersShieldingPoisonBoost;svmagicBuff+=viziersShieldingMagicBoost;svlightningBuff+=viziersShieldingLightningBoost;svcoldBuff+=viziersShieldingColdBoost;svfireBuff+=viziersShieldingFireBoost;viziersShieldingStatus=true;g.drawMyHp();CStat();var buffId="hpbuffIcon";var duration=3240000;hpbuffIconTimer.kill();hpbuffIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon("Vizier's Shielding",buffId,duration,-544);animateBuff('teal','easeInBack',25,5,150,3);}
function viziersShieldingExpire(){viziersShieldingStatus=false;maxHpBuff-=viziersShieldingHpBoost;armorBuff-=viziersShieldingArmorBoost;svpoisonBuff-=viziersShieldingPoisonBoost;svmagicBuff-=viziersShieldingMagicBoost;svlightningBuff-=viziersShieldingLightningBoost;svcoldBuff-=viziersShieldingColdBoost;svfireBuff-=viziersShieldingFireBoost;CStat();g.drawMyHp();}
function fireballReady(){if(D.getElementById('fireball').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('fireball',false);BGP('fireball',"-700% 0%");g.checkWizardSkills();refreshfireball.kill();}
function fireballTimer(){refreshfireball=T.to('',.1,{repeat:-1,onRepeat:fireballReady});}
function fireball(){if(btn.d.fireball===true||my.level<9){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.fireball;if(my.mp<spellMpCost){return;}
currentSpell="Fireball";spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
animateParticlesDown("orange");animateCastBar("fireball");playAudio("spellDoneFlames",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#fireball',function(){var spellType="Evocation";var CD=15;if(my.talent10>=20){CD/=2;}
var a=TTmag(3+evocationTotal()*4.3,.8,"fire","Fireball");NG.tooltipname.innerHTML="Fireball";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.fireball)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Fireball hits your target and adjacent targets for "+a[0]+" to "+a[1]+" fire damage.";});});g.fireballFinish=function(skip,Slot){if(endSpell()===false){return;}
if(Slot===undefined){var Slot=TGT;}
if(GLB.videoSetting==="High"){animateFireball(Slot);}
if(!skip){var d=15000;if(my.talent10>=20){d=7500;}
setD('fireball',true);BGP('fireball',"-700% -100%");T.delayedCall(d/1000,fireballTimer);timerTick(D.getElementById('fireball'),d/1000,'fireball');g.drawMyMp(-spellMpCost);}
function fireballHit(){playAudio("spellDoneBoom");for(var i=(Slot-1);i<=(Slot+1);i++){if(i===-1||i===5){continue;}
var damage=minMax(3+evocationTotal()*4.3,.8);g.myMagicDamage("fire",damage,i,checkCrit(),"Fireball");checkMirrorImages("fire",damage,i);}}
T.delayedCall(.25,fireballHit);}
function animateFireball(Slot){if(GLB.videoSetting!=="High"){return;}
var cX=MOB[Slot].offsetLeft+mob[Slot].cX-400;var cY=MOB[Slot].offsetTop+mob[Slot].cY-400;var speed=250;var e1=can('fireball',5,240,130,800,800,true);T.to(e1,speed/1000,{rotation:360,scaleX:.375,scaleY:.375,x:cX+400,y:cY+400,ease:ez.lin,onComplete:function(){cRem(5,e1);}});var particles=50;var c2=img("orangeparticle50");function doit(count){var ranX=cX+388+(M.random()*(700)-350);var ranY=cY+388+(M.random()*(350)-225);var p1=cacheAdd(c2,5,ranX,ranY);T.to(p1,.75,{x:(ranX+12+M.random()*(20)-10),y:(ranY+50),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});if(count<particles){doit(++count);}}
T.delayedCall(speed/1000,function(){doit(0);});}
function deepFreezeReady(){if(D.getElementById('deepfreeze').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('deepfreeze',false);BGP('deepfreeze',"-800% 0%");g.checkWizardSkills();refreshdeepFreeze.kill();}
function deepFreezeTimer(){refreshdeepFreeze=T.to('',.1,{repeat:-1,onRepeat:deepFreezeReady});}
$(function(){$NG.window3.on('mouseenter','#deepfreeze',function(){var spellType="Alteration";var CD=24;if(my.talent7>=20){CD/=2;}
var target='your target';if(my.talent6>=20){target='three targets';}
var a=TTmag(alterationTotal()*1.9,.88,"cold","Deep Freeze");var duration=((3000+(alterationTotal()*42))/1000).toFixed(1);var duration=duration.fontcolor("#00ff00");var value1="100%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Deep Freeze";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.deepFreeze)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Deep Freeze hits "+target+" for "+a[0]+" to "+a[1]+" cold damage.<br><br>"+"Effect: Encases "+target+" in a cone of ice for "+duration+" seconds. Encased targets cannot attack and take "+value1+" more damage the next time you hit them, but the encasement shatters.";});});function deepFreeze(){if(btn.d.deepfreeze===true||my.level<11){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.deepFreeze;if(my.mp<spellMpCost){return;}
currentSpell="Deep Freeze";spellType="alteration";setD('deepfreeze',true);BGP('deepfreeze',"-800% -100%");var d=24000;if(my.talent7>=20){d=12000;}
T.delayedCall(d/1000,deepFreezeTimer);timerTick(D.getElementById('deepfreeze'),d/1000,'deepfreeze');checkSpellLevelUp();g.drawMyMp(-spellMpCost);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
var Slot=TGT;var multi=false;if(my.talent6>=20){multi=true;}
var freezeDuration=3000+(alterationTotal()*42);freezeDuration*=freezeReduction();for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){if(i===Slot||multi===true){var damage=minMax(alterationTotal()*1.9,.88);g.myMagicDamage("cold",damage,i,checkCrit(),"Deep Freeze");encaseTarget(i,freezeDuration,-256);}}}}
function encaseTarget(Slot,freezeDuration,spriteX){if(mob[Slot].name!==""){freezeDuration*=freezeReduction();stopMob(Slot);setMobOpacity(Slot);mob[Slot].shatterStatus=true;mob[Slot].frozenStatus=true;mob[Slot].spellActive.kill();mob[Slot].frozenTimer.kill();$("#iceIcon"+Slot).remove();mob[Slot].frozenTimer=T.delayedCall(freezeDuration/1000,function(){mob[Slot].shatterStatus=false;mob[Slot].frozenStatus=false;T.to('#iceIcon'+Slot,.5,{opacity:0,onComplete:function(){$("#iceIcon"+Slot).remove();}});});Chat((mob[Slot].name+" is encased in ice."));interruptTarget(Slot);encaseAnimation(Slot,freezeDuration);addMobBuffIcon("Frozen",Slot,"freezeIcon",freezeDuration,spriteX);removeFreezeIcons(0,Slot);tint(Slot,'cold',freezeDuration/1000);}}
function removeFreezeIcons(count,Slot){function removeIt(count){T.to('.freezeIcon'+Slot,.5,{opacity:0,onComplete:function(){$(this).remove();}});if(count<8){T.delayedCall(.1,function(){removeIt(++count);});}}
removeIt(count);}
function chainLightningReady(){if(D.getElementById('chainlightning').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('chainlightning',false);BGP('chainlightning',"-900% 0%");g.checkWizardSkills();refreshchainLightning.kill();}
function chainLightningTimer(){refreshchainLightning=T.to('',.1,{repeat:-1,onRepeat:chainLightningReady});}
function chainLightning(){if(btn.d.chainlightning===true||my.level<13){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.chainLightning;if(my.mp<spellMpCost){return;}
currentSpell="Chain Lightning";spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
animateParticlesDown("yellow");animateCastBar("chainLightning");playAudio("spellCastEvoke2",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#chainlightning',function(){var spellType="Evocation";var CD=20;if(my.talent3>=20){CD/=2;}
var a=TTmag(evocationTotal()*4.8,.62,"lightning","Chain Lightning");var b=TTmag(evocationTotal()*7.3,.62,"lightning","Chain Lightning");NG.tooltipname.innerHTML="Chain Lightning";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.chainLightning)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Chain Lightning hits your primary target and chains to adjacent targets up to 6 times for "+a[0]+" to "+a[1]+" lightning damage.<br><br>"+"If Chain Lightning only hits one target, it will hit for "+b[0]+" to "+b[1]+" lightning damage.";});});g.chainLightningFinish=function(){if(endSpell()===false){return;}
setD('chainlightning',true);BGP('chainlightning',"-900% -100%");var d=20000;if(my.talent3>=20){d=10000;}
T.delayedCall(d/1000,chainLightningTimer);timerTick(D.getElementById('chainlightning'),d/1000,'chainlightning');g.drawMyMp(-spellMpCost);function chainRight(Slot){function checkLeft(){bounce=1;var mobleft=Slot-2;if(Slot>=0&&Slot<=4){if(mob[Slot].name===""){return;}
if(mobleft>=0&&mobleft<=4){if(mob[mobleft].name===""){return;}}}
Slot-=2;if(countMobs()===0){return;}
T.delayedCall(.1,function(){chainLeft(Slot);});return;}
if(Slot===5&&bounce===0){checkLeft();return;}
if(Slot===5&&bounce>=1){return;}
if(mob[Slot].name===""&&bounce===0){checkLeft();return;}
if(bounce===1&&mob[Slot].name===""){return;}
if(Slot===5){return;}
var damage=minMax(evocationTotal()*4.8,.62);var mType="lightning";var spellName="Chain Lightning";if(GLB.videoSetting==="High"){animateChainLightning(Slot);}
playAudio("lightning"+~~(M.random()*(3)+1));g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);checkMirrorImages(mType,damage,Slot);Slot+=1;T.delayedCall(.2,function(){chainRight(Slot);});}
function chainLeft(Slot){function checkRight(){bounce=1;var mobright=Slot+2;if(Slot>=0&&Slot<=4){if(mob[mobright].name===""){return;}
if(mobright>=0&&mobright<=4){if(mob[mobright].name===""){return;}}}
Slot+=2;if(countMobs()===0){return;}
T.delayedCall(.1,function(){chainRight(Slot);});return;}
if(Slot===-1&&bounce===0){checkRight();return;}
if(Slot===-1&&bounce>=1){return;}
if(mob[Slot].name===""&&bounce===0){checkRight();return;}
if(bounce===1&&mob[Slot].name===""){return;}
if(Slot===-1){return;}
var damage=minMax(evocationTotal()*4.8,.62);var mType="lightning";var spellName="Chain Lightning";if(GLB.videoSetting==="High"){animateChainLightning(Slot);}
playAudio("lightning"+~~(M.random()*(3)+1));g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);checkMirrorImages(mType,damage,Slot);Slot-=1;T.delayedCall(.2,function(){chainLeft(Slot);});}
var Slot=TGT;var bounce=0;if(countMobs()===1||(countMobs()>1&&Slot===0&&mob[1].name==="")||(countMobs()>1&&Slot===3&&mob[2].name==="")){function singleHit(){var damage=minMax(evocationTotal()*7.3,.62);var mType="lightning";var spellName="Chain Lightning";if(GLB.videoSetting==="High"){animateChainLightning(Slot);}
playAudio("lightning"+~~(M.random()*(3)+1));g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);checkMirrorImages(mType,damage,Slot);return;}
T.delayedCall(.5,singleHit);}
if((Slot===0||Slot===1)&&countMobs()>1){T.delayedCall(.5,function(){chainRight(Slot);});}
if((Slot===2||Slot===3||Slot===4)&&countMobs()>1){T.delayedCall(.5,function(){chainLeft(Slot);});}}
function animateChainLightning(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX;var cY=MOB[Slot].offsetTop+mob[Slot].cY;var e1=can('chainLightning',5,cX+M.random()*(50)-125,-100,200,720);flipImg(e1);T.to(e1,.15,{alpha:1,onComplete:function(){T.to(e1,.15,{alpha:0,ease:ez.Qin,onComplete:function(){cRem(5,e1);}});}});function doit(count){var ranX=cX+(M.random()*(400)-200);var ranY=cY+(M.random()*(450)-375);var p1=can('whiteparticle50',5,ranX,ranY,25,25);T.to(p1,1,{top:(ranY+M.random()*(40)-20),left:(ranX+4+M.random()*(40)-20),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);},ease:ez.cinout});count++;if(count<8){doit(count);}}
doit(0);}
function glacialSpikeReady(){if(D.getElementById('glacialspike').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('glacialspike',false);BGP('glacialspike',"-1000% 0%");g.checkWizardSkills();refreshglacialSpike.kill();}
function glacialSpikeTimer(){refreshglacialSpike=T.to('',.1,{repeat:-1,onRepeat:glacialSpikeReady});}
function glacialSpike(){if(btn.d.glacialspike===true||my.level<15){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.glacialSpike;if(my.mp<spellMpCost){return;}
currentSpell="Glacial Spike";spellType="evocation";spellCastTime=castSpeedTotal(2000);if(startSpell()===false){return;}
animateCastBar("glacialSpike");playAudio("spellDoneFlames",0,spellCastTime);animateParticlesDown("teal");}
$(function(){$NG.window3.on('mouseenter','#glacialspike',function(){var spellType="Evocation";var CD=15;if(my.talent7>=20){CD/=2;}
var a=TTmag(evocationTotal()*2,.84,"cold","Glacial Spike");var v1="7".fontcolor("#00ff00");var v2="25%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Glacial Spike";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.glacialSpike)+" Mana Points<br>"+"Cast Time: "+castTimeTT(2000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Glacial Spike hits your target for "+a[0]+" to "+a[1]+" cold damage.<br><br>"+"Effect: Freezes your target and adjacent targets for "+v1+" seconds. Frozen targets take "+v2+" additional damage.";});});g.glacialSpikeFinish=function(bypass){if(!bypass){if(endSpell()===false){return;}}
playAudio("icespike1");var Slot=TGT;if(GLB.videoSetting==="High"){animateGlacialSpike(Slot);}
if(!bypass){setD('glacialspike',true);BGP('glacialspike',"-1000% -100%");var d=15000;if(my.talent7>=20){d/=2;}
T.delayedCall(d/1000,glacialSpikeTimer);timerTick(D.getElementById('glacialspike'),d/1000,'glacialspike');g.drawMyMp(-spellMpCost);}
function spikeHit(){for(var i=(Slot-1);i<=(Slot+1);i++){if(i===-1||i===5){continue;}
var damage=minMax(evocationTotal()*2,.84);var d=7000;var sX=-320;if(bypass){damage=minMax(693,.84);d=4000;sX=-32;}
g.myMagicDamage("cold",damage,i,checkCrit(),"Glacial Spike");checkMirrorImages("cold",damage,i);freezeTarget(i,d,sX);}}
T.delayedCall(.25,spikeHit);}
function setMobOpacity(Slot){if(mob[Slot].name){if(mob[Slot].stasisFieldStatus===true){MOB[Slot].style.opacity=1;canvas[Slot].style.opacity=.2;}else if(mob[Slot].phased===true){MOB[Slot].style.opacity=1;canvas[Slot].style.opacity=.5;}else{MOB[Slot].style.opacity=1;canvas[Slot].style.opacity=1;}}}
function freezeTarget(Slot,freezeDuration,spriteX){if(mob[Slot].name!==""){freezeDuration*=freezeReduction();stopMob(Slot);setMobOpacity(Slot);mob[Slot].frozenStatus=true;mob[Slot].chillStatus=true;mob[Slot].spellActive.kill();mob[Slot].frozenTimer.kill();$("#iceIcon"+Slot+",#freezeIcon"+Slot).remove();mob[Slot].frozenTimer=T.delayedCall(freezeDuration/1000,function(){mob[Slot].frozenStatus=false;mob[Slot].chillStatus=false;T.to('.freezeIcon'+Slot,.5,{opacity:0,onComplete:function(){$(this).remove();}});});Chat(mob[Slot].name+" is frozen.");interruptTarget(Slot);freezeAnimation(Slot,freezeDuration);addMobBuffIcon("Frozen",Slot,"freezeIcon",freezeDuration,spriteX);tint(Slot,'cold',freezeDuration/1000);}}
function animateGlacialSpike(Slot){var cX=MOB[Slot].offsetLeft+mob[Slot].cX-400;var cY=MOB[Slot].offsetTop+mob[Slot].cY-400;var e1=can('glacialSpike',5,240,368,800,800,true);var c2=img("tealparticle50");T.to(e1,.25,{scaleX:.375,scaleY:.375,x:(cX+400),y:(cY+400),rotation:360,ease:ez.lin,onComplete:function(){cRem(5,e1);function doit(count){var ranX=(cX+388+(M.random()*(700)-350));var ranY=(cY+388+(M.random()*(350)-225));var e2=cacheAdd(c2,5,ranX,ranY);T.to(e2,.75,{x:(ranX+12+M.random()*(20)-10),y:(ranY+50),scaleX:0,scaleY:0,onComplete:function(){cRem(5,e2);}});if(count<40){doit(++count);}}
doit(0);}});}
function iceBlockReady(){if(D.getElementById('iceblock').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
setD('iceblock',false);BGP('iceblock',"-1100% 0%");g.checkWizardSkills();refreshiceBlock.kill();}
function iceBlockTimer(){refreshiceBlock=T.to('',.1,{repeat:-1,onRepeat:iceBlockReady});}
$(function(){$NG.window3.on('mouseenter','#iceblock',function(){var spellType="Alteration";var CD="90".fontcolor("#ff0000");var minimum=(M.ceil(alterationTotal()/5)+"").fontcolor("#00ff00");var maximum=(M.ceil(alterationTotal()/5)+"").fontcolor("#00ff00");var duration="10".fontcolor("#00ff00");NG.tooltipname.innerHTML="Ice Block";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Ice Block surrounds you in a protective block of ice for "+duration+" seconds. You cannot take damage throughout the duration and you recover "+minimum+" health and "+maximum+" mana every second. Ice Block can be used while feared or stunned.";});});function iceBlock(){if(my.hp<=0||paused===true){return;}
if(btn.d.iceblock===true||my.level<17){return;}
currentSpell="Ice Block";if(startSpell()===false){return;}
if(invincibleStatus===true){return;}
beginGlobalCooldown();referenceDate2=new Date();spellCastTime=10000;castingSpell=0;spellType="alteration";checkSpellLevelUp();g.drawMyMp(-spellMpCost);function iceBlockExpire(){T.to(D.getElementById('iceBlock'),.5,{opacity:0,onComplete:function(){remove(this);}});}
function tickRegen(){if(invincibleStatus===false){return;}
g.popupHeal(M.ceil(alterationTotal()/5));g.popupMana(M.ceil(alterationTotal()/5));T.delayedCall(1,tickRegen);}
T.delayedCall(10,iceBlockExpire);NG.spellbardiv.style.display="block";Chat(("You surround yourself in a protective barrier of ice."),3);T.to(mySpellBar,10,{startAt:{scaleX:1},scaleX:0,ease:ez.lin,onComplete:function(){tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;setD('iceblock',true);BGP('iceblock',"-1100% -100%");T.delayedCall(90,iceBlockTimer);timerTick(D.getElementById('iceblock'),90000/1000,'iceblock');}});startInvincible(10000);tickRegen();animateIceBlock();var skillName="Ice Block";var buffId="iceBlockIcon";var duration=10000;var spriteX=-352;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon(skillName,buffId,duration,spriteX);playAudio("shivers");}
function resetInvincible(){invincibleStatus=false;}
function startInvincible(d){invincibleStatus=true;invincibleTimer.kill();if(Set.Warlord>=6){d*=2;}
invincibleTimer=T.delayedCall(d/1000,resetInvincible);}
function iceCometReady(){if(D.getElementById('icecomet').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('icecomet',false);BGP('icecomet',"-1200% 0%");g.checkWizardSkills();refreshiceComet.kill();}
function iceCometTimer(){refreshiceComet=T.to('',.1,{repeat:-1,onRepeat:iceCometReady});}
function iceComet(){if(btn.d.icecomet===true||my.level<20){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Ice Comet";spellType="evocation";spellCastTime=castSpeedTotal(3000);if(startSpell()===false){return;}
animateParticlesDown("teal");animateCastBar("iceComet");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#icecomet',function(){var spellType="Evocation";var CD=25;if(my.talent7>=20){CD/=2;}
var a=TTmag(evocationTotal()*6,.87,"cold","Ice Comet");var v1="33%".fontcolor("#00ff00");var v2="8".fontcolor("#00ff00");NG.tooltipname.innerHTML="Ice Comet";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Ice Comet hits your target for "+a[0]+" to "+a[1]+" cold damage.<br><br>"+"Effect: Your target is slowed "+v1+" for "+v2+" seconds.";});});g.iceCometFinish=function(){if(endSpell()===false){return;}
playAudio("meteorlaunch",0,2000);var Slot=TGT;if(GLB.videoSetting==="High"){animateIceComet(Slot);}
setD('icecomet',true);BGP('icecomet',"-1200% -100%");var d=25000;if(my.talent7>=20){d=12500;}
T.delayedCall(d/1000,iceCometTimer);timerTick(D.getElementById('icecomet'),d/1000,'icecomet');g.drawMyMp(-spellMpCost);function cometHit(){if(!mob[Slot].name){return;}
playAudio("spellDoneSlam");var damage=minMax(evocationTotal()*6,.87);var mType="cold";var spellName="Ice Comet";g.myMagicDamage(mType,damage,Slot,checkCrit(),spellName);checkMirrorImages(mType,damage,Slot);chillTarget(Slot,8000,-384);playAudio("spellDoneSlam");}
T.delayedCall(2,cometHit);}
function animateIceComet(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var y2=(MOB[Slot].offsetTop+mob[Slot].cY);if(!mob[Slot].name){var x2=((Slot*244)+240);var y2=467;}
function blam(count){var e3=can('tealLight3',5,x2-1980,-1077,2560,1844);T.to(e3,2,{startAt:{alpha:0},alpha:.4,ease:ez.Qin,onComplete:function(){cRem(5,e3);}});count++;if(count<4){T.delayedCall(0,function(){blam(count);},0);}}
blam(0);var c2=img("tealparticle50");function doit(count){var ranX=x2+(M.random()*(700)-350);var ranY=y2+(M.random()*(350)-225);var p1=cacheAdd(c2,5,ranX,ranY);T.to(p1,1.2,{x:(ranX+12+M.random()*(40)-20),y:(ranY+50),scaleX:0,scaleY:0,onComplete:function(){cRem(5,p1);}});count++;if(count<80){T.delayedCall(.033,function(){doit(count);});}}
var e1=can('iceComet',5,x2-2000,y2-2000,600,600);T.to(e1,.5,{startAt:{alpha:1},delay:1.5,x:(x2-450),y:(y2-300),ease:ez.lin,onComplete:function(){cRem(5,e1);doit(0);screenShake(1,20,0,25);animateTremor(x2,1000);}});}
function animateTremor(left,width,loops,img){left=left||640;width=width||500;loops=loops||1;img=img||'tremor';var height=width/6.25;var top=height/2.9;var left2=left-(width/2);var floor2=floorT-top-20;var sx=width/400;var sy=height/100;function doit(count){var p4=can(img,7,left,(floorT-20),0,0);T.to(p4,.3,{scaleX:sx,scaleY:sy,x:left2,y:floor2,alpha:0,onComplete:function(){cRem(7,p4);}});if(++count<loops){T.delayedCall(.033,function(){doit(count);});}}
doit(0);}
function counterspellReady(){if(D.getElementById('counterspell').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('counterspell',false);BGP('counterspell',"-1300% 0%");g.checkWizardSkills();refreshcounterspell.kill();}
function counterspellTimer(){refreshcounterspell=T.to('',.1,{repeat:-1,onRepeat:counterspellReady});}
$(function(){$NG.window3.on('mouseenter','#counterspell',function(){var spellType="Alteration";var CD=24;if(my.talent10>=20){CD/=2;}
var d1="6".fontcolor("#00ff00");NG.tooltipname.innerHTML="Counterspell";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.counterspell)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Counterspell silences a casting target for "+d1+" seconds.";});});function counterspell(){if(btn.d.counterspell===true||my.level<24){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
spellMpCost=wiz.cost.counterspell;if(my.mp<spellMpCost){return;}
setD('counterspell',true);BGP('counterspell',"-1300% -100%");beginGlobalCooldown();spellType="alteration";var d=24000;if(my.talent10>=20){d=12000;}
T.delayedCall(d/1000,counterspellTimer);timerTick(D.getElementById('counterspell'),d/1000,'counterspell');checkSpellLevelUp();g.drawMyMp(-spellMpCost);var Slot=TGT;var silenceDuration=6000;if(mob[Slot].dauntless){silenceDuration*=dauntlessReduction();}
silenceTarget(Slot,silenceDuration,-416);if(GLB.videoSetting==="High"){animateCounterspell(Slot);}
playAudio("handofgod");}
function silenceTarget(Slot,silenceDuration,spriteX){if(mob[Slot].name){interruptTarget(Slot);Chat((mob[Slot].name+"'s spell has been silenced."));mob[Slot].silenced=true;mob[Slot].silenceTimer.kill();mob[Slot].silenceTimer=T.delayedCall(silenceDuration/1000,function(){mob[Slot].silenced=false;});addMobBuffIcon("Silence",Slot,"silenceIcon",silenceDuration,-416);}}
function animateCounterspell(Slot){var x2=(MOB[Slot].offsetLeft+mob[Slot].cX);var xHeight=mob[Slot].imageHeight;var y2=MOB[Slot].offsetTop;var xWidth=mob[Slot].imageWidth/2+40;function doIt(count){var p8=can('chainFG',5,x2-xWidth,y2-150,xWidth*2,100);T.to(p8,(800+(count*100))/1000,{y:600-(count*40),ease:ez.qout,onComplete:function(){T.to(p8,.5,{alpha:0,ease:ez.lin,onComplete:function(){cRem(5,p8);}});}});var p9=can('chainBG',7,x2-xWidth,y2-150,xWidth*2,100);T.to(p9,(800+(count*100))/1000,{y:600-(count*40),ease:ez.qout,onComplete:function(){T.to(p9,.5,{alpha:0,ease:ez.lin,onComplete:function(){cRem(7,p9);}});}});count++;if(count<5){T.delayedCall(.1,function(){doIt(count);});}}
doIt(0);}
function harnessEtherReady(){if(D.getElementById('harnessEther').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('harnessEther',false);BGP('harnessEther',"-1400% 0%");g.checkWizardSkills();refreshharnessEther.kill();}
function harnessEtherTimer(){refreshharnessEther=T.to('',.1,{repeat:-1,onRepeat:harnessEtherReady});}
$(function(){$NG.window3.on('mouseenter','#harnessEther',function(){var spellType="Conjuration";var CD="45".fontcolor("#ff0000");var tBonus=talent11()*4.1;var minimum=(~~(100+(conjurationTotal()/2)+tBonus)+"%").fontcolor("#00ff00");NG.tooltipname.innerHTML="Harness Ether";NG.tooltipmsg.innerHTML="Cost: "+green(wiz.cost.harnessEther)+" Mana Points<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+CD+" Seconds<br><br>"+"Amplify the damage of your next spell by "+minimum+". While the effect is active, your mana recovers at "+green("250%")+" regeneration rate.";});});function harnessEther(){if(btn.d.harnessEther===true||my.level<28){return;}
if(checkBashFear()===true){return;}
spellMpCost=wiz.cost.harnessEther;if(my.mp<spellMpCost){return;}
g.drawMyMp(-spellMpCost);currentSpell="Harness Ether";spellCastTime=castSpeedTotal(12000);spellType="conjuration";checkSpellLevelUp();playAudio("teleport");T.delayedCall(45,harnessEtherTimer);setD('harnessEther',true);BGP('harnessEther',"-1400% -100%");timerTick(D.getElementById('harnessEther'),45000/1000,'harnessEther');Chat(("Strands of ether coalesce in your hands."),3);harnessEtherStatus=true;addBuffIcon("Harness Ether","harnessEtherIcon",0,-448);animateBuff('blue','easeInOutQuad',25,5,100,2);}
function meteorReady(){if(D.getElementById('meteor').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}if(bashStatus===0||fearStatus===0){return;}
setD('meteor',false);BGP('meteor',"-1500% 0%");g.checkWizardSkills();refreshmeteor.kill();}
function meteorTimer(){refreshmeteor=T.to('',.1,{repeat:-1,onRepeat:meteorReady});}
function meteor(){if(btn.d.meteor===true||my.level<32){return;}
if(checkBashFear()===true){return;}
if(attackStatus===1){targetRequired();return;}
currentSpell="Meteor";spellType="conjuration";spellCastTime=castSpeedTotal(3000);if(startSpell()===false){return;}
animateParticlesDown("red");animateCastBar("meteor");playAudio("spellCastEvoke1",0,spellCastTime);}
$(function(){$NG.window3.on('mouseenter','#meteor',function(){var spellType="Conjuration";var CD=45;if(my.talent10>=20){CD/=2;}
var a=TTmag(conjurationTotal()*9.5,.82,"fire","Meteor");var b=TTmag(conjurationTotal()*.18,.65,"fire","Meteor");var d1=".5".fontcolor("#00ff00");var d2="8".fontcolor("#00ff00");NG.tooltipname.innerHTML="Meteor";NG.tooltipmsg.innerHTML="Cast Time: "+castTimeTT(3000)+" Seconds<br>"+"Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Meteor hits all targets for "+a[0]+" to "+a[1]+" fire damage. In its wake, meteor leaves a pool of lava inflicting "+b[0]+" to "+b[1]+" fire damage twice per second for "+d2+" seconds.";});});g.meteorFinish=function(){if(endSpell()===false){return;}
playAudio("meteorlaunch",0,2500);animateMeteor();setD('meteor',true);BGP('meteor',"-1500% -100%");var d=45000;if(my.talent10>=20){d=22500;}
T.delayedCall(d/1000,meteorTimer);timerTick(D.getElementById('meteor'),d/1000,'meteor');g.drawMyMp(-spellMpCost);function meteorHit(){playAudio("spellDoneBoom");for(var i=0;i<=4;i++){if(mob[i].name!==""){var Slot=i;var damage=minMax(conjurationTotal()*9.5,.82);var spellName="Meteor";g.myMagicDamage("fire",damage,i,checkCrit(),spellName);checkMirrorImages("fire",damage,i);interruptTarget(i);}}
function meteorTick(meteorTickCount,newMob){if(mob[newMob].name!==""){playAudio("explode"+~~(M.random()*(3)+1));var damage=minMax(conjurationTotal()*.18,.65);g.myMagicDamage("fire",damage,newMob,checkCrit(),"Meteor");}
meteorTickCount+=1;if(meteorTickCount<=16){T.delayedCall(.5,function(){meteorTick(meteorTickCount,newMob);});}}
for(var i=0;i<=4;i++){var meteorTickCount=0;var newMob=i;meteorTick(meteorTickCount,newMob);}}
T.delayedCall(2.5,meteorHit);}
function animateMeteor(stop){if(GLB.videoSetting!=="High"){return;}
var x2=640;var y2=440;function blam(count){var e2=can('orangeLight3',5,x2-1780,-1497,1844,2560);T.to(e2,2.5,{startAt:{alpha:0,},alpha:.4,ease:ez.Qin,onComplete:function(){cRem(5,e2);}});if(count<3){blam(++count);}}
blam(0);var e1=can('meteor',5,x2-2000,y2-2000,600,600);T.to(e1,2,{startAt:{alpha:0},alpha:1,onComplete:function(){T.to(e1,.5,{x:(x2-350),y:(y2-125),ease:ez.Qin,onComplete:function(){cRem(5,e1);if(stop){return;}
screenShake(1,20,0,25);function goFissure(count){var p5=can('fissure',6,640,1068,1280,0,true);T.to(p5,.25,{alpha:.5,scaleX:1.38,scaleY:1.38,y:720-100,x:M.random()*(800)-400+640,onComplete:function(){T.to(p5,1,{y:720,scaleX:1,scaleY:.5,alpha:0,onComplete:function(){cRem(6,p5);}});}});if(count<=70){T.delayedCall(.1,function(){goFissure(++count);});}}
goFissure(0);}});}});}
function mirrorImagesReady(){if(D.getElementById('mirrorimages').textContent!==''){return;}
if(castingSpell==0){return;}
if(castingGlobal==0){return;}
if(bashStatus===0||fearStatus===0){return;}
setD('mirrorimages',false);BGP('mirrorimages',"-1600% 0%");g.checkWizardSkills();refreshmirrorImages.kill();playAudio("summon");}
function mirrorImagesTimer(){refreshmirrorImages=T.to('',.1,{repeat:-1,onRepeat:mirrorImagesReady});}
$(function(){$NG.window3.on('mouseenter','#mirrorimages',function(){var spellType="Alteration";var CD=30;if(my.talent3>=20){CD/=2;}
var v1=10;if(talent4()>0){v1=(fix(talent4()*.8)*1)+v1;}
NG.tooltipname.innerHTML="Mirror Images";NG.tooltipmsg.innerHTML="Spell Type: "+spellType+"<br>"+"Cooldown: "+green(CD)+" Seconds<br><br>"+"Create five Mirror Images to fight on your behalf. Each Mirror Image casts the same spells as you for "+green(v1+"%")+" of your damage. Mirror Images also absorb a single hit, which kills them instantly. You cannot have more than 5 Mirror Images at once.";});});function mirrorImages(){if(btn.d.mirrorimages===true||my.level<38){return;}
if(checkBashFear()===true){return;}
setD('mirrorimages',true);BGP('mirrorimages',"-1600% -100%");spellType="alteration";var d=30000;if(my.talent3>=20){d=15000;}
T.delayedCall(d/1000,mirrorImagesTimer);timerTick(D.getElementById('mirrorimages'),d/1000,'mirrorimages');checkSpellLevelUp();g.drawMyMp(-spellMpCost);mirrorImageStatus=5;var buffId="mirrorImagesIcon";var duration=30000;mirrorImagesIconTimer.kill();mirrorImagesIconTimer=T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffIcon("Mirror Images",buffId,duration,-512);playAudio("summon");var newBuff1=$('<div>').css({width:32,height:32,color:"#0f0",position:"absolute",fontSize:14,top:22,left:2,padding:0,background:"transparent",zIndex:76}).attr("id","mirrorImagesCount").addClass("blackOutline3").appendTo("#mirrorImagesIcon").html(mirrorImageStatus);}
function checkMirrorImages(mType,damage,Slot){function mirrorImageExecute(){if(mirrorCount>=mirrorImageStatus){return;}
mirrorDamage[mirrorCount]=(damage*.05)+(((talent4()*.8)/100)*damage);g.myMagicDamage(mType,minMax(mirrorDamage[mirrorCount],.8),Slot,checkCrit(),"Mirror Images");mirrorCount++;T.delayedCall(.1,mirrorImageExecute);}
var mirrorDamage=[];var mirrorCount=0;if(mirrorImageStatus>0){mirrorImageExecute();}}
function checkLevelUp(){if(my.exp>=nextLevel()&&my.level<99){beforeSpacerLength=$(".spacers").length;my.level++;playAudio('levelup2');Error("You have leveled up! You are now level "+my.level+"!","#ffff00");flashScreen("#daa520",.3,2);var x;var L=my.level;if(my.job==="Warrior"){if(L===6&&my.dodge<1){my.dodge=1;x="how to dodge.";}
if(L===13&&my.dualWield<1){my.dualWield=1;x="how to dual wield.";}
if(L===10&&my.parry<1){my.parry=1;x="how to parry.";}
if(L===15&&my.doubleAttack<1){my.doubleAttack=1;x="how to double attack.";}
if(L===25&&my.riposte<1){my.riposte=1;x="how to riposte.";}
if(L===2){x="Slam.";}
if(L===3){x="Kick.";}
if(L===5){x="Enrage.";}
if(L===7){x="Pummel.";}
if(L===9){x="Subjugate.";}
if(L===11){x="Furious Scorn.";}
if(L===13){x="Triage.";}
if(L===15){x="Decisive Blow.";}
if(L===17){x="Hemorrhage.";}
if(L===20){x="Absorb Spell.";}
if(L===24){x="Intrepid Might.";}
if(L===28){x="Bulwark.";}
if(L===32){x="Frenzied Rampage.";}
if(L===38){x="Shockwave.";}}
if(my.job==="Monk"){if(L===6&&my.dodge<1){my.dodge=1;x="how to block.";}
if(L===12&&my.parry<1){my.parry=1;x="how to parry.";}
if(L===15&&my.doubleAttack<1){my.doubleAttack=1;x="how to double attack.";}
if(L===1){x="Tiger Strike.";}
if(L===2){x="Crane Kick.";}
if(L===3){x="Eagle Strike.";}
if(L===5){x="Feign Death.";}
if(L===7){x="Windmill Kick.";}
if(L===9){x="Stone Fist Reversal.";}
if(L===11){x="Mend.";}
if(L===13){x="Intimidation.";}
if(L===15){x="Inner Peace.";}
if(L===17){x="Cheetah Strike.";}
if(L===20){x="Cobra Strike.";}
if(L===24){x="Chakra Blast.";}
if(L===28){x="Flying Kick.";}
if(L===32){x="Ancestral Flurry.";}
if(L===38){x="Dragon Strike.";}
if(L===35&&my.riposte<1){my.riposte=1;x="how to riposte.";}}
if(my.job==="Rogue"){if(L===2){x="Lacerate.";}
if(L===3){x="Evade.";}
if(L===4&&my.dodge<1){my.dodge=1;x="how to dodge.";}
if(L===5){x="Sonic Strike.";}
if(L===7){x="Backstab.";}
if(L===9){x="Cold Blood.";}
if(L===12&&my.parry<1){my.parry=1;x="how to parry.";}
if(L===13&&my.dualWield<1){my.dualWield=1;x="how to dual wield.";}
if(L===11){x="Flash Powder.";}
if(L===16&&my.doubleAttack<1){my.doubleAttack=1;x="how to double attack.";}
if(L===13){x="Hyper Strike.";}
if(L===15){x="Illusive Mist.";}
if(L===17){x="Stagger Shot.";}
if(L===20){x="Widow Strike.";}
if(L===24){x="Lobotomize.";}
if(L===28){x="Ancient Will.";}
if(L===30&&my.riposte<1){my.riposte=1;x="how to riposte.";}
if(L===32){x="Mirage Strike.";}
if(L===38){x="Prowling Gash.";}}
if(my.job==="Ranger"){if(L===8&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===17&&my.dualWield<1){x="how to dual wield.";my.dualWield=1;}
if(L===20&&my.doubleAttack<1){x="how to double attack.";my.doubleAttack=1;}
if(L===18&&my.parry<1){x="how to parry.";my.parry=1;}
if(L===35&&my.riposte<1){x="how to riposte.";my.riposte=1;}
if(L===2){x="Kick";}
if(L===3){x="Counter Shot.";}
if(L===6){x="Trueshot Arrow.";}
if(L===9){x="Light Healing.";}
if(L===11){x="Faerie Flame.";}
if(L===13){x="Ignite.";}
if(L===15){x="Thistlecoat.";}
if(L===17){x="Snare.";}
if(L===19){x="Feet Like Cat.";}
if(L===21){x="Shield of Brambles.";}
if(L===24){x="Warder's Rift.";}
if(L===28){x="Spirit of the Wolf.";}
if(L===32){x="Volley Shot.";}
if(L===38){x="Weapon Shield.";}}
if(my.job==="Paladin"){if(L===10&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===20&&my.doubleAttack<1){x="how to double attack.";my.doubleAttack=1;}
if(L===17&&my.parry<1){x="how to parry.";my.parry=1;}
if(L===30&&my.riposte<1){x="how to riposte.";my.riposte=1;}
if(L===2){x="Slam.";}
if(L===3){x="Rebuke.";}
if(L===6){x="Vengeance.";}
if(L===9){x="Greater Healing.";}
if(L===11){x="Holy Might.";}
if(L===13){x="Valor.";}
if(L===15){x="Ardent Judgment.";}
if(L===17){x="Spirit Armor.";}
if(L===19){x="Root.";}
if(L===21){x="Yaulp.";}
if(L===24){x="Fervent Prayer.";}
if(L===28){x="Divine Providence.";}
if(L===32){x="Flash of Light.";}
if(L===38){x="Symbol of Marshan.";}}
if(my.job==="Shadow Knight"){if(L===10&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===20&&my.doubleAttack<1){x="how to double attack.";my.doubleAttack=1;}
if(L===17&&my.parry<1){x="how to parry.";my.parry=1;}
if(L===30&&my.riposte<1){x="how to riposte.";my.riposte=1;}
if(L===2){x="Slam.";}
if(L===3){x="Death Strike.";}
if(L===6){x="Gasping Frenzy.";}
if(L===9){x="Summon Dead.";}
if(L===11){x="Life Tap.";}
if(L===13){x="Dooming Darkness.";}
if(L===15){x="Fear.";}
if(L===17){x="Siphon Strength.";}
if(L===19){x="Heat Blood.";}
if(L===21){x="Vampiric Embrace.";}
if(L===24){x="Strengthen Dead.";}
if(L===28){x="Resist Cold.";}
if(L===32){x="Feign Death.";}
if(L===38){x="Shadow Vortex.";}}
if(my.job==="Bard"){if(L===10&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===17&&dualWieldTotal()<1){x="how to dual wield.";my.dualWield=1;}
if(L===2){x="Chant of Battle.";}
if(L===3){x="Accelerando.";}
if(L===5){x="Hymn of Restoration.";}
if(L===7){x="Solon's Song of the Sirens.";}
if(L===9){x="Brusco's Boastful Bellow.";}
if(L===11){x="Elemental Rhythms.";}
if(L===13){x="Lucid Lullaby.";}
if(L===15){x="Consonant Chain.";}
if(L===17){x="Dissension.";}
if(L===20){x="Cassandra's Chorus of Clarity.";}
if(L===24){x="Anthem De Arms.";}
if(L===28){x="Euphonic Hymn.";}
if(L===32){x="Shield of Songs.";}
if(L===38){x="Denon's Desperate Dirge.";}}
if(my.job==="Cleric"){if(L===15&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Sound of Force.";}
if(L===3){x="Superior Healing.";}
if(L===5){x="Resolution.";}
if(L===7){x="Binding Earth.";}
if(L===9){x="Expel Corruption.";}
if(L===11){x="Searing Revelation.";}
if(L===13){x="Martyr's Blessing.";}
if(L===15){x="Armor of Faith.";}
if(L===17){x="Guardian Angel.";}
if(L===20){x="Divine Sanctuary.";}
if(L===24){x="Holy Wrath.";}
if(L===28){x="Mark of Judgement.";}
if(L===32){x="Symbol of Yentus.";}
if(L===38){x="Benediction.";}}
if(my.job==="Druid"){if(L===15&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Drones of Doom.";}
if(L===3){x="Greater Healing.";}
if(L===5){x="Skin Like Nature.";}
if(L===7){x="Tornado.";}
if(L===9){x="Engulfing Roots.";}
if(L===11){x="Shield of Spikes.";}
if(L===13){x="Drifting Death.";}
if(L===15){x="Spirit of the Wolf.";}
if(L===17){x="Lightning Blast.";}
if(L===20){x="Earthquake.";}
if(L===24){x="Chloroplast.";}
if(L===28){x="Hurricane.";}
if(L===32){x="Sylvan Creep.";}
if(L===38){x="Volcano.";}}
if(my.job==="Shaman"){if(L===15&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Scourge.";}
if(L===3){x="Greater Healing.";}
if(L===5){x="Call of the Ancients.";}
if(L===7){x="Guardian Spirit.";}
if(L===9){x="Togor's Insects.";}
if(L===11){x="Cannibalize.";}
if(L===13){x="Poison Nova.";}
if(L===15){x="Spirit of the Wolf.";}
if(L===17){x="Enstill.";}
if(L===20){x="Affliction.";}
if(L===24){x="Reclaim Blood.";}
if(L===28){x="Glacial Impact.";}
if(L===32){x="Talisman of Trogmaar.";}
if(L===38){x="Devouring Plague.";}}
if(my.job==="Necromancer"){if(L===22&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Invoke Death.";}
if(L===3){x="Cascading Darkness.";}
if(L===5){x="Invoke Fear.";}
if(L===7){x="Drain Soul.";}
if(L===9){x="Arch Shielding.";}
if(L===11){x="Feign Death.";}
if(L===13){x="Augment Death.";}
if(L===15){x="Ignite Blood.";}
if(L===17){x="Corpse Explosion.";}
if(L===20){x="Bond of Death.";}
if(L===24){x="Diamond Skin.";}
if(L===28){x="Asystole.";}
if(L===32){x="Detonate Soul.";}
if(L===38){x="Howling Terror.";}}
if(my.job==="Enchanter"){if(L===22&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Gasping Embrace.";}
if(L===3){x="Cajoling Whispers.";}
if(L===5){x="Color Shift.";}
if(L===7){x="Mesmerize.";}
if(L===9){x="Discordant Barrier.";}
if(L===11){x="Shiftless Deeds.";}
if(L===13){x="Enchant Weapon.";}
if(L===15){x="Adorning Grace.";}
if(L===17){x="Alacrity.";}
if(L===20){x="Gravity Flux.";}
if(L===24){x="Mystic Rune.";}
if(L===28){x="Tashania.";}
if(L===32){x="Clarity.";}
if(L===38){x="Enthrall.";}}
if(my.job==="Magician"){if(L===22&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){QMsg("You have learned Earth Elemental.");QMsg("You have learned Air Elemental.");QMsg("You have learned Fire Elemental.");QMsg("You have learned Frost Elemental.");}
if(L===3){x="Shield of Lava.";}
if(L===5){x="Firestorm.";}
if(L===7){x="Phantom Plate.";}
if(L===9){x="Frozen Orb.";}
if(L===11){x="Burnout.";}
if(L===13){x="Mana Shield.";}
if(L===15){x="Elemental Armor.";}
if(L===17){x="Psionic Storm.";}
if(L===20){x="Reclaim Elements.";}
if(L===24){x="Elemental Fury.";}
if(L===28){x="Armageddon.";}
if(L===32){x="Stasis Field.";}
if(L===38){x="Altered State.";}}
if(my.job==="Wizard"){if(L===22&&my.dodge<1){x="how to dodge.";my.dodge=1;}
if(L===2){x="Charged Bolts.";}
if(L===3){x="Frost Nova.";}
if(L===5){x="Arcane Missiles.";}
if(L===7){x="Vizier's Shielding.";}
if(L===9){x="Fireball.";}
if(L===11){x="Deep Freeze.";}
if(L===13){x="Chain Lightning.";}
if(L===15){x="Glacial Spike.";}
if(L===17){x="Ice Block.";}
if(L===20){x="Ice Comet.";}
if(L===24){x="Counterspell.";}
if(L===28){x="Harness Ether.";}
if(L===32){x="Meteor.";}
if(L===38){x="Mirror Images.";}}
if(x){QMsg("You have learned "+x);}
if(my.level===20){QMsg("You may now assume a surname by clicking your name by your health bar.");}
levelUpStats();checkLevelUp();saveButtonPositions();initNG();petHp=petMaxHp;talentNotify();NG.myexpbarId.style.width='0px';drawExpBar();$.ajax({url:'php/game1.php',data:{run:"updateExpGold",lastName:my.lastName,title:my.title,level:my.level,job:my.job,race:my.race,exp:0,gold:0,name:my.name}}).fail(function(data){failToCommunicate();});}else{drawExpBar();CStat();showButtons();moveLockedSkills();writeMapHtml();g.drawMyHp();g.drawMyMp();}}
function globalCooldownEnd2(){lockoutTimer1.kill();cooldownTimer1.kill();lockoutTimer2.kill();cooldownTimer2.kill();if(bardSingStatus===true){bardSinging();}
for(var key in btn.cd){if(btn.cd[key]===true){btn.cd[key]=false;btn.d[key]=false;}}}
function beginLockout(lockoutDuration){function lockoutInterval(){lockoutTimer2.kill();lockoutTimer2=T.to('',.1,{repeat:-1,onRepeat:globalCooldownEnd});}
castingGlobal=0;castingSpell=1;g[JOB.Cooldowns]();if(my.job==="Warrior"){checkIntrepidMight();}else if(my.job==="Rogue"){if(btn.d.ancientwillId===false){setBtn('ancientwillId',false,false);}
if((bashStatus===0||fearStatus===0||rootStatus===0)&&ancientWillStatus===true&&btn.d.ancientwillId===false){ancientWillTimer.kill();BGP('ancientwillId',"-1700% 0");}}else if(my.job==="Paladin"){if(D.getElementById('layhandsId').textContent===''){setBtn('layhandsId',false,false);BGP('layhandsId',"-700% 0%");}}else if(my.job==="Cleric"){if(guardianAngelStatus===true){setBtn('guardianangel',false,false);BGP('guardianangel',"-1000% 0%");}}else if(my.job==="Wizard"){if(D.getElementById('iceblock').textContent===''){setBtn('iceblock',false,false);BGP('iceblock',"-1100% 0%");}}
lockoutTimer1.kill();lockoutTimer2.kill();lockoutTimer1=T.delayedCall(lockoutDuration/1000,lockoutInterval);}
function beginGlobalCooldown(d){function cooldownInterval(){cooldownTimer2.kill();cooldownTimer2=T.to('',.1,{repeat:-1,onRepeat:globalCooldownEnd});}
castingGlobal=0;g[JOB.Cooldowns]();cooldownTimer1.kill();cooldownTimer2.kill();cooldownTimer1=T.delayedCall(phyGlobalTotal()/1000,function(){cooldownInterval();});}
function globalCooldownEnd(){if(bashStatus===0||fearStatus===0){return;}
lockoutTimer1.kill();lockoutTimer2.kill();cooldownTimer1.kill();cooldownTimer2.kill();castingGlobal=1;g[JOB.DoneCD]();g.drawMyMp();}
g.updateRootStatus=function(Slot){if(mob[Slot].rootStatus>0){var rootDegrade=M.ceil(M.random()*(5));var rootWeaken=0;if(rootDegrade>=2&&rootDegrade<=3){rootWeaken=2;}
if(rootDegrade>=4){rootWeaken=1;}
mob[Slot].rootStatus-=rootWeaken;T.to(D.getElementById("rootIcon"+Slot),.5,{height:"-=10",force3D:true,ease:ez.lin});}}
function weaponSkillCheck(){var foo=oneHandSlashTotal();if(P.eq[12].type==="crushed"){foo=oneHandBluntTotal();}
if(P.eq[12].type==="punched"){foo=handToHandTotal();}
if(P.eq[12].type==="pierced"){foo=piercingTotal();}
if(P.eq[12].type==="cleaved"){foo=twoHandSlashTotal();}
if(P.eq[12].type==="smashed"){foo=twoHandBluntTotal();}
if("staff"===P.eq[12].type){foo=twoHandBluntTotal();}
return foo;}
function spellSkillCheck(){if(spellType==="alteration"){return alterationTotal();}
if(spellType==="abjuration"){return abjurationTotal();}
if(spellType==="evocation"){return evocationTotal();}
if(spellType==="conjuration"){return conjurationTotal();}
if(spellType==="channeling"){return channelingTotal();}}
function resetSecondWind(){secondWindStatus=false;}
function secondWindReady(){if(D.getElementById('secondwindId').textContent!==''){return;}
setD('secondwindId',false);BGP('secondwindId',"0% 0%");refreshsecondWind.kill();}
function secondWindTimer(){refreshsecondWind=T.to('',.1,{repeat:-1,onRepeat:secondWindReady});}
$(function(){$NG.gameView.on('mouseenter','#secondwindId',function(){var minimum="25".fontcolor("#00ff00");var multiplier="12".fontcolor("#00ff00");NG.tooltipname.innerHTML="Second Wind";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Reach deep within your soul to find an additional reserve of energy. Enhances all damage and reduces all damage taken by "+green("25%")+". Triggers health and mana regeneration for "+multiplier+" seconds.";});});function secondWind(){if(checkBashFear()===true){return;}
if(btn.d.secondwindId===true){return;}
secondWindStatus=true;CStat();setD('secondwindId',true);BGP('secondwindId',"0% -100%");T.delayedCall(120,secondWindTimer);timerTick(D.getElementById('secondwindId'),120000/1000,'secondwindId');humanRacial.kill();humanRacial=T.delayedCall(12,resetSecondWind);Chat("Your tenacity unveils renewed vigor in your veins.",3);T.delayedCall(12,function(){removeIcon("secondWindIcon");});animateHealing("yellow",false,45);regenHealth(my.maxHp*.02,"Second Wind",12,0,1,false,true);regenHealth(my.maxMp*.02,"Second Wind",12,0,1,false,"bypass",true);}
function resetdivineAegis(){divineAegisStatus=false;setEquipValues();CStat();}
function divineAegisReady(){if(D.getElementById('divineaegisId').textContent!==''){return;}
setD('divineaegisId',false);BGP('divineaegisId',"0% 0%");refreshdivineAegis.kill();}
function divineAegisTimer(){refreshdivineAegis=T.to('',.1,{repeat:-1,onRepeat:divineAegisReady});}
$(function(){$NG.gameView.on('mouseenter','#divineaegisId',function(){var CD="2".fontcolor("#ff0000");var multiplier="20".fontcolor("#00ff00");NG.tooltipname.innerHTML="Divine Aegis";NG.tooltipmsg.innerHTML="Cooldown: "+CD+" Minutes<br><br>"+"Surround yourself with a chromatic aegis that makes you highly resistant to all magic for "+multiplier+" seconds.";});});function divineAegis(){if(checkBashFear()===true){return;}
if(btn.d.divineaegisId===true){return;}
divineAegisStatus=true;setEquipValues();CStat();setD('divineaegisId',true);BGP('divineaegisId',"0% -100%");T.delayedCall(120,divineAegisTimer);timerTick(D.getElementById('divineaegisId'),120000/1000,'divineaegisId');eruditeRacial.kill();eruditeRacial=T.delayedCall(20,resetdivineAegis);Chat(("You are enveloped by a chromatic aegis."),3);var buffId="divineAegisIcon";addBuffRaceIcon("Divine Aegis",buffId,20000,0);animateHealing('purple',false,45);}
function resetancestralRampage(){ancestralRampageStatus=false;}
function ancestralRampageReady(){if(D.getElementById('ancestralrampageId').textContent!==''){return;}
setD('ancestralrampageId',false);BGP('ancestralrampageId',"0% 0%");refreshancestralRampage.kill();}
function ancestralRampageTimer(){refreshancestralRampage=T.to('',.1,{repeat:-1,onRepeat:ancestralRampageReady});}
function ancestralRampage(){if(checkBashFear()===true){return;}
if(btn.d.ancestralrampageId===true){return;}
ancestralRampageStatus=true;setD('ancestralrampageId',true);BGP('ancestralrampageId',"0% -100%");T.delayedCall(120,ancestralRampageTimer);timerTick(D.getElementById('ancestralrampageId'),120000/1000,'ancestralrampageId');barbarianRacial.kill();barbarianRacial=T.delayedCall(12,resetancestralRampage);Chat(("A thousand ancestral roars bears down on your foe."),3);addBuffRaceIcon("Ancestral Rampage","ancestralRampageIcon",12000,0);animateHealing('red',false,45);}
$(function(){$NG.gameView.on('mouseenter','#ancestralrampageId',function(){var multiplier="12".fontcolor("#00ff00");var value1="100%".fontcolor("#00ff00");NG.tooltipname.innerHTML="Ancestral Rampage";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Inspired by your ancestral pride, your bolstered might increases all damage by "+value1+" for "+multiplier+" seconds.";});});function tunaresGlowReady(){if(D.getElementById('tunaresglowId').textContent!==''){return;}
setD('tunaresglowId',false);BGP('tunaresglowId',"0% 0%");refreshtunaresGlow.kill();}
function tunaresGlowTimer(){refreshtunaresGlow=T.to('',.1,{repeat:-1,onRepeat:tunaresGlowReady});}
$(function(){$NG.gameView.on('mouseenter','#tunaresglowId',function(){var minimum=(10+~~((defenseTotal()/5)*3)+"").fontcolor("#00ff00");var multiplier="20".fontcolor("#00ff00");NG.tooltipname.innerHTML="Camouflage";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Disappear from combat for six seconds. If you attack while evading, you will ambush your target and stun them for five seconds and inflict an additional "+green("90%")+" damage.<br><br>"+"Effect: Camouflage makes mobs unable to target you. DoTs will still hit you and cancel Camouflage.";});});function tunaresGlow(){if(checkBashFear()===true){return;}
if(btn.d.tunaresglowId===true){return;}
setD('tunaresglowId',true);BGP('tunaresglowId',"0% -100%");T.delayedCall(120,tunaresGlowTimer);timerTick(D.getElementById('tunaresglowId'),120000/1000,'tunaresglowId');Chat(("You blend into your environment."),3);addBuffRaceIcon("Camouflage","evadeIcon",6000,0);playAudio("fade");evadeStatus=true;function doit2(){evadeStatus=false;}
T.delayedCall(5,doit2);if(g.autoAttackStatus===0){toggleAutoAttackStatus();}
animateEvade("green");}
function karanasInfusionReady(){if(D.getElementById('karanasinfusionId').textContent!==''){return;}
setD('karanasinfusionId',false);BGP('karanasinfusionId',"0% 0%");refreshkaranasInfusion.kill();}
function karanasInfusionTimer(){refreshkaranasInfusion=T.to('',.1,{repeat:-1,onRepeat:karanasInfusionReady});}
$(function(){$NG.gameView.on('mouseenter','#karanasinfusionId',function(){var v1=~~(my.maxHp*.04);NG.tooltipname.innerHTML="Hybrid Vigor";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Breaks out of stun and fear effects and regenerates "+green(v1)+" health every second for 7 seconds.";});});function karanasInfusion(){if(btn.d.karanasinfusionId===true){return;}
setD('karanasinfusionId',true);BGP('karanasinfusionId',"0% -100%");T.delayedCall(120,karanasInfusionTimer);timerTick(D.getElementById('karanasinfusionId'),120000/1000,'karanasinfusionId');Chat("Your body snaps to life with natural vigor.",3);var skillName="Hybrid Vigor";animateHealing('teal',false,60);regenHealth(my.maxHp*.04,skillName,7,0,1,false,true);fearStatus=1;monsterFearCooldown.kill();stunCooldown.kill();bashStatus=1;$("#mobBashIcon,#mobFearIcon").remove();lockoutTimer1.kill();globalCooldownEnd2();g[JOB.CheckSkills]();}
function resetsanguineTorment(){sanguineTormentStatus=false;}
function sanguineTormentReady(){if(D.getElementById('sanguinetormentId').textContent!==''){return;}
setD('sanguinetormentId',false);BGP('sanguinetormentId',"0% 0%");refreshsanguineTorment.kill();}
function sanguineTormentTimer(){refreshsanguineTorment=T.to('',.1,{repeat:-1,onRepeat:sanguineTormentReady});}
$(function(){$NG.gameView.on('mouseenter','#sanguinetormentId',function(){var multiplier="12".fontcolor("#00ff00");NG.tooltipname.innerHTML="Sanguine Torment";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Your attacks are imbued with vampiric power. All damage inflicted leeches health for "+multiplier+" seconds.";});});function sanguineTorment(){if(checkBashFear()===true){return;}
if(btn.d.sanguinetormentId===true){return;}
sanguineTormentStatus=true;setD('sanguinetormentId',true);BGP('sanguinetormentId',"0% -100%");T.delayedCall(120,sanguineTormentTimer);timerTick(D.getElementById('sanguinetormentId'),120000/1000,'sanguinetormentId');darkElfRacial=T.delayedCall(12,resetsanguineTorment);Chat(("You emanate with vampiric power."),3);var skillName="Sanguine Torment";var buffId="sanguineTormentIcon";var duration=12000;var spriteX=0;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffRaceIcon(skillName,buffId,duration,spriteX);animateHealing('purple',false,45);}
function resetgraniteVisage(){graniteVisageStatus=false;CStat();}
function graniteVisageReady(){if(D.getElementById('granitevisageId').textContent!==''){return;}
setD('granitevisageId',false);BGP('granitevisageId',"0% 0%");refreshgraniteVisage.kill();}
function graniteVisageTimer(){refreshgraniteVisage=T.to('',.1,{repeat:-1,onRepeat:graniteVisageReady});}
$(function(){$NG.gameView.on('mouseenter','#granitevisageId',function(){NG.tooltipname.innerHTML="Granite Visage";NG.tooltipmsg.innerHTML="Cooldown: "+green("120")+" Seconds<br><br>"+"Your countenance hardens and your skin resembles granite. All physical damage is reduced by "+green("25%")+" for "+green("12")+" seconds.";});});function graniteVisage(){if(checkBashFear()===true){return;}
if(btn.d.granitevisageId===true){return;}
graniteVisageStatus=true;setD('granitevisageId',true);BGP('granitevisageId',"0% -100%");T.delayedCall(120,graniteVisageTimer);timerTick(D.getElementById('granitevisageId'),120000/1000,'granitevisageId');dwarfRacial=T.delayedCall(12,resetgraniteVisage);Chat(("Your countenance is hardened by a granite shell."),3);var skillName="Granite Visage";var buffId="graniteVisageIcon";var duration=12000;var spriteX=0;T.delayedCall(duration/1000,function(){removeIcon(buffId);});addBuffRaceIcon(skillName,buffId,duration,spriteX);animateHealing('white',false,45);CStat();}
function hideRacial(){if(checkBashFear()===true||mobsFound()===true){return;}
if(hideStatus===1){$("#halflinghideId").css({backgroundPosition:"0 -100%"});Chat(("You disappear into the shadows."),3);setCurtainColor("#001");T.to(spellCurtain,1,{alpha:.5,ease:ez.Qin});hideStatus=0;}else{$("#halflinghideId").css({backgroundPosition:"0 0"});Chat(("You emerge from the shadows."),3);T.to(spellCurtain,.5,{alpha:0,ease:ez.Qin});hideStatus=1;}}
$(function(){$NG.gameView.on('mouseenter','#halflinghideId',function(){NG.tooltipname.innerHTML="Hide";NG.tooltipmsg.innerHTML="Attacking while hidden will increase your initial attacks' damage by "+green("60%")+" and stun your target for 5 seconds.";});});function resetshortCircuit(){shortCircuitStatus=false;CStat();}
function shortCircuitReady(){if(D.getElementById('shortcircuitId').textContent!==''){return;}
setD('shortcircuitId',false);BGP('shortcircuitId',"0% 0%");refreshshortCircuit.kill();}
function shortCircuitTimer(){refreshshortCircuit=T.to('',.1,{repeat:-1,onRepeat:shortCircuitReady});}
$(function(){$NG.gameView.on('mouseenter','#shortcircuitId',function(){var CD=120;var minimum="50%".fontcolor("#00ff00");var multiplier="7".fontcolor("#00ff00");NG.tooltipname.innerHTML="Warp Field";NG.tooltipmsg.innerHTML="Cooldown: "+green(CD)+" Seconds<br><br>"+"You trap your target in a Warp Field, making them unable to attack or be attacked for 20-25 seconds.";});});function shortCircuit(){if(checkBashFear()===true){return;}
if(btn.d.shortcircuitId===true){return;}
if(attackStatus===1){targetRequired();return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
shortCircuitStatus=true;setD('shortcircuitId',true);BGP('shortcircuitId',"0% -100%");T.delayedCall(120,shortCircuitTimer);timerTick(D.getElementById('shortcircuitId'),120000/1000,'shortcircuitId');stasisTarget(TGT,M.random()*(5000)+25000,9999,"Warp Field");}
function checkUndead(Slot){var targetUndead=false;if(mob[Slot].image==="a dhampyre"||mob[Slot].image==="a vampire female"||mob[Slot].image==="a skeleton"||mob[Slot].image==="a dark skeleton"||mob[Slot].image==="a male zombie"||mob[Slot].image==="a female zombie"||mob[Slot].image==="a ghoul"||mob[Slot].image==="garanel rucksif"||mob[Slot].image==="a mummy"){targetUndead=true;}
return targetUndead;}
function selectFlayTarget(){if(attackStatus===1){return;}
var kek=false;while(kek===false){flayTarget++;if(flayTarget>1){flayTarget=-1;}
if(TGT+flayTarget>=0){if(mob[TGT+flayTarget].name!==""){return TGT+flayTarget;}}}}
function selectRandomTarget(){if(attackStatus===1){return;}
var Slot=5;while(Slot===5){var x=~~(M.random()*(5));if(mob[x].name!==""&&mob[x].charmStatus===false){return x;}}}
function skillMax(minDamage,multiplier){if(P.eq[12].type==="slashed"||P.eq[12].type==="crushed"||P.eq[12].type==="punched"||P.eq[12].type==="pierced"){var foo=((P.eq[12].damage/(totalHaste1()))*30000)*(attackFunct()/1200);}
if(P.eq[12].type==="smashed"||"staff"===P.eq[12].type||P.eq[12].type==="cleaved"){var foo=((P.eq[12].damage/(totalHaste1()))*20000)*(attackFunct()/1200);}
foo=M.round(foo*multiplier+minDamage);return foo;}
function slainPet(){petHp=0;g.petAlive=false;for(var i=0;i<=4;i++){if(mob[i].petDot===true){mob[i].petDot=false;mob[i].dotActive.kill();}}
T.to(mob5,1,{opacity:0,ease:ez.lin,onComplete:function(){T.set(mob5,{bottom:0,display:'none'});}});songOfTheSirensTicking.kill();mob[charmSlot].charmStatus=false;if(my.job==="Bard"||my.job==="Enchanter"){g.checkForDeadMonsters();}else{Chat((petName+" has been slain!"));}
petName="";if(my.job==="Shadow Knight"){BGP('summondeadId',"-1600% 0");}else if(my.job==="Shaman"){BGP('guardianspirit',"-1500% 0");}else if(my.job==="Necromancer"){BGP('invokedeath',"-1600% 0");}else if(my.job==="Magician"){if(petImage==="an earth elemental pet"){BGP('earthelemental',"-1700% 0");}else if(petImage==="an air elemental pet"){BGP('airelemental',"-1700% -100%");}else if(petImage==="a fire elemental pet"){BGP('fireelemental',"-1700% -200%");}else if(petImage==="a frost elemental pet"){BGP('frostelemental',"-1700% -300%");}
petImage="";}
$("#pethpbardiv").css('display','none');if(my.job==="Magician"){playAudio("elem_die3");}else if(my.job==="Necromancer"||my.job==="Shadow Knight"){playAudio("skeleton_die");}else if(my.job==="Shaman"){playAudio("wolf_die2");}}
function createPetName(){var x=~~(M.random()*(26))+1;var y=~~(M.random()*16)+1;var z=~~(M.random()*(5))+1;var i="Jo";var j="bek";var k="er";if(x===1){i="Ga";}
if(x===2){i="Ge";}
if(x===3){i="Go";}
if(x===4){i="Gi";}
if(x===5){i="Ja";}
if(x===6){i="Jo";}
if(x===7){i="Je";}
if(x===8){i="Ji";}
if(x===9){i="Ka";}
if(x===10){i="Ke";}
if(x===11){i="Ko";}
if(x===12){i="Ki";}
if(x===13){i="La";}
if(x===14){i="Le";}
if(x===15){i="Lo";}
if(x===16){i="Li";}
if(x===17){i="Va";}
if(x===18){i="Ve";}
if(x===19){i="Vo";}
if(x===20){i="Xa";}
if(x===21){i="Xe";}
if(x===22){i="Xo";}
if(x===23){i="Za";}
if(x===24){i="Ze";}
if(x===25){i="Zo";}
if(x===26){i="Bo";}
if(y===1){j="b";}
if(y===2){j="ban";}
if(y===3){j="bar";}
if(y===4){j="bek";}
if(y===5){j="bob";}
if(y===6){j="rek";}
if(y===7){j="rar";}
if(y===8){j="nar";}
if(y===9){j="ran";}
if(y===10){j="sar";}
if(y===11){j="sek";}
if(y===12){j="sob";}
if(y===13){j="n";}
if(y===14){j="s";}
if(y===15){j="k";}
if(y===16){j="n";}
if(z===1){k="tik";}
if(z===2){k="n";}
if(z===3){k="er";}
if(z===4){k="ab";}
if(z===5){k="";}
petName=i+j+k;if($("#petBarName").length===0){var e1=$('<div id="petBarName">').html(petLevel+" - "+petName);$("#pethpbardiv").append(e1);}else{$("#petBarName").html(petLevel+" - "+petName);}
g.drawMyHp();D.getElementById('petName').innerHTML=petName;}
function petDamage(){if(g.petAlive===false||petHp<=0){return;}
g.checkForDeadMonsters();if(my.hp<=0||!mob[TGT].name){return;}
if(petBashStatus===true||petFearStatus===true||petParalyzeStatus===true){petAttack=T.delayedCall((petSpeed*petSpeedBuff)/1000,petDamage);return;}
if(!petTarget||!mob[petTarget].name){petTarget=TGT;}
if(petBlindStatus===true){var blindChance=M.ceil(M.random()*(5));if(blindChance>3){Chat((petName+" is blinded by darkness."));petAttack=T.delayedCall((petSpeed*petSpeedBuff)/1000,petDamage);return;}}
var petSkillChance=M.ceil(M.random()*petCastingFrequency);if(petSkillChance===petCastingFrequency){petSkillCheck(petTarget);return;}
function mobHits(){if(petBashStatus===true||petFearStatus===true||petParalyzeStatus===true){return;}
if(mob[petTarget].hp<=0||my.hp<=0||attackStatus!==0){return;}
if(g.petAlive===false||petHp<=0){return;}
if(attackStatus!==0){return;}
var foo=(petStrTotal()/2);var petsDamage=M.ceil(foo+M.random()*foo);if(my.job==="Shaman"){if(my.talent10>=20&&M.random()>.93){var Slot=petTarget;playAudio('gnollsat');for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var dam=M.ceil(foo+M.random()*foo);g.petPhysical(dam,i);stunTarget(i,2500,-480,0,"Maul");bleedTarget(i,9,1000);}}
return;}}else if(my.job==="Necromancer"){if(my.talent6>=20){var Slot=petTarget;for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var dam=M.ceil(foo+M.random()*foo);if(my.talent5>=20){if(M.random()>.95){stunTarget(i,1800,-512,0,"Bash");}}
g.petPhysical(dam,i);}}
return;}}else if(my.job==="Magician"){if(my.talent6>=20){var Slot=petTarget;for(var i=0;i<=4;i++){if(mob[i].name&&(i>=Slot-1&&i<=Slot+1)){var dam=M.ceil(foo+M.random()*foo);g.petPhysical(dam,i);}}
return;}}
g.petPhysical(petsDamage,petTarget);}
var mobCenterX=MOB[petTarget].offsetLeft+mob[petTarget].cX;var petCenterX=M.round(MOB[5].offsetLeft+petWidth/2);if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:180});}else{T.set(NG.petImage,{rotationY:0});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.5,mobHits);if(my.job==="Shaman"){if(my.talent11>=20){T.delayedCall(.3,mobHits);}}}
resumePetAttack();}
g.petPhysical=function(petsDamage,Slot,mType,familiar){if(mob[Slot].stasisFieldStatus===true){petsDamage=0;popupPetDamage(petsDamage,Slot);return;}
var damEnh=0;if(mob[Slot].frozenStatus===true){damEnh+=25;}
if(my.job==="Shadow Knight"){damEnh+=talent10()*6.6;}else if(my.job==="Bard"){damEnh+=talent9()*12.8;if(my.talent9>=20){bleedTarget(Slot,2,1000);}}else if(my.job==="Shaman"){damEnh+=talent10()*8.6;}else if(my.job==="Necromancer"){damEnh+=talent5()*4.7;if(my.talent6>=1&&petSpeedBuff===.5){damEnh+=talent6()*6.5;}}else if(my.job==="Enchanter"){damEnh+=talent5()*13.5;}else if(my.job==="Magician"){damEnh+=talent5()*6.2;if(my.talent6>=1&&petSpeedBuff===.4){damEnh+=talent6()*5.8;}}
damEnh+=(g.conjurationEquip+g.allSkillsEquip)*2;petsDamage=M.ceil(petsDamage+(petsDamage*(damEnh/100)));if(my.job==="Shadow Knight"||my.job==="Necromancer"||my.job==="Shaman"||my.job==="Magician"||familiar===true){if(!familiar){petsDamage=M.ceil(petsDamage*(g.mobDefense(Slot)));if(petsDamage<=3){petsDamage=M.ceil(M.random()*(4));}
if(petName===""){return;}}
if(mob[Slot].runeHp>0){mob[Slot].runeHp-=petsDamage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}
playAudio("blockBlunt");}
if(mob[Slot].runeHp<=0){if(familiar===true){Chat(g.familiarName+" bites "+mob[Slot].name+" for "+petsDamage+" damage.");}
mob[Slot].hp-=petsDamage;playAudio("flshhit1");if(M.random()>.8&&!familiar){if(my.job==="Magician"){playAudio("elem_att3");}
if(my.job==="Necromancer"||my.job==="Shadow Knight"){playAudio("skeleton_att");}
if(my.job==="Shaman"){playAudio("wolf_att2");}}}
popupPetDamage(petsDamage,Slot,mType);if(mob[Slot].sleepStatus===true){mob[Slot].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
if(mob[Slot].thornsActive===0&&!familiar){petHp-=M.ceil(mob[Slot].level/10);}
if(mob[Slot].lavaShieldActive===0&&!familiar){petHp-=M.ceil(mob[Slot].level/6);}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();}else{petsDamage=M.ceil(petsDamage*(g.mobDefense(Slot)));if(petsDamage<mob[charmSlot].level*.3){petsDamage=M.ceil(mob[charmSlot].level*.3);}
if(petsDamage<=3){petsDamage=M.ceil(M.random()*(4));}
if(petName===""&&my.job!=="Cleric"){return;}
if(mob[Slot].runeHp>0){Chat((mob[Slot].name+"'s skin absorbs the blow."),3);mob[Slot].runeHp-=petsDamage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}
playAudio("blockBlunt");}
if(mob[Slot].runeHp<=0){mob[Slot].hp-=petsDamage;playAudio("flshhit1");}
popupPetDamage(petsDamage,Slot);if(mob[Slot].sleepStatus===true){mob[Slot].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
if(mob[Slot].thornsActive===0){mob[charmSlot].hp-=M.ceil(mob[Slot].level/10);}
if(mob[Slot].lavaShieldActive===0){mob[charmSlot].hp-=M.ceil(mob[Slot].level/6);}
g.drawMonsterHp(Slot);g.checkForDeadMonsters();}}
function resumePetAttack(){var randomNum=M.random()*100;var doubleAttackChance=petLevel;if(petDoubleAttackCD===false){if(petLevel>15&&(doubleAttackChance>randomNum)){petDoubleAttackCD=true;petAttack=T.delayedCall(.1,petDamage);return;}}
petDoubleAttackCD=false;if(attackStatus!==0){return;}
petAttack=T.delayedCall((petSpeed*petSpeedBuff)/1000,petDamage);}
function petStrTotal(){var foo=petStr;return foo;}
function animatePetAttack(mobCenterX,petCenterX){var petOk=true;var xDiff=petCenterX-mobCenterX;var targetLeftX=mobCenterX-petWidth+20;var targetLeftX2=targetLeftX+30;var targetRightX=mobCenterX;var targetRightX2=targetRightX-30;if(xDiff>250&&petRootStatus===true){petOk=false;}
var tl=TM();T.killTweensOf(NG.mob5);if(petCenterX>=mobCenterX&&petOk===true){if(xDiff<60&&xDiff>-45){tl.to(NG.mob5,.2,{left:"-=25",bottom:"+=10",force3D:"auto"}).to(NG.mob5,.1,{bottom:"+=10",left:"-=45",force3D:"auto"}).to(NG.mob5,.2,{bottom:60,force3D:"auto"});return petOk;}
tl.to(NG.mob5,.2,{left:targetRightX,bottom:"+=5",force3D:"auto"}).to(NG.mob5,.1,{bottom:"+=10",left:targetRightX2,force3D:"auto"}).to(NG.mob5,.2,{left:"+=70",bottom:60,force3D:"auto"});}
if(petCenterX<mobCenterX&&petOk===true){if(xDiff<60&&xDiff>-45){tl.to(NG.mob5,.2,{left:"+=25",bottom:"+=10",force3D:"auto"}).to(NG.mob5,.1,{bottom:"+=10",left:"+=45",force3D:"auto"}).to(NG.mob5,.2,{bottom:60,force3D:"auto"});return petOk;}
tl.to(NG.mob5,.2,{left:targetLeftX,bottom:"+=5",force3D:"auto"}).to(NG.mob5,.1,{bottom:"+=10",left:targetLeftX2,force3D:"auto"}).to(NG.mob5,.2,{left:"-=70",bottom:60,force3D:"auto"});}
return petOk;}
function petSkillCheck(Slot){var monsterSkillSelect=M.ceil(M.random()*(4));if(monsterSkillSelect===1){if(petSkill1==="kick"){petKick(Slot);return;}
if(petSkill1==="bash"){petBash(Slot);return;}
if(petSkill1==="snare"){petSnare(Slot);return;}
if(petSkill1==="burstofflame"){petBurstOfFlame(Slot);return;}
if(petSkill1==="freeze"){petFreeze(Slot);return;}}
if(monsterSkillSelect===2){if(petSkill2==="kick"){petKick(Slot);return;}
if(petSkill2==="bash"){petBash(Slot);return;}
if(petSkill2==="snare"){petSnare(Slot);return;}
if(petSkill2==="burstofflame"){petBurstOfFlame(Slot);return;}
if(petSkill2==="freeze"){petFreeze(Slot);return;}}
if(monsterSkillSelect===3){if(petSkill3==="kick"){petKick(Slot);return;}
if(petSkill3==="bash"){petBash(Slot);return;}
if(petSkill3==="snare"){petSnare(Slot);return;}
if(petSkill3==="burstofflame"){petBurstOfFlame(Slot);return;}
if(petSkill3==="freeze"){petFreeze(Slot);return;}}
if(monsterSkillSelect===4){if(petSkill4==="kick"){petKick(Slot);return;}
if(petSkill4==="bash"){petBash(Slot);return;}
if(petSkill4==="snare"){petSnare(Slot);return;}
if(petSkill4==="burstofflame"){petBurstOfFlame(Slot);return;}
if(petSkill4==="freeze"){petFreeze(Slot);return;}}}
function petKick(Slot){if(my.hp<=0||mobsFound()===false){return;}
if(mob[Slot].stasisFieldStatus===true){var petsDamage=0;popupPetDamage(petsDamage,Slot);resumePetAttack();return;}
function mobHits(){var kickBonus=M.ceil(petLevel/4);var petsDamage=M.ceil((M.random()*(petStr)));if(petsDamage<=0){petsDamage=1;}
if(petsDamage<petLevel*.3){petsDamage=M.ceil(petLevel*.3);}
g.petPhysical(petsDamage,Slot);}
var mobCenterX=MOB[Slot].offsetLeft+mob[Slot].cX;var petCenterX=MOB[5].offsetLeft+petWidth/2;if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:180});}else{T.set(NG.petImage,{rotationY:0});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.3,mobHits);}
if(attackStatus!==0){return;}
resumePetAttack();}
function petBash(Slot){if(mob[Slot].stasisFieldStatus===true){var petsDamage=0;popupPetDamage(petsDamage,Slot);resumePetAttack();return;}
function mobHits(){if(my.hp<=0||mobsFound()===false){return;}
var bashBonus=M.ceil(petLevel/3);var petsDamage=M.ceil((M.random()*(petStr)+bashBonus));if(petsDamage<=0){petsDamage=1;}
if(petsDamage<petLevel*.3){petsDamage=M.ceil(petLevel*.3);}
stunTarget(Slot,2500,-544,-32,"Bash");g.petPhysical(petsDamage,Slot);}
var mobCenterX=MOB[Slot].offsetLeft+mob[Slot].cX;var petCenterX=MOB[5].offsetLeft+petWidth/2;if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:180});}else{T.set(NG.petImage,{rotationY:0});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.3,mobHits);}
if(attackStatus!==0){return;}
resumePetAttack();}
function petSnare(Slot){if(my.hp<=0||mobsFound()===false){return;}
if(mob[Slot].stasisFieldStatus===true){var petsDamage=0;popupPetDamage(petsDamage,Slot);resumePetAttack();return;}
function mobHits(){if(mob[Slot].name){snareTarget(Slot);addMobBuffIcon("Snare",Slot,"snareIcon",0,-544);}}
var mobCenterX=MOB[Slot].offsetLeft+mob[Slot].cX;var petCenterX=MOB[5].offsetLeft+petWidth/2;if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:180});}else{T.set(NG.petImage,{rotationY:0});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.3,mobHits);}
if(attackStatus!==0){return;}
resumePetAttack();}
function petBurstOfFlame(Slot){if(my.hp<=0||mobsFound()===false){return;}
if(mob[Slot].stasisFieldStatus===true){var petsDamage=0;popupPetDamage(petsDamage,Slot);resumePetAttack();return;}
function mobHits(){var flameBonus=M.ceil(petLevel*1.2);var petsDamage=M.ceil((M.random()*(petStr)+flameBonus)*(mob[Slot].fire/100));var mType="fire";if(mob[Slot].runeHp>0){var crit=false;var spellName="Burst of Flame";g.myMagicDamage(mType,petsDamage,Slot,crit,spellName);}
if(mob[Slot].runeHp<=0){var crit=false;var spellName="Burst of Flame";g.myMagicDamage(mType,petsDamage,Slot,crit,spellName);}}
var mobCenterX=MOB[Slot].offsetLeft+mob[Slot].cX;var petCenterX=MOB[5].offsetLeft+petWidth/2;if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:0});}else{T.set(NG.petImage,{rotationY:180});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.3,mobHits);}
if(attackStatus!==0){return;}
resumePetAttack();}
function petFlameShield(Slot){var flameShield=M.ceil((petLevel*1.5)*(mob[Slot].fire/100));var mType="fire";mob[Slot].hp-=flameShield;popupPetDamage(flameShield,Slot,mType);g.checkForDeadMonsters();}
function petFreeze(Slot){if(mob[Slot].stasisFieldStatus===true){var petsDamage=0;popupPetDamage(petsDamage,Slot);resumePetAttack();return;}
function mobHits(){if(my.hp<=0||mobsFound()===false){return;}
var freezeBonus=M.ceil(petLevel/4);var petsDamage=M.ceil((M.random()*(petStr)+freezeBonus)*(mob[Slot].cold/100));if(mob[Slot].runeHp>0){mob[Slot].runeHp-=petsDamage;if(mob[Slot].runeHp<=0){$("#MruneIcon"+Slot).remove();}
playAudio("blockBlunt");}
if(mob[Slot].runeHp<=0){Chat((petName+" freezes "+mob[Slot].name+" for "+petsDamage+" damage."));}
g.petPhysical(petsDamage,Slot,"cold");var freezeDuration=3500;freezeDuration*=freezeReduction();encaseTarget(Slot,freezeDuration,-256);}
var mobCenterX=MOB[Slot].offsetLeft+mob[Slot].cX;var petCenterX=MOB[5].offsetLeft+petWidth/2;if(mobCenterX<petCenterX){T.set(NG.petImage,{rotationY:180});}else{T.set(NG.petImage,{rotationY:0});}
if(animatePetAttack(mobCenterX,petCenterX)===true){T.delayedCall(.3,mobHits);}
if(attackStatus!==0){return;}
resumePetAttack();}
function startSpell(){if(my.hp<=0||paused===true){return;}
spellCanceled=false;if(castingSpell===0){Chat("You are already casting a spell.");return false;}
if(silenceStatus===true){Chat("You cannot channel spells while silenced!");return false;}
referenceDate2=new Date();castingSpell=0;Chat(("You begin casting "+currentSpell+"."),3);mySpellBar.scaleX=0;NG.spellbardiv.style.display="block";return true;}
function endSpell(){var foo=true;if(spellCanceled===true){foo=false;}
spellCanceled=false;castingSpell=1;if(foo===true){checkSpellLevelUp();if(my.job==="Enchanter"){if(my.talent11>=20&&mob[TGT].attackStatus===0){animatePsychicBeam(TGT,9);}}}
return foo;}
function snareTimeout(Slot){mob[Slot].snareStatus=false;}
function countMobs(){var foo=0;if(mob[0].name!==""){foo++;}
if(mob[1].name!==""){foo++;}
if(mob[2].name!==""){foo++;}
if(mob[3].name!==""){foo++;}
if(mob[4].name!==""){foo++;}
return foo;}
function calculateBardDamage(mType,Slot){if(!mob[Slot].name){return;}
if(checkCrit()===false){var crit=false;var spellName="Brusco's Boastful Bellow";g.myMagicDamage(mType,spellDamage,Slot,crit,spellName)}else{spellDamage=M.ceil(spellDamage+spellDamage*(g.criticalDamage()));var crit=true;var spellName="Brusco's Boastful Bellow";g.myMagicDamage(mType,spellDamage,Slot,crit,spellName);}}
function calculateSpellDamage3(damage,Slot){if(mob[Slot].name===""){return;}
if(mob[Slot].runeHp>0){Chat((mob[Slot].name+"'s skin absorbs the blow."),3);playAudio("blockBlunt");}
if(mob[Slot].runeHp<=0){playAudio("fall_hit");}
var crit=false;var spellName="falling";var mType="physical";g.myMagicDamage(mType,damage,Slot,crit,spellName);}
function checkBashFear(){if(my.hp<=0||paused===true){return true;}
if(fearStatus===0){Chat("You are feared!");return true;}
if(bashStatus===0){Chat("You are stunned!");return true;}
if(castingSpell===0){Chat("You are already casting!");return true;}}
function checkRootImmune(Slot){var foo=false;if(mob[Slot].image==="a bat"||mob[Slot].image===""||mob[Slot].image==="a faerie"||mob[Slot].image==="a fire elemental"||mob[Slot].image==="a gargoyle"||mob[Slot].image==="a wisp"||mob[Slot].image==="an earth elemental"||mob[Slot].image==="an evil eye round"||mob[Slot].image==="an imp"||mob[Slot].image==="garanel rucksif"||mob[Slot].image===""||mob[Slot].rare===3){foo=true;}
if(my.job==="Druid"){if(my.talent3>=20){foo=false;}}
return foo;}
function checkSpellLevelUp(){if(spellType==="evocation"){if(skillLevelUp()>my.evocation){levelUpEvocation();}}else if(spellType==="alteration"){if(skillLevelUp()>my.alteration){levelUpAlteration();}}else if(spellType==="abjuration"){if(skillLevelUp()>my.abjuration){levelUpAbjuration();}}else if(spellType==="conjuration"){if(skillLevelUp()>my.conjuration){levelUpConjuration();}}else if(spellType==="channeling"&&my.job==="Bard"){if(skillLevelUp()>my.channeling){levelUpChanneling();}}}
function skillLevelUp(){var bar=(intTotal()-80)/12;if(bar<0){bar=0;}
var foo=(M.random()*(210)+M.random()*(210)+bar);return foo;}
function skillMap(z){if(my.job==="Warrior"){warSkillMap(z);}else if(my.job==="Monk"){mnkSkillMap(z);}else if(my.job==="Rogue"){rogSkillMap(z);}else if(my.job==="Ranger"){rngSkillMap(z);}else if(my.job==="Paladin"){palSkillMap(z);}else if(my.job==="Shadow Knight"){shdSkillMap(z);}else if(my.job==="Bard"){brdSkillMap(z);}else if(my.job==="Cleric"){clrSkillMap(z);}else if(my.job==="Druid"){druSkillMap(z);}else if(my.job==="Shaman"){shmSkillMap(z);}else if(my.job==="Necromancer"){necSkillMap(z);}else if(my.job==="Enchanter"){encSkillMap(z);}else if(my.job==="Magician"){magSkillMap(z);}else if(my.job==="Wizard"){wizSkillMap(z);}}
function executeRacialSkill(){if(my.race==="Human"){secondWind();}
if(my.race==="Erudite"){divineAegis();}
if(my.race==="Barbarian"){ancestralRampage();}
if(my.race==="Wood Elf"){tunaresGlow();}
if(my.race==="Half Elf"){karanasInfusion();}
if(my.race==="Dark Elf"){sanguineTorment();}
if(my.race==="Dwarf"){graniteVisage();}
if(my.race==="Gnome"){shortCircuit();}
if(my.race==="Halfling"){hideRacial();}}
g.WarriorSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="shockwaveId"){shockwave();}
if(z==="absorbspellId"){absorbSpell();}
if(z==="enrageId"){enrage();}
if(z==="furiousscornId"){furiousScorn();}
if(z==="triageId"){triage();}
if(z==="bulwarkId"){bulwark();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="warriorkickId"){warriorKick();}
if(z==="slamId"){slam();}
if(z==="avengingstrikeId"){avengingStrike();}
if(z==="hemorrhageId"){hemorrhage();}
if(z==="pummelId"){pummel();}
if(z==="subjugateId"){subjugate();}
if(z==="decisiveblowId"){decisiveBlow();}
if(z==="frenziedrampageId"){frenziedRampage();}
if(z==="intrepidmightId"){intrepidMight();}}
g.MonkSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="feigndeathId"){feignDeath();}
if(z==="mendId"){mend();}
if(z==="stonefistsId"){stoneFists();}
if(z==="innerpeaceId"){innerPeace();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="tigerstrikeId"){tigerStrike();}
if(z==="eaglestrikeId"){eagleStrike();}
if(z==="cheetahstrikeId"){cheetahStrike();}
if(z==="cobrastrikeId"){cobraStrike();}
if(z==="dragonstrikeId"){dragonStrike();}
if(z==="cranekickId"){craneKick();}
if(z==="windmillkickId"){windmillKick();}
if(z==="ancestralflurryId"){ancestralFlurry();}
if(z==="flyingkickId"){flyingKick();}
if(z==="chakrablastId"){chakraBlast();}
if(z==="intimidationId"){intimidation();}}
g.RogueSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="roguehideId"){hideRogue();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="evadeId"){evade();}
if(z==="coldbloodId"){coldBlood();}
if(z==="illusivemistId"){illusiveMist();}
if(z==="ancientwillId"){ancientWill();}
if(z==="runId"){run();}
if(z==="shadowstrikeId"){shadowStrike();}
if(z==="sonicstrikeId"){sonicStrike();}
if(z==="hyperstrikeId"){hyperStrike();}
if(z==="widowstrikeId"){widowStrike();}
if(z==="miragestrikeId"){mirageStrike();}
if(z==="lacerateId"){lacerate();}
if(z==="backstabId"){backstab();}
if(z==="staggershotId"){staggerShot();}
if(z==="lobotomizeId"){lobotomize();}
if(z==="prowlinggashId"){prowlingGash();}
if(z==="flashpowderId"){flashPowder();}}
g.PaladinSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="valorId"){valor();}
if(z==="spiritarmorId"){spiritArmor();}
if(z==="divineprovidenceId"){divineProvidence();}
if(z==="symbolofryltanId"){symbolOfRyltan();}
if(z==="layhandsId"){layHands();}
if(z==="greaterhealingId"){greaterHealing();}
if(z==="yaulpId"){yaulp();}
if(z==="cleanseId"){cleanse();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="palslamId"){palSlam();}
if(z==="rebukeId"){rebuke();}
if(z==="purgeId"){purge();}
if(z==="vengeanceId"){vengeance();}
if(z==="holymightId"){holyMight();}
if(z==="palrootId"){palRoot();}
if(z==="ardentjudgment"){ardentJudgment();}
if(z==="flashoflightId"){flashOfLight();}}
g.RangerSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="rangertrackId"){rangerTrack();}
if(z==="thistlecoatId"){thistlecoat();}
if(z==="feetlikecatId"){feetLikeCat();}
if(z==="shieldofbramblesId"){shieldOfBrambles();}
if(z==="rangersowId"){spiritOfTheWolf();}
if(z==="weaponshieldId"){weaponShield();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="rangerkickId"){rangerKick();}
if(z==="rapidshotId"){rapidShot();}
if(z==="countershotId"){counterShot();}
if(z==="trueshotarrowId"){trueshotArrow();}
if(z==="volleyshotId"){volleyShot();}
if(z==="lighthealingId"){lightHealing();}
if(z==="wardersrift"){wardersRift();}
if(z==="igniteId"){ignite();}
if(z==="snareId"){snare();}
if(z==="faerieflameId"){faerieFlame();}}
g.ShadowKnightSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="summondeadId"){summonDead();}
if(z==="vampiricembraceId"){vampiricEmbrace();}
if(z==="resistcoldId"){resistCold();}
if(z==="shdfeigndeathId"){shdFeignDeath();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="shdslamId"){shdSlam();}
if(z==="crescentcleaveId"){crescentCleave();}
if(z==="deathstrikeId"){deathStrike();}
if(z==="gaspingfrenzyId"){gaspingFrenzy();}
if(z==="harmtouchId"){harmTouch();}
if(z==="shdlifetapId"){shdLifeTap();}
if(z==="doomingdarknessId"){doomingDarkness();}
if(z==="heatbloodId"){heatBlood();}
if(z==="strengthendeadId"){strengthenDead();}
if(z==="shdfearId"){shdFear();}
if(z==="siphonstrengthId"){siphonStrength();}
if(z==="shadowvortexId"){shadowVortex();}}
g.BardSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="rangertrackId"){rangerTrack();}
if(z==="chantofbattle"){chantOfBattle();}
if(z==="chordsofdissonance"){chordsOfDissonance();}
if(z==="accelerando"){accelerando();}
if(z==="hymnofrestoration"){hymnOfRestoration();}
if(z==="anthemdearms"){anthemDeArms();}
if(z==="elementalrhythms"){elementalRhythms();}
if(z==="lucidlullaby"){lucidLullaby();}
if(z==="dissension"){dissension();}
if(z==="chorusofclarity"){chorusOfClarity();}
if(z==="euphonichymn"){euphonicHymn();}
if(z==="shieldofsongs"){shieldOfSongs();}
if(z==="desperatedirge"){desperateDirge();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="consonantchain"){consonantChain();}
if(z==="songofthesirens"){songOfTheSirens();}
if(z==="boastfulbellow"){boastfulBellow();}}
g.ClericSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="resolution"){resolution();}
if(z==="armoroffaith"){armorOfFaith();}
if(z==="divinesanctuary"){divineSanctuary();}
if(z==="symbolofnaltron"){symbolOfNaltron();}
if(z==="superiorhealing"){superiorHealing();}
if(z==="guardianangel"){guardianAngel();}
if(z==="markofjudgement"){markOfJudgement();}
if(z==="benediction"){benediction();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="smite"){smite();}
if(z==="soundofforce"){soundOfForce();}
if(z==="bindingearth"){bindingEarth();}
if(z==="expelcorruption"){expelCorruption();}
if(z==="martyrsblessing"){martyrsBlessing();}
if(z==="searingrevelation"){searingRevelation();}
if(z==="holywrath"){holyWrath();}}
g.DruidSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="rangertrackId"){rangerTrack();}
if(z==="skinlikenature"){skinLikeNature();}
if(z==="shieldofspikes"){shieldOfSpikes();}
if(z==="drusow"){druSow();}
if(z==="chloroplast"){chloroplast();}
if(z==="druhealing"){druHealing();}
if(z==="earthquake"){earthquake();}
if(z==="hurricane"){hurricane();}
if(z==="sylvangrasp"){sylvanGrasp();}
if(z==="driftingdeath"){driftingDeath();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="starfire"){starfire();}
if(z==="dronesofdoom"){dronesOfDoom();}
if(z==="tornado"){tornado();}
if(z==="engulfingroots"){engulfingRoots();}
if(z==="lightningblast"){lightningBlast();}
if(z==="volcano"){volcano();}}
g.ShamanSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="calloftheancients"){callOfTheAncients();}
if(z==="guardianspirit"){guardianSpirit();}
if(z==="shmsow"){shmSow();}
if(z==="talismanofaltuna"){talismanOfAltuna();}
if(z==="shmhealing"){shmHealing();}
if(z==="cannibalize"){cannibalize();}
if(z==="reclaimblood"){reclaimBlood();}
if(z==="poisonnova"){poisonNova();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="froststrike"){frostStrike();}
if(z==="scourge"){scourge();}
if(z==="togorsinsects"){togorsInsects();}
if(z==="enstill"){enstill();}
if(z==="affliction"){affliction();}
if(z==="glacialimpact"){glacialImpact();}
if(z==="devouringplague"){devouringPlague();}}
g.NecromancerSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="invokedeath"){invokeDeath();}
if(z==="archshielding"){archShielding();}
if(z==="augmentdeath"){augmentDeath();}
if(z==="diamondskin"){diamondSkin();}
if(z==="howlingterror"){howlingTerror();}
if(z==="feigndeath"){necFeignDeath();}
if(z==="corpseexplosion"){corpseExplosion();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="bonespirit"){boneSpirit();}
if(z==="cascadingdarkness"){cascadingDarkness();}
if(z==="invokefear"){invokeFear();}
if(z==="drainsoul"){drainSoul();}
if(z==="igniteblood"){igniteBlood();}
if(z==="bondofdeath"){bondOfDeath();}
if(z==="asystole"){asystole();}
if(z==="detonatesoul"){detonateSoul();}}
g.EnchanterSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="discordantbarrier"){discordantBarrier();}
if(z==="enchantweapon"){enchantWeapon();}
if(z==="adorninggrace"){adorningGrace();}
if(z==="clarity"){clarity();}
if(z==="colorshift"){colorShift();}
if(z==="mysticrune"){mysticRune();}
if(z==="gravityflux"){gravityFlux();}
if(z==="alacrity"){alacrity();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="chaosflux"){chaosFlux();}
if(z==="gaspingembrace"){gaspingEmbrace();}
if(z==="cajolingwhispers"){cajolingWhispers();}
if(z==="mesmerize"){mesmerize();}
if(z==="shiftlessdeeds"){shiftlessDeeds();}
if(z==="tashania"){tashania();}
if(z==="enthrall"){enthrall();}}
g.MagicianSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="earthelemental"){earthElemental();}
if(z==="airelemental"){airElemental();}
if(z==="fireelemental"){fireElemental();}
if(z==="frostelemental"){frostElemental();}
if(z==="shieldoflava"){shieldOfLava();}
if(z==="phantomplate"){phantomPlate();}
if(z==="elementalarmor"){elementalArmor();}
if(z==="burnout"){burnout();}
if(z==="manashield"){manaShield();}
if(z==="alteredstate"){alteredState();}
if(z==="psionicstorm"){psionicStorm();}
if(z==="reclaimelements"){reclaimElements();}
if(z==="armageddon"){armageddon();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="lavabolt"){lavaBolt();}
if(z==="firestorm"){firestorm();}
if(z==="frozenorb"){frozenOrb();}
if(z==="elementalfury"){elementalFury();}
if(z==="stasisfield"){stasisField();}}
g.WizardSkillMap=function(z){if(z==="addmonsterId"){addMonster();}
if(z==="toggleattackId"){toggleAutoAttackStatus();}
if(z==="viziersshielding"){viziersShielding();}
if(z==="mirrorimages"){mirrorImages();}
if(z==="harnessEther"){harnessEther();}
if(racialSkillId!==''){if(z===racialSkillId){executeRacialSkill();}}
if(z==="runId"){run();}
if(z==="icebolt"){iceBolt();}
if(z==="chargedbolts"){chargedBolts();}
if(z==="frostnova"){frostNova();}
if(z==="magicmissiles"){magicMissiles();}
if(z==="fireball"){fireball();}
if(z==="deepfreeze"){deepFreeze();}
if(z==="chainlightning"){chainLightning();}
if(z==="glacialspike"){glacialSpike();}
if(z==="iceblock"){iceBlock();}
if(z==="icecomet"){iceComet();}
if(z==="counterspell"){counterspell();}
if(z==="meteor"){meteor();}}
function checkMyDeathBySkill(Slot){if(g.petAlive===true){if(petHp<=0){slainPet();}}
if(my.hp<=0){Chat(("You have been slain by "+mob[Slot].name+"!"),1);monsterKilledMe();}}
function monsterMpLow(Slot){mobResumeAttackTimer(Slot,0,100);return;}
function damagePet(damage){damRed=0;damRed+=(g.conjurationEquip+g.allSkillsEquip)/ 3.5;if(damRed>50){damRed=50;}
damage=damage*(1-(damRed / 100));return M.ceil(damage);}
function monsterKick(Slot,targetPet,targetCharm){if(mob[Slot].mp<2){monsterMpLow(Slot);return;}
tlMob[Slot]=TM();playAudio(mob[Slot].audio1);if(targetPet===true){function mobHits1(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 3)*(1-(((petDef)/ 4)/ 100)));if(monsterDamage<mob[Slot].level*.45){monsterDamage=M.ceil(mob[Slot].level*.45);}
monsterDamage=damagePet(monsterDamage);petHp-=monsterDamage;Chat((mob[Slot].name+" kicks "+petName+" for "+monsterDamage+" damage."));g.drawMyHp();if(petImage==="a fire elemental pet"){petFlameShield(Slot);}
checkMyDeathBySkill(Slot);}
T.delayedCall(.4,mobHits1);mob[Slot].mp-=2;resumeMonsterAttack(Slot);if(mob[Slot].rootStatus<=0){var petCenter=M.round(MOB[5].offsetLeft+(petWidth / 2));var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(152+(Slot*244)-(mob[Slot].imageWidth / 2)<petCenter){var randomLeft1=M.round(leftReset+M.random()*35+15);var randomLeft2=M.round(leftReset+M.random()*65+0);}else{var randomLeft1=M.round(leftReset+M.random()*15-35);var randomLeft2=M.round(leftReset+M.random()*65-65);}
resetMobAttack(Slot);tlMob[Slot].to(MOB[Slot],.2,{left:randomLeft1,bottom:146,ease:ez.Bin,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.2,{left:randomLeft2,bottom:106,ease:ez.qout,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.5,{left:leftReset,bottom:floorB});}
return;}
if(targetCharm===true){function mobHits2(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 3)*(g.mobDefense(charmSlot)));if(monsterDamage<mob[Slot].level*.45){monsterDamage=M.ceil(mob[Slot].level*.45);}
mob[charmSlot].hp-=monsterDamage;g.slotDamage(monsterDamage,charmSlot);Chat((mob[Slot].name+" kicks "+petName+" for "+monsterDamage+" damage."));g.drawMyHp();if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
T.delayedCall(.5,mobHits2);mob[Slot].mp-=2;resumeMonsterAttack(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);resetMobAttack(Slot);if(charmSlot>Slot){tlMob[Slot].to(MOB[Slot],.25,{left:"+=50",bottom:"+=50",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"+=50",bottom:"-=70",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"-=20",bottom:"-=40"}).to(MOB[Slot],.3,{left:leftReset,bottom:floorB});}
if(charmSlot<Slot){tlMob[Slot].to(MOB[Slot],.25,{left:"-=50",bottom:"+=50",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"-=50",bottom:"-=70",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"+=20",bottom:"-=40"}).to(MOB[Slot],.3,{left:leftReset,bottom:floorB});}
return;}
if(targetCharm===false){function mobHits3(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].charmStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 3));g.petPhysical(monsterDamage,TGT,"kicks");}
mob[Slot].mp-=2;resumeMonsterAttack(Slot);T.delayedCall(.5,mobHits3);resetMobAttack(Slot);enchanterMultiHit(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(TGT>Slot){tlMob[Slot].to(MOB[Slot],.25,{left:"+=50",bottom:"+=50",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"+=50",bottom:"-=70",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"-=20",bottom:"-=40"}).to(MOB[Slot],.3,{left:leftReset,bottom:floorB});}
if(TGT<Slot){tlMob[Slot].to(MOB[Slot],.25,{left:"-=50",bottom:"+=50",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"-=50",bottom:"-=70",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:"+=20",bottom:"-=40"}).to(MOB[Slot],.3,{left:leftReset,bottom:floorB});}
return;}
function mobHits4(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].fallingStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
if(mob[Slot].rootStatus>0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 3));if(monsterDamage<mob[Slot].level*.45){monsterDamage=M.ceil(mob[Slot].level*.45);}
var skill="kicks";physicalDamage(monsterDamage,Slot,skill);checkSpellKnockback(Slot);checkSpellKnockback(Slot);}
if(mob[Slot].rootStatus>0){resumeMonsterAttack(Slot);return;}
T.delayedCall(.4,mobHits4);resumeMonsterAttack(Slot);resetMobAttack(Slot);mob[Slot].mp-=2;var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(Slot<=1){var randomLeft1=M.round(leftReset+M.random()*(35)+15);var randomLeft2=M.round(leftReset+M.random()*(65)+0);}else{var randomLeft1=M.round(leftReset+M.random()*(15)-35);var randomLeft2=M.round(leftReset+M.random()*(65)-65);}
var Yconvert=(mob[Slot].imageWidth / mob[Slot].imageBaseX);var mobHeight=(mob[Slot].imageBaseY*Yconvert);tlMob[Slot].to(MOB[Slot],.2,{scale:1.1,left:randomLeft1,bottom:146,ease:ez.Bin,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.2,{scale:1.2,left:randomLeft2,bottom:106,ease:ez.qout,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.5,{scale:1,left:leftReset,bottom:floorB},'+=.2');}
function stunCooldownCheck(){if(my.hp<=0){return;}
bashStatus=1;if(my.job==="Warrior"){checkIntrepidMight();}
if(my.job==="Rogue"){ancientWillStatus=false;g.checkRogueSkills();}}
function stunCooldownCheck2(){petBashStatus=false;}
function monsterBash(Slot,targetPet,targetCharm){if(mob[Slot].mp<5){monsterMpLow(Slot);return;}
tlMob[Slot]=TM();playAudio(mob[Slot].audio1);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 4)*(1-(((petDef)/ 4)/ 100)));if(monsterDamage<mob[Slot].level*.55){monsterDamage=M.ceil(mob[Slot].level*.55);}
monsterDamage=damagePet(monsterDamage);petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" bashes "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");Chat((petName+" has been stunned!"));if(petImage==="a fire elemental pet"){petFlameShield(Slot);}
petBashStatus=true;stunCooldown2.kill();stunCooldown2=T.delayedCall(4,stunCooldownCheck2);var animateSeed=0;var stunDuration=4000;$NG.mob5.stop(true,false);var stunFlag=true;mob[5].animateStun.kill();mob[5].animateStun=T.delayedCall(.005,function(){animateStun(5,stunDuration,animateSeed,stunFlag);});checkMyDeathBySkill(Slot);mob[Slot].mp-=5;resumeMonsterAttack(Slot);resetMobAttack(Slot);if(mob[Slot].rootStatus<=0){var petCenter=M.round(MOB[5].offsetLeft+(petWidth / 2));var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(152+(Slot*244)-(mob[Slot].imageWidth / 2)<petCenter){var randomLeft1=M.round(leftReset+M.random()*(35)+15);var randomLeft2=M.round(leftReset+10);}else{var randomLeft1=M.round(leftReset+M.random()*(15)-35);var randomLeft2=M.round(leftReset-10);}
tlMob[Slot].to(MOB[Slot],.15,{left:randomLeft1,bottom:62,ease:ez.lin}).to(MOB[Slot],.25,{left:randomLeft2,bottom:176},'+=.4').to(MOB[Slot],.25,{left:leftReset,bottom:floorB,ease:ez.Qin});}
return;}
if(targetCharm===true){var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 4)*(1-(((petDef)/ 4)/ 100)));if(monsterDamage<mob[Slot].level*.55){monsterDamage=M.ceil(mob[Slot].level*.55);}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" bashes "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");stunTarget(charmSlot,4000,0);animateStun(charmSlot,4000);Chat((petName+" has been stunned."));mob[charmSlot].hp-=monsterDamage;if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
mob[Slot].mp-=5;resumeMonsterAttack(Slot);resetMobAttack(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(charmSlot>Slot){tlMob[Slot].to(MOB[Slot],.2,{left:"+=80"}).to(MOB[Slot],.15,{bottom:"+=20",left:"-=35"},'+=.4').to(MOB[Slot],.15,{left:"-=15"}).to(MOB[Slot],.15,{left:leftReset,bottom:floorB});}
if(charmSlot<Slot){tlMob[Slot].to(MOB[Slot],.2,{left:"-=80"}).to(MOB[Slot],.15,{bottom:"+=20",left:"+=35"},'+=.4').to(MOB[Slot],.15,{left:"+=15"}).to(MOB[Slot],.15,{left:leftReset,bottom:floorB});}
g.checkForDeadMonsters();return;}
if(targetCharm===false){var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 4)*(g.mobDefense(TGT)));if(monsterDamage<mob[Slot].level*.55){monsterDamage=M.ceil(mob[Slot].level*.55);}
playAudio("flshhit2");stunTarget(TGT,4000,0);animateStun(TGT,4000);g.petPhysical(monsterDamage,TGT,"bashes");Chat((mob[TGT].name+" has been stunned."));mob[Slot].mp-=5;resumeMonsterAttack(Slot);resetMobAttack(Slot);enchanterMultiHit(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(TGT>Slot){tlMob[Slot].to(MOB[Slot],.2,{left:"-=80"}).to(MOB[Slot],.15,{bottom:"+=20",left:"-=35"},'+=.4').to(MOB[Slot],.15,{left:"-=15"}).to(MOB[Slot],.15,{left:leftReset,bottom:floorB});}
if(TGT<Slot){tlMob[Slot].to(MOB[Slot],.2,{left:"-=80"}).to(MOB[Slot],.15,{bottom:"+=20",left:"+=35"},'+=.4').to(MOB[Slot],.15,{left:"+=15"}).to(MOB[Slot],.15,{left:leftReset,bottom:floorB});}
return;}
if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].frozenStatus===true||mob[Slot].stasisFieldStatus===true){mobResumeAttackTimer(Slot,0,100);return;}
if(mob[Slot].rootStatus>0){resumeMonsterAttack(Slot);return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))+(mobStrength(Slot))/ 4));if(monsterDamage<mob[Slot].level*.55){monsterDamage=M.ceil(mob[Slot].level*.55);}
var skill="bashes";var zug=physicalDamage(monsterDamage,Slot,skill);if(my.hp>0){if(my.race==="Ogre"){}else{if(mirageStrikeStatus<=0&&mirrorImageStatus<=0&&zug===true){ancientWillStatus=true;bashStatus=0;animateMobStun();Chat(("You have been stunned!"));playAudio("flshhit2");tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;castingGlobal=1;var bashDuration=3000;bashDuration=(bashDuration*((100-g.stunEquip)/ 100));globalCooldownEnd2();beginLockout(bashDuration);stunCooldown.kill();stunCooldown=T.delayedCall(bashDuration / 1000,stunCooldownCheck);var skillName="Bash";var buffId="mobBashIcon";var duration=bashDuration;mobBashTimer.kill();mobBashTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,0);}}}
mob[Slot].mp-=5;resumeMonsterAttack(Slot);resetMobAttack(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(Slot<=1){var randomLeft1=M.round(leftReset+M.random()*(35)+15);var randomLeft2=M.round(leftReset+10);}else{var randomLeft1=M.round(leftReset+M.random()*(15)-35);var randomLeft2=M.round(leftReset-10);}
tlMob[Slot].to(MOB[Slot],.15,{scale:1.3,left:randomLeft1,bottom:62,ease:ez.lin}).to(MOB[Slot],.25,{scale:1.1,left:randomLeft2,bottom:176},'+=.4').to(MOB[Slot],.25,{scale:1,left:leftReset,bottom:floorB,ease:ez.Qin});}
function animateMobStun(){myBashTimer.kill();flashScreen("#fff",.1,.25);var s2=new C.Shape();s2.graphics.beginFill("#ffa").setStrokeStyle(1).beginStroke("#000").drawPolyStar(0,0,13,5,.7,0);s2.cache(-13,-13,26,26);screenShake(1,4,2,33);var s1=s2.cacheCanvas;function doit1(){if(bashStatus===1){return;}
var s=new C.Bitmap(s1);s.set({x:320+M.random()*(320)+M.random()*(320),y:(M.random()*50+100),regX:13,regY:13});stage[7].addChild(s);T.to(s,.75,{x:"+="+(M.random()*20-10),y:-25,ease:ez.Qin,rotation:(M.random()*(720)-360),onComplete:function(){cRem(7,s);}});T.to(s,.25,{delay:.35,alpha:0});myBashTimer=T.delayedCall(.05,doit1);}
if(GLB.videoSetting==="High"){doit1();}}
function monsterBackstab(Slot,targetPet,targetCharm){if(mob[Slot].mp<4){monsterMpLow(Slot,targetPet,targetCharm);return;}
tlMob[Slot]=TM();playAudio(mob[Slot].audio1);if(targetPet===true){function mobHits1(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))/ 3)+(mobStrength(Slot)));if(monsterDamage<mob[Slot].level*.75){monsterDamage=M.ceil(mob[Slot].level*.75);}
monsterDamage=damagePet(monsterDamage);petHp-=monsterDamage;Chat((mob[Slot].name+" backstabs "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");g.drawMyHp();if(petImage==="a fire elemental pet"){petFlameShield(Slot);}
checkMyDeathBySkill(Slot);}
T.delayedCall(.7,mobHits1);resumeMonsterAttack(Slot);if(mob[Slot].rootStatus<=0){mob[Slot].mp-=4;resetMobAttack(Slot);var petCenter=M.round(MOB[5].offsetLeft+(petWidth / 2));var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(152+(Slot*244)-(mob[Slot].imageWidth / 2)<petCenter){var randomLeft1=M.round(leftReset+80);var randomLeft2=M.round(leftReset+M.random()*(50)+20);}else{var randomLeft1=M.round(leftReset-80);var randomLeft2=M.round(leftReset+M.random()*(30)-70);}
tlMob[Slot].to(MOB[Slot],.15,{left:randomLeft1,bottom:91,ease:ez.cinout}).to(MOB[Slot],.15,{left:randomLeft2,bottom:71}).to(MOB[Slot],.5,{left:leftReset,bottom:floorB,ease:ez.Qin});}
return;}
if(targetCharm===true){function mobHits2(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))/ 3)+(mobStrength(Slot)));if(monsterDamage<mob[Slot].level*.75){monsterDamage=M.ceil(mob[Slot].level*.75);}
mob[charmSlot].hp-=monsterDamage;g.slotDamage(monsterDamage,charmSlot);Chat((mob[Slot].name+" backstabs "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");g.drawMyHp();if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
T.delayedCall(.5,mobHits2);mob[Slot].mp-=4;resumeMonsterAttack(Slot);resetMobAttack(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(charmSlot<Slot){tlMob[Slot].to(MOB[Slot],.3,{bottom:"-=40",left:"-=150",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.2,{bottom:"-=60",left:"+=20",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:leftReset,bottom:floorB});}
if(charmSlot>Slot){tlMob[Slot].to(MOB[Slot],.3,{bottom:"-=40",left:"+=150",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.2,{bottom:"-=60",left:"-=20",onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.25,{left:leftReset,bottom:floorB});}
return;}
if(targetCharm===false){function mobHits3(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))/ 3)+(mobStrength(Slot)));if(monsterDamage<mob[Slot].level*.75){monsterDamage=M.ceil(mob[Slot].level*.75);}
g.petPhysical(monsterDamage,TGT,"backstabs");playAudio("flshhit2");}
T.delayedCall(.5,mobHits3);mob[Slot].mp-=4;resumeMonsterAttack(Slot);resetMobAttack(Slot);enchanterMultiHit(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if((TGT<Slot)&&mobsFound()===true){tlMob[Slot].to(MOB[Slot],.3,{bottom:"-=40",left:"-=150"}).to(MOB[Slot],.2,{bottom:"-=60",left:"+=20"}).to(MOB[Slot],.25,{left:leftReset,bottom:floorB});}
if((TGT>Slot)&&mobsFound()===true){tlMob[Slot].to(MOB[Slot],.3,{bottom:"-=40",left:"+=150"}).to(MOB[Slot],.2,{bottom:"-=60",left:"-=20"}).to(MOB[Slot],.25,{left:leftReset,bottom:floorB});}
return;}
if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].frozenStatus===true||mob[Slot].stasisFieldStatus===true){mobResumeAttackTimer(Slot,0,100);return;}
function mobHits4(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].fallingStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
if(mob[Slot].rootStatus>0){return;}
var monsterDamage=M.ceil((M.random()*(mobStrength(Slot))/ 3)+(mobStrength(Slot)));if(monsterDamage<mob[Slot].level*.75){monsterDamage=M.ceil(mob[Slot].level*.75);}
var skill="backstabs";physicalDamage(monsterDamage,Slot,skill);playAudio("flshhit2");mob[Slot].mp-=4;checkSpellKnockback(Slot);}
if(mob[Slot].rootStatus>0){resumeMonsterAttack(Slot);return;}
T.delayedCall(.3,mobHits4);resumeMonsterAttack(Slot);resetMobAttack(Slot);if(mob[Slot].rootStatus<=0&&mobsFound()===true){var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(Slot<=1){var randomLeft1=M.round(leftReset-100);var randomLeft2=M.round(leftReset+M.random()*(30)+15);}else{var randomLeft1=M.round(leftReset+100);var randomLeft2=M.round(leftReset+M.random()*(30)-15);}
tlMob[Slot].to(MOB[Slot],.15,{scale:1.1,left:randomLeft1,bottom:91,ease:ez.cinout}).to(MOB[Slot],.15,{scale:1.2,left:randomLeft2,bottom:71,ease:ez.cinout}).to(MOB[Slot],.5,{scale:1,left:leftReset,bottom:floorB,ease:ez.Qin});}}
function monsterShadowKick(Slot,targetPet,targetCharm){if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
tlMob[Slot]=TM();tlMobSh[Slot]=TM();playAudio(mob[Slot].audio1);if(targetPet===true){function mobHits1(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*((mobStrength(Slot)/ 2))+(mobStrength(Slot))/ 1)*(1-(((petDef)/ 4)/ 100)));var ranNum=M.random()*100;if(ranNum<15){monsterDamage=(M.ceil(monsterDamage*1.5));}
if(monsterDamage<mob[Slot].level*.65){monsterDamage=M.ceil(mob[Slot].level*.65);}
monsterDamage=damagePet(monsterDamage);petHp-=monsterDamage;Chat((mob[Slot].name+" shadow kicks "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");g.drawMyHp();if(petImage==="a fire elemental pet"){petFlameShield(Slot);}
checkMyDeathBySkill(Slot);}
T.delayedCall(.6,mobHits1);mob[Slot].mp-=4;resumeMonsterAttack(Slot);resetMobAttack(Slot);var petCenter=M.round(MOB[5].offsetLeft+(petWidth / 2));var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(mob[Slot].rootStatus<=0){var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(152+(Slot*244)-(mob[Slot].imageWidth / 2)<petCenter){var left3=M.random()*(35)+15;var randomLeft1=M.round(leftReset+left3);var randomLeft2=M.round(leftReset+(left3*2));}else{var left3=M.random()*(15)-35;var randomLeft1=M.round(leftReset+left3);var randomLeft2=M.round(leftReset+(left3*2));}
var Yconvert=(mob[Slot].imageWidth / mob[Slot].imageBaseX);var mobHeight=(mob[Slot].imageBaseY*Yconvert);tlMob[Slot].to(MOB[Slot],.3,{left:randomLeft1,bottom:71}).to(MOB[Slot],.3,{left:randomLeft2,bottom:62}).to(MOB[Slot],.5,{left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.3,{width:"95%",height:42,bottom:-54}).to(MOBSHADOW[Slot],.3,{width:"90%",height:46,bottom:-15,ease:ez.Qin}).to(MOBSHADOW[Slot],.5,{width:"100%",height:50,bottom:0});}
return;}
if(targetCharm===true){function mobHits2(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*((mobStrength(Slot)/ 2))+(mobStrength(Slot))/ 1)*(1-(((petDef)/ 4)/ 100)));var ranNum=M.random()*100;if(ranNum<15){monsterDamage=(M.ceil(monsterDamage*1.5));}
if(monsterDamage<mob[Slot].level*.65){monsterDamage=M.ceil(mob[Slot].level*.65);}
mob[charmSlot].hp-=monsterDamage;g.slotDamage(monsterDamage,charmSlot);Chat((mob[Slot].name+" shadow kicks "+petName+" for "+monsterDamage+" damage."));playAudio("flshhit2");g.drawMyHp();if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
T.delayedCall(.5,mobHits2);mob[Slot].mp-=4;resumeMonsterAttack(Slot);resetMobAttack(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(charmSlot>Slot){tlMob[Slot].to(MOB[Slot],.25,{scale:1.15,left:"+=80",bottom:205}).to(MOB[Slot],.25,{scale:1.3,left:"+=60",bottom:167}).to(MOB[Slot],.4,{scale:1,left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.25,{width:"98%",height:45,bottom:-25}).to(MOBSHADOW[Slot],.25,{width:"95%",height:48,bottom:-10,ease:ez.Qin}).to(MOBSHADOW[Slot],.4,{width:"100%",height:50,bottom:0});}else{tlMob[Slot].to(MOB[Slot],.25,{scale:1.15,left:"-=80",bottom:205}).to(MOB[Slot],.25,{scale:1.3,left:"-=60",bottom:167}).to(MOB[Slot],.4,{scale:1,left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.25,{width:"98%",height:45,bottom:-25}).to(MOBSHADOW[Slot],.25,{width:"95%",height:48,bottom:-10,ease:ez.Qin}).to(MOBSHADOW[Slot],.4,{width:"100%",height:50,bottom:0});}
return;}
if(targetCharm===false){function mobHits3(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*((mobStrength(Slot)/ 2))+(mobStrength(Slot))/ 1));if(M.random()*100<15){monsterDamage=(M.ceil(monsterDamage*1.5));}
g.petPhysical(monsterDamage,TGT,"shadow kicks");playAudio("flshhit2");}
T.delayedCall(.5,mobHits3);mob[Slot].mp-=4;resumeMonsterAttack(Slot);resetMobAttack(Slot);enchanterMultiHit(Slot);var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if((TGT>Slot)&&mobsFound()===true){tlMob[Slot].to(MOB[Slot],.25,{left:"+=80",bottom:205}).to(MOB[Slot],.25,{left:"+=60",bottom:167}).to(MOB[Slot],.4,{left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.25,{width:"98%",height:45,bottom:-25}).to(MOBSHADOW[Slot],.25,{width:"95%",height:48,bottom:-10,ease:ez.Qin}).to(MOBSHADOW[Slot],.4,{width:"100%",height:50,bottom:0});}else{tlMob[Slot].to(MOB[Slot],.25,{left:"-=80",bottom:205}).to(MOB[Slot],.25,{left:"-=60",bottom:167}).to(MOB[Slot],.4,{left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.25,{width:"98%",height:45,bottom:-25}).to(MOBSHADOW[Slot],.25,{width:"95%",height:48,bottom:-10,ease:ez.Qin}).to(MOBSHADOW[Slot],.4,{width:"100%",height:50,bottom:0});}
return;}
if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].frozenStatus===true||mob[Slot].stasisFieldStatus===true){mobResumeAttackTimer(Slot,0,100);return;}
function mobHits4(){if(mob[Slot].stunStatus===true||mob[Slot].fearStatus===true||mob[Slot].sleepStatus===true||mob[Slot].fallingStatus===true){return;}
if(mob[Slot].hp<=0||my.hp<=0||mob[Slot].attackStatus!==0){return;}
if(mob[Slot].rootStatus>0){return;}
var monsterDamage=M.ceil((M.random()*((mobStrength(Slot)/ 2))+(mobStrength(Slot))/ 1));var ranNum=M.random()*100;if(ranNum<15){monsterDamage=(M.ceil(monsterDamage*1.5));}
var skill="shadow kicks";if(monsterDamage<mob[Slot].level*.65){monsterDamage=M.ceil(mob[Slot].level*.65);}
physicalDamage(monsterDamage,Slot,skill);playAudio("flshhit2");mob[Slot].mp-=4;}
if(mob[Slot].rootStatus>0){resumeMonsterAttack(Slot);return;}
T.delayedCall(.4,mobHits4);resumeMonsterAttack(Slot);resetMobAttack(Slot);if(mob[Slot].rootStatus<=0){var leftReset=152+(Slot*244)-(mob[Slot].imageWidth / 2);if(Slot<=1){var left3=M.random()*(35)+15;var randomLeft1=M.round(leftReset+left3);var randomLeft2=M.round(leftReset+(left3*2));}else{var left3=M.random()*(15)-35;var randomLeft1=M.round(leftReset+left3);var randomLeft2=M.round(leftReset+(left3*2));}
tlMob[Slot].to(MOB[Slot],.2,{scale:1.15,left:randomLeft1,bottom:71,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.2,{scale:1.3,left:randomLeft2,bottom:62,ease:ez.Qin,onStart:function(){flipMob(Slot);}}).to(MOB[Slot],.5,{scale:1,left:leftReset,bottom:floorB});tlMobSh[Slot].to(MOBSHADOW[Slot],.2,{width:"95%",height:42,bottom:-54}).to(MOBSHADOW[Slot],.2,{width:"90%",height:46,bottom:-15,ease:ez.Qin}).to(MOBSHADOW[Slot],.5,{width:"100%",height:50,bottom:0});}}
function playAudioCast(Slot){if(mob[Slot].rare!==3){playAudio(mob[Slot].audio5);}else{playAudio(mob[Slot].audio5);screenShake(6,20,10,33);}}
function MpoisonCloudDone(Slot,targetPet,targetCharm){if(my.hp<=0||mob[Slot].attackStatus!==0){return;}
playAudioCast(Slot);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((petPoison)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Poison Cloud on "+petName+" for "+monsterDamage+" damage."),3);playAudio("spellDoneBoom");checkMyDeathBySkill(Slot);mob[Slot].mp-=3;mob[Slot].castingStatus=false;var charmAttack,charmTarget;castProjectile('green',mob[Slot].imageHeight / 2,Slot,charmAttack,charmTarget,true);return;}
if(targetCharm===true){function poisonCloudProjectileCharm1(Slot){if(mob[charmSlot].hp<=0||mob[Slot].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmSlot].poison)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Poison Cloud on "+mob[charmSlot].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmSlot);playAudio("spellDoneBoom");if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('green',mob[Slot].imageHeight / 2,Slot,true);T.delayedCall(.4,function(){poisonCloudProjectileCharm1(Slot);});return;}
if(targetCharm===false){function poisonCloudProjectileCharm2(Slot,charmTGT){if(mob[charmTGT].hp<=0||mob[charmTGT].attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmTGT].poison)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmTGT].hp-=monsterDamage;g.drawMonsterHp(charmTGT);Chat((mob[Slot].name+" casts Poison Cloud on "+mob[charmTGT].name+" for "+monsterDamage+" damage."),3);playAudio("spellDoneBoom");g.slotDamage(monsterDamage,charmTGT);if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
g.checkForDeadMonsters();}
var charmTGT=TGT;mob[Slot].castingStatus=false;if(charmSlot===charmTGT){return;}
mob[Slot].mp-=3;castProjectile('green',mob[Slot].imageHeight / 2,Slot,true,charmTGT);T.delayedCall(.4,function(){poisonCloudProjectileCharm2(Slot,charmTGT);});return;}
function poisonCloudProjectile(Slot){if(my.hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil(minMax(mob[Slot].intel*2,.8)*(1-((poisonTotal())/ 4)/ 100));if(monsterDamage<=0){monsterDamage=1;}
var spell="Poison Cloud";var mType="Poison";magicalDamage(monsterDamage,Slot,spell,mType);playAudio("spellDoneBoom");}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('green',mob[Slot].imageHeight / 2,Slot);flashScreen("#32cd32",.3,.5,true);T.delayedCall(.5,function(){poisonCloudProjectile(Slot);});if(mob[Slot].name==="Falzitherin"){function doit(count){castProjectile("green",200,Slot);if(count<8){T.delayedCall(.033,function(){doit(++count);});}}
doit(0);}}
function mobCastSpeed(Slot){var s1=mob[Slot].castSpeed;var penalty=1;if(mob[Slot].snareStatus){penalty+=1;}
s1=s1*penalty;return s1;}
function MpoisonCloud(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<3){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke1",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("green",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){MpoisonCloudDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterSmiteDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((petMagic)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Smite on "+petName+" for "+monsterDamage+" damage."),3);playAudio("spellDoneFlames");checkMyDeathBySkill(Slot);mob[Slot].mp-=3;mob[Slot].castingStatus=false;var charmAttack,charmTarget;castProjectile('magenta',mob[Slot].imageHeight / 2,Slot,charmAttack,charmTarget,true);return;}
if(targetCharm===true){function smiteProjectileCharm1(Slot){if(mob[charmSlot].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmSlot].magic)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Smite on "+mob[charmSlot].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmSlot);playAudio("spellDoneFlames");if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('magenta',mob[Slot].imageHeight / 2,Slot,true);T.delayedCall(.4,function(){smiteProjectileCharm1(Slot);});return;}
if(targetCharm===false){function smiteProjectileCharm2(Slot,charmTGT){if(mob[charmTGT].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmTGT].magic)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmTGT].hp-=monsterDamage;g.drawMonsterHp(charmTGT);Chat((mob[Slot].name+" casts Smite on "+mob[charmTGT].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmTGT);playAudio("spellDoneFlames");if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
g.checkForDeadMonsters();}
var charmTGT=TGT;mob[Slot].castingStatus=false;if(charmSlot===charmTGT){return;}
mob[Slot].mp-=3;castProjectile('magenta',mob[Slot].imageHeight / 2,Slot,true,charmTGT);T.delayedCall(.4,function(){smiteProjectileCharm2(Slot,charmTGT);});return;}
function smiteProjectile(Slot){if(my.hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil(minMax(mob[Slot].intel*2,.8)*(1-((magicTotal())/ 4)/ 100));if(monsterDamage<=0){monsterDamage=1;}
var spell="Smite";var mType="Magic";magicalDamage(monsterDamage,Slot,spell,mType);playAudio("spellDoneFlames");}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('magenta',mob[Slot].imageHeight / 2,Slot);flashScreen("#ff00ff",.3,.5,true);T.delayedCall(.5,function(){smiteProjectile(Slot);});}
function monsterSmite(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<3){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke2",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("magenta",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterSmiteDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterEnergyBoltDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((petLightning)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Energy Bolt on "+petName+" for "+monsterDamage+" damage."),3);playAudio("spellDoneFlames");checkMyDeathBySkill(Slot);mob[Slot].mp-=3;mob[Slot].castingStatus=false;var charmAttack,charmTarget;castProjectile('yellow',mob[Slot].imageHeight / 2,Slot,charmAttack,charmTarget,true);return;}
if(targetCharm===true){function energyBoltProjectileCharm1(Slot){if(mob[charmSlot].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmSlot].lightning)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Energy Bolt on "+mob[charmSlot].name+" for "+monsterDamage+" damage."),3);playAudio("spellDoneFlames");g.slotDamage(monsterDamage,charmSlot);if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('yellow',mob[Slot].imageHeight / 2,Slot,true);T.delayedCall(.4,function(){energyBoltProjectileCharm1(Slot);});return;}
if(targetCharm===false){function energyBoltProjectileCharm2(Slot,charmTGT){if(mob[charmTGT].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmTGT].lightning)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmTGT].hp-=monsterDamage;g.drawMonsterHp(charmTGT);Chat((mob[Slot].name+" casts Energy Bolt on "+mob[charmTGT].name+" for "+monsterDamage+" damage."),3);playAudio("spellDoneFlames");g.slotDamage(monsterDamage,charmTGT);if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
g.checkForDeadMonsters();}
var charmTGT=TGT;mob[Slot].castingStatus=false;if(charmSlot===charmTGT){return;}
mob[Slot].mp-=3;castProjectile('yellow',mob[Slot].imageHeight / 2,Slot,true,charmTGT);T.delayedCall(.4,function(){energyBoltProjectileCharm2(Slot,charmTGT);});return;}
function energyBoltProjectile(Slot){if(my.hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil(minMax(mob[Slot].intel*2,.8)*(1-((lightningTotal())/ 4)/ 100));if(monsterDamage<=0){monsterDamage=1;}
var spell="Energy Bolt";var mType="Lightning";magicalDamage(monsterDamage,Slot,spell,mType);playAudio("spellDoneFlames");}
if(mob[Slot].rare===3){mob[Slot].mp-=2;}else{mob[Slot].mp-=3;}
mob[Slot].castingStatus=false;castProjectile('yellow',mob[Slot].imageHeight / 2,Slot);flashScreen("#ffd700",.3,.5,true);T.delayedCall(.5,function(){energyBoltProjectile(Slot);});}
function monsterEnergyBolt(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<3){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke2",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("yellow",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterEnergyBoltDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterIceShardDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((petCold)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Ice Shard on "+petName+" for "+monsterDamage+" damage."),3);playAudio("spellDoneBoom");checkMyDeathBySkill(Slot);mob[Slot].mp-=3;mob[Slot].castingStatus=false;var charmAttack,charmTarget;castProjectile('blue',mob[Slot].imageHeight / 2,Slot,charmAttack,charmTarget,true);return;}
if(targetCharm===true){function iceShardProjectileCharm1(Slot){if(mob[charmSlot].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmSlot].cold)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Ice Shard on "+mob[charmSlot].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmSlot);playAudio("spellDoneBoom");if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile('blue',mob[Slot].imageHeight / 2,Slot,true);T.delayedCall(function(){iceShardProjectileCharm1(Slot);});return;}
if(targetCharm===false){function iceShardProjectileCharm2(Slot,charmTGT){if(mob[charmTGT].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmTGT].cold)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmTGT].hp-=monsterDamage;g.drawMonsterHp(charmTGT);Chat((mob[Slot].name+" casts Ice Shard on "+mob[charmTGT].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmTGT);playAudio("spellDoneBoom");if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
g.checkForDeadMonsters();}
var charmTGT=TGT;mob[Slot].castingStatus=false;if(charmSlot===charmTGT){return;}
mob[Slot].mp-=3;castProjectile("blue",mob[Slot].imageHeight / 2,Slot,true,charmTGT);T.delayedCall(.4,function(){iceShardProjectileCharm2(Slot,charmTGT);});return;}
function iceShardProjectile(Slot){if(my.hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil(minMax(mob[Slot].intel*2,.8)*(1-((coldTotal())/ 4)/ 100));if(monsterDamage<=0){monsterDamage=1;}
var spell="Ice Shard";if(mob[Slot].name==="Matron Maelentia"){spell="Dragon's Ice Breath";}
var mType="Cold";magicalDamage(monsterDamage,Slot,spell,mType);playAudio("spellDoneBoom");}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile("blue",mob[Slot].imageHeight / 2,Slot);flashScreen("#00ced1",.3,.5,true);T.delayedCall(.5,function(){iceShardProjectile(Slot);});if(mob[Slot].name==="Matron Maelentia"){function doit(count){castProjectile("blue",200,Slot);if(count<8){T.delayedCall(.033,function(){doit(++count);});}}
doit(0);}}
function monsterIceShard(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<3){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke1",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("teal",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterIceShardDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function MfireballDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);if(targetPet===true){var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((petFire)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
petHp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Fireball on "+petName+" for "+monsterDamage+" damage."),3);playAudio("spellDoneBoom");checkMyDeathBySkill(Slot);mob[Slot].mp-=3;mob[Slot].castingStatus=false;var charmAttack,charmTarget;castProjectile("red",mob[Slot].imageHeight / 2,Slot,charmAttack,charmTarget,true);return;}
if(targetCharm===true){function fireballProjectileCharm1(Slot){if(mob[charmSlot].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmSlot].fire)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmSlot].hp-=monsterDamage;g.drawMyHp();Chat((mob[Slot].name+" casts Fireball on "+mob[charmSlot].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmSlot);playAudio("spellDoneBoom");if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
g.checkForDeadMonsters();}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile("red",mob[Slot].imageHeight / 2,Slot,true);T.delayedCall(.4,function(){fireballProjectileCharm1(Slot);});return;}
if(targetCharm===false){function fireballProjectileCharm2(Slot,charmTGT){if(mob[charmTGT].hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil((M.random()*(mob[Slot].intel)+(mob[Slot].intel)/ 2+mob[Slot].level)*(1-(((mob[charmTGT].fire)/ 4)/ 100)));if(monsterDamage<=0){monsterDamage=1;}
mob[charmTGT].hp-=monsterDamage;g.drawMonsterHp(charmTGT);Chat((mob[Slot].name+" casts Fireball on "+mob[charmTGT].name+" for "+monsterDamage+" damage."),3);g.slotDamage(monsterDamage,charmTGT);playAudio("spellDoneBoom");if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
g.checkForDeadMonsters();}
var charmTGT=TGT;mob[Slot].castingStatus=false;if(charmSlot===charmTGT){return;}
mob[Slot].mp-=3;castProjectile("red",mob[Slot].imageHeight / 2,Slot,true,charmTGT);T.delayedCall(.4,function(){fireballProjectileCharm2(Slot,charmTGT);});return;}
function fireballProjectile(Slot){if(my.hp<=0||attackStatus!==0){return;}
var monsterDamage=M.ceil(minMax(mob[Slot].intel*2,.8)*(1-((fireTotal())/ 4)/ 100));if(monsterDamage<=0){monsterDamage=1;}
var spell="Fireball";if(mob[Slot].name==="Highlord Szarthax"){spell="Dragon's Lava Bolt";}
var mType="Fire";magicalDamage(monsterDamage,Slot,spell,mType);playAudio("spellDoneBoom");}
mob[Slot].mp-=3;mob[Slot].castingStatus=false;castProjectile("red",mob[Slot].imageHeight / 2,Slot);flashScreen("#d00",.3,.5,true);T.delayedCall(.5,function(){fireballProjectile(Slot);});if(mob[Slot].name==="Highlord Szarthax"){function doit(count){castProjectile("red",200,Slot);if(count<8){T.delayedCall(.033,function(){doit(++count);});}}
doit(0);}}
function Mfireball(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<3){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke1",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("orange",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){MfireballDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function checkMyDeathByDot(Slot){if(my.job==="Bard"||my.job==="Enchanter"){if(petName!==""){if(mob[charmSlot].hp<=0){slainPet();}}}
if(petHp<=0&&g.petAlive===true){slainPet();}
if(my.hp<=0){var altMessage=1;if(mob[Slot].name===""){var altMessage=0;}
if(altMessage===1){Chat(("You have been slain by "+mob[Slot].name+"!"),1);}
if(altMessage===0){Chat(("You have been slain!"),1);}
monsterKilledMe();}}
function monsterEnvenomTick(Slot,targetPet,targetCharm,charmTGT){if(my.hp<=0){mob[Slot].envenomTicks=0;return;}
if(targetPet===true&&petHp<=0){mob[Slot].envenomTicks=0;return;}
if(targetCharm===true&&mob[charmSlot].hp<=0){mob[charmSlot].envenomTicks=0;return;}
if(targetCharm===false&&mob[charmTGT].hp<=0){mob[charmTGT].envenomTicks=0;return;}
if(targetPet===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((petPoison)/ 4)/ 100));if(mob[Slot].envenomTicks===0){mob[Slot].envenomTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].envenomTicks-=1;if(petHp<=0){return;}
petHp-=dotDamage;if(petName!==""){Chat(("Envenom poisons "+petName+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmSlot].poison)/ 4)/ 100));if(mob[Slot].envenomTicks===0){mob[Slot].envenomTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].envenomTicks-=1;if(mob[charmSlot].hp<=0){return;}
mob[charmSlot].hp-=dotDamage;if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
if(petName!==""){Chat(("Envenom poisons "+mob[charmSlot].name+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===false){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmTGT].poison)/ 4)/ 100));if(mob[Slot].envenomTicks===0){mob[Slot].envenomTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].envenomTicks-=1;if(mob[charmTGT].hp<=0||attackStatus!==0){return;}
mob[charmTGT].hp-=dotDamage;if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
Chat(("Envenom poisons "+mob[charmTGT].name+" for "+dotDamage+" damage."),3);g.drawMyHp();g.checkForDeadMonsters();return;}
var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((poisonTotal())/ 4)/ 100));if(mob[Slot].envenomTicks===0){mob[Slot].dotActive.kill();return;}
var tickMessage=1;var mType="Poison";magicalDotTick(dotDamage,Slot,8,tickMessage,mType);mob[Slot].envenomTicks-=1;}
function monsterEnvenomDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneBoom");var monsterDamage=M.ceil((M.random()*(mob[Slot].intel / 9)+(mob[Slot].intel / 9)/ 2+mob[Slot].level / 2));if(targetPet===true){mob[Slot].castingStatus=false;Chat((petName+" is wrought by venom."),3);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].envenomTicks=8;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEnvenomTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("green",25,40,Slot,charmSlot,targetPet);}
return;}
if(targetCharm===true){mob[Slot].castingStatus=false;Chat((mob[charmSlot].name+" is wrought by venom."),3);var skillName="Envenom";var buffId="mobsEnvenomIcon"+charmSlot;var duration=24000;mobsEnvenomTimer[charmSlot].kill();mobsEnvenomTimer[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-256,charmSlot);var skillName="Envenom";var buffId="mobEnvenomIcon";var duration=2400;if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].envenomTicks=8;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEnvenomTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("green",25,40,Slot,targetCharm);}
return;}
if(targetCharm===false){mob[Slot].castingStatus=false;if(TGT===charmSlot){return;}
Chat((mob[TGT].name+" is wrought by venom."),3);var skillName="Envenom";var buffId="mobsEnvenomIcon"+TGT;var duration=24000;mobsEnvenomTimer[TGT].kill();mobsEnvenomTimer[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-256,TGT);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].envenomTicks=8;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();var charmTGT=TGT;mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEnvenomTick(Slot,targetPet,targetCharm,charmTGT);}});mob[Slot].petDot=true;mobDotFinish("green",25,40,Slot,charmTGT);}
return;}
if(monsterDamage<=0){monsterDamage=1;}
Chat(("You are wrought by venom."),3);flashScreen("#6b8e23",.4,1);mob[Slot].castingStatus=false;if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].envenomTicks=8;mob[Slot].dotDamage=monsterDamage;if(mob[Slot].name==="Falzitherin"){mob[Slot].envenomTicks*=3;mob[Slot].dotDamage*=2;}
if(mob[Slot].name==="a slavering corpse"||mob[Slot].name==="an embalmed vagrant"||mob[Slot].name==="an infected rodent"){mob[Slot].envenomTicks*=4;}
mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEnvenomTick(Slot,targetPet,targetCharm);}});var duration=mob[Slot].envenomTicks*3000;mobEnvenomTimer[Slot].kill();mobEnvenomTimer[Slot]=T.delayedCall(duration / 1000,function(){removeIcon("mobEnvenomIcon"+Slot);});mobBuffIcon("Envenom","mobEnvenomIcon"+Slot,duration,-256);}
var spell="Envenom";mobDotLands(monsterDamage,Slot,spell);if(mob[Slot].name==="Falzitherin"){function doit(count){castProjectile("green",320,Slot,undefined,undefined,undefined,1);if(count<20){T.delayedCall(.01,function(){doit(++count);});}}
doit(0);}else{mobDotFinish("green",25,40,Slot);}}
function monsterEnvenom(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastDot",0,0,.5);mob[Slot].castingStatus=true;mobCastDot("green",25,Slot);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterEnvenomDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}
function monsterEngulfingDarknessTick(Slot,targetPet,targetCharm,charmTGT){if(my.hp<=0){mob[Slot].engulfingDarknessTicks=0;return;}
if(targetPet===true&&petHp<=0){mob[Slot].engulfingDarknessTicks=0;return;}
if(targetCharm===true&&mob[charmSlot].hp<=0){mob[charmSlot].engulfingDarknessTicks=0;return;}
if(targetCharm===false&&mob[charmTGT].hp<=0){mob[charmTGT].engulfingDarknessTicks=0;return;}
if(targetPet===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((petMagic)/ 4)/ 100));if(mob[Slot].engulfingDarknessTicks===0){mob[Slot].engulfingDarknessTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].engulfingDarknessTicks-=1;if(petHp<=0){return;}
petHp-=dotDamage;if(petName!==""){Chat(("Engulfing Darkness strangles "+petName+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmSlot].magic)/ 4)/ 100));if(mob[Slot].engulfingDarknessTicks===0){mob[Slot].engulfingDarknessTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].engulfingDarknessTicks-=1;if(mob[charmSlot].hp<=0){return;}
mob[charmSlot].hp-=dotDamage;if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
if(petName!==""){Chat(("Engulfing Darkness strangles "+mob[charmSlot].name+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===false){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmTGT].magic)/ 4)/ 100));if(mob[Slot].engulfingDarknessTicks===0){mob[Slot].engulfingDarknessTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].engulfingDarknessTicks-=1;if(mob[charmTGT].hp<=0){return;}
mob[charmTGT].hp-=dotDamage;if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
Chat(("Engulfing Darkness strangles "+mob[charmTGT].name+" for "+dotDamage+" damage."),3);g.drawMyHp();g.checkForDeadMonsters();return;}
var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((magicTotal())/ 4)/ 100));if(mob[Slot].engulfingDarknessTicks===0){mob[Slot].dotActive.kill();return;}
magicalDotTick(dotDamage,Slot,6,2,"Magic");mob[Slot].engulfingDarknessTicks-=1;}
function monsterEngulfingDarknessDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var monsterDamage=M.ceil((M.random()*(mob[Slot].intel / 12)+(mob[Slot].intel / 12)/ 2+mob[Slot].level / 1.5));if(targetPet===true){Chat((petName+" is engulfed in darkness."),3);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].engulfingDarknessTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEngulfingDarknessTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("purple",25,40,Slot,charmSlot,targetPet);}
return;}
if(targetCharm===true){Chat((mob[charmSlot].name+" is engulfed in darkness."),3);var skillName="Engulfing Darkness";var buffId="mobsEngulfingDarknessIcon"+charmSlot;var duration=18000;mobsEngulfingDarknessTimer[charmSlot].kill();mobsEngulfingDarknessTimer[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-288,charmSlot);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].engulfingDarknessTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEngulfingDarknessTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("purple",25,40,Slot,targetCharm);}
return;}
if(targetCharm===false){mob[Slot].castingStatus=false;if(TGT===charmSlot){return;}
Chat((mob[TGT].name+" is engulfed in darkness."),3);var skillName="Engulfing Darkness";var buffId="mobsEngulfingDarknessIcon"+TGT;var duration=18000;mobsEngulfingDarknessTimer[TGT].kill();mobsEngulfingDarknessTimer[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-288,TGT);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].engulfingDarknessTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();var charmTGT=TGT;mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEngulfingDarknessTick(Slot,targetPet,targetCharm,charmTGT);}});mob[Slot].petDot=true;mobDotFinish("purple",25,40,Slot,charmTGT);}
return;}
if(monsterDamage<=0){monsterDamage=1;}
Chat(("You are engulfed in darkness."),3);flashScreen("#c71585",.4,1);mobDotFinish("purple",25,40,Slot);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].engulfingDarknessTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterEngulfingDarknessTick(Slot,targetPet,targetCharm);}});if(mob[Slot].name==="Sanctum Guardian Ghalentus"){mob[Slot].engulfingDarknessTicks*=3;mob[Slot].dotDamage*=2;}
if(mob[Slot].name==="Revenant Viston"){mob[Slot].engulfingDarknessTicks*=2;}
var duration=mob[Slot].engulfingDarknessTicks*3000;mobEngulfingDarknessTimer[Slot].kill();mobEngulfingDarknessTimer[Slot]=T.delayedCall(duration / 1000,function(){removeIcon("mobEngulfingDarknessIcon"+Slot);});mobBuffIcon("Engulfing Darkness","mobEngulfingDarknessIcon"+Slot,duration,-288);}
mobDotLands(monsterDamage,Slot,"Engulfing Darkness");}
function monsterEngulfingDarkness(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastDot",0,0,.5);mob[Slot].castingStatus=true;mobCastDot("magenta",25,Slot);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterEngulfingDarknessDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}
function monsterStaticFieldResume2(){petParalyzeStatus=false;}
function monsterStaticFieldTick(Slot,targetPet,targetCharm,charmTGT){if(my.hp<=0){mob[Slot].staticFieldTicks=0;return;}
if(targetPet===true&&petHp<=0){mob[Slot].staticFieldTicks=0;return;}
if(targetCharm===true&&mob[charmSlot].hp<=0){mob[charmSlot].staticFieldTicks=0;return;}
if(targetCharm===false&&mob[charmTGT].hp<=0){mob[charmTGT].staticFieldTicks=0;return;}
if(targetPet===true){if(mob[Slot].staticFieldTicks===0){mob[Slot].staticFieldTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
var monsterDamage=M.ceil(petHp*.03);var dotDamage=M.ceil(monsterDamage*(1-((petLightning)/ 4)/ 100));mob[Slot].staticFieldTicks-=1;if(petHp<=0){return;}
petHp-=dotDamage;if(petName!==""){Chat(("Static Field electrocutes "+petName+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===true){if(mob[Slot].staticFieldTicks===0){mob[Slot].staticFieldTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
monsterDamage=M.ceil(mob[charmSlot].hp*.03);var dotDamage=M.ceil(monsterDamage*(1-((mob[charmSlot].lightning)/ 4)/ 100));if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
mob[Slot].staticFieldTicks-=1;if(mob[charmSlot].hp<=0){return;}
mob[charmSlot].hp-=dotDamage;if(petName!==""){Chat(("Static Field electrocutes "+mob[charmSlot].name+" for "+dotDamage+" damage."),3);}
if(M.random()>.85){var silenceDuration=5000;if(mob[charmSlot].dauntless){silenceDuration*=dauntlessReduction();}
silenceTarget(charmSlot,silenceDuration,-768);}
g.drawMyHp();g.checkForDeadMonsters();return;}
if(targetCharm===false){monsterDamage=M.ceil(mob[charmSlot].hp*.03);var dotDamage=M.ceil(monsterDamage*(1-((mob[charmSlot].lightning)/ 4)/ 100));;if(mob[Slot].staticFieldTicks===0){mob[Slot].staticFieldTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].staticFieldTicks-=1;if(mob[charmTGT].hp<=0){return;}
mob[charmTGT].hp-=dotDamage;if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+charmTGT).remove();}
Chat(("Static Field electrocutes "+mob[charmTGT].name+" for "+dotDamage+" damage."),3);if(M.random()>.85){var silenceDuration=5000;if(mob[charmTGT].dauntless){silenceDuration*=dauntlessReduction();}
silenceTarget(charmTGT,silenceDuration,-768);}
g.drawMyHp();g.checkForDeadMonsters();return;}
var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((lightningTotal())/ 4)/ 100));if(mob[Slot].staticFieldTicks===0){mob[Slot].dotActive.kill();return;}
if(dotDamage<=0){dotDamage=1;}
var tickMessage=3;magicalDotTick(dotDamage,Slot,6,tickMessage,"Lightning");mob[Slot].staticFieldTicks-=1;}
function monsterStaticFieldDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellCastEvoke2");var monsterDamage=M.ceil(my.hp*.04);if(targetPet===true){Chat(("A Static Field surrounds "+petName+"."),3);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].staticFieldTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterStaticFieldTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("yellow",25,40,Slot,charmSlot,targetPet);}
return;}
if(targetCharm===true){Chat(("A Static Field surrounds "+mob[charmSlot].name+"."),3);var skillName="Static Field";var buffId="mobsStaticFieldIcon"+charmSlot;var duration=18000;mobsStaticFieldTimer[charmSlot].kill();mobsStaticFieldTimer[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-320,charmSlot);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].staticFieldTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterStaticFieldTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("yellow",25,40,Slot,targetCharm);}
return;}
if(targetCharm===false){mob[Slot].castingStatus=false;if(TGT===charmSlot){return;}
Chat(("A Static Field surrounds "+mob[TGT].name+"."),3);var skillName="Static Field";var buffId="mobsStaticFieldIcon"+TGT;var duration=18000;mobsStaticFieldTimer[TGT].kill();mobsStaticFieldTimer[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-320,TGT);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].staticFieldTicks=6;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();var charmTGT=TGT;mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterStaticFieldTick(Slot,targetPet,targetCharm,charmTGT);}});mob[Slot].petDot=true;mobDotFinish("yellow",25,40,Slot,charmTGT);}
return;}
Chat(("A Static Field surrounds you."),3);flashScreen("#daa520",.4,1);mobDotFinish("yellow",25,40,Slot);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].staticFieldTicks=6;mob[Slot].dotDamage=monsterDamage;if(mob[Slot].name==="Revenant Viston"){mob[Slot].staticFieldTicks*=3;mob[Slot].dotDamage=~~(mob[Slot].dotDamage*2);}
if(mob[Slot].name==="Sanctum Guardian Ghalentus"){mob[Slot].staticFieldTicks*=2;}
mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterStaticFieldTick(Slot,targetPet,targetCharm);}});var duration=mob[Slot].staticFieldTicks*3000;mobStaticFieldTimer[Slot].kill();mobStaticFieldTimer[Slot]=T.delayedCall(duration / 1000,function(){removeIcon("mobStaticFieldIcon"+Slot);});mobBuffIcon("Static Field","mobStaticFieldIcon"+Slot,duration,-320);}
mobDotLands(monsterDamage,Slot,"Static Field");}
function monsterStaticField(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastEvoke2",0,0,.5);mob[Slot].castingStatus=true;mobCastDot("yellow",25,Slot);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterStaticFieldDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}
function monsterBlizzardTick(Slot,targetPet,targetCharm,charmTGT){if(my.hp<=0){mob[Slot].blizzardTicks=0;return;}
if(targetPet===true&&petHp<=0){mob[Slot].blizzardTicks=0;return;}
if(targetCharm===true&&mob[charmSlot].hp<=0){mob[charmSlot].blizzardTicks=0;return;}
if(targetCharm===false&&mob[charmTGT].hp<=0){mob[charmTGT].blizzardTicks=0;return;}
if(targetPet===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((petCold)/ 4)/ 100));if(mob[Slot].blizzardTicks===0){mob[Slot].blizzardTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].blizzardTicks-=1;if(petHp<=0){return;}
petHp-=dotDamage;if(petName!==""){Chat(("Blizzard storms down on "+petName+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmSlot].cold)/ 4)/ 100));if(mob[Slot].blizzardTicks===0){mob[Slot].blizzardTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].blizzardTicks-=1;if(mob[charmSlot].hp<=0){return;}
mob[charmSlot].hp-=dotDamage;if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
if(petName!==""){Chat(("Blizzard storms down on "+mob[charmSlot].name+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===false){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmTGT].cold)/ 4)/ 100));if(mob[Slot].blizzardTicks===0){mob[Slot].blizzardTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].blizzardTicks-=1;if(mob[charmTGT].hp<=0){return;}
mob[charmTGT].hp-=dotDamage;if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
Chat(("Blizzard storms down on "+mob[charmTGT].name+" for "+dotDamage+" damage."),3);g.drawMyHp();g.checkForDeadMonsters();return;}
var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((coldTotal())/ 4)/ 100));if(mob[Slot].blizzardTicks===0){mob[Slot].dotActive.kill();return;}
var tickMessage=4;magicalDotTick(dotDamage,Slot,4,tickMessage,"Cold");mob[Slot].blizzardTicks-=1;}
function monsterBlizzardDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var monsterDamage=M.ceil((M.random()*(mob[Slot].intel / 16)+(mob[Slot].intel / 16)/ 2+mob[Slot].level / 1.3));if(targetPet===true){Chat((mob[Slot].name+" casts Blizzard on "+petName+"."),3);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].blizzardTicks=4;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterBlizzardTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("teal",25,40,Slot,charmSlot,targetPet);}
return;}
if(targetCharm===true){Chat((mob[Slot].name+" casts Blizzard on "+mob[charmSlot].name+"."),3);var skillName="Blizzard";var buffId="mobsBlizzardIcon"+charmSlot;var duration=12000;mobsBlizzardTimer[charmSlot].kill();mobsBlizzardTimer[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-352,charmSlot);mob[charmSlot].coldTimer.kill();mob[charmSlot].snareStatus=true;mob[charmSlot].coldTimer=T.delayedCall(12,function(){snareTimeout(charmSlot)});if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].blizzardTicks=4;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterBlizzardTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("teal",25,40,Slot,targetCharm);}
return;}
if(targetCharm===false){mob[Slot].castingStatus=false;if(TGT===charmSlot){return;}
Chat((mob[charmSlot].name+" casts Blizzard on "+mob[TGT].name+"."),3);var skillName="Blizzard";var buffId="mobsBlizzardIcon"+TGT;var duration=12000;mobsBlizzardTimer[TGT].kill();mobsBlizzardTimer[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-352,TGT);mob[TGT].coldTimer.kill();mob[TGT].snareStatus=true;mob[TGT].coldTimer=T.delayedCall(12,function(){snareTimeout(TGT)});if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].blizzardTicks=4;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();var charmTGT=TGT;mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterBlizzardTick(Slot,targetPet,targetCharm,charmTGT);}});mob[Slot].petDot=true;mobDotFinish("teal",25,40,Slot,charmTGT);}
return;}
Chat((mob[Slot].name+" casts Blizzard on you."),3);flashScreen("#6495ed",.4,1);chillStatus=true;chilledTimer.kill();chilledTimer=T.delayedCall(12,mobChillExpire);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].blizzardTicks=4;mob[Slot].dotDamage=monsterDamage;if(mob[Slot].name==="Matron Maelentia"){mob[Slot].blizzardTicks*=3;mob[Slot].dotDamage*=2;}
mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterBlizzardTick(Slot,targetPet,targetCharm);}});var buffId="mobBlizzardIcon"+Slot;var duration=3000*mob[Slot].blizzardTicks;mobBlizzardTimer[Slot].kill();mobBlizzardTimer[Slot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon("Blizzard",buffId,duration,-352);}
var spell="Blizzard";mobDotLands(monsterDamage,Slot,spell);CStat();if(mob[Slot].name==="Matron Maelentia"){function doit(count){castProjectile("blue",320,Slot,undefined,undefined,undefined,1);if(count<20){T.delayedCall(.01,function(){doit(++count);});}}
doit(0);}else{mobDotFinish("teal",25,40,Slot);}}
function monsterBlizzard(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastDot",0,0,.5);mob[Slot].castingStatus=true;mobCastDot("teal",25,Slot);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterBlizzardDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}
function monsterConflagrationTick(Slot,targetPet,targetCharm,charmTGT){if(my.hp<=0){mob[Slot].conflagrationTicks=0;CStat();return;}
if(targetPet===true&&petHp<=0){mob[Slot].conflagrationTicks=0;return;}
if(targetCharm===true&&mob[charmSlot].hp<=0){mob[charmSlot].conflagrationTicks=0;return;}
if(targetCharm===false&&mob[charmTGT].hp<=0){mob[charmTGT].conflagrationTicks=0;return;}
if(targetPet===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((petFire)/ 4)/ 100));if(mob[Slot].conflagrationTicks===0){mob[Slot].conflagrationTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].conflagrationTicks-=1;if(petHp<=0){return;}
petHp-=dotDamage;if(petName!==""){Chat(("Conflagration scorches "+petName+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===true){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmSlot].fire)/ 4)/ 100));if(mob[Slot].conflagrationTicks===0){mob[Slot].conflagrationTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].conflagrationTicks-=1;if(mob[charmSlot].hp<=0){return;}
mob[charmSlot].hp-=dotDamage;if(mob[charmSlot].sleepStatus===true){mob[charmSlot].sleepStatus=false;$("#sleepIcon"+charmSlot).remove();}
if(petName!==""){Chat(("Conflagration scorches "+mob[charmSlot].name+" for "+dotDamage+" damage."),3);}
g.drawMyHp();checkMyDeathByDot();return;}
if(targetCharm===false){var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((mob[charmTGT].fire)/ 4)/ 100));if(mob[Slot].conflagrationTicks===0){mob[Slot].conflagrationTicks=0;mob[Slot].dotActive.kill();mob[Slot].petDot=false;return;}
mob[Slot].conflagrationTicks-=1;if(mob[charmTGT].hp<=0){return;}
mob[charmTGT].hp-=dotDamage;if(mob[charmTGT].sleepStatus===true){mob[charmTGT].sleepStatus=false;$("#sleepIcon"+Slot).remove();}
Chat(("Conflagration scorches "+mob[charmTGT].name+" for "+dotDamage+" damage."),3);g.drawMyHp();g.checkForDeadMonsters();return;}
var dotDamage=M.ceil(mob[Slot].dotDamage*(1-((fireTotal())/ 4)/ 100));if(mob[Slot].conflagrationTicks===0){mob[Slot].dotActive.kill();return;}
var tickMessage=5;var mType="Fire";magicalDotTick(dotDamage,Slot,7,tickMessage,mType);mob[Slot].conflagrationTicks-=1;}
function monsterConflagrationDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneFlames");var monsterDamage=M.ceil((M.random()*(mob[Slot].intel / 12)+(mob[Slot].intel / 12)/ 2+mob[Slot].level / 1.8));if(targetPet===true){Chat((mob[Slot].name+" casts Conflagration on "+petName+"."),3);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].conflagrationTicks=7;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterConflagrationTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("red",25,40,Slot,charmSlot,targetPet);}
return;}
if(targetCharm===true){Chat((mob[Slot].name+" casts Conflagration on "+mob[charmSlot].name+"."),3);var skillName="Conflagration";var buffId="mobsConflagrationIcon"+charmSlot;var duration=21000;mobsConflagrationTimer[charmSlot].kill();mobsConflagrationTimer[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-384,charmSlot);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].conflagrationTicks=7;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterConflagrationTick(Slot,targetPet,targetCharm);}});mob[Slot].petDot=true;mobDotFinish("red",25,40,Slot,targetCharm);}
return;}
if(targetCharm===false){mob[Slot].castingStatus=false;if(TGT===charmSlot){return;}
Chat((mob[charmSlot].name+" casts Conflagration on "+mob[TGT].name+"."),3);var skillName="Conflagration";var buffId="mobsConflagrationIcon"+TGT;var duration=21000;mobsConflagrationTimer[TGT].kill();mobsConflagrationTimer[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-384,TGT);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].conflagrationTicks=7;mob[Slot].dotDamage=monsterDamage;mob[Slot].dotActive.kill();var charmTGT=TGT;mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterConflagrationTick(Slot,targetPet,targetCharm,charmTGT);}});mob[Slot].petDot=true;mobDotFinish("red",25,40,Slot,charmTGT);}
return;}
if(monsterDamage<=0){monsterDamage=1;}
Chat((mob[Slot].name+" casts Conflagration on you."),3);flashScreen("#b22222",.4,1);if(mobsFound()===true){mob[Slot].mp-=4;mob[Slot].castingStatus=false;mob[Slot].conflagrationTicks=7;mob[Slot].dotDamage=monsterDamage;if(mob[Slot].name==="Highlord Szarthax"){mob[Slot].conflagrationTicks*=3;mob[Slot].dotDamage*=2;}
mob[Slot].dotActive.kill();mob[Slot].dotActive=T.to('',3,{repeat:-1,onRepeat:function(){monsterConflagrationTick(Slot,targetPet,targetCharm);}});var buffId="mobConflagrationIcon"+Slot;var duration=mob[Slot].conflagrationTicks*3000;mobConflagrationTimer[Slot].kill();mobConflagrationTimer[Slot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon("Conflagration",buffId,duration,-384);}
CStat();mobDotLands(monsterDamage,Slot,"Conflagration");if(mob[Slot].name==="Highlord Szarthax"){function doit(count){castProjectile("red",320,Slot,undefined,undefined,undefined,1);if(count<20){T.delayedCall(.01,function(){doit(++count);});}}
doit(0);}else{mobDotFinish("red",25,40,Slot);}}
function monsterConflagration(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastDot",0,0,.5);mob[Slot].castingStatus=true;mobCastDot("orange",25,Slot);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterConflagrationDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}
function monsterFearResume(){fearStatus=1;if(my.job==="Warrior"){checkIntrepidMight();}
if(my.job==="Rogue"){ancientWillStatus=false;}
g.drawMyMp();}
function monsterFearResume2(){petFearStatus=false;}
function monsterFearDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellCastEvoke2");var fearDuration=12000-(((magicTotal())*50)*(M.random()*(2)+1));if(fearDuration>=12000){fearDuration=12000;}
if(fearDuration<1000){fearDuration=1000;}
fearDuration=(fearDuration*((100-g.fearEquip)/ 100));if(mob[Slot].rare!==3){mob[Slot].mp-=8;}else{mob[Slot].mp-=2;}
mob[Slot].castingStatus=false;if(targetPet===true){if(myStatusResist(Slot)===true){Chat((petName+" resisted Fear."),1);return;}
Chat((petName+" is consumed by fear."),3);petFearStatus=true;$("#fearIcon5").remove();mob[Slot].fearAnimate.kill();$NG.mob5.stop(true,false);monsterFearCooldown2.kill();monsterFearCooldown2=T.delayedCall(fearDuration / 1000,function(){monsterFearResume2();});animateFear(5,fearDuration,true,.8,true,true);return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Fear."),1);return;}
fearTarget(charmSlot,fearDuration,0,mob[charmSlot].name+" is consumed by fear.");return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Fear."),1);return;}
fearTarget(TGT,fearDuration,0,mob[TGT].name+" is consumed by fear.");return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Fear."),3);return;}
if(myStatusResist(Slot)===true||(my.job==="Monk"&&my.talent12>=20)||(my.job==="Necromancer"&&my.talent4>=20)){Chat(("You resisted Fear."),1);return;}
if(invincibleStatus===true){Chat("Fear has no effect on you.",1);return;}
Chat(("You are consumed by fear."),3);flashScreen("#4b0082",.5,3);var skillName="Fear";var buffId="mobFearIcon";mobFearTimer.kill();mobFearTimer=T.delayedCall(fearDuration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,fearDuration,-32);ancientWillStatus=true;fearStatus=0;checkIntrepidMight();globalCooldownEnd2();beginLockout(fearDuration);tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;castingGlobal=1;if(my.job==="Warrior"){g.checkWarriorSkills();}
monsterFearCooldown.kill();monsterFearCooldown=T.delayedCall(fearDuration / 1000,function(){monsterFearResume();});if(my.job==="Shaman"){if(my.talent5>=20){g.glacialImpactFinish(Slot,true)}}}
function monsterFear(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<8){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellDoneFlames",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("purple",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterFearDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterBlindResume(){T.set(NG.spellblind,{opacity:1,background:'transparent'});g.blindStatus=1;petBlindStatus=false;}
function monsterBlindResume2(){petBlindStatus=false;}
function monsterBlindDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var blindDuration=15000-(15000*M.random()*(1-(magicTotal()/ 400)));if(blindDuration<3000){blindDuration=3000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){if(myStatusResist(Slot)===true){Chat((petName+" resisted Globe of Darkness."),1);return;}
Chat((petName+" is shrouded in a Globe of Darkness."),3);petBlindStatus=true;monsterBlindCooldown2.kill();monsterBlindCooldown2=T.delayedCall(blindDuration / 1000,monsterBlindResume2);return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Globe of Darkness."),1);return;}
Chat((mob[charmSlot].name+" is shrouded in a Globe of Darkness."),3);var skillName="Globe of Darkness";var buffId="mobGlobeOfDarknessIcon"+charmSlot;var duration=blindDuration;mobGlobeOfDarknessTimers[charmSlot].kill();mobGlobeOfDarknessTimers[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-64,charmSlot);mob[charmSlot].dazeStatus=true;var charmFlag=true;mob[charmSlot].dazeTimer.kill();mob[charmSlot].dazeTimer=T.delayedCall(blindDuration / 1000,function(){flashOfLightExpire(charmSlot,charmFlag)});return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Globe of Darkness."),1);return;}
Chat((mob[TGT].name+" is shrouded in a Globe of Darkness."),3);var skillName="Globe of Darkness";var buffId="mobGlobeOfDarknessIcon"+TGT;var duration=blindDuration;mobGlobeOfDarknessTimers[TGT].kill();mobGlobeOfDarknessTimers[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-64,TGT);mob[TGT].dazeStatus=true;var charmFlag=true;mob[TGT].dazeTimer.kill();mob[TGT].dazeTimer=T.delayedCall(blindDuration / 1000,function(){flashOfLightExpire(TGT,charmFlag)});return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Globe of Darkness."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Globe of Darkness."),1);return;}
if(invincibleStatus===true){Chat("Globe of Darkness has no effect on you.",1);return;}
$NG.spellblind.stop(true,true).css({"background":"#000",opacity:.6});Chat(("You are shrouded in a Globe of Darkness."),3);var skillName="Globe of Darkness";var buffId="mobGlobeOfDarknessIcon";var duration=blindDuration;mobGlobeOfDarknessTimer.kill();mobGlobeOfDarknessTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-64);g.blindStatus=0;monsterBlindCooldown.kill();monsterBlindCooldown=T.delayedCall(blindDuration / 1000,monsterBlindResume);}
function flashOfLightExpire(Slot,charmFlag){if(charmFlag){mob[charmSlot].dazeStatus=false;return;}
mob[Slot].dazeStatus=false;}
function monsterBlind(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("black",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterBlindDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterRootResume(){rootStatus=1;if(my.job==="Warrior"){checkIntrepidMight();g.checkWarriorSkills();}
if(my.job==="Rogue"){ancientWillStatus=false;g.checkRogueSkills();}}
function monsterRootResume2(){petRootStatus=false;}
function monsterRootDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var rootDuration=20000-(((magicTotal())*50)*(M.random()*(2)+1));if(rootDuration<5000){rootDuration=5000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){if(my.job==="Magician"){Chat((petName+" is immune to Root."),1);return;}
if(myStatusResist(Slot)===true){Chat((petName+" resisted Root."),1);return;}
Chat((petName+" has been rooted."),3);petRootStatus=true;monsterRootCooldown2.kill();monsterRootCooldown2=T.delayedCall(rootDuration / 1000,monsterRootResume2);return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Root."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Root."),1);return;}
if(invincibleStatus===true){Chat("Root has no effect on you.",1);return;}
Chat(("Your legs are entangled by roots."),3);var skillName="Root";var buffId="mobRootIcon";var duration=rootDuration;mobRootTimer.kill();mobRootTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-96);flashScreen("#008000",.3,.5);rootStatus=0;if(my.job==="Warrior"){checkIntrepidMight();}
if(my.job==="Rogue"){ancientWillStatus=true;g.checkRogueSkills();}
monsterRootCooldown.kill();monsterRootCooldown=T.delayedCall(rootDuration / 1000,monsterRootResume);}
function monsterRoot(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastAbjure",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("green",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterRootDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterMindDrainDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){Chat((petName+" is immune to Mind Drain."));return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Mind Drain."),1);return;}
Chat((mob[charmSlot].name+"'s mind has been drained."),3);mob[charmSlot].mp-=10;if(mob[charmSlot].mp<0){mob[charmSlot].mp=0;}
return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Mind Drain."),1);return;}
Chat((mob[TGT].name+"'s mind has been drained."),3);mob[TGT].mp-=10;if(mob[TGT].mp<0){mob[TGT].mp=0;}
return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Mind Drain."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Mind Drain."),1);return;}
if(invincibleStatus===true){Chat("Mind Drain has no effect on you.",1);return;}
Chat(("Your mind is drained."),3);flashScreen("#ffa500",.4,1);if(my.job!=="Warrior"&&my.job!=="Monk"&&my.job!=="Rogue"){my.mp-=M.ceil(mob[Slot].level*1.5);if(my.mp<0){my.mp=0;}}
g.drawMyMp();CStat();}
function monsterMindDrain(Slot,targetPet,targetCharm){if(mob[Slot].mp<4){monsterMpLow(Slot,targetPet,targetCharm);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("orange",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterMindDrainDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterConfuseCooldownDone(){confuseStatus=false;monsterConfuseCooldown.kill();}
function monsterConfuseResume(){if(castingSpell===0){return;}
if(M.random()>.5){targetNextMob();}else{targetLastMob();}}
function monsterConfuseDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var confuseDuration=18000-(((magicTotal())*50)*(M.random()*(2)+1));if(confuseDuration<5000){confuseDuration=5000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){if(myStatusResist(Slot)===true){Chat((petName+" resisted Confuse."),1);return;}
Chat((petName+" is immune to Confuse."));return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Confuse."),1);return;}
Chat((mob[charmSlot].name+" is immune to Confuse."),3);return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Confuse."),1);return;}
Chat((mob[TGT].name+" is immune to Confuse."),3);return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Confuse."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Confuse."),1);return;}
if(invincibleStatus===true){Chat("Confuse has no effect on you.",1);return;}
Chat(("You are confused and attack at random."),3);flashScreen("#da70d6",.4,2);var skillName="Confuse";var buffId="mobConfuseIcon";var duration=confuseDuration;mobConfuseTimer.kill();mobConfuseTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-192);confuseStatus=true;monsterConfuseCooldown.kill();monsterConfuseCooldown=T.to('',.5,{repeat:-1,onRepeat:monsterConfuseResume});monsterConfuseCooldownComplete.kill();monsterConfuseCooldownComplete=T.delayedCall(confuseDuration / 1000,monsterConfuseCooldownDone);}
function monsterConfuse(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot,targetPet,targetCharm);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("red",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterConfuseDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterMindNumbResume(Slot){mindNumbActive=1;intelBuff+=mindNumbIntelDebuff;wisBuff+=mindNumbWisDebuff;CStat();}
function monsterMindNumbDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var mindNumbDuration=30000-(((magicTotal())*50)*(M.random()*(2)+1));if(mindNumbDuration<8000){mindNumbDuration=12000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){Chat((petName+" is immune to Mind Numb."));return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Mind Numb."),1);return;}
Chat((mob[charmSlot].name+"'s mind is numbed."),3);var skillName="Mind Numb";var buffId="mobMindNumbIcon"+charmSlot;var duration=mindNumbDuration;mobMindNumbTimers[charmSlot].kill();mobMindNumbTimers[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-224,charmSlot);mob[charmSlot].intel-=M.ceil(mob[charmSlot].intel / 5);if(mob[charmSlot].intel<0){mob[charmSlot].intel=0;}
return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Mind Numb."),1);return;}
Chat((mob[TGT].name+"'s mind is numbed."),3);var skillName="Mind Numb";var buffId="mobMindNumbIcon"+TGT;var duration=mindNumbDuration;mobMindNumbTimers[TGT].kill();mobMindNumbTimers[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-224,TGT);mob[TGT].intel-=M.ceil(mob[TGT].intel / 5);if(mob[TGT].intel<0){mob[TGT].intel=0;}
return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Mind Numb."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Mind Numb."),1);return;}
if(invincibleStatus===true){Chat("Mind Numb has no effect on you.",1);return;}
Chat(("Your mind is numbed."),3);var skillName="Mind Numb";var buffId="mobMindNumbIcon";var duration=mindNumbDuration;mobMindNumbTimer.kill();mobMindNumbTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-224);flashScreen("#000082",.4,2);if(mindNumbActive===0){intelBuff+=mindNumbIntelDebuff;wisBuff+=mindNumbWisDebuff;}
mindNumbActive=0;mindNumbIntelDebuff=M.ceil(mob[Slot].level*.75);mindNumbWisDebuff=M.ceil(mob[Slot].level*.75);intelBuff-=mindNumbIntelDebuff;wisBuff-=mindNumbWisDebuff;CStat();monsterMindNumbCooldown.kill();monsterMindNumbCooldown=T.delayedCall(mindNumbDuration / 1000,function(){monsterMindNumbResume(Slot);});}
function monsterMindNumb(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("orange",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterMindNumbDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterHealDone(Slot,healTarget){playAudioCast(Slot);playAudio("spellDoneHeal",0,0,.5);if(!mob[healTarget].name){return;}
if(my.hp<=0||attackStatus!==0){return;}
Chat((mob[healTarget].name+" feels much better."),3);mob[Slot].mp-=4;mob[Slot].castingStatus=false;var healAmount=minMax((mob[Slot].maxHp / 4),.85);if(mob[Slot].ampMagicStatus===true){healAmount=M.ceil(healAmount+(healAmount*.5));}
mob[healTarget].hp+=healAmount;g.popupHealSlot(healAmount,healTarget);if(mob[healTarget].hp>mob[healTarget].maxHp){mob[healTarget].hp=mob[healTarget].maxHp;}
g.drawMonsterHp(healTarget);}
function monsterHeal(Slot,healTarget){if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastHeal",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("teal",25,Slot,(mobCastSpeed(Slot)*1.25)/ 1000);mob[Slot].spellActive=T.delayedCall((mobCastSpeed(Slot)*1.25)/ 1000,function(){monsterHealDone(Slot,healTarget);});mobResumeAttackTimer(Slot,0,(mobCastSpeed(Slot)*1.25)+1500);}}
function monsterLayHandsDone(Slot){playAudioCast(Slot);playAudio("spellDoneHeal",0,0,.5);if(my.hp<=0||attackStatus!==0){return;}
mob[Slot].castingStatus=false;mob[Slot].layHands=false;if(mob[Slot].name==="Matron Maelentia"){Chat((mob[Slot].name+" uses complete heal."),3);var healAmount=~~(mob[Slot].maxHp / 2);}else{Chat((mob[Slot].name+" uses Lay Hands."),3);var healAmount=~~(mob[Slot].maxHp*.75);}
mob[Slot].hp+=healAmount;g.popupHealSlot(healAmount,Slot);if(mob[Slot].hp>mob[Slot].maxHp){mob[Slot].hp=mob[Slot].maxHp;}
g.drawMonsterHp(Slot);}
function monsterLayHands(Slot){Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastHeal",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("teal",25,Slot,3);mob[Slot].spellActive=T.delayedCall(3,function(){monsterLayHandsDone(Slot);});mobResumeAttackTimer(Slot,0,3000);}}
function monsterWeakenResume(Slot,targetPet,targetCharm){weakenActive=1;strBuff+=weakenStrDebuff;dexBuff+=weakenDexDebuff;CStat();}
function monsterWeakenDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var weakenDuration=30000-(((magicTotal())*50)*(M.random()*(2)+1));if(weakenDuration<8000){weakenDuration=12000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){Chat((petName+" is immune to Weaken."));return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Weaken."),1);return;}
Chat((mob[charmSlot].name+" feels weak and clumsy."),3);var skillName="Weaken";var buffId="mobWeakenIcon"+charmSlot;var duration=weakenDuration;mobWeakenTimers[charmSlot].kill();mobWeakenTimers[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-160,charmSlot);mob[charmSlot].weaken=true;return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Weaken."),1);return;}
Chat((mob[TGT].name+" feels weak and clumsy."),3);var skillName="Weaken";var buffId="mobWeakenIcon"+TGT;var duration=weakenDuration;mobWeakenTimers[TGT].kill();mobWeakenTimers[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-160,TGT);mob[TGT].weaken=true;return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Weaken."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Weaken."),1);return;}
if(invincibleStatus===true){Chat("Weaken has no effect on you.",1);return;}
Chat(("Your feel weak and clumsy."),3);Chat(("Your mind is numbed."),3);var skillName="Weaken";var buffId="mobWeakenIcon";var duration=weakenDuration;mobWeakenTimer.kill();mobWeakenTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-160);flashScreen("#c71585",.4,2);if(weakenActive===0){strBuff+=weakenStrDebuff;dexBuff+=weakenDexDebuff;}
weakenActive=0;weakenStrDebuff=M.ceil(mob[Slot].level*.75);weakenDexDebuff=M.ceil(mob[Slot].level*.75);strBuff-=weakenStrDebuff;dexBuff-=weakenDexDebuff;CStat();monsterWeakenCooldown.kill();monsterWeakenCooldown=T.delayedCall(weakenDuration / 1000,function(){monsterWeakenResume(Slot,targetPet,targetCharm);});}
function monsterWeaken(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell"),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("purple",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterWeakenDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function monsterYawnResume(){hasteBuff-=400;yawnActive=1;CStat();}
function monsterYawnDone(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
playAudioCast(Slot);playAudio("spellDoneHeal");var yawnDuration=24000-(((magicTotal())*50)*(M.random()*(2)+1));if(yawnDuration<6000){yawnDuration=6000;}
mob[Slot].mp-=4;mob[Slot].castingStatus=false;if(targetPet===true){Chat((petName+" is immune to Yawn."));return;}
if(targetCharm===true){if(myStatusResist(Slot)===true){Chat((mob[charmSlot].name+" resisted Yawn."),1);return;}
Chat((mob[charmSlot].name+" yawns."),3);var skillName="Yawn";var buffId="mobYawnIcon"+charmSlot;var duration=yawnDuration;mobYawnTimers[charmSlot].kill();mobYawnTimers[charmSlot]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-128,charmSlot);mob[charmSlot].speed+=1000;if(mob[charmSlot].speed>6000){mob[charmSlot].speed=6000;}
return;}
if(targetCharm===false){if(TGT===charmSlot){return;}
if(M.random()>.95){Chat((mob[TGT].name+" resisted Yawn."),1);return;}
Chat((mob[TGT].name+" yawns."),3);var skillName="Yawn";var buffId="mobYawnIcon"+TGT;var duration=yawnDuration;mobYawnTimers[TGT].kill();mobYawnTimers[TGT]=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobSelfBuffIcon(skillName,buffId,duration,-128,TGT);mob[TGT].speed+=1000;if(mob[TGT].speed>6000){mob[TGT].speed=6000;}
return;}
if(absorbSpellStatus===0){absorbSpellStatus=1;$("#absorbSpellIcon,#spellAbsorbImage").remove();Chat(("You absorb Yawn."),3);return;}
if(myStatusResist(Slot)===true){Chat(("You resisted Yawn."),1);return;}
if(invincibleStatus===true){Chat("Yawn has no effect on you.",1);return;}
Chat(("You feel drowsy."),3);var skillName="Yawn";var buffId="mobYawnIcon";var duration=yawnDuration;mobYawnTimer.kill();mobYawnTimer=T.delayedCall(duration / 1000,function(){removeIcon(buffId);});mobBuffIcon(skillName,buffId,duration,-128);if(yawnActive===0){hasteBuff-=400;}
yawnActive=0;flashScreen("#fff5ee",.4,2);hasteBuff+=400;monsterYawnCooldown.kill();monsterYawnCooldown=T.delayedCall(yawnDuration / 1000,monsterYawnResume);}
function monsterYawn(Slot,targetPet,targetCharm){if(my.hp<=0||attackStatus!==0){return;}
if(mob[Slot].mp<4){monsterMpLow(Slot);return;}
Chat((mob[Slot].name+" begins to cast a spell."),3);playAudio("spellCastDot",0,0,.5);if(mobsFound()===true){mob[Slot].castingStatus=true;mobCastDown("white",25,Slot,mobCastSpeed(Slot)/ 1000);mob[Slot].spellActive=T.delayedCall(mobCastSpeed(Slot)/ 1000,function(){monsterYawnDone(Slot,targetPet,targetCharm);});mobResumeAttackTimer(Slot,0,resumeAttacking(mobCastSpeed(Slot),Slot));}}
function resumeAttacking(castSpeed,Slot){if(castSpeed<mob[Slot].speed){castSpeed=mob[Slot].speed;}
return castSpeed;}
function monsterHarmTouch(Slot){if(my.hp<=0||attackStatus!==0){return;}
mobCastSelf("red",25,10,Slot);mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));var harmTouchDamage=M.ceil(mob[Slot].level*4)+10;if(invincibleStatus===true){Chat("Harm Touch has no effect on you.",1);return;}
if(mob[Slot].charmStatus===false){if(shieldHp>0){playAudio("blockBlunt");shieldHp-=harmTouchDamage;if(my.job==="Cleric"){Chat(("Your guardian angel absorbs the blow."));if(shieldHp<=0){$("#guardianAngelIcon").remove();}}
if(my.job==="Necromancer"){Chat(("Your diamond skin absorbs the blow."));if(shieldHp<=0){$("#diamondSkinIcon").remove();}}
if(my.job==="Enchanter"){Chat(("Your mystic rune absorbs the blow."));if(shieldHp<=0){$("#shieldHpIcon").remove();}}
if(my.job==="Paladin"){Chat("Your protective bubble absorbs the blow.");if(shieldHp<=0){$("#yaulpShieldIcon").remove();}}
if(my.job==="Bard"){Chat("Your shield of songs absorbs the blow.");if(shieldHp<=0){$("#shieldOfSongsIcon").remove();}}}else{my.hp-=harmTouchDamage;battleDamageTaken+=harmTouchDamage;Chat((mob[Slot].name+" harm touches YOU for "+harmTouchDamage+" damage."),1);}
CStat();g.drawMyHp();flashScreen("#f00",.7,1.25);}else{if(TGT===charmSlot){return;}else{var foo=g.myMagicDamage("magic",harmTouchDamage,TGT,false,"Harm Touch");Chat(mob[Slot].name+" harm touches "+mob[TGT].name+" for "+foo+" damage.",3);g.checkForDeadMonsters();}}
if(my.job==="Warrior"){getFuryRegen(harmTouchDamage);}
mob[Slot].harmTouch=1;checkMyDeathBySkill(Slot);playAudio("spellDoneHarm");if(mob[Slot].name==="Nalatos, God of Chaos"||mob[Slot].name==="ghastly indulger"){function resetHT(){if(mob[Slot].name==="Nalatos, God of Chaos"||mob[Slot].name==="ghastly indulger"){mob[Slot].harmTouch=0;}}
var d=45000;if(g.difficulty===2){d=35000;}
if(g.difficulty===3){d=25000;}
T.delayedCall(d / 1000,resetHT);}}
function resetAddMonster(){setD('addmonsterId',false);BGP('addmonsterId',"0 -200%");}
function addSummonedWolf(Slot,summoned){if(countMobs()>4||!mob[Slot].name){return;}
setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');Mimg="a wolf";Mlvl=M.ceil(mob[Slot].level*.5);MmaxHp=M.ceil(Mlvl*100);Mhp=MmaxHp;Mxp=Mlvl*4;Mstr=(5+(Mlvl*2));Mdef=100;monsterTC=Mlvl;Mgold=0;Mint=(5+(Mlvl*2));Mpoison=100;Mmagic=100;Mlightning=100;Mfire=100;Mcold=100;monsterSpeed=3000;McastSpeed=2000*g.speed;Mskill=[];Mskill[1]="kick";Mskill[2]="kick";Mskill[3]="kick";Mskill[4]="kick";Mfreq=10;Mrare=1;MharmTouch=1;Mrune=1;Mskeleton=1;Melemental=1;Mthorns=1;Mlava=1;Mresolution=1;Mwolf=1;Menrage=false;MironMaiden=false;Mflurry=false;Mamp=false;Msanctuary=false;Mbarrier=false;Mdrain=false;initChampTraits();if(mob[Slot].summoner===true){mob[Slot].summoner=false;}else{mob[Slot].wolf=1;}
Mflee=0;Mwidth=250+M.ceil(mob[Slot].level / 4);mobImgX=538;mobImgY=400;cX=385;cY=286;Mname=mob[Slot].name+"'s pet";Maud1="wolf_att2";Maud2="wolf_hit2";Maud3="wolf_die2";loadSlotData(Slot,summoned);playAudio("spellCastAbjure",0,0,.5);}
function monsterSummonWolf(Slot){if(my.hp<=0||attackStatus!==0){return;}
playAudio("spellDoneSlam",0,0,.5);Chat(("A wolf is summoned into battle."),3);mobCastSelf("green",25,20,Slot);mob[Slot].castingStatus=true;mob[Slot].spellActive=T.delayedCall(1,function(){addSummonedWolf(Slot,1);});mobResumeAttackTimer(Slot,0,1250);}
function addSummonedSkeleton(Slot,summoned){if(countMobs()>4||!mob[Slot].name){return;}
setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');Mimg="a skeleton";Mlvl=M.ceil(mob[Slot].level*.65);MmaxHp=M.ceil(Mlvl*100);Mhp=MmaxHp;Mxp=Mlvl*4;Mstr=(5+(Mlvl*2));Mdef=100;monsterTC=Mlvl;Mgold=0;Mint=(5+(Mlvl*2));Mpoison=100;Mmagic=100;Mlightning=100;Mfire=125;Mcold=100;monsterSpeed=3000;Mskill[1]="kick";Mskill[2]="kick";Mskill[3]="kick";Mskill[4]="kick";McastSpeed=500;Mfreq=10;Mrare=1;MharmTouch=1;Mrune=1;Mskeleton=1;Melemental=1;Mthorns=1;Mlava=1;Mresolution=1;Mwolf=1;Menrage=false;MironMaiden=false;Mflurry=false;Mamp=false;Msanctuary=false;Mbarrier=false;Mdrain=false;initChampTraits();if(mob[Slot].summoner===true){mob[Slot].summoner=false;}else{mob[Slot].skeleton=1;}
Mflee=0;Mwidth=150+M.ceil(mob[Slot].level / 4);mobImgX=240;mobImgY=503;cX=123;cY=114;Mname=mob[Slot].name+"'s pet";Maud1="skeleton_att";Maud2="skeleton_hit";Maud3="skeleton_die";loadSlotData(Slot,summoned);playAudio("spellCastAbjure",0,0,.5);}
function monsterSummonSkeleton(Slot){if(my.hp<=0||attackStatus!==0){return;}
playAudio("spellDoneSlam",0,0,.5);Chat(("A skeleton is summoned into battle."),3);mobCastSelf("black",25,20,Slot);mob[Slot].castingStatus=true;mob[Slot].spellActive=T.delayedCall(1,function(){addSummonedSkeleton(Slot,1);});mobResumeAttackTimer(Slot,0,1250);}
function addSummonedElemental(Slot,summoned){if(countMobs()>4||!mob[Slot].name){return;}
setD('addmonsterId',true);BGP('addmonsterId',"0 -300%");addMonsterTimer.kill();addMonsterTimer=T.delayedCall(.5,resetAddMonster);timerTick(D.getElementById('addmonsterId'),.5,'addmonsterId');MmaxHp=M.ceil(Mlvl*100);Mhp=MmaxHp;Mxp=Mlvl*4;Mstr=(5+(Mlvl*2));Mdef=100;monsterTC=Mlvl;Mgold=0;Mint=(5+(Mlvl*2));Mpoison=100;Mmagic=100;Mlightning=100;Mfire=100;Mcold=100;monsterSpeed=3000;McastSpeed=500*g.speed;Mskill[1]="kick";Mskill[2]="kick";Mfreq=10;Mrare=1;MharmTouch=1;Mrune=1;Mskeleton=1;Melemental=1;Mthorns=1;Mlava=1;Mresolution=1;Mwolf=1;Menrage=false;MironMaiden=false;Mflurry=false;Mamp=false;Msanctuary=false;Mbarrier=false;Mdrain=false;initChampTraits();if(mob[Slot].summoner===true){mob[Slot].summoner=false;}else{mob[Slot].elemental=1;}
Mflee=0;var x=M.ceil(M.random()*(4));if(x===1){Mimg="an earth elemental";Mskill[3]="root";Mskill[4]="root";Mlvl=M.ceil(mob[Slot].level*.65);Mlightning=67;Mpoison=125;Mwidth=300;mobImgX=346;mobImgY=400;cX=171;cY=98;}else if(x===2){Mimg="an air elemental";Mskill[3]="energy bolt";Mskill[4]="energy bolt";Mlvl=M.ceil(mob[Slot].level*.65);Mmagic=67;Mlightning=125;Mwidth=300;mobImgX=354;mobImgY=400;cX=183;cY=116;}else if(x===3){Mimg="a fire elemental";Mskill[3]="fireball";Mskill[4]="fireball";Mlvl=M.ceil(mob[Slot].level*.65);Mfire=67;Mcold=125;Mwidth=300;mobImgX=358;mobImgY=400;cX=176;cY=140;}else{Mimg="a frost elemental";Mskill[3]="ice shard";Mskill[4]="ice shard";Mlvl=M.ceil(mob[Slot].level*.65);Mcold=67;Mfire=125;Mwidth=300;mobImgX=397;mobImgY=500;cX=196;cY=147;}
Mname=mob[Slot].name+"'s pet";Maud1="elem_att3";Maud2="elem_hit3";Maud3="elem_die3";loadSlotData(Slot,summoned);playAudio("spellCastAbjure",0,0,.5);}
function monsterSummonElemental(Slot){if(my.hp<=0||attackStatus!==0){return;}
playAudio("spellDoneSlam",0,0,.5);Chat((mob[Slot].name+" begins summoning an elemental."),3);mobCastSelf("blue",25,20,Slot);mob[Slot].castingStatus=true;mob[Slot].spellActive=T.delayedCall(1,function(){addSummonedElemental(Slot,1);});mobResumeAttackTimer(Slot,0,1250);}
function monsterRune(Slot){Chat((Mname+"'s skin shimmers with power."),3);playAudio("spellDoneBuff",0,0,.5);mobSelfBuffIcon("Rune","MruneIcon"+Slot,0,-416,Slot);mob[Slot].rune=1;mobCastSelf("teal",25,25,Slot);mob[Slot].runeHp=20+(mob[Slot].intel*10);mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));}
function monsterThornsDone(Slot){mob[Slot].thornsActive=1;}
function monsterThorns(Slot){Chat((Mname+"'s skin is covered in thorns."),3);playAudio("spellDoneBuff",0,0,.5);MthornsTimers[Slot].kill();MthornsTimers[Slot]=T.delayedCall(40,function(){removeIcon("MthornsIcon"+Slot);});mobSelfBuffIcon("Thorns","MthornsIcon"+Slot,40000,-448,Slot);mobCastSelf("green",25,20,Slot);mob[Slot].thorns=1;mob[Slot].thornsActive=0;mob[Slot].thornsTimer=T.delayedCall(40,function(){monsterThornsDone(Slot);});mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));}
function monsterLavaShieldDone(Slot){mob[Slot].lavaShieldActive=1;}
function monsterLavaShield(Slot){Chat((Mname+"'s is surrounded by a shield of lava."),3);playAudio("spellDoneBuff",0,0,.5);MlavaTimers[Slot].kill();MlavaTimers[Slot]=T.delayedCall(30,function(){removeIcon("MlavaIcon"+Slot);});mobSelfBuffIcon("Lava Shield","MlavaIcon"+Slot,30000,-480,Slot);mobCastSelf("orange",25,20,Slot);mob[Slot].lavaShield=1;mob[Slot].lavaShieldActive=0;mob[Slot].lavaShieldTimer=T.delayedCall(30,function(){monsterLavaShieldDone(Slot);});mobResumeAttackTimer(Slot,0,mobAttackSpeed(Slot));}
function setCurtainColor(color){spellCurtain.graphics.clear().beginFill(color).drawRect(0,0,1280,720).endFill();}
function flashScreen(color,o,d,reverse){if(!reverse){setCurtainColor(color);T.to(spellCurtain,d,{startAt:{alpha:o},alpha:0,ease:ez.Qin});}else{setCurtainColor(color);T.to(spellCurtain,d,{startAt:{alpha:0},alpha:o,ease:ez.Qin,onComplete:function(){if(my.hp>0){spellCurtain.alpha=0;}}});}}
function monsterSilence(Slot){mob[Slot].silenceStatus=false;playAudio("handofgod");if(my.race!=="Gnome"){Chat((mob[Slot].name+" silences you!"));var silenceDuration=2500;silenceDuration=~~(silenceDuration*(1-(g.silenceEquip / 100)));mobBuffIcon("Silence",'silenceIcon',silenceDuration,-768);tlSpellbar.kill();NG.spellbardiv.style.display="none";castingSpell=1;silenceStatus=true;T.delayedCall(silenceDuration / 1000,function(){silenceStatus=false;});}else{Chat(("You resist silence!"),1);}
mobCastSelf("white",25,15,Slot);mobResumeAttackTimer(Slot,0,2000);flashScreen('white',.7,1);if(mob[2].rare===3){function doit(){if(mob[2].rare===3){mob[2].silenceStatus=true;}}
var timer=45000;if(g.difficulty===3){timer=30000;}
T.delayedCall(timer / 1000,doit);}}
function monsterEnrage(Slot){function monsterEnrageExpire(Slot,mobID){if(mobID===mob[Slot].ID&&mobsFound()===true&&mob[Slot].name){Chat((mob[Slot].name+"'s enrage fades."));}
mob[Slot].enrage=false;}
var mobID=mob[Slot].ID;Chat((mob[Slot].name+" enrages!"));playAudio("spellDoneFlames",0,0,.5);MenrageTimers[Slot].kill();MenrageTimers[Slot]=T.delayedCall(20,function(){removeIcon("MenrageIcon"+Slot);});mobSelfBuffIcon("Enrage","MenrageIcon"+Slot,20000,-544,Slot);mobCastSelf("purple",26,20,Slot);mob[Slot].enrageStatus=false;mob[Slot].enrage=true;mob[Slot].enrageTimer=T.delayedCall(20,function(){monsterEnrageExpire(Slot,mobID);});mobResumeAttackTimer(Slot,0,2000);}
function monsterFlurry(Slot){function monsterflurryExpire(){mob[Slot].flurry=false;}
Chat((mob[Slot].name+" unleashes a vicious flurry!"));playAudio("spellDoneFlames",0,0,.5);mobSelfBuffIcon("Flurry","MflurryIcon"+Slot,4000,-608,Slot);mobCastSelf("red",26,45,Slot);mob[Slot].flurryStatus=false;mob[Slot].flurry=true;mob[Slot].flurryTimer=T.delayedCall(4,function(){monsterflurryExpire(Slot);});mobResumeAttackTimer(Slot,0,1500);if(mob[2].name==="Vixen Sarmina"){function doit(){if(mob[2].name==="Vixen Sarmina"){mob[2].flurryStatus=true;}}
var timer=30000;if(g.difficulty===3){timer=20000;}
T.delayedCall(timer / 1000,doit);}}
function monsterAmpMagic(Slot){function monsterampMagicExpire(Slot,mobID){if(mobID===mob[Slot].ID&&mobsFound()===true&&mob[Slot].name){Chat((mob[Slot].name+"'s amplified magic fades."));mob[Slot].intel-=M.ceil(mob[Slot].level / 2);mob[Slot].castFreq+=1;}
mob[Slot].ampMagic=false;}
var mobID=mob[Slot].ID;Chat((mob[Slot].name+" channels amplified magic!"));playAudio("spellCastEvoke1",0,0,.5);MamplifyMagicTimers[Slot].kill();MamplifyMagicTimers[Slot]=T.delayedCall(20,function(){removeIcon("MamplifyMagicIcon"+Slot);});mobSelfBuffIcon("Amplify Magic","MamplifyMagicIcon"+Slot,20000,-640,Slot);mobCastSelf('magenta',26,12,Slot);mob[Slot].ampMagicStatus=false;mob[Slot].ampMagic=true;mob[Slot].castFreq-=1;mob[Slot].ampMagicTimer=T.delayedCall(20,function(){monsterampMagicExpire(Slot,mobID);});mob[Slot].intel+=M.ceil(mob[Slot].level / 2);mobResumeAttackTimer(Slot,0,2500);}
function monsterSanctuary(Slot){function monstersanctuaryExpire(Slot,mobID){if(mobID===mob[Slot].ID&&mobsFound()===true&&mob[Slot].name){Chat((mob[Slot].name+"'s sanctuary fades."));}
mob[Slot].sanctuary=false;}
var mobID=mob[Slot].ID;Chat((mob[Slot].name+" is shielded by a translucent shell."));playAudio("spellDoneBuff",0,0,.5);MsanctuaryTimers[Slot].kill();MsanctuaryTimers[Slot]=T.delayedCall(20,function(){removeIcon("MsanctuaryIcon"+Slot);});mobSelfBuffIcon("Sanctuary","MsanctuaryIcon"+Slot,20000,-672,Slot);mobCastSelf("white",26,12,Slot);mob[Slot].sanctuaryStatus=false;mob[Slot].sanctuary=true;mob[Slot].sanctuaryTimer=T.delayedCall(20,function(){monstersanctuaryExpire(Slot,mobID);});mobResumeAttackTimer(Slot,0,2500);}
function monsterBarrier(Slot){function monsterBarrierExpire(Slot,mobID){if(mobID===mob[Slot].ID&&mobsFound()===true&&mob[Slot].name){Chat((mob[Slot].name+"'s barrier fades."));}
mob[Slot].barrier=false;}
var mobID=mob[Slot].ID;Chat((mob[Slot].name+" is bolstered by a defensive barrier!"));playAudio("spellDoneBuff",0,0,.5);MbarrierTimers[Slot].kill();MbarrierTimers[Slot]=T.delayedCall(20,function(){removeIcon("MbarrierIcon"+Slot);});mobSelfBuffIcon("Barrier","MbarrierIcon"+Slot,20000,-704,Slot);mobCastSelf("blue",26,12,Slot);mob[Slot].barrierStatus=false;mob[Slot].barrier=true;mob[Slot].barrierTimer=T.delayedCall(20,function(){monsterBarrierExpire(Slot,mobID);});mobResumeAttackTimer(Slot,0,2500);}
function monsterIronMaiden(Slot){function monsterIronMaidenExpire(Slot){if(mobID===mob[Slot].ID&&mobsFound()===true&&mob[Slot].name){Chat(mob[Slot].name+"'s iron maiden fades.",1);}
mob[Slot].ironMaiden=false;}
var mobID=mob[Slot].ID;Chat(mob[Slot].name+" is shielded by an iron maiden!",1);if(GLB.videoSetting==="High"){animateIronMaiden(Slot);}
playAudio("spellDoneBuff",0,0,.5);MironMaidenTimers[Slot].kill();MironMaidenTimers[Slot]=T.delayedCall(6,function(){removeIcon("MironMaidenIcon"+Slot);});mobSelfBuffIcon("Iron Maiden","MironMaidenIcon"+Slot,10000,-576,Slot);mobCastSelf("yellow",26,45,Slot);mob[Slot].ironMaidenStatus=false;mob[Slot].ironMaiden=true;mob[Slot].ironMaidenTimer=T.delayedCall(6,function(){monsterIronMaidenExpire(Slot,mobID);});mobResumeAttackTimer(Slot,0,2500);if(mob[2].name==="Sanctum Guardian Ghalentus"){function doit(){if(mob[2].name==="Sanctum Guardian Ghalentus"){mob[2].ironMaidenStatus=true;}}
var d=45000;if(g.difficulty===2){d=35000;}
if(g.difficulty===3){d=25000;}
T.delayedCall(d / 1000,doit);}}
function animateIronMaiden(Slot){if(mob[Slot].hp<=0){return;}
var bottomAdjust=M.ceil(MOB[Slot].offsetTop+mob[Slot].cY);var leftAdjust=M.ceil(MOB[Slot].offsetLeft+mob[Slot].cX);var H1=IMG(leftAdjust,bottomAdjust,0,0,'ironMaidenIcon');H1.opacity=.75;NG.eWin2.appendChild(H1);T.to(H1,.5,{height:400,width:400,opacity:.75,top:bottomAdjust-200,left:leftAdjust-200,force3D:"auto",ease:ez.bout});T.to(H1,6,{rotation:720,force3D:"auto",ease:ez.lin});T.delayedCall(5.5,function(){T.to(H1,.5,{scale:0,ease:ez.lin,onComplete:function(){Remove(H1);}});});}
function monsterResolution(Slot){Chat((Mname+"'s skin glows with divine protection."),3);playAudio("spellDoneBuff",0,0,.5);mobSelfBuffIcon("Resolution","MresolutionIcon"+Slot,0,-512,Slot);mob[Slot].resolution=1;mob[Slot].resolutionStatus=true;mobCastSelf('yellow',25,20,Slot);mob[Slot].maxHp+=(mob[Slot].intel*20);mob[Slot].hp+=(mob[Slot].intel*20);mob[Slot].def+=~~(mob[Slot].intel*.12);mobResumeAttackTimer(Slot,0,2000);g.drawMonsterHp(Slot);}
function mobCastDot(spellColor,spellSize,Slot){stopMob(Slot);var leftHand=monsterCastingParticleLeft1(Slot);var rightHand=monsterCastingParticleLeft2(Slot);if(M.random()>.5){T.set(canvas[Slot],{rotationY:0});}else{T.set(canvas[Slot],{rotationY:180});leftHand[0]=mob[Slot].imageWidth-leftHand[0];rightHand[0]=mob[Slot].imageWidth-rightHand[0];}
var x1=(MOB[Slot].offsetLeft+leftHand[0]);var y1=(MOB[Slot].offsetTop+mob[Slot].imageHeight-leftHand[1]);var x2=(MOB[Slot].offsetLeft+rightHand[0]);var y2=(MOB[Slot].offsetTop+mob[Slot].imageHeight-rightHand[1]);var s2=img(spellColor+"particle50");function doit(){if(mob[Slot].castingStatus===false){return;}
var angle=M.random()*360;var x3=circX(x1,40,angle);var y3=circY(y1,40,angle);var p2=cacheAdd(s2,5,x3,y3);T.to(p2,.5,{x:x1,y:y1,scaleX:.2,scaleY:.2,ease:ez.Qinout,onComplete:function(){cRem(5,p2);}});var angle=M.random()*360;var x4=circX(x2,40,angle);var y4=circY(y2,40,angle);var p1=cacheAdd(s2,5,x4,y4);T.to(p1,.5,{x:x2-2,y:y2-2,scaleX:.2,scaleY:.2,ease:ez.Qinout,onComplete:function(){cRem(5,p1);}});T.delayedCall(.1,doit);}
if(GLB.videoSetting==="High"){doit();}}
function mobCastDown(spellColor,spellSize,Slot,castTime){stopMob(Slot);var s2=img(spellColor+"particle50");var leftHand=monsterCastingParticleLeft1(Slot);var rightHand=monsterCastingParticleLeft2(Slot);if(M.random()>.5){T.set(canvas[Slot],{rotationY:0});}else{T.set(canvas[Slot],{rotationY:180});leftHand[0]=mob[Slot].imageWidth-leftHand[0];rightHand[0]=mob[Slot].imageWidth-rightHand[0];}
var x1=(MOB[Slot].offsetLeft+leftHand[0]-12);var y1=(MOB[Slot].offsetTop+mob[Slot].imageHeight-leftHand[1]-12);var x2=(MOB[Slot].offsetLeft+rightHand[0]-12);var y2=(MOB[Slot].offsetTop+mob[Slot].imageHeight-rightHand[1]-12);var interval=.15;function doit(){if(mob[Slot].castingStatus===false){return;}
if(castTime<=0){return;}
var p2=cacheAdd(s2,5,x1,y1);T.to(p2,1,{x:(x1+M.random()*(30)-15),y:(y1+M.random()*(30)+leftHand[1]),ease:ez.Qin,onComplete:function(){cRem(5,p2);}});var p1=cacheAdd(s2,5,x2,y2);T.to(p1,1,{x:(x2+M.random()*(30)-15),y:(y2+M.random()*(30)+rightHand[1]),ease:ez.Qin,onComplete:function(){cRem(5,p1);}});castTime-=interval;T.delayedCall(interval,function(){doit();});}
if(GLB.videoSetting==="High"){doit();}}
function mobCastSelf(spellColor,spellSize,spellCount,Slot){stopMob(Slot);var s2=img(spellColor+"particle50");function doit(spellCount){if(spellCount===0){return;}
var angle=M.random()*360;var x=circX(cx,150,angle);var y=circY(cy,150,angle);var p2=cacheAdd(s2,5,x,y);T.to(p2,.75,{x:cx,y:cy,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(5,p2);}});var angle=M.random()*360;var x2=circX(cx,150,angle);var y2=circY(cy,150,angle);var p1=cacheAdd(s2,5,x2,y2);T.to(p1,.75,{x:cx,y:cy,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(5,p1);}});T.delayedCall(.03,function(){doit(--spellCount);});}
var cx=MOB[Slot].offsetLeft+mob[Slot].cX;var cy=MOB[Slot].offsetTop+mob[Slot].cY;if(GLB.videoSetting!=="Low"){spellCount*=2;if(GLB.videoSetting==="High"){spellCount*=2;}
doit(spellCount);}}
function animateStasis(spellColor,spellSize,Slot){stopMob(Slot);var s2=img(spellColor+"particle50");function doit(){if(!mob[Slot].stasisFieldStatus||mob[Slot].name===''){mob[Slot].stasisFieldStatus=false;return;}
var angle=M.random()*360;var x=circX(cx,150,angle);var y=circY(cy,150,angle);var p2=cacheAdd(s2,5,x,y);T.to(p2,.75,{x:cx,y:cy,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(5,p2);}});var angle=M.random()*360;var x2=circX(cx,150,angle);var y2=circY(cy,150,angle);var p1=cacheAdd(s2,5,x2,y2);T.to(p1,.75,{x:cx,y:cy,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(5,p1);}});T.delayedCall(.01,function(){doit();});}
var cx=MOB[Slot].offsetLeft+mob[Slot].cX;var cy=MOB[Slot].offsetTop+mob[Slot].cY;doit();}
function castProjectile(spellColor,spellSize,Slot,attackCharmedMob,charmPetAttack,attackPet,breath){var img1=spellColor+"particle200";var imgsize=200;if(spellColor==="red"){img1='fireball';imgsize=800;}else if(spellColor==="blue"){img1='glacialSpike';imgsize=800;}
var centerPointx=MOB[Slot].offsetLeft+mob[Slot].cX;var centerPointy=MOB[Slot].offsetTop+mob[Slot].cY;var e1=can(img1,5,centerPointx-(imgsize / 2),centerPointy-(imgsize / 2),spellSize,spellSize,true,true);if(attackCharmedMob===undefined&&attackPet===undefined){T.to(e1,.5,{y:720,x:640,scaleX:(spellSize / imgsize)*3,scaleY:(spellSize / imgsize)*3,ease:ez.sin,onComplete:function(){cRem(5,e1);}});return;}
if(attackPet===true){var x2=MOB[5].offsetLeft+(petWidth / 2);var y2=MOB[5].offsetTop+(petHeight / 2);T.to(e1,.4,{y:y2,x:x2,scaleX:(spellSize / imgsize)*1.5,scaleY:(spellSize / imgsize)*1.5,ease:ez.sin,onComplete:function(){cRem(5,e1);}});return;}
if(attackCharmedMob&&charmPetAttack===undefined){var x2=MOB[charmSlot].offsetLeft+(mob[charmSlot].imageWidth / 2);var y2=MOB[charmSlot].offsetTop+(mob[charmSlot].imageHeight / 2);T.to(e1,.4,{y:y2,x:x2,scaleX:(spellSize / imgsize)*1.5,scaleY:(spellSize / imgsize)*1.5,ease:ez.sin,onComplete:function(){cRem(5,e1);}});return;}
if(attackCharmedMob&&charmPetAttack!==undefined){var x2=MOB[TGT].offsetLeft+(mob[TGT].imageWidth / 2);var y2=MOB[TGT].offsetTop+(mob[TGT].imageHeight / 2);T.to(e1,.4,{y:y2,x:x2,scaleX:(spellSize / imgsize)*1.5,scaleY:(spellSize / imgsize)*1.5,ease:ez.sin,onComplete:function(){cRem(5,e1);}});}}
function mobDotFinish(spellColor,spellSize,spellCount,Slot,targetCharm,targetPet){if(spellCount===0||GLB.videoSetting!=="High"){return;}
function doit(){if(targetPet===undefined&&targetCharm===undefined){var centerPointx=(M.random()*(1290)-5);var centerPointy=(M.random()*(250))+25;var p1=can(spellColor+"particle50",6,centerPointx,centerPointy,25,25);T.to(p1,.75,{x:"+=12",y:"+="+155,scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(6,p1);}});}else if(targetPet===true){var randomLeft=(M.random()*(200))-100;var randomBottom=(M.random()*(50))-25;var centerPointx=leftAdjust+randomLeft;var centerPointy=topAdjust+randomBottom;var p1=can(spellColor+"particle50",6,centerPointx,centerPointy,25,25);T.to(p1,.75,{y:'+=100',scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(6,p1);}});}else if(targetCharm===true){var randomLeft=(M.random()*mob[charmSlot].imageWidth)-halfWidth;var randomBottom=(M.random()*(50))-25;var centerPointx=leftAdjust+randomLeft;var centerPointy=topAdjust+randomBottom;var p1=can(spellColor+"particle50",6,centerPointx,centerPointy,25,25);T.to(p1,.75,{y:'+=100',scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(6,p1);}});}else{var randomLeft=(M.random()*(mob[targetCharm].imageWidth))-halfWidth;var randomBottom=(M.random()*(50))-25;var centerPointx=leftAdjust+randomLeft;var centerPointy=topAdjust+randomBottom;var p1=can(spellColor+"particle50",6,centerPointx,centerPointy,25,25);T.to(p1,.75,{y:'+=100',scaleX:0,scaleY:0,ease:ez.Qin,onComplete:function(){cRem(6,p1);}});}
if(spellCount>0){T.delayedCall(.015,function(){doit(--spellCount);});}}
if(targetPet===true){var leftAdjust=MOB[5].offsetLeft+(petWidth / 2)-spellSize;var topAdjust=MOB[5].offsetTop;}else if(targetCharm===true){var halfWidth=(mob[charmSlot].imageWidth / 2);var leftAdjust=MOB[charmSlot].offsetLeft+halfWidth-spellSize;var topAdjust=MOB[charmSlot].offsetTop;}else if(targetCharm>=0&&targetCharm<=4){var halfWidth=(mob[targetCharm].imageWidth / 2);var leftAdjust=(MOB[targetCharm].offsetLeft+halfWidth-spellSize);var topAdjust=MOB[targetCharm].offsetTop;}
doit();}
function animateStun(Slot,stunDuration){if(GLB.videoSetting!=="High"){return;}
if(Slot===5){var foo=petWidth;}else{var foo=mob[Slot].imageWidth;}
var targetsWidth=((foo)/ 2);var topAdjust=MOB[Slot].offsetTop;var leftAdjust=MOB[Slot].offsetLeft+targetsWidth;var s2=new C.Shape();s2.graphics.beginFill("#ffa").setStrokeStyle(1).beginStroke("#000").drawPolyStar(0,0,10,5,.7,0);s2.cache(-5,-5,10,10);var s1=s2.cacheCanvas;function doit1(){if(mob[Slot].fallingStatus===true||mob[Slot].stunStatus===false||mob[Slot].name===''){return;}
var s=new C.Bitmap(s1);s.set({x:leftAdjust+M.random()*(100)-50,y:topAdjust+M.random()*(30),regX:5,regY:5});stage[5].addChild(s);T.to(s,.5,{y:"-="+20,x:"+="+(M.random()*(40)-20),rotation:(M.random()*(720)-360),onComplete:function(){cRem(5,s);}});T.to(s,.1,{delay:.35,alpha:0});mob[Slot].animateStun=T.delayedCall(.05,doit1);}
function doit2(){if(petHp<=0||petBashStatus===false){return;}
var s=new C.Bitmap(s1);s.set({x:leftAdjust+M.random()*(100)-50,y:topAdjust+M.random()*(30)});stage[6].addChild(s);T.to(s,.66,{y:"-="+20,x:"+="+(M.random()*(40)-20),rotation:(M.random()*(720)-360),onComplete:function(){cRem(6,s);}});mob[Slot].animateStun=T.delayedCall(.05,doit2);}
if(Slot!==5){doit1();}else{doit2();}}
function animateBlind(Slot,blindDuration){blindDuration-=50;if(blindDuration<=0){return;}
if(mob[Slot].hp<=0){return;}
if(mob[Slot].sleepStatus===false){return;}
function doit(){if(blindDuration<=0){return;}
if(mob[Slot].hp<=0){return;}
if(mob[Slot].sleepStatus===false){return;}
if(mob[Slot].attackStatus===1){return;}
animateBlindSmoke(Slot);T.delayedCall(.05,function(){doit();});}
doit();}
function animateBlindSmoke(Slot){var targetsWidth=((mob[Slot].imageWidth)/ 2);var randomLeft=(M.random()*(60)-60);var randomBottom=(M.random()*60);var topAdj=(MOB[Slot].offsetTop+randomBottom);var leftAdjust=(MOB[Slot].offsetLeft+targetsWidth+randomLeft);var e1=can('blindImage',5,leftAdjust,topAdj,50,50,true);T.to(e1,1.5,{startAt:{alpha:.7},alpha:0,scaleX:4,scaleY:4});}
function animateFear(Slot,fearDuration,triggerFlag,opacityFlag){var finishFear=false;fearDuration-=100;if(fearDuration<=0){finishFear=true;}
if(Slot!==5){if(mob[Slot].name===''||mob[Slot].fearStatus===false){finishFear=true;}}else{if(petHp<=0||petFearStatus===false){finishFear=true;}}
if(finishFear===true){$("#fearIcon"+Slot).remove();stopMob(Slot);mob[Slot].fearAnimate.kill();if(petHp>0&&Slot===5){$NG.mob5.stop(true,false);}
if(mob[Slot].name===''&&Slot!==5){hideMob(Slot);}
return;}
if(triggerFlag===true){if(Slot===5){var targetsWidth=petWidth / 2;}else{var targetsWidth=M.ceil((mob[Slot].imageWidth)/ 2);}
var randomLeft=M.random()*(50)-25;var bottomAdjust=M.ceil(766-MOB[Slot].offsetTop);var leftAdjust=M.ceil(MOB[Slot].offsetLeft+targetsWidth-40);mob[Slot].fearAnimate.kill();$("#fearIcon"+Slot).remove();triggerFlag=false;var myH1=$('<img>',{id:'fearIcon'+Slot}).css({position:"absolute",height:80,width:80,bottom:bottomAdjust,left:leftAdjust,opacity:.7}).attr("src","images1/fearImage2.png");if(Slot<=4){if(GLB.videoSetting==="High"){$NG.eWin.append(myH1.css({opacity:opacityFlag}));}}else{if(GLB.videoSetting==="High"){$NG.eWin2.append(myH1.css({opacity:opacityFlag}));}}
T.to('#fearIcon'+Slot,1,{rotation:360,force3D:"auto",repeat:-1,ease:ez.lin});T.to("#fearIcon"+Slot,.66,{opacity:.2,force3D:"auto",yoyo:true,repeat:-1});T.to(MOB[Slot],.033,{startAt:{left:"-=3"},left:"+=3",force3D:"auto",yoyo:true,repeat:-1,ease:ez.lin});}
mob[Slot].fearAnimate=T.delayedCall(.1,function(){animateFear(Slot,fearDuration,triggerFlag,opacityFlag);});}
function maxAll(){if(location.pathname==='/ng/'){my.level=99;maxAllSkills();maxTalents();unlockQuests();P.eq[12].damage=255;P.eq[12].dex=255;P.eq[12].haste=-100;P.eq[12].globalHaste=-100;P.eq[12].castingHaste=-100;P.eq[12].hpRegen=3555;P.eq[12].mpRegen=3555;P.eq[12].hp=2534;}}
function getItems(){if(location.pathname==='/ng/'){mob[2].level=99;while(typeof findFirstInvSlot()==='number'){getLoot(2);}}}
function animateRoot(Slot,rootFlag){function clearRoot(Slot){$("#rootIcon"+Slot+",#rootBuffIcon"+Slot).remove();return;}
function clearAllRoots(){for(var i=0;i<=4;i++){$("#rootIcon"+i+",#rootBuffIcon"+i).remove();}
return;}
if(mob[TGT].attackStatus===1){attackOn(true);}
var randomRoot=M.ceil(M.random()*10);var rootWeaken=0;if(randomRoot===10){rootWeaken=1;mob[Slot].rootStatus-=rootWeaken;T.to("#rootIcon"+Slot,.5,{height:"-=10",force3D:true,ease:ez.lin});}
if(mob[Slot].rootStatus<=0){clearRoot(Slot);return;}
if(mob[Slot].hp<=0){clearRoot(Slot);return;}
if(mobsFound()===false){clearRoot(Slot);clearAllRoots();return;}
if(my.job==="Cleric"){if(my.talent3>=1){var dam=minMax((alterationTotal())*((talent3()*1.85)/ 100),.9);g.myMagicDamage("magic",dam,Slot,checkCrit(),"elemental");}}else if(my.job==="Shaman"){if(my.talent3>=1){var dam=minMax((alterationTotal()*(1+(talent3()*.235)))/ 20,.9);g.myMagicDamage("magic",dam,Slot,checkCrit(),"elemental");}}
if(rootFlag===true){rootFlag=false;var halfWidth=M.ceil((mob[Slot].imageWidth)/ 2);var targetsHeight=mob[Slot].imageHeight;if(my.job!=="Wizard"){var bottomAdjust=M.ceil(718-targetsHeight-MOB[Slot].offsetTop);var spellSize=100;}else{var bottomAdjust=M.ceil(718-targetsHeight-MOB[Slot].offsetTop);var spellSize=mob[Slot].imageWidth*.75;if(spellSize<200){spellSize=200;}else if(spellSize>600){spellSize=600;}}
var leftAdjust=M.ceil(MOB[Slot].offsetLeft+halfWidth-(spellSize / 2));if(my.job!=="Wizard"){var myH1=$('<img>',{id:'rootIcon'+Slot}).css({position:"absolute",height:spellSize*2,width:spellSize,bottom:bottomAdjust,left:leftAdjust,opacity:1}).attr("src","images1/rootImage.png");}else{var myH1=$('<img>',{id:'rootIcon'+Slot}).css({position:"absolute",width:spellSize,bottom:bottomAdjust,left:leftAdjust,opacity:.7}).attr("src","images1/freezeRoot.png");}
$NG.eWin.append(myH1);}
T.delayedCall(1,function(){animateRoot(Slot,rootFlag);});}
function encaseAnimation(Slot,freezeDuration){if(GLB.videoSetting!=="High"){return;}
if(mob[Slot].hp<=0){return;}
if(mob[Slot].attackStatus===1){return;}
var bottomAdjust=M.ceil(720-mob[Slot].imageHeight-MOB[Slot].offsetTop+35);var spellSize=mob[Slot].imageWidth;var leftAdjust=M.ceil(MOB[Slot].offsetLeft+mob[Slot].cX-(spellSize / 2));var spellHeight=(spellSize*1.1);var myH1=$('<img>',{id:'iceIcon'+Slot}).css({position:"absolute",height:spellHeight,width:spellSize,bottom:bottomAdjust,left:leftAdjust}).attr("src","images1/iceIcon.png");$NG.eWin.append(myH1);playAudio('blue3')}
function freezeAnimation(Slot,freezeDuration){if(mob[Slot].name===""||attackStatus===1){return;}
if(GLB.videoSetting!=="High"){return;}
var H1=D.createElement('img');H1.src="images1/freezeRoot.png";H1.className='freezeIcon'+Slot;var w=mob[Slot].imageWidth*.6;if(w<200){w=200;}else if(w>400){w=400;}
function makeIce(fooCount){var randomLeft=(M.random()*(100)-50);var newLeft=leftAdjust+randomLeft;var zig=H1.cloneNode();zig.style.cssText="position:absolute; opacity:1; width:"+w+"px; bottom:"+bottomAdjust+"px; left: "+newLeft+"px;";bottomAdjust+=(targetsHeight / 15);NG.eWin.appendChild(zig);T.set(zig,{rotationY:~~(M.random()*(2))*180});if(fooCount<=3){T.delayedCall(.1,function(){makeIce(++fooCount);});}}
var targetsWidth=(mob[Slot].imageWidth / 2);var targetsHeight=mob[Slot].imageHeight;var bottomAdjust=(720-(targetsHeight+MOB[Slot].offsetTop));var leftAdjust=(MOB[Slot].offsetLeft+targetsWidth-(w / 2));$(".freezeIcon"+Slot).remove();makeIce(0);}
function animateIceBlock(){var H1=D.createElement('img');H1.style.cssText="position:absolute; height: 797px; width: 1880px; bottom: -50px; left: -225px; opacity:0;";H1.src="images1/iceIcon.png";H1.id='iceBlock';NG.eWin2.appendChild(H1);T.to(H1,1,{opacity:.9});}
function sleepAnimation(Slot){if(mob[Slot].hp<=0||mob[Slot].sleepStatus===false||mob[Slot].attackStatus===1){mob[Slot].sleepTimer.kill();mob[Slot].sleepStatus=false;return;}
var targetsWidth=((mob[Slot].imageWidth)/ 2);var topAdj=(MOB[Slot].offsetTop+20);var leftJitter=(M.random()*(100)-50);var finalBottom=(M.random()*(10)+50);var leftAdjust=(MOB[Slot].offsetLeft+targetsWidth-10);var p4=can('sleepImage',5,leftAdjust,topAdj,20,20);mob[Slot].sleepTimer=T.delayedCall(.5,function(){sleepAnimation(Slot);});if(GLB.videoSetting!=="Low"){var tl=TM();tl.to(p4,.1,{y:"-=10"}).to(p4,1,{y:"-="+finalBottom,x:"+="+leftJitter,alpha:0,onComplete:function(){cRem(5,p4);}});}}
function checkRareMob(bar){var foo=false;var rareOdds=98;if(chainCounter>=1){rareOdds-=(M.sqrt(chainCounter));if(rareOdds<=90){rareOdds=90;}}
if(chainCounter===0){rareOdds+=2;}
if(rangerTrackStatus==true){if(my.job=="Ranger"){rareOdds=90;}else{rareOdds=95;}}
if(M.random()*100>=rareOdds){foo=true;}
return foo;}
function initChampTraits(){mobVicious=false;mobFrenzy=false;mobJuggernaut=false;mobTough=false;mobChromatic=false;mobSummoner=false;mobSprinter=false;mobVampiric=false;mobLamprey=false;mobShreddingAura=false;mobFireEnchanted=false;mobColdEnchanted=false;mobLightningEnchanted=false;mobPoisonEnchanted=false;mobMartyr=false;mobPhased=false;mobDauntless=false;mobCripplingAura=false;mobDisruptionAura=false;mobConvictionAura=false;mobConcussiveAura=false;mobEnsnaringAura=false;mobZealousAura=false;}
function getMonster(count,rareMobFlag){monsterFound=false;Mname="";Mimg="";Mlvl=0;cX=100;cY=100;if(!count){var count=1;var rareMobFlag=checkRareMob();initChampTraits();}
if(count>=2010){if(ambushStatus<2){T.delayedCall(.1,getMonster);}
Mname="";ambushStatus=1;return;}
if(count>500){rareMobFlag===false;}
MharmTouch=1;Mrune=1;Mwolf=1;Mskeleton=1;Melemental=1;Mthorns=1;Mlava=1;Mresolution=1;Menrage=false;Mflurry=false;Mamp=false;Msanctuary=false;Mbarrier=false;Mdrain=false;MironMaiden=false;MlayHands=false;Msilence=false;Mflee=0;Mwidth=200;MmaxHp=0;Mhp=0;Mxp=0;Mstr=0;Mdef=100;Mint=0;Mgold=0;Mpoison=100;Mmagic=100;Mlightning=100;Mfire=100;Mcold=100;Mskill=[];Mskill[1]="kick";Mskill[2]="kick";Mskill[3]="kick";Mskill[4]="bash";Mfreq=10;monsterMp=20;monsterSpeed=3000*g.speed;McastSpeed=2500*g.speed;Mrare=1;Maud1="blankAudio";Maud2="gethit3m";Maud3="death_mb";Maud4="blankAudio";Maud5="blankAudio";Maud6="blankAudio";var df=g.difficulty-1;var Mjob="";var _Z=myZone();var _SZ=mySubzone();if(_Z==="Fahlnir Citadel"){if(rareMobFlag==false){var x=~~((M.random()*42));if(M.random()>.0011){var z2=M.random();if(P.Q[df].CastleMistmoore===1&&_SZ===1){if(z2>.62){x=29;}else if(z2<.33){x=0;}else{x=15;}
if(P.Q[df].CM1>=8&&P.Q[df].CM2>=7&&P.Q[df].CM3>=6&&mobsFound()===false){x=45;}}
if(P.Q[df].CastleMistmoore===2&&_SZ===2){if(z2>.66){x=18;}else if(z2>.41){x=19;}else if(z2>.16){x=14;}else{x=40;}
if(P.Q[df].CM1>=8&&P.Q[df].CM2>=6&&P.Q[df].CM3>=6&&P.Q[df].CM4>=4&&mobsFound()===false){x=42;delayedMonsterTimer();}}
if((P.Q[df].CastleMistmoore===3&&_SZ===3)||(P.Q[df].CastleMistmoore>3&&P.Q[df].repeatCm3===false&&_SZ===3)){if(z2>.75){x=5;}else if(z2>.5){x=3;}else if(z2>.25){x=30;}else{x=27;}
if(P.Q[df].CM1>=7&&P.Q[df].CM2>=7&&P.Q[df].CM3>=7&&P.Q[df].CM4>=7){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].CM5<1){x=43;P.Q[df].CM5=1;}else{x=44;P.Q[df].CM6=1;}}else{if(P.Q[df].CM5<1){x=43;P.Q[df].CM5=1;}
if(P.Q[df].CM6<1){x=44;P.Q[df].CM6=1;}}}}}
if(x==0){Mname="an initiate familiar";Mlvl=32;Mimg="a dark elf female";Mjob="ROG";}
if(x==1){Mname="a dark elf noble";Mlvl=32;Mimg="a dark elf female";Mjob="WIZ";}
if(x==2){Mname="a dark offerer";Mlvl=33;Mimg="a dark elf matron";Mjob="NEC";}
if(x==3){Mname="a dark ritualist";Mlvl=34;Mimg="a dark elf matron";Mjob="NEC";}
if(x==4){Mname="a dark sacrificer";Mlvl=33;Mimg="a dark elf matron";Mjob="NEC";}
if(x==5){Mname="a deathly harbinger";Mlvl=36;Mimg="a dark elf male plate";}
if(x==6){Mname="a deathly herald";Mlvl=34;Mimg="a dark elf male plate";}
if(x==7){Mname="a deathly usher";Mlvl=32;Mimg="a dark elf male plate";}
if(x==8){Mname="a flouting gargoyle";Mlvl=33;Mimg="a gargoyle";Mwidth=250;}
if(x==9){Mname="a ghastish ancille";Mlvl=32;Mimg="a dark elf female plate";}
if(x==10){Mname="a deathly usher";Mlvl=32;Mimg="a dark elf male plate";}
if(x==11){Mname="a ghostly ancille";Mlvl=35;Mimg="a dark elf female";Mjob="WIZ";}
if(x==12){Mname="a ghoulish ancille";Mlvl=33;Mimg="a dark elf female plate";}
if(x==13){Mname="a glyphed aegis";Mlvl=31;Mimg="a dark elf male";}
if(x==14){Mname="a glyphed custodian";Mlvl=33;Mimg="a dark elf female";Mjob="CLR";}
if(x==15){Mname="a glyphed familiar";Mlvl=32;Mimg="a dark elf female";}
if(x==16){Mname="a glyphed forbidder";Mlvl=30;Mimg="a dark elf female";Mjob="CLR";}
if(x==17){Mname="a deathly usher";Mlvl=32;Mimg="a dark elf male plate";}
if(x==18){Mname="a glyphed guard";Mlvl=32;Mimg="a dark elf female";}
if(x==19){Mname="a glyphed sentry";Mlvl=32;Mimg="a dark elf male";}
if(x==20){Mname="a glyphed warder";Mlvl=31;Mimg="a dark elf male";Mjob="CLR";}
if(x==21){Mname="a grinning gargoyle";Mlvl=31;Mimg="a gargoyle";Mwidth=210;}
if(x==22){Mname="a deathly harbinger";Mlvl=36;Mimg="a dark elf male plate";}
if(x==23){Mname="a deathly herald";Mlvl=34;Mimg="a dark elf male plate";}
if(x==24){Mname="a deathly usher";Mlvl=32;Mimg="a dark elf male plate";}
if(x==25){Mname="a deathly herald";Mlvl=34;Mimg="a dark elf male plate";}
if(x==26){Mname="a jeering gargoyle";Mlvl=34;Mimg="a gargoyle";Mwidth=230;}
if(x==27){Mname="a leering gargoyle";Mlvl=36;Mimg="a gargoyle";Mwidth=250;}
if(x==28){Mname="a negotiator";Mlvl=33;Mimg="a dark elf female";Mjob="ENC";}
if(x==29){Mname="a pledge familiar";Mlvl=31;Mimg="a dark elf female";}
if(x==30){Mname="a shadowy sage";Mlvl=36;Mimg="a dark elf female";Mjob="WIZ";}
if(x==31){Mname="a shadowy scribe";Mlvl=33;Mimg="a dark elf female";Mjob="WIZ";}
if(x==32){Mname="a shadowy scrivener";Mlvl=31;Mimg="a dark elf female";Mjob="WIZ";}
if(x==33){Mname="a sneering gargoyle";Mlvl=31;Mimg="a gargoyle";}
if(x==34){Mname="a dark offerer";Mlvl=33;Mimg="a dark elf matron";Mjob="NEC";}
if(x==35){Mname="a dark ritualist";Mlvl=34;Mimg="a dark elf matron";Mjob="NEC";}
if(x==36){Mname="a dark sacrificer";Mlvl=33;Mimg="a dark elf matron";Mjob="NEC";}
if(x==37){Mname="a shadowy sage";Mlvl=36;Mimg="a dark elf female";Mjob="WIZ";}
if(x==38){Mname="a shadowy scribe";Mlvl=33;Mimg="a dark elf female";Mjob="WIZ";}
if(x==39){Mname="a shadowy scrivener";Mlvl=31;Mimg="a dark elf female";Mjob="WIZ";}
if(x==40){Mname="a negotiator";Mlvl=33;Mimg="a dark elf female";Mjob="ENC";}
if(x==41){Mname="a wightish ancille";Mlvl=33;Mimg="a dark elf matron";Mjob="NEC";}
if(x==42){Mname="Dragoon Reklyn";Mlvl=33;Mimg="a dark elf male plate";Mfreq=4;Menrage=true;Mbarrier=true;Mrare=0;}
if(x==43){Mname="Countess Varnia";Mlvl=36;Mimg="a dark elf matron";Mjob="NEC";Mrare=0;}
if(x==44){Mname="Zigruben";Mlvl=36;Mimg="a dark elf male plate";Mrare=0;Mjob="SK";}
if(x==45){Mname="Lieutenant Xagorn";Mlvl=32;Mimg="a dark elf male";Mrare=0;}}else{Mrare=0;var x=~~(M.random()*(7));if(x==0){Mname="Butler Armetrin";Mlvl=33;Mimg="a dark elf male";Mjob="SK";}
if(x==1){Mname="Vindemir Remadi";Mlvl=35;Mimg="a dark elf male plate";Mfreq=4;Mjob="SK";}
if(x==2){Mname="Arlyssa Divin";Mlvl=34;Mimg="a dark elf female";Mjob="NEC";}
if(x==3){Mname="Maid Tarmuni";Mlvl=33;Mimg="a dark elf female";Mfreq=4;Mjob="NEC";}
if(x==4){Mname="Serena Artulis";Mlvl=32;Mimg="a dark elf female";Mjob="ENC";Msanctuary=true;}
if(x==5){Mname="an imp familiar";Mlvl=33;Mimg="an imp";Mwidth=170;Mflurry=true;}
if(x==6){Mname="Methrudin";Mlvl=31;Mimg="a shadowed man";Mwidth=180;Mjob="WIZ";MironMaiden=true;Msanctuary=true;}}
var a=1;if(_SZ===1){if(Mlvl>32){a=0;}}else if(_SZ===2){if(Mlvl<32||Mlvl>33){a=0;}}else{if(Mlvl<33){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Lanfeld Outpost"){if(rareMobFlag==false){var x=~~((M.random()*(10)));if(M.random()>.0011){if(P.Q[df].Crushbone===1&&_SZ===1){var z2=M.random();if(z2>.5){x=5;}else if(z2<.25){x=1;}else{x=8;}}
if(P.Q[df].Crushbone===2&&_SZ===2){var z2=M.random();if(z2>.66){x=4;}else if(z2<.33){x=3;}else{x=7;}
if(P.Q[df].CB1>=7&&P.Q[df].CB2>=7&&P.Q[df].CB3>=7&&mobsFound()===false){x=10;}}
if(P.Q[df].Crushbone>=3&&P.Q[df].repeatCB===false&&_SZ===3){var z2=M.random();if(z2>.58){x=6;}else if(z2<.33){x=0;}else{x=2;}
if(P.Q[df].CB1>=10&&P.Q[df].CB2>=8&&P.Q[df].CB3>=6){if(mobsFound()===false){x=11;}}}}
if(x==0){Mname="an orc royal guard";Mlvl=19;Mimg="an orc";Mwidth=220;}
if(x==1){Mname="an orc centurion";Mlvl=16;Mimg="an orc";Mwidth=200;}
if(x==2){Mname="an orc emissary";Mlvl=19;Mimg="an orc";Mwidth=240;}
if(x==3){Mname="an orc legionnaire";Mlvl=18;Mimg="an orc";Mwidth=260;}
if(x==4){Mname="an orc oracle";Mlvl=17;Mimg="an orc";Mwidth=220;Mjob="SHM";}
if(x==5){Mname="an orc pawn";Mlvl=15;Mimg="an orc";Mwidth=160;}
if(x==6){Mname="an orc scoutsman";Mlvl=18;Mimg="an orc";Mwidth=210;}
if(x==7){Mname="an orc lookout";Mlvl=17;Mimg="an orc";Mwidth=210;}
if(x==8){Mname="an orc slaver";Mlvl=17;Mimg="an orc";Mwidth=240;}
if(x==9){Mname="an orc warden";Mlvl=17;Mimg="an orc";Mwidth=250;}
if(x==10){Mname="an orc warlord";Mlvl=18;Mimg="an orc";Mwidth=260;Mfreq=8;Menrage=true;MironMaiden=true;Mrare=0;}
if(x==11){Mname="Chief Grimden";Mlvl=20;Mimg="grimden";Mwidth=370;Mfreq=8;Mrare=3;}}else{Mrare=0;var x=~~((M.random()*(4)));if(x==0){Mname="Soothsayer Kundo";Mlvl=18;Mimg="an orc";Mwidth=240;Mjob="SHM";Msanctuary=true;}
if(x==1){Mname="Lord Xavol";Mlvl=17;Mimg="an orc";Mwidth=280;}
if(x==2){Mname="an orc slavedriver";Mlvl=16;Mimg="an orc";Mwidth=250;}
if(x==3){Mname="an orc sergeant";Mlvl=15;Mimg="an orc";Mwidth=240;Mbarrier=true;}}
var a=1;if(_SZ===1){if(Mlvl>17){a=0;}}else if(_SZ===2){if(Mlvl<17||Mlvl>18){a=0;}}else{if(Mlvl<18){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Arcturin's Crypt"){if(rareMobFlag==false){var x=~~((M.random()*(20)));if(M.random()>.0011){var z2=M.random();if(P.Q[df].EstateofUnrest===1&&_SZ===1){if(z2>.56){x=5;}else if(z2<.33){x=2;}else{x=14;}}
if(P.Q[df].EstateofUnrest===2&&_SZ===2){if(z2>.68){x=19;}else if(z2<.33){x=11;}else{x=0;}
if(P.Q[df].ER1>=10&&P.Q[df].ER2>=8&&P.Q[df].ER3>=6&&mobsFound()===false){x=20;delayedMonsterTimer();}}
if(P.Q[df].EstateofUnrest>=3&&P.Q[df].repeatER===false&&_SZ===3){if(z2>.69){x=4;}else if(z2>.38){x=6;}else if(z2>.19){x=8;}else{x=18;}
if(P.Q[df].ER1>=8&&P.Q[df].ER2>=8&&P.Q[df].ER3>=5&&P.Q[df].ER4>=5&&mobsFound()===false){x=21;}}}
if(x==0){Mname="a nymph";Mlvl=30;Mimg="a faerie";Mjob="WIZ";}
if(x==1){Mname="a werewolf";Mlvl=31;Mimg="a werewolf";Mdrain=true;}
if(x==2){Mname="a tormented dead";Mlvl=28;Mimg="a male zombie";}
if(x==3){Mname="a dark cephalid";Mlvl=32;Mimg="a terror";Mjob="ENC"}
if(x==4){Mname="a mortuary fungus";Mlvl=31;Mimg="a fungus";}
if(x==5){Mname="a death beetle";Mlvl=27;Mimg="a beetle";Mwidth=320;}
if(x==6){Mname="a dusty werewolf";Mlvl=31;Mimg="a werewolf";}
if(x==7){Mname="a dark boned skeleton";Mlvl=29;Mimg="a dark skeleton";}
if(x==8){Mname="a cephalid subverter";Mlvl=32;Mimg="a terror";Mjob="ENC"}
if(x==9){Mname="a barbed bone skeleton";Mlvl=31;Mimg="a dark skeleton";Mthorns=0;}
if(x==10){Mname="an undead brewer";Mlvl=30;Mimg="a male zombie";}
if(x==11){Mname="a crazed ghoul";Mlvl=30;Mimg="a ghoul";Mwidth=350;}
if(x==12){Mname="a skeletal monk";Mlvl=29;Mimg="a dark skeleton";Mjob="MNK";}
if(x==13){Mname="a lurking mummy";Mlvl=30;Mimg="a mummy";}
if(x==14){Mname="a lumbering mummy";Mlvl=29;Mimg="a mummy";}
if(x==15){Mname="a greater skeleton";Mlvl=28;Mimg="a skeleton";}
if(x==16){Mname="a greater dark bone";Mlvl=30;Mimg="a dark skeleton";}
if(x==17){Mname="a ghoul";Mlvl=29;Mimg="a ghoul";Mwidth=320;}
if(x==18){Mname="a festering hag";Mlvl=32;Mimg="a female zombie";Mjob="WIZ";}
if(x==19){Mname="a dry bone skeleton";Mlvl=29;Mimg="a skeleton";}
if(x==20){Mname="Arch Duke of Artremia";Mlvl=31;Mimg="a male zombie";Mflurry=true;Mbarrier=true;Mrare=0;}
if(x==21){Mname="Arcturin, the Lich King";Mlvl=32;Mimg="garanel rucksif";Mwidth=280;Mfreq=6;Mrare=3;}}else{Mrare=0;var x=~~(M.random()*5);if(x==0){Mname="Crackshot";Mlvl=28;Mimg="a beetle";Mfreq=8;Mflurry=true;Mwidth=450;}
if(x==1){Mname="Sarth Dimnog";Mlvl=28;Mimg="a ghoul";Mwidth=330;Mjob="CLR";Msanctuary=true;}
if(x==2){Mname="Murgle the Intrepid";Mlvl=29;Mimg="a male zombie";Mfreq=8;Menrage=true;Mskill[2]="engulfing darkness";Mskill[4]="poison cloud";Mfreq=8;MharmTouch=0;Mskeleton=0;}
if(x==3){Mname="an undead bartender";Mlvl=30;Mimg="a male zombie";Mbarrier=true;}
if(x==4){Mname="Roble Shermith";Mlvl=31;Mimg="a ghoul";Mwidth=320;Mjob="NEC";Msanctuary=true;}}
var a=1;if(_SZ===1){if(Mlvl>29){a=0;}}else if(_SZ===2){if(Mlvl<29||Mlvl>31){a=0;}}else{if(Mlvl<31){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Salubrin Forest"){if(rareMobFlag==false){var x=~~((M.random()*(28)));var z=M.random();if(P.Q[df].GreaterFaydark===1&&z>.0011){x=27;}
if(P.Q[df].GreaterFaydark===3&&z>.0011){if(M.random()>.5){x=25;}else{x=24;}}
if(x==0){Mname="an orc centurion";Mlvl=2;Mimg="an orc";Mwidth=200;}
if(x==1){Mname="a prowling wolf";Mlvl=1;Mimg="a wolf";Mwidth=280;}
if(x==2){Mname="a coyote";Mlvl=3;Mimg="a wolf";Mwidth=330;}
if(x==3){Mname="a young coyote";Mlvl=2;Mimg="a wolf";Mwidth=270;Mwidth=270;}
if(x==4){Mname="an orc oracle";Mlvl=3;Mimg="an orc";Mwidth=200;Mjob="SHM";}
if(x==5){Mname="an orc centurion";Mlvl=2;Mimg="an orc";Mwidth=200;}
if(x==6){Mname="an orc centurion";Mlvl=2;Mimg="an orc";Mwidth=200;}
if(x==7){Mname="a faerie";Mlvl=2;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==8){Mname="an orc shaman";Mlvl=2;Mimg="an orc";Mwidth=200;Mjob="SHM";}
if(x==9){Mname="a faerie courtier";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==10){Mname="a faerie duchess";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==11){Mname="a faerie guard";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==12){Mname="a faerie maiden";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==13){Mname="a faerie noble";Mlvl=1;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==14){Mname="a faerie maiden";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==15){Mname="a faerie noble";Mlvl=3;Mimg="a faerie";Mwidth=150;}
if(x==16){Mname="a faerie royal guard";Mlvl=3;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==17){Mname="a faerie troublemaker";Mlvl=1;Mimg="a faerie";Mwidth=150;Mjob="RNG";}
if(x==18){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}
if(x==19){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}
if(x==20){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}
if(x==21){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}
if(x==22){Mname="a willowisp";Mlvl=3;Mimg="a wisp";}
if(x==23){Mname="a decaying skeleton";Mlvl=1;Mimg="a skeleton";}
if(x==24){Mname="an orc centurion";Mlvl=2;Mimg="an orc";Mwidth=200;}
if(x==25){Mname="an orc hatchetman";Mlvl=3;Mimg="an orc";Mwidth=200;}
if(x==26){Mname="an orc oracle";Mlvl=3;Mimg="an orc";Mwidth=200;Mjob="SHM";}
if(x==27){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}}else{Mrare=0;var x=~~(M.random()*2);if(x==0){Mname="Corpsefire";Mlvl=1;Mimg="a male zombie";Mfreq=6;Mskill[1]="fireball";Mskill[2]="conflagration";Mskill[3]="fireball";}
if(x==1){Mname="Sergeant Boggun";Mlvl=2;Mimg="an orc";Mwidth=215;Msanctuary=true;}}}
if(_Z==="Viston's Redoubt"){if(_SZ!==4){if(rareMobFlag==false){var x=~~((M.random()*(22)));if(M.random()>.0011){var z2=M.random();if(P.Q[df].KedgeKeep===1&&_SZ===1){if(z2>.66){x=1;}else if(z2<.33){x=14;}else{x=12;}
if(P.Q[df].KK1>=8&&P.Q[df].KK2>=8&&P.Q[df].KK3>=8&&mobsFound()===false){x=25;delayedMonsterTimer();}}
if(P.Q[df].KedgeKeep===2&&_SZ===2){if(z2>.69){x=9;}else if(z2>.39){x=13;}else if(z2>.18){x=4;}else{x=6;}
if(P.Q[df].KK1>=8&&P.Q[df].KK2>=8&&P.Q[df].KK3>=5&&P.Q[df].KK4>=5&&mobsFound()===false){x=22;delayedMonsterTimer();}}
if(P.Q[df].KedgeKeep===3&&_SZ===3||(P.Q[df].KedgeKeep>3&&P.Q[df].repeatKk3===false&&_SZ===3)){if(z2>.64){x=18;}else if(z2>.29){x=17;}else{x=21;}
if(P.Q[df].KK1>=10&&P.Q[df].KK2>=10&&P.Q[df].KK3>=8){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].KK4<1){x=24;P.Q[df].KK4=1;}else{x=23;P.Q[df].KK5=1;}}else{if(P.Q[df].KK4<1){x=24;P.Q[df].KK4=1;}
if(P.Q[df].KK5<1){x=23;P.Q[df].KK5=1;}}}}}
if(x==0){Mname="a gazing gargoyle";Mlvl=43;Mimg="a gargoyle";Mwidth=250;}
if(x==1){Mname="a peering gargoyle";Mlvl=40;Mimg="a gargoyle";Mwidth=250;}
if(x==2){Mname="a voracious gargoyle";Mlvl=43;Mimg="a gargoyle";Mwidth=250;}
if(x==3){Mname="an afflicted gargoyle";Mlvl=44;Mimg="a gargoyle";Mwidth=250;}
if(x==4){Mname="a lusting werewolf";Mlvl=42;Mimg="a werewolf";}
if(x==5){Mname="a rapacious gargoyle";Mlvl=43;Mimg="a gargoyle";Mwidth=250;}
if(x==6){Mname="a bloodthirsty bat";Mlvl=43;Mimg="a bat";Mdrain=true;}
if(x==7){Mname="a shrieking bat";Mlvl=41;Mimg="a bat";Mdrain=true;}
if(x==8){Mname="a prancing werewolf";Mlvl=42;Mimg="a werewolf";}
if(x==9){Mname="a brooding imp";Mlvl=41;Mimg="an imp";}
if(x==10){Mname="a fuming imp";Mlvl=41;Mimg="an imp";}
if(x==11){Mname="a fretting imp";Mlvl=40;Mimg="an imp";}
if(x==12){Mname="a dread werewolf";Mlvl=41;Mimg="a werewolf";}
if(x==13){Mname="a manacled spoiler";Mlvl=42;Mimg="a vampire female";Mjob="WIZ";}
if(x==14){Mname="a fettered defiler";Mlvl=40;Mimg="a vampire female";Mjob="NEC";}
if(x==15){Mname="an inveigled ravisher";Mlvl=42;Mimg="a vampire female";}
if(x==16){Mname="a heart destroyer";Mlvl=41;Mimg="a vampire female";}
if(x==17){Mname="a soul destroyer";Mlvl=44;Mimg="a dhampyre";Mjob="WIZ";}
if(x==18){Mname="a pained seether";Mlvl=44;Mimg="a dhampyre";Mjob="MAG";}
if(x==19){Mname="a panic imbiber";Mlvl=43;Mimg="a dhampyre";}
if(x==20){Mname="a dread fomenter";Mlvl=42;Mimg="a dhampyre";}
if(x==21){Mname="a vampire bat";Mlvl=44;Mimg="a bat";Mdrain=true;}
if(x==22){Mname="Shardok";Mlvl=43;Mimg="a gargoyle";Mfreq=8;Menrage=true;Mbarrier=true;Mrare=0;Mwidth=320;}
if(x==23){Mname="Korman Valen";Mlvl=45;Mimg="a dhampyre";Mjob="SK";Msanctuary=true;Mrare=0;}
if(x==24){Mname="Artun Desmoni";Mlvl=44;Mimg="a vampire female";Mjob="WIZ";Msanctuary=true;Mrare=0;}
if(x==25){Mname="Sari Portentia";Mlvl=41;Mimg="a vampire female";Mjob="NEC";Mflurry=true;Mrare=0;}}else{Mrare=0;var x=~~(M.random()*3);if(x==0){Mname="Kragmore";Mlvl=41;Mimg="a gargoyle";Mwidth=320;Mfreq=8;Menrage=true;Mbarrier=true;}
if(x==1){Mname="Vera Sintella";Mlvl=45;Mimg="a vampire female";Mjob="MAG";Msanctuary=true;}
if(x==2){Mname="Gorelyanthe";Mlvl=43;Mimg="a purple dragon";Mjob="WIZ";Mamp=true;Msanctuary=true;Mwidth=640;}}}
if(_SZ===4){if(P.Q[df].KedgeKeep>=4){var x=0;if(M.random()>.6){x=1;}
if(P.Q[df].KK6>=18&&P.Q[df].KK7>=12){if(mobsFound()===false&&P.Q[df].KK8===0){x=2;}else{x=0;}}}
if(x==0){Mname="a sinew punisher";Mlvl=44;Mimg="a dhampyre";Mwidth=180;Mjob="CLR";}
if(x==1){Mname="Blood Guardian";Mlvl=45;Mimg="a dhampyre";Mwidth=180;Mjob="CLR";}
if(x==2){Mname="Revenant Viston";Mlvl=45;Mimg="phinigel autropos";Mrare=3;}}
var a=1;if(_SZ===1){if(Mlvl>42){a=0;}}else if(_SZ===2){if(Mlvl<41||Mlvl>43){a=0;}}else{if(Mlvl<43){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Tendolin Meadows"){if(rareMobFlag==false){var x=~~((M.random()*(29)));var z=M.random();if(P.Q[df].LesserFaydark===1&&z>.0011){var z2=M.random();if(z2>.66){x=17;}else{x=18;}}
if(x==0){Mname="a skeleton";Mlvl=3;Mimg="a skeleton";}
if(x==1){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==2){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==3){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==4){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==5){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==6){Mname="a faerie";Mlvl=4;Mimg="a faerie";Mwidth=150;}
if(x==7){Mname="a faerie";Mlvl=4;Mimg="a faerie";Mwidth=150;}
if(x==8){Mname="a faerie";Mlvl=4;Mimg="a faerie";Mwidth=150;}
if(x==9){Mname="a faerie courtier";Mlvl=5;Mimg="a faerie";Mwidth=150;}
if(x==10){Mname="a faerie guard";Mlvl=5;Mimg="a faerie";Mwidth=150;}
if(x==11){Mname="a faerie maiden";Mlvl=5;Mimg="a faerie";Mwidth=150;}
if(x==12){Mname="a fairy guard";Mlvl=5;Mimg="a faerie";Mwidth=150;}
if(x==13){Mname="a giant spider";Mlvl=4;Mimg="a brown spider";Mwidth=300;}
if(x==14){Mname="a mist wolf";Mlvl=4;Mimg="a wolf";Mwidth=320;}
if(x==15){Mname="a faerie";Mlvl=4;Mimg="a faerie";Mwidth=150;}
if(x==16){Mname="a mummy";Mlvl=5;Mimg="a mummy";}
if(x==17){Mname="a pixie prankster";Mlvl=3;Mimg="a faerie";}
if(x==18){Mname="a pixie trickster";Mlvl=4;Mimg="a faerie";}
if(x==19){Mname="a shadowed man";Mlvl=5;Mimg="a shadowed man";Mwidth=180;}
if(x==20){Mname="a skeleton";Mlvl=3;Mimg="a skeleton";}
if(x==21){Mname="a spiderling";Mlvl=3;Mimg="a heart spider";Mwidth=200;}
if(x==22){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}
if(x==23){Mname="a faerie";Mlvl=4;Mimg="a faerie";Mwidth=150;}
if(x==24){Mname="an orc centurion";Mlvl=3;Mimg="an orc";Mwidth=200;}
if(x==25){Mname="an orc chief";Mlvl=5;Mimg="an orc";Mwidth=220;}
if(x==26){Mname="an orc legionnaire";Mlvl=4;Mimg="an orc";Mwidth=230;}
if(x==27){Mname="an orc oracle";Mlvl=5;Mimg="an orc";Mwidth=220;Mjob="SHM";}
if(x==28){Mname="an orc pawn";Mlvl=1;Mimg="an orc";Mwidth=160;}}else{Mrare=0;var x=~~(M.random()*2);if(x==0){Mname="Queen Fargash";Mlvl=5;Mimg="a brown spider";Mwidth=420;Mskill[2]="blind";Mskill[3]="blind";Mflurry=true;Mdrain=true;}
if(x==1){Mname="Fara Quindletip";Mlvl=4;Mimg="a faerie";Mthorns=0;Msanctuary=true;}}}
function humanGender(){if(M.random()>.5){Mimg="a human female";}else{Mimg="a human male";}}
if(_Z==="Riven Grotto"){if(rareMobFlag==false){var x=~~((M.random()*(23)));if(M.random()>.0011){var z2=M.random();if(P.Q[df].Befallen===1&&_SZ===1){if(z2>.66){x=6;}else if(z2<.33){x=5;}else{x=11;}}
if(P.Q[df].Befallen===2&&_SZ===2){if(z2>.62){x=8;}else if(z2<.38){x=3;}else{x=13;}
if(P.Q[df].BF1>=8&&P.Q[df].BF2>=8&&P.Q[df].BF3>=5&&mobsFound()===false){x=23;}}
if(P.Q[df].Befallen===3&&_SZ===3){if(z2>.6){x=22;}else if(z2<.3){x=9;}else{x=12;}
if(P.Q[df].BF1>=9&&P.Q[df].BF2>=7&&P.Q[df].BF3>=7){if(mobsFound()===false){x=24;delayedMonsterTimer();}}}}
if(x==0){Mname="a giant rat";Mlvl=10;Mimg="a rat";}
if(x==1){Mname="a diseased rat";Mlvl=11;Mimg="a rat";}
if(x==2){Mname="a large diseased rat";Mlvl=12;Mimg="a rat";}
if(x==3){Mname="a necro acolyte";Mlvl=13;Mimg="a dark elf male";Mjob="NEC";}
if(x==4){Mname="a necro apprentice";Mlvl=12;Mimg="a dark elf male";Mjob="NEC";}
if(x==5){Mname="a necro initiate";Mlvl=12;humanGender();Mwidth=180;Mjob="NEC";}
if(x==6){Mname="a necro neophyte";Mlvl=11;Mimg="a dark elf male";Mjob="NEC";}
if(x==7){Mname="a willowisp";Mlvl=13;Mimg="a wisp";}
if(x==8){Mname="an ice boned skeleton";Mlvl=12;Mimg="a skeleton";}
if(x==9){Mname="a burnt zombie";Mlvl=15;Mimg="a male zombie";}
if(x==10){Mname="a cracked skeleton";Mlvl=12;Mimg="a skeleton";}
if(x==11){Mname="a dread bone";Mlvl=12;Mimg="a dark skeleton";}
if(x==12){Mname="a dread corpse";Mlvl=16;Mimg="a dark skeleton";}
if(x==13){Mname="a ghoul";Mlvl=13;Mimg="a ghoul";Mwidth=350;}
if(x==14){Mname="a greater skeleton";Mlvl=13;Mimg="a skeleton";}
if(x==15){Mname="a lesser mummy";Mlvl=13;Mimg="a mummy";Mwidth=180;}
if(x==16){Mname="a putrid skeleton";Mlvl=11;Mimg="a skeleton";}
if(x==17){Mname="a skeletal excavator";Mlvl=14;Mimg="a skeleton";}
if(x==18){Mname="a skeletal foreman";Mlvl=14;Mimg="a dark skeleton";}
if(x==19){Mname="a skeleton";Mlvl=10;Mimg="a skeleton";Mskill[3]="fireball";}
if(x==20){Mname="a sturdy skeleton";Mlvl=12;Mimg="a skeleton";}
if(x==21){Mname="a zombie";Mlvl=12;Mimg="a female zombie";}
if(x==22){Mname="an elf skeleton";Mlvl=14;Mimg="a skeleton";}
if(x==23){Mname="Dark Priest Nymda";Mlvl=14;Mimg="a dark elf male";Mjob="CLR";Msanctuary=true;Mrare=0;}
if(x==24){Mname="The Black Seer";Mlvl=16;Mimg="a dark elf male";Mjob="WIZ";Mamp=true;Mrare=0;}}else{Mrare=0;var x=~~(M.random()*5);if(x==0){Mname="Necromus Ignoble";Mlvl=11;Mimg="a human male";Mwidth=180;Mjob="NEC";Mamp=true;}
if(x==1){Mname="Gerdin Farth";Mlvl=13;Mimg="a mummy";Menrage=true;}
if(x==2){Mname="Sinfura Dagon";Mlvl=15;Mimg="a human female";Mjob="ROG";Mfreq=8;Mflurry=true;}
if(x==3){Mname="Lieutenant Relben";Mlvl=15;Mimg="a male zombie";Menrage=true;}
if(x==4){Mname="Flippy the Rat God";Mlvl=12;Mimg="a rat";Mjob="RNG";Mskeleton=0;Mwolf=0;Melemental=0;Mflurry=true;Menrage=true;}}
var a=1;if(_SZ===1){if(Mlvl>12){a=0;}}else if(_SZ===2){if(Mlvl<11||Mlvl>14){a=0;}}else{if(Mlvl<14){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Greenthorn Cavern"){if(rareMobFlag==false){var x=~~(M.random()*(12));if(M.random()>.0011){if(P.Q[df].Blackburrow===1&&_SZ===1){var z2=M.random();if(z2>.55){x=4;}else if(z2<.33){x=9;}else{x=5;}}
if(P.Q[df].Blackburrow===2&&_SZ===2){var z2=M.random();if(z2>.64){x=6;}else if(z2<.36){x=8;}else{x=11;}
if(P.Q[df].BB1>=8&&P.Q[df].BB2>=8&&P.Q[df].BB3>=6&&mobsFound()===false){x=12;}}
if(P.Q[df].Blackburrow===3&&_SZ===3){var z2=M.random();if(z2>.5){x=10;}else if(z2<.33){x=7;}else{x=2;}
if(P.Q[df].BB1>=12&&P.Q[df].BB2>=8&&P.Q[df].BB3>=4&&mobsFound()===false){x=13;if(g.difficulty>1){delayedMonsterTimer();}}}}
if(x==0){Mname="a burly gnoll";Mlvl=9;Mimg="a gnoll";Mwidth=300;}
if(x==1){Mname="a gnoll";Mlvl=7;Mimg="a gnoll";Mwidth=250;}
if(x==2){Mname="a gnoll commander";Mlvl=11;Mimg="a gnoll";Mwidth=350;}
if(x==3){Mname="a gnoll guardsman";Mlvl=10;Mimg="a gnoll";Mwidth=330;}
if(x==4){Mname="a gnoll pup";Mlvl=6;Mimg="a gnoll";Mwidth=200;}
if(x==5){Mname="a gnoll scout";Mlvl=7;Mimg="a gnoll";Mwidth=250;}
if(x==6){Mname="a gnoll shaman";Mlvl=8;Mimg="a gnoll";Mwidth=270;Mjob="SHM";}
if(x==7){Mname="a gnoll tactician";Mlvl=10;Mimg="a gnoll";Mwidth=270;}
if(x==8){Mname="a patrolling gnoll";Mlvl=7;Mimg="a gnoll";Mwidth=270;}
if(x==9){Mname="a scrawny gnoll";Mlvl=6;Mimg="a gnoll";Mwidth=230;}
if(x==10){Mname="an elite gnoll guard";Mlvl=10;Mimg="a gnoll";Mwidth=310;}
if(x==11){Mname="a gnoll sergeant";Mlvl=8;Mimg="a gnoll";}
if(x==12){Mname="Furrpaw Barxen";Mlvl=9;Mimg="a gnoll";Mwidth=330;Mfreq=8;Menrage=true;Mdrain=true;Mrare=0;}
if(x==13){Mname="Viceroy Tanaden";Mlvl=11;Mimg="a gnoll";Mwidth=350;Mjob="SK";Mdrain=true;Mrare=0;}}else{Mrare=0;var x=~~(M.random()*3);if(x==0){Mname="Rikren Armaw";Mlvl=6;Mimg="a gnoll";Mwidth=270;Mjob="ROG";Mdrain=true;}
if(x==1){Mname="Grifruf Arpen";Mlvl=8;Mimg="a gnoll";Mwidth=300;Mfreq=8;Menrage=true;Mdrain=true;}
if(x==2){Mname="Rappy Grimpaw";Mlvl=11;Mimg="a gnoll";Mwidth=330;Menrage=true;}}
var a=1;if(_SZ===1){if(Mlvl>7){a=0;}}else if(_SZ===2){if(Mlvl<7||Mlvl>9){a=0;}}else{if(Mlvl<10){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Temple of Prenssor"){if(rareMobFlag==false){var x=~~((M.random()*19));if(M.random()>.0011){var z2=M.random();if(P.Q[df].CazicThule===1&&_SZ===1){if(z2>.56){x=6;}else if(z2<.33){x=12;}else{x=5;}
if(P.Q[df].CT1>=8&&P.Q[df].CT2>=6&&P.Q[df].CT3>=4&&mobsFound()===false){x=19;}}
if(P.Q[df].CazicThule===2&&_SZ===2){if(z2>.58){x=9;}else if(z2<.33){x=14;}else{x=11;}
if(P.Q[df].CT1>=10&&P.Q[df].CT2>=8&&P.Q[df].CT3>=6){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].CT4<1){x=20;P.Q[df].CT4=1;}else{x=21;P.Q[df].CT5=1;}}else{if(P.Q[df].CT4<1){x=20;P.Q[df].CT4=1;}
if(P.Q[df].CT5<1){x=21;P.Q[df].CT5=1;}}}}
if((P.Q[df].CazicThule===3&&_SZ===3)||(P.Q[df].CazicThule>3&&P.Q[df].repeatCt3===false&&_SZ===3)){if(z2>.64){x=17;}else if(z2<.36){x=4;}else{x=3;}
if(P.Q[df].CT1>=10&&P.Q[df].CT2>=10&&P.Q[df].CT3>=8&&mobsFound()===false){x=22;}}}
if(x==0){Mname="a raging gorilla";Mlvl=40;Mimg="a gorilla";Mwidth=400;}
if(x==1){Mname="a hulking gorilla";Mlvl=39;Mimg="a gorilla";Mwidth=380;}
if(x==2){Mname="a fierce gorilla";Mlvl=38;Mimg="a gorilla";Mwidth=360;}
if(x==3){Mname="a lizard champion";Mlvl=42;Mimg="a lizardman";}
if(x==4){Mname="a lizard crusader";Mlvl=41;Mimg="a lizardman";Mjob="SK";}
if(x==5){Mname="a lizard defender";Mlvl=39;Mimg="a lizardman";}
if(x==6){Mname="a lizard disciple";Mlvl=38;Mimg="a lizardman";}
if(x==7){Mname="a lizard fanatic";Mlvl=40;Mimg="a lizardman";}
if(x==8){Mname="a lizard guard";Mlvl=38;Mimg="a lizardman";}
if(x==9){Mname="a lizard herald";Mlvl=39;Mimg="a lizardman";Mjob="CLR";}
if(x==10){Mname="a lizard judicator";Mlvl=40;Mimg="a lizardman";Mjob="CLR";}
if(x==11){Mname="a lizard justicar";Mlvl=40;Mimg="a lizardman";Mjob="CLR";}
if(x==12){Mname="a lizard page";Mlvl=38;Mimg="a lizardman";Mjob="CLR";}
if(x==13){Mname="a lizard proselyte";Mlvl=38;Mimg="a lizardman";}
if(x==14){Mname="a lizard protector";Mlvl=39;Mimg="a lizardman";}
if(x==15){Mname="a lizard sentinel";Mlvl=39;Mimg="a lizardman";}
if(x==16){Mname="a lizard warder";Mlvl=37;Mimg="a lizardman";}
if(x==17){Mname="a lizard zealot";Mlvl=41;Mimg="a lizardman";}
if(x==18){Mname="a silvered guard";Mlvl=38;Mimg="a lizardman";}
if(x==19){Mname="Soprenti the Anointed";Mlvl=39;Mimg="a lizardman";Menrage=true;Mdrain=true;Mjob="CLR";Mrare=0;}
if(x==20){Mname="Sartuth the Possessed";Mlvl=40;Mimg="a lizardman";Msanctuary=true;Mjob="CLR";Mrare=0;}
if(x==21){Mname="Merszas the Divine";Mlvl=39;Mimg="a lizardman";Msanctuary=true;Mbarrier=true;Mjob="ENC";Mrare=0;}
if(x==22){Mname="Sentoth, Lord of Rapture";Mlvl=42;Mimg="avatar of fear";Mjob="SK";Mrare=3;}}else{Mrare=0;var x=~~(M.random()*(5));if(x==0){Mname="a clay golem";Mlvl=39;Mimg="a clay golem";Mwidth=320;Mbarrier=true;Msanctuary=true;}
if(x==1){Mname="a steel golem";Mlvl=38;Mimg="a steel golem";Mwidth=280;Mbarrier=true;Msanctuary=true;Menrage=true;}
if(x==2){Mname="a stone golem";Mlvl=40;Mimg="a stone golem";Mbarrier=true;Msanctuary=true;}
if(x==3){Mname="Vergundi the Blasted";Mlvl=41;Mimg="a lizardman";Mjob="WIZ";Mamp=true;Msilence=true;}
if(x==4){Mname="Vestresst";Mlvl=38;Mimg="a lizardman";Mjob="ROG";}}
var a=1;if(_SZ===1){if(Mlvl>39){a=0;}}else if(_SZ===2){if(Mlvl<39||Mlvl>40){a=0;}}else{if(Mlvl<40){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Kordata Ruins"){if(rareMobFlag==false){var x=~~(M.random()*40);if(M.random()>.0011){var z2=M.random();if(P.Q[df].LowerGuk===1&&_SZ===1){if(z2>.58){x=22;}else if(z2<.33){x=35;}else{x=6;}
if(P.Q[df].LG1>=10&&P.Q[df].LG2>=8&&P.Q[df].LG3>=6){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].LG4<1){x=40;P.Q[df].LG4=1;}else{x=41;P.Q[df].LG5=1;}}else{if(P.Q[df].LG4<1){x=40;P.Q[df].LG4=1;}
if(P.Q[df].LG5<1){x=41;P.Q[df].LG5=1;}}}}
if(P.Q[df].LowerGuk===2&&_SZ===2){if(z2>.71){x=18;}else if(z2>.43){x=26;}else if(z2>.22){x=32;}else{x=4;}
if(P.Q[df].LG1>=8&&P.Q[df].LG2>=8&&P.Q[df].LG3>=6&&P.Q[df].LG4>=6){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].LG5<1){x=42;P.Q[df].LG5=1;}else{x=43;P.Q[df].LG6=1;}}else{if(P.Q[df].LG5<1){x=42;P.Q[df].LG5=1;}
if(P.Q[df].LG6<1){x=43;P.Q[df].LG6=1;}}}}
if(P.Q[df].LowerGuk===3&&_SZ===3||(P.Q[df].LowerGuk>3&&P.Q[df].repeatLg3===false&&_SZ===3)){if(z2>.6){x=2;}else if(z2>.27){x=31;}else{x=30;}
if(P.Q[df].LG1>=12&&P.Q[df].LG2>=10&&P.Q[df].LG3>=8){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].LG4<1){x=44;P.Q[df].LG4=1;}else{x=45;P.Q[df].LG5=1;}}else{if(P.Q[df].LG4<1){x=44;P.Q[df].LG4=1;}
if(P.Q[df].LG5<1){x=45;P.Q[df].LG5=1;}}}}}
if(x==0){Mname="a basalt gargoyle";Mlvl=36;Mimg="a gargoyle";Mwidth=230;}
if(x==1){Mname="an evil eye";Mlvl=36;Mimg="an evil eye round";Mwidth=120;Mjob="WIZ";}
if(x==2){Mname="a mal anuran knight";Mlvl=38;Mimg="an anuran";}
if(x==3){Mname="a clay gargoyle";Mlvl=35;Mimg="a gargoyle";Mwidth=230;}
if(x==4){Mname="a ber anuran knight";Mlvl=38;Mimg="an anuran";}
if(x==5){Mname="a deadly black widow";Mlvl=36;Mimg="a heart spider";Mwidth=350;}
if(x==6){Mname="an amn anuran wizard";Mlvl=36;Mimg="an anuran";Mjob="WIZ";}
if(x==7){Mname="an anuran mal knight";Mlvl=38;Mimg="an anuran";}
if(x==8){Mname="a zig anuran knight";Mlvl=36;Mimg="an anuran";}
if(x==9){Mname="an anuran ber knight";Mlvl=37;Mimg="an anuran";}
if(x==10){Mname="an anuran zod knight";Mlvl=39;Mimg="an anuran";}
if(x==11){Mname="an anuran zod shaman";Mlvl=39;Mimg="an anuran";Mjob="SHM";}
if(x==12){Mname="an anuran ber knight";Mlvl=37;Mimg="an anuran";}
if(x==13){Mname="an anuran ohm shaman";Mlvl=38;Mimg="an anuran";Mjob="SHM";}
if(x==14){Mname="an anuran vex shaman";Mlvl=37;Mimg="an anuran";Mjob="SHM";}
if(x==15){Mname="a mal anuran knight";Mlvl=38;Mimg="an anuran";}
if(x==16){Mname="an anuran cham knight";Mlvl=34;Mimg="an anuran";}
if(x==17){Mname="an anuran cham warrior";Mlvl=34;Mimg="an anuran";Mbarrier=true;}
if(x==18){Mname="a pul anuran knight";Mlvl=36;Mimg="an anuran";}
if(x==19){Mname="an anuran lem shaman";Mlvl=35;Mimg="an anuran";Mjob="SHM";}
if(x==20){Mname="an anuran fal shaman";Mlvl=34;Mimg="an anuran";Mjob="SHM";}
if(x==21){Mname="an anuran amn shaman";Mlvl=35;Mimg="an anuran";Mjob="SHM";}
if(x==22){Mname="an anuran tir knight";Mlvl=35;Mimg="an anuran";}
if(x==23){Mname="an anuran zig knight";Mlvl=35;Mimg="an anuran";}
if(x==24){Mname="an anuran dol shaman";Mlvl=35;Mimg="an anuran";Mjob="SHM";}
if(x==25){Mname="an anuran pul knight";Mlvl=36;Mimg="an anuran";}
if(x==26){Mname="a dol anuran wizard";Mlvl=36;Mimg="an anuran";Mjob="WIZ";}
if(x==27){Mname="a granite gargoyle";Mlvl=36;Mimg="a gargoyle";Mwidth=230;}
if(x==28){Mname="a greater ice bones";Mlvl=35;Mimg="a skeleton";}
if(x==29){Mname="an evil eye sentinel";Mlvl=35;Mimg="an evil eye round";Mjob="WIZ";}
if(x==30){Mname="a zod anuran knight";Mlvl=39;Mimg="an anuran";}
if(x==31){Mname="a zod anuran wizard";Mlvl=38;Mimg="an anuran";Mjob="WIZ";}
if(x==32){Mname="a vex anuran wizard";Mlvl=37;Mimg="an anuran";Mjob="WIZ";}
if(x==33){Mname="a cham anuran knight";Mlvl=34;Mimg="an anuran";}
if(x==34){Mname="a cham anuran warrior";Mlvl=34;Mimg="an anuran";}
if(x==35){Mname="a lem anuran wizard";Mlvl=35;Mimg="an anuran";Mjob="WIZ";}
if(x==36){Mname="a fal anuran wizard";Mlvl=35;Mimg="an anuran";Mjob="WIZ";}
if(x==37){Mname="an amn anuran wizard";Mlvl=35;Mimg="an anuran";Mjob="WIZ";}
if(x==38){Mname="an anuran dol shaman";Mlvl=36;Mimg="an anuran";Mjob="SHM";}
if(x==39){Mname="a tir anuran knight";Mlvl=35;Mimg="an anuran";}
if(x==40){Mname="an anuran assassin";Mlvl=36;Mimg="an anuran";Mrare=0;Mjob="ROG";Mflurry=true;}
if(x==41){Mname="an anuran supplier";Mlvl=36;Mimg="an anuran";MironMaiden=true;Mrare=0;}
if(x==42){Mname="a frenzied anuran";Mlvl=37;Mimg="an anuran";Mflurry=true;Msanctuary=true;Mrare=0;}
if(x==43){Mname="an anuran sentinel";Mlvl=38;Mimg="an anuran";Mfreq=6;Mflurry=true;MironMaiden=true;Mrare=0;}
if(x==44){Mname="King Froaki";Mlvl=39;Mimg="an anuran";Menrage=true;Mflurry=true;MironMaiden=true;Mjob="SK";Mdrain=true;Mbarrier=true;Mrare=0;}
if(x==45){Mname="the anuran arch magus";Mlvl=38;Mimg="an anuran";MironMaiden=true;Mdrain=true;Mbarrier=true;Msilence=true;Mjob="WIZ";Mamp=true;Msanctuary=true;Mrare=0;}}else{Mrare=0;var x=~~(M.random()*15);if(x==0){Mname="a bloodthirsty anuran";Mlvl=37;Mimg="an anuran";Menrage=true;Mflurry=true;}
if(x==1){Mname="an anuran herbalist";Mlvl=35;Mimg="an anuran";MironMaiden=true;Msanctuary=true;}
if(x==2){Mname="an anuran tactician";Mlvl=38;Mimg="an anuran";MironMaiden=true;Msanctuary=true;Mjob="WIZ";}
if(x==3){Mname="an anuran cavalier";Mlvl=35;Mimg="an anuran";Msanctuary=true;Mbarrier=true;Mjob="SK";MironMaiden=true;}
if(x==4){Mname="an anuran executioner";Mlvl=36;Mimg="an anuran";castinFrequency=7;Menrage=true;Mflurry=true;}
if(x==5){Mname="an anuran ritualist";Mlvl=35;Mimg="an anuran";MironMaiden=true;Mamp=true;Mjob="NEC";}
if(x==6){Mname="an anuran sage";Mlvl=37;Mimg="an anuran";Mamp=true;Msanctuary=true;Msilence=true;Mjob="WIZ";Mresolution=0;MironMaiden=true;}
if(x==7){Mname="an anuran savant";Mlvl=37;Mimg="an anuran";Mamp=true;Mjob="CLR";MironMaiden=true;}
if(x==8){Mname="an anuran scribe";Mlvl=36;Mimg="an anuran";Mamp=true;Mjob="ENC";Msanctuary=true;Msilence=true;}
if(x==9){Mname="an evil eye elder";Mlvl=37;Mimg="an evil eye round";Mfreq=6;Mwidth=120;Mjob="WIZ";Mbarrier=true;}
if(x==10){Mname="a nymph";Mlvl=37;Mimg="a faerie";Mamp=true;Msanctuary=true;Mjob="WIZ";Msilence=true;}
if(x==11){Mname="an evil eye tormentor";Mlvl=37;Mimg="an evil eye round";Mfreq=6;Mwidth=120;Mjob="WIZ";MironMaiden=true;}
if(x==12){Mname="an anuran crusader";Mlvl=38;Mimg="an anuran";Mjob="PAL";Msanctuary=true;Mbarrier=true;}
if(x==13){Mname="the anuran king";Mlvl=39;Mimg="an anuran";Mjob="PAL";Msanctuary=true;Mbarrier=true;}
if(x==14){Mname="an anuran noble";Mlvl=37;Mimg="an anuran";MironMaiden=true;Mjob="ENC";}}
var a=1;if(_SZ===1){if(Mlvl>36){a=0;}}else if(_SZ===2){if(Mlvl<36||Mlvl>38){a=0;}}else{if(Mlvl<38){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Ashenflow Peak"){if(_SZ!==4){if(rareMobFlag==false){var x=~~((M.random()*(9)));if(M.random()>.0011){var z2=M.random();if(P.Q[df].NagafensLair===1&&_SZ===1){if(z2>.69){x=0;}else if(z2>.39){x=1;}else if(z2>.19){x=4;}else{x=5;}
if(P.Q[df].NL1>=8&&P.Q[df].NL2>=8&&P.Q[df].NL3>=5&&P.Q[df].NL4>=5){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].NL5<1){x=13;P.Q[df].NL5=1;}else{x=9;P.Q[df].NL6=1;}}else{if(P.Q[df].NL5<1){x=13;P.Q[df].NL5=1;}
if(P.Q[df].NL6<1){x=9;P.Q[df].NL6=1;}}}}
if(P.Q[df].NagafensLair===2&&_SZ===2){if(z2>.62){x=6;}else if(z2>.31){x=7;}else{x=3;}
if(P.Q[df].NL1>=10&&P.Q[df].NL2>=8&&P.Q[df].NL3>=8){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].NL4<1){x=10;P.Q[df].NL4=1;}else{x=11;P.Q[df].NL5=1;}}else{if(P.Q[df].NL4<1){x=10;P.Q[df].NL4=1;}
if(P.Q[df].NL5<1){x=11;P.Q[df].NL5=1;}}}}
if(P.Q[df].NagafensLair===3&&_SZ===3||(P.Q[df].NagafensLair>3&&P.Q[df].repeatNl3===false&&_SZ===3)){if(z2>.6){x=8;}else{x=2;}
if(P.Q[df].NL1>=10&&P.Q[df].NL2>=15&&mobsFound()===false){x=12;delayedMonsterTimer();}}}
if(x==0){Mname="a greater kobold";Mlvl=46;Mimg="a kobold";Mwidth=300;}
if(x==1){Mname="a greater kobold shaman";Mlvl=46;Mimg="a kobold";Mwidth=320;Mjob="SHM";}
if(x==2){Mname="an imp protector";Mlvl=49;Mimg="an imp";Mwidth=170;}
if(x==3){Mname="a lava duct crawler";Mlvl=48;Mimg="a heart spider";Mwidth=400;}
if(x==4){Mname="an ashenflow kobold";Mlvl=47;Mimg="a kobold";Mwidth=300;}
if(x==5){Mname="an ashenflow kobold shaman";Mlvl=47;Mimg="a kobold";Mwidth=320;Mjob="SHM";}
if(x==6){Mname="a sonic bat";Mlvl=47;Mimg="a bat";Mskill[3]="bash";Mfreq=8;}
if(x==7){Mname="a lava beetle";Mlvl=47;Mimg="a beetle";Mwidth=420;}
if(x==8){Mname="a lava guardian";Mlvl=48;Mimg="a fire elemental";}
if(x==9){Mname="an ashenflow kobold king";Mlvl=47;Mimg="a kobold";Mwidth=380;Mfreq=8;Mdrain=true;Mflurry=true;Mbarrier=true;Mrare=0;}
if(x==10){Mname="a noxious spider";Mlvl=48;Mimg="a jungle spider";Mwidth=290;Mskill[1]="envenom";Mskill[2]="poison cloud";Mskill[3]="poison cloud";Mdrain=true;Mamp=true;Mrare=0;}
if(x==11){Mname="a stone spider";Mlvl=48;Mimg="a brown spider";Mwidth=500;Mbarrier=true;Msanctuary=true;Mrare=0;Msilence=true;}
if(x==12){Mname="General Ovext";Mlvl=49;Mimg="an imp";Mwidth=240;Mskill[1]="conflagration";Mskill[2]="fireball";Mskill[3]="fireball";Mflurry=true;Mamp=true;Mrare=0;}
if(x==13){Mname="a kobold noble";Mlvl=46;Mimg="a kobold";Mwidth=370;MironMaiden=true;Msanctuary=true;Mjob="ENC";Mrare=0;}}else{Mrare=0;var x=~~((M.random()*(4)));if(x==0){Mname="a kobold champion";Mlvl=47;Mimg="a kobold";Mwidth=400;Mbarrier=true;Menrage=true;}
if(x==1){Mname="a dung collector";Mlvl=49;Mimg="a red goblin";Msanctuary=true;MironMaiden=true;}
if(x==2){Mname="a death beetle";Mlvl=48;Mimg="a beetle";Mwidth=500;Menrage=true;Mflurry=true;Mdrain=true;}
if(x==3){Mname="a kobold priest";Mlvl=46;Mimg="a kobold";Mwidth=360;Mskill[1]="heal";Mskill[2]="blind";Mskill[3]="smite";Mskill[4]="root";Mresolution=0;Mfreq=4;Msanctuary=true;Mbarrier=true;Mamp=true;}}}
if(_SZ===4){if(P.Q[df].NagafensLair>=4){var x=0;if(M.random()<.4){x=1;}
if(P.Q[df].NL7>=12&&P.Q[df].NL8>=8){if(P.Q[df].NL11<=1&&mobsFound()===false){x=3;P.Q[df].NL11=1;delayedMonsterTimer();}}
if(P.Q[df].NL7>=8){if(P.Q[df].NL10<=1&&mobsFound()===false){x=4;P.Q[df].NL10=1;delayedMonsterTimer();}}
if(P.Q[df].NL7>=4){if(P.Q[df].NL9<=1&&mobsFound()===false){x=2;P.Q[df].NL9=1;delayedMonsterTimer();}}
if(P.Q[df].NL7>=12&&P.Q[df].NL8>=8&&P.Q[df].NL9>=2&&P.Q[df].NL10>=2&&P.Q[df].NL11>=2){if(mobsFound()===false&&P.Q[df].NL12===0){x=5;}else{x=0;}}}
if(x==0){Mname="a fire giant warrior";Mlvl=50;Mimg="a fire giant";}
if(x==1){Mname="a fire giant wizard";Mlvl=50;Mimg="a fire giant";Mskill[1]="smite";Mskill[2]="conflagration";Mskill[3]="energy bolt";Mskill[4]="fireball";Mfreq=3;Mamp=true;}
if(x==2){Mname="King Argentus";Mlvl=51;Mimg="a fire giant";Mrare=0;Mskill[2]="engulfing darkness";Mskill[3]="fear";Mskill[4]="poison cloud";Mfreq=7;MharmTouch=0;Mskeleton=0;}
if(x==3){Mname="Battle Mage Turento";Mlvl=51;Mimg="a fire giant";Mrare=0;Mskill[1]="smite";Mskill[2]="conflagration";Mskill[3]="energy bolt";Mskill[4]="fireball";Mfreq=3;Mamp=true;Msilence=true;}
if(x==4){Mname="Duke Carthenage";Mlvl=50;Mimg="a fire giant";Mrare=0;}
if(x==5){Mname="Highlord Szarthax";Mlvl=51;Mimg="a red dragon";Mrare=3;}}
var a=1;if(_SZ===1){if(Mlvl>47){a=0;}}else if(_SZ===2){if(Mlvl<47||Mlvl>48){a=0;}}else{if(Mlvl<48){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Braxxen's Bastille"){if(rareMobFlag==false){var x=~~((M.random()*16));if(M.random()>.0011){var z2=M.random();if(P.Q[df].Najena===1&&_SZ===1){if(z2>.5){x=3;}else if(z2<.3){x=4;}else{x=13;}
if(P.Q[df].NJ1>=10&&P.Q[df].NJ2>=6&&P.Q[df].NJ3>=4&&mobsFound()===false){x=15;}}
if(P.Q[df].Najena===2&&_SZ===2){if(z2>.58){x=5;}else if(z2<.33){x=10;}else{x=0;}
if(P.Q[df].NJ1>=10&&P.Q[df].NJ2>=8&&P.Q[df].NJ3>=6&&mobsFound()===false){x=16;}}
if(P.Q[df].Najena===3&&_SZ===3){if(z2>.62){x=7;}else if(z2<.31){x=11;}else{x=6;}
if(P.Q[df].NJ1>=10&&P.Q[df].NJ2>=8&&P.Q[df].NJ3>=8){if(mobsFound()===false){delayedMonsterTimer();if(P.Q[df].NJ4<1){x=17;P.Q[df].NJ4=1;}else{x=18;P.Q[df].NJ5=1;}}else{if(P.Q[df].NJ4<1){x=17;P.Q[df].NJ4=1;}
if(P.Q[df].NJ5<1){x=18;P.Q[df].NJ5=1;}}}}}
if(x==0){Mname="an anuran torturer";Mlvl=23;Mimg="an anuran";}
if(x==1){Mname="a giant black widow";Mlvl=21;Mimg="a heart spider";Mwidth=350;}
if(x==2){Mname="a goblin magician";Mlvl=21;Mimg="a red goblin";Mwidth=170;Mjob="MAG";}
if(x==3){Mname="a goblin warrior";Mlvl=20;Mimg="a red goblin";Mwidth=180;}
if(x==4){Mname="a greater skeleton";Mlvl=20;Mimg="a skeleton";}
if(x==5){Mname="a goblin officer";Mlvl=21;Mimg="a red goblin";}
if(x==6){Mname="a goblin captain";Mlvl=24;Mimg="a red goblin";}
if(x==7){Mname="a magician";Mlvl=23;Mimg="a dark elf female";Mjob="MAG";}
if(x==8){Mname="a tentacle horror";Mlvl=22;Mimg="a terror";Mjob="ENC"}
if(x==8){Mname="a tentacle thrasher";Mlvl=20;Mimg="a terror";Mjob="ENC"}
if(x==10){Mname="a necromancer";Mlvl=22;humanGender();Mwidth=180;Mjob="NEC";}
if(x==11){Mname="a cephalid subverter";Mlvl=23;Mimg="a terror";Mjob="ENC"}
if(x==12){Mname="an injured anuran";Mlvl=21;Mimg="an anuran";}
if(x==13){Mname="an anuran guard";Mlvl=21;Mimg="an anuran";}
if(x==14){Mname="a dark boned skeleton";Mlvl=20;Mimg="a dark skeleton";}
if(x==15){Mname="Grippywor";Mlvl=21;Mimg="an anuran";Menrage=true;Mrare=0;}
if(x==16){Mname="Munin";Mlvl=23;Mimg="a dark elf male";Mjob="NEC";Mamp=true;Mrare=0;}
if(x==17){Mname="Burzina";Mlvl=23;Mimg="a dark elf female plate";Mjob="SK";Mrare=0;}
if(x==18){Mname="Braxxen";Mlvl=24;Mimg="braxxen";Mjob="MAG";Mamp=true;Msanctuary=true;Mrare=0;}}else{Mrare=0;var x=~~((M.random()*(6)));if(x==0){Mname="Rendozi";Mlvl=22;Mimg="a human male";Mjob="ROG";Mflurry=true;}
if(x==1){Mname="Officer Flipbip";Mlvl=21;Mimg="an anuran";Menrage=true;}
if(x==2){Mname="Yibuppin";Mlvl=21;Mimg="an anuran";Mflurry=true;MironMaiden=true;}
if(x==3){Mname="Munin's Incarnate";Mlvl=23;Mimg="a skeleton";MironMaiden=true;Mbarrier=true;}
if(x==4){Mname="Carmaxxen";Mlvl=22;Mimg="a dark elf male";Mjob="NEC";Mamp=true;}
if(x==5){Mname="Carmina Devorin";Mlvl=23;Mimg="a dark elf female";Mjob="ROG";Mdrain=true;}}
var a=1;if(_SZ===1){if(Mlvl>21){a=0;}}else if(_SZ===2){if(Mlvl<21||Mlvl>23){a=0;}}else{if(Mlvl<23){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Galeblast Fortress"){if(_SZ!==4){if(rareMobFlag==false){var x=~~(M.random()*16);if(M.random()>.0011){var z2=M.random();if(P.Q[df].PermafrostKeep===1&&_SZ===1){if(z2>.6){x=12;}else if(z2<.3){x=3;}else{x=1;}
if(P.Q[df].PK1>=8&&P.Q[df].PK2>=6&&P.Q[df].PK3>=6&&mobsFound()===false){x=16;delayedMonsterTimer();}}
if(P.Q[df].PermafrostKeep===2&&_SZ===2){if(z2>.66){x=8;}else if(z2>.33){x=14;}else{x=6;}
if(P.Q[df].PK1>=7&&P.Q[df].PK2>=7&&P.Q[df].PK3>=7&&mobsFound()===false){x=17;delayedMonsterTimer();}}
if(P.Q[df].PermafrostKeep===3&&_SZ===3){if(z2>.6){x=10;}else if(z2>.2){x=15;}else{x=13;}
if(P.Q[df].PK1>=10&&P.Q[df].PK2>=10&&P.Q[df].PK3>=5){if(P.Q[df].PK4<=1&&mobsFound()===false){delayedMonsterTimer();if(P.Q[df].PK4<1){x=18;P.Q[df].PK4=1;}else{x=19;P.Q[df].PK5=1;}}else{if(P.Q[df].PK4<1){x=18;P.Q[df].PK4=1;}
if(P.Q[df].PK5<1){x=19;P.Q[df].PK5=1;}}}}}
if(x==0){Mname="a dire pup";Mlvl=43;Mimg="a white wolf";Mwidth=270;}
if(x==1){Mname="a dire wolf";Mlvl=44;Mimg="a white wolf";Mwidth=340;}
if(x==2){Mname="a goblin diviner";Mlvl=43;Mimg="a blue goblin";Mwidth=180;Mjob="CLR";}
if(x==3){Mname="a goblin evoker";Mlvl=43;Mimg="a blue goblin";Mwidth=180;Mjob="WIZ";}
if(x==4){Mname="a goblin mendicant";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Mjob="CLR";}
if(x==5){Mname="an icy goblin";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Mjob="WIZ";}
if(x==6){Mname="a goblin preacher";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Mjob="CLR";}
if(x==7){Mname="a goblin priest";Mlvl=43;Mimg="a blue goblin";Mwidth=180;Mskill[1]="heal";Mskill[2]="blind";Mskill[3]="smite";Mskill[4]="root";Mresolution=0;Mfreq=4;}
if(x==8){Mname="a goblin wizard";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Mskill[1]="ice shard";Mskill[2]="blizzard";Mskill[3]="energy bolt";Mskill[4]="fireball";Mfreq=3;}
if(x==9){Mname="a large dire wolf";Mlvl=45;Mimg="a white wolf";Mwidth=420;}
if(x==10){Mname="a goblin sage";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Mjob="WIZ";}
if(x==11){Mname="a young dire wolf";Mlvl=44;Mimg="a white wolf";Mwidth=290;}
if(x==12){Mname="an ice goblin";Mlvl=43;Mimg="a blue goblin";Mwidth=180;}
if(x==13){Mname="an ice giant youth";Mlvl=46;Mimg="an ice giant";}
if(x==14){Mname="an elite goblin guard";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Menrage=true;}
if(x==15){Mname="an elite honor guard";Mlvl=45;Mimg="a blue goblin";Mwidth=180;}
if(x==16){Mname="an ice goblin keymaster";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Mflurry=true;MironMaiden=true;Mrare=0;}
if(x==17){Mname="a goblin excavator";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Mflurry=true;Mrare=0;}
if(x==18){Mname="Pontiff Krindletin";Mlvl=46;Mimg="a blue goblin";Mwidth=195;Mjob="CLR";Mamp=true;Msanctuary=true;Mrare=0;}
if(x==19){Mname="Magnate Dinbopp";Mlvl=46;Mimg="a blue goblin";Mwidth=195;Mskill[3]="bash";Mfreq=8;Menrage=true;MironMaiden=true;Mrare=0;}}else{Mrare=0;var x=~~(M.random()*(5));if(x==0){Mname="Vober Slibable";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Mskill[2]="poison cloud";Mskill[3]="envenom";MironMaiden=true;Mamp=true;}
if(x==1){Mname="Cribub Upbuppi";Mlvl=43;Mimg="a blue goblin";Mwidth=180;Mjob="SHM";Mamp=true;}
if(x==2){Mname="Boger Dinviegle";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Menrage=true;}
if(x==3){Mname="Bazile Ortemmi";Mlvl=45;Mimg="a blue goblin";Mwidth=180;Menrage=true;MironMaiden=true;}
if(x==4){Mname="Prin Fradl";Mlvl=44;Mimg="a blue goblin";Mwidth=180;Mjob="CLR";Mfreq=4;Mamp=true;Msanctuary=true;}}}
if(_SZ===4){if(P.Q[df].PermafrostKeep>=4){var x=0;if(P.Q[df].PK1<4||P.Q[df].PK2<4||P.Q[df].PK3<4){x=~~(M.random()*(3))+3;}else if(P.Q[df].PK4<3||P.Q[df].PK5<2||P.Q[df].PK6<2){x=~~(M.random()*(3));}else if(P.Q[df].PK7===0){x=7;P.Q[df].PK7=1;P.Q[df].PK8=0;delayedMonsterTimer();}else{if(P.Q[df].PK8===0){x=6;P.Q[df].PK8=1;}}
if(P.Q[df].PK1>=4&&P.Q[df].PK2>=4&&P.Q[df].PK3>=4&&P.Q[df].PK4>=3&&P.Q[df].PK5>=2&&P.Q[df].PK6>=2&&P.Q[df].PK7>=2&&P.Q[df].PK8>=2){if(mobsFound()===false&&P.Q[df].PK9===0){x=8;}else{x=0;}}}
if(x==0){Mname="an ice giant";Mlvl=47;Mimg="an ice giant";}
if(x==1){Mname="an ice giant magus";Mlvl=46;Mimg="an ice giant";Mskill[1]="ice shard";Mskill[2]="blizzard";Mskill[3]="ice shard";Mskill[4]="ice shard";Mfreq=3;}
if(x==2){Mname="an ice giant priest";Mlvl=47;Mimg="an ice giant";Mjob="CLR";}
if(x==3){Mname="an ice giant champion";Mlvl=46;Mimg="an ice giant";Mjob="PAL";}
if(x==4){Mname="an ice giant warder";Mlvl=46;Mimg="an ice giant";Mjob="RNG";}
if(x==5){Mname="an ice giant preserver";Mlvl=46;Mimg="an ice giant";Mjob="DRU";}
if(x==6){Mname="Vizier Kongumen Divorn";Mlvl=48;Mimg="an ice giant";Mwidth=350;Mjob="CLR";Mrare=0;}
if(x==7){Mname="Margrave Kalgresh the Usurper";Mlvl=48;Mimg="an ice giant";Mrare=0;}
if(x==8){Mname="Matron Maelentia";Mlvl=48;Mimg="a blue dragon";Mrare=3;}}
var a=1;if(_SZ===1){if(Mlvl>44){a=0;}}else if(_SZ===2){if(Mlvl<44||Mlvl>45){a=0;}}else if(_SZ===3){if(Mlvl<45||Mlvl>46){a=0;}}else if(_SZ===4){if(Mlvl<46){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
if(_Z==="Nimgaul"){if(rareMobFlag==false){var x=~~(M.random()*17);if(P.Q[df].PF15<3||P.Q[df].PF16<3||P.Q[df].PF17<3||P.Q[df].PF22<1){x=~~(M.random()*(3))+14;if(P.Q[df].PF22===0&&P.Q[df].PF15>=3&&P.Q[df].PF16>=3&&P.Q[df].PF17>=3&&mobsFound()===false){x=21;}}
if(P.Q[df].PF12<3||P.Q[df].PF13<3||P.Q[df].PF14<3||P.Q[df].PF20<1){x=~~(M.random()*(3))+11;if(P.Q[df].PF20===0&&P.Q[df].PF12>=3&&P.Q[df].PF13>=3&&P.Q[df].PF14>=3&&mobsFound()===false){x=19;}}
if(P.Q[df].PF9<3||P.Q[df].PF10<3||P.Q[df].PF11<3||P.Q[df].PF19<1){x=~~(M.random()*(3))+8;if(P.Q[df].PF19===0&&P.Q[df].PF9>=3&&P.Q[df].PF10>=3&&P.Q[df].PF11>=3&&mobsFound()===false){x=18;}}
if(P.Q[df].PF5<3||P.Q[df].PF6<3||P.Q[df].PF7<3||P.Q[df].PF8<3||P.Q[df].PF21<1){x=~~(M.random()*(4))+4;if(P.Q[df].PF21===0&&P.Q[df].PF5>=3&&P.Q[df].PF6>=3&&P.Q[df].PF7>=3&&P.Q[df].PF8>=3&&mobsFound()===false){x=20;}}
if(P.Q[df].PF1<3||P.Q[df].PF2<3||P.Q[df].PF3<3||P.Q[df].PF4<3||P.Q[df].PF18<1){x=~~(M.random()*(4));if(P.Q[df].PF18===0&&P.Q[df].PF1>=3&&P.Q[df].PF2>=3&&P.Q[df].PF3>=3&&P.Q[df].PF4>=3&&mobsFound()===false){x=17;}}
if(x==0){Mname="a wailing banshee";Mlvl=51;Mimg="a ghoul";Mskill[2]="root";Mskill[3]="root";Mskill[4]="root";McastSpeed=500;Mwidth=400;}
if(x==1){Mname="a festering dreg";Mlvl=52;Mwidth=220;McastSpeed=500;Mskill[2]="envenom";Mskill[3]="envenom";Mskill[4]="envenom";if(M.random()>.5){Mimg="a female zombie";Mwidth=190;}else{Mimg="a male zombie";Mwidth=210;}}
if(x==2){Mname="a lurid nymph";Mlvl=52;Mimg="a faerie";Mwidth=140;Mjob="WIZ";}
if(x==3){Mname="a peering menace";Mlvl=52;Mimg="an evil eye round";Mwidth=120;Mjob="ENC";}
if(x==4){Mname="an accursed slattern";Mlvl=51;Mimg="a vampire female";Mjob="NEC";}
if(x==5){Mname="a brooding fungus";Mlvl=52;Mimg="a fungus";Mskill[1]="blind";Mskill[2]="blind";Mskill[3]="yawn";Mskill[4]="yawn";Mfreq=7;}
if(x==6){Mname="a cursed marionette";Mlvl=52;Mimg="a faerie";Mwidth=140;Mjob="ENC";}
if(x==7){Mname="a tremulant imp";Mlvl=52;Mimg="an imp";Mwidth=160;Mjob="ROG";Mflurry=true;}
if(x==8){Mname="a deranged gorilla";Mlvl=53;Mimg="a gorilla";Mwidth=500;Menrage=true;}
if(x==9){Mname="a boreal spider";Mlvl=53;Mimg="a white spider";Mfreq=5;Mskill[1]="ice shard";Mskill[2]="ice shard";Mskill[3]="blizzard";Mskill[4]="blizzard";McastSpeed=500;}
if(x==10){Mname="a cephalid enticer";Mlvl=51;Mimg="a terror";Mdrain=true;Mjob="SHM";}
if(x==11){Mname="a panicked anuran";Mlvl=52;Mimg="an anuran";Mskill[2]="fear";Mskill[3]="fear";Mskill[4]="fear";}
if(x==12){Mname="a chaos punisher";Mlvl=52;Mimg="a clay golem";Mwidth=270;Mbarrier=true;Mskill[2]="mind drain";Mskill[3]="mind drain";Mskill[4]="mind drain";}
if(x==13){Mname="a chaos enforcer";Mlvl=53;Mimg="a stone golem";Mskill[1]="mind drain";Mskill[2]="mind drain";Mskill[3]="engulfing darkness";Mskill[4]="fear";Mfreq=7;MharmTouch=0;Mskeleton=0;}
if(x==14){Mname="a pustulant vessel";Mlvl=52;Mimg="a mummy";Mskill[1]="mind numb";Mskill[2]="mind numb";Mskill[3]="weaken";Mskill[4]="weaken";}
if(x==15){Mname="a shrieking wisp";Mlvl=52;Mimg="a wisp";}
if(x==16){Mname="a sorrow slitherer";Mlvl=52;Mimg="a terror";Mjob="ENC"}
if(x==17){Mname="Guardian of Misery";Mlvl=55;Mimg="a clay golem";Mwidth=360;Mrare=0;MironMaiden=true;Mdrain=true;}
if(x==18){Mname="Guardian of Strife";Mlvl=55;Mimg="a stone golem";Mrare=0;Mbarrier=true;Msanctuary=true;}
if(x==19){Mname="Guardian of Ruin";Mlvl=55;Mimg="a steel golem";Mwidth=360;Mrare=0;Mflurry=true;Menrage=true;}
if(x==20){Mname="Falzitherin";Mlvl=54;Mimg="dracoliche";Mwidth=829;Mrare=3;Mstr*=1.6;Mpoison=67;MharmTouch=0;Mtype=3;McastSpeed=500;Mint*=2.3;Mfreq=4;Mskill[1]="envenom";Mskill[2]="engulfing darkness";Mskill[3]="poison cloud";Mskill[4]="fear";Mdrain=true;Mskeleton=0;}
if(x==21){Mname="Nalatos, God of Chaos";Mlvl=55;Mimg="cazic";Mrare=3;Mwidth=602;}}else{Mrare=0;var x=~~(M.random()*(7));if(x==0){Mname="Anastaryan";Mlvl=53;Mimg="a faerie";Mjob="WIZ";Mamp=true;Msanctuary=true;}
if(x==1){Mname="Erghal";Mlvl=54;Mimg="an evil eye round";Mjob="ENC";Mamp=true;Msilence=true;}
if(x==2){Mname="Oshomurm";Mlvl=53;Mimg="a fungus";Mjob="SHM";Mbarrier=true;Msanctuary=true;}
if(x==3){Mname="Shevn Ohn";Mlvl=54;Mimg="an imp";Mjob="ROG";Mflurry=true;Mrune=1;Mdrain=true;}
if(x==4){Mname="Burzwhorl";Mlvl=53;Mimg="a white spider";Mjob="ENC";Mdrain=true;MironMaiden=true;}
if(x==5){Mname="Sisyphen";Mlvl=54;Mimg="a wisp";Mjob="WIZ";Msanctuary=true;Msilence=true;}
if(x==6){Mname="General Burble";Mlvl=53;Mimg="an anuran";Menrage=true;Mbarrier=true;}}}
if(_Z==="Dire Sanctum"){if(rareMobFlag==false){var x=~~(M.random()*11);if(P.Q[df].PH7<5||P.Q[df].PH8<5||P.Q[df].PH9<5||P.Q[df].PH10<5||P.Q[df].PH11<5||P.Q[df].PH13<1){x=~~(M.random()*(5))+6;if(P.Q[df].PH13===0&&P.Q[df].PH7>=5&&P.Q[df].PH8>=5&&P.Q[df].PH9>=5&&P.Q[df].PH10>=5&&P.Q[df].PH11>=5&&mobsFound()===false){x=12;}}
if(P.Q[df].PH1<4||P.Q[df].PH2<4||P.Q[df].PH3<4||P.Q[df].PH4<4||P.Q[df].PH5<4||P.Q[df].PH6<4||P.Q[df].PH12<1){x=~~(M.random()*(6));if(P.Q[df].PH12===0&&P.Q[df].PH1>=4&&P.Q[df].PH2>=4&&P.Q[df].PH3>=4&&P.Q[df].PH4>=4&&P.Q[df].PH5>=4&&P.Q[df].PH6>=4&&mobsFound()===false){x=11;}}
if(x==0){Mname="a toiling drudge";Mlvl=50;Mimg="a stone golem";Mmagic=67;Mfire=67;Mcold=67;Mjob="SHM";}
if(x==1){Mname="a slavering corpse";Mlvl=50;Mimg="a female zombie";Mwidth=240;Mskill[2]="envenom";Mskill[3]="envenom";Mskill[4]="envenom";Mfreq=7;}
if(x==2){Mname="a fetid vagabond";Mlvl=50;Mimg="a dhampyre";Mjob="MAG";if(M.random()>.5){Mimg="a vampire female";}}
if(x==3){Mname="an impulse servant";Mlvl=49;Mimg="a gargoyle";Mwidth=250;Mjob="ROG";Mfreq=6;Mmagic=125;}
if(x==4){Mname="a servant of corruption";Mlvl=51;MlayHands=true;McastSpeed=2250;MmaxHp*=.9;Mimg="a dark elf male";}
if(x==5){Mname="an embalmed vagrant";Mlvl=49;Mimg="a mummy";Mfreq=6;Mskill[2]="envenom";Mskill[3]="envenom";Mskill[4]="envenom";}
if(x==6){Mname="a ghastly indulger";Mlvl=50;Mimg="a ghoul";Mwidth=400;Mjob="SK";}
if(x==7){Mname="an infected rodent";Mlvl=49;Mimg="a rat";Mfreq=7;Mskill[2]="envenom";Mskill[3]="envenom";Mskill[4]="envenom";}
if(x==8){Mname="a flittering menace";Mlvl=51;Mimg="an imp";Mjob="NEC";Mmagic=67;}
if(x==9){Mname="a hallowed harbinger";Mlvl=51;Mimg="a skeleton";Menrage=true;}
if(x==10){Mname="a cephalid sorcerer";Mlvl=50;Mimg="a terror";Mjob="WIZ";}
if(x==11){Mname="Vixen Sarmina";Mlvl=52;Mimg="maestro";Mrare=3;Mwidth=250;Mdrain=true;Mflurry=true;}
if(x==12){Mname="Sanctum Guardian Ghalentus";Mlvl=53;Mimg="innoruuk";Mrare=3;Mwidth=325;}}else{Mrare=0;var x=~~(M.random()*(5));if(x==0){Mname="Adendu Noughyn";Mlvl=52;Mimg="a dark elf male";Mjob="ROG";Mflurry=true;}
if(x==1){Mname="Shenmo Gourtan";Mlvl=51;Mimg="a dhampyre";Mjob="ENC";Msanctuary=true;}
if(x==2){Mname="Phenochlord";Mlvl=52;Mimg="a terror";Mjob="WIZ";Mamp=true;}
if(x==3){Mname="Atorc Aldiph";Mlvl=52;Mimg="a stone golem";Mjob="SHM";Mdrain=true;MironMaiden=true;}
if(x==4){Mname="Phadol Theril";Mlvl=53;Mimg="a skeleton";Mjob="PAL";Menrage=true;}}}
if(_Z==="Kordata Marshlands"){if(rareMobFlag==false){var x=~~((M.random()*43));if(M.random()>.0011){var z2=M.random();if(P.Q[df].UpperGuk===1&&_SZ===1){if(z2>.58){x=31;}else if(z2<.285){x=29;}else{x=30;}}
if(P.Q[df].UpperGuk===2&&_SZ===2){if(z2>.64){x=37;}else if(z2<.36){x=33;}else{x=11;}
if(P.Q[df].UG1>=8&&P.Q[df].UG2>=8&&P.Q[df].UG3>=6&&mobsFound()===false){x=43;}}
if(P.Q[df].UpperGuk===3&&_SZ===3){if(z2>.58){x=27;}else if(z2<.285){x=21;}else{x=28;}
if(P.Q[df].UG1>=12&&P.Q[df].UG2>=8&&P.Q[df].UG3>=8){if(mobsFound()===false){x=44;delayedMonsterTimer(2);}}}}
if(x==0){Mname="an anuran apprentice";Mlvl=23;Mimg="an anuran";}
if(x==1){Mname="an anuran ith knight";Mlvl=25;Mimg="an anuran";}
if(x==2){Mname="an anuran ith shaman";Mlvl=25;Mimg="an anuran";Mjob="SHM";}
if(x==3){Mname="an anuran guard";Mlvl=24;Mimg="an anuran";}
if(x==4){Mname="an anuran guard";Mlvl=24;Mimg="an anuran";}
if(x==5){Mname="a skeletal slave";Mlvl=24;Mimg="a dark skeleton";}
if(x==6){Mname="an anuran necromancer";Mlvl=24;Mimg="an anuran";Mjob="NEC";}
if(x==7){Mname="an anuran neophyte";Mlvl=23;Mimg="an anuran";}
if(x==8){Mname="an anuran nokta shaman";Mlvl=24;Mimg="an anuran";Mjob="SHM";}
if(x==9){Mname="an anuran novice";Mlvl=23;Mimg="an anuran";Mjob="SHM";}
if(x==10){Mname="an anuran outlander";Mlvl=24;Mimg="an anuran";}
if(x==11){Mname="an anuran priest";Mlvl=27;Mimg="an anuran";Mjob="CLR";}
if(x==12){Mname="an anuran realist";Mlvl=25;Mimg="an anuran";Mjob="SHM";}
if(x==13){Mname="a skeletal monk";Mlvl=25;Mimg="a dark skeleton";Mjob="MNK";}
if(x==14){Mname="an anuran sentinel";Mlvl=24;Mimg="an anuran";}
if(x==15){Mname="an anuran sentry";Mlvl=24;Mimg="an anuran";}
if(x==16){Mname="an anuran cham knight";Mlvl=26;Mimg="an anuran";}
if(x==17){Mname="a skeletal servant";Mlvl=26;Mimg="a dark skeleton";Mjob="MNK";}
if(x==18){Mname="an anuran cham shaman";Mlvl=26;Mimg="an anuran";Mjob="SHM";}
if(x==19){Mname="an anuran cham warrior";Mlvl=26;Mimg="an anuran";}
if(x==20){Mname="an anuran shinta warrior";Mlvl=25;Mimg="an anuran";}
if(x==21){Mname="an anuran summoner";Mlvl=27;Mimg="an anuran";Mjob="MAG";}
if(x==22){Mname="an anuran recruit";Mlvl=23;Mimg="an anuran";}
if(x==23){Mname="an anuran lem shaman";Mlvl=26;Mimg="an anuran";Mjob="SHM";}
if(x==24){Mname="an anuran ton knight";Mlvl=24;Mimg="an anuran";}
if(x==25){Mname="an anuran ton shaman";Mlvl=25;Mimg="an anuran";Mjob="SHM";}
if(x==26){Mname="an anuran ton warrior";Mlvl=26;Mimg="an anuran";}
if(x==27){Mname="an anuran tonta knight";Mlvl=27;Mimg="an anuran";}
if(x==28){Mname="an anuran fal shaman";Mlvl=28;Mimg="an anuran";Mjob="SHM";}
if(x==29){Mname="an anuran sur knight";Mlvl=24;Mimg="an anuran";}
if(x==30){Mname="an anuran sur shaman";Mlvl=25;Mimg="an anuran";Mjob="SHM";}
if(x==31){Mname="an anuran sur warrior";Mlvl=24;Mimg="an anuran";}
if(x==32){Mname="an anuran tir knight";Mlvl=28;Mimg="an anuran";}
if(x==33){Mname="an anuran tir shaman";Mlvl=26;Mimg="an anuran";Mjob="SHM";}
if(x==34){Mname="an anuran witch doctor";Mlvl=24;Mimg="an anuran";Mjob="NEC";}
if(x==35){Mname="an anuran dol priest";Mlvl=27;Mimg="an anuran";Mjob="CLR";}
if(x==36){Mname="a fungus ancient";Mlvl=27;Mimg="a fungus";Mjob="RNG";}
if(x==37){Mname="a fungus breeder";Mlvl=25;Mimg="a fungus";Mjob="RNG";}
if(x==38){Mname="a fungus drone";Mlvl=25;Mimg="a fungus";Mjob="RNG";}
if(x==39){Mname="a fungus mutant";Mlvl=26;Mimg="a fungus";Mjob="RNG";}
if(x==40){Mname="a fungus soldier";Mlvl=25;Mimg="a fungus";Mjob="RNG";}
if(x==41){Mname="a large heart spider";Mlvl=25;Mimg="a heart spider";Mwidth=320;}
if(x==42){Mname="a heart spider";Mlvl=24;Mimg="a heart spider";Mwidth=270;}
if(x==43){Mname="the anuran warden";Mlvl=27;Mimg="an anuran";Mrare=0;Mflurry=true;}
if(x==44){Mname="Prince Kerpple";Mlvl=28;Mimg="an anuran";Mjob="PAL";Mflurry=true;Msanctuary=true;Mbarrier=true;Mrare=0;}}else{Mrare=0;var x=~~((M.random()*(5)));if(x==0){Mname="an anuran idealist";Mlvl=24;Mimg="an anuran";Mflurry=true;}
if(x==1){Mname="an anuran cartographer";Mlvl=27;Mimg="an anuran";Menrage=true;}
if(x==2){Mname="an anuran ith squire";Mlvl=25;Mimg="an anuran";Mjob="CLR";Msanctuary=true;}
if(x==3){Mname="a giant heart spider";Mlvl=24;Mimg="a heart spider";Mwidth=325;Mflurry=true;Mdrain=true;}
if(x==4){Mname="an anuran scryer";Mlvl=25;Mimg="an anuran";Mjob="ENC";Msanctuary=true;}}
var a=1;if(_SZ===1){if(Mlvl>25){a=0;}}else if(_SZ===2){if(Mlvl<25||Mlvl>27){a=0;}}else{if(Mlvl<27){a=0;}}
if(a===0&&Mrare!==0){getMonster(++count,rareMobFlag);return;}}
count++;if(count<2000){for(var i=0;i<=4;i++){if(Mname==mob[i].name&&Mrare==0){getMonster(count,rareMobFlag);return;}}}
if(Mname==""){getMonster(count,rareMobFlag);return;}
if(g.difficulty===2){Mlvl+=25;monsterSpeed*=.8;McastSpeed*=.8;}
if(g.difficulty===3){Mlvl+=44;if(Mlvl>99){Mlvl=99;}
monsterSpeed*=.6;McastSpeed*=.6;}
Mlvl=DADJ(Mlvl);if(Mrare===3){monsterSpeed=2500;if(g.difficulty===2){monsterSpeed=2000;}
if(g.difficulty===3){monsterSpeed=1500;}}
if(Mrare===0){if(g.difficulty===2){Mlvl++;}else if(g.difficulty===3){Mlvl+=2;}}
if(Mlvl>99){Mlvl=99;}
var mobLevelBoost=~~(chainCounter/10);if(mobLevelBoost>25){mobLevelBoost=25;}
Mlvl+=mobLevelBoost;if(rangerTrackStatus==true&&rareMobFlag==false){rangerTrackStatus=false;Chat(("You failed to find your quarry this time."));}
if(rangerTrackStatus==true&&rareMobFlag==true){Mrare=0;rangerTrackStatus=false;Chat(("You successfully tracked "+Mname+"."));}
if(Mlvl>=10){MmaxHp+=(Mlvl*10);}
if(Mlvl>=20){MmaxHp+=(Mlvl*10);}
if(Mlvl>=30){MmaxHp+=(Mlvl*10);}
if(Mlvl>=40){MmaxHp+=(Mlvl*10);}
if(Mlvl>=50){MmaxHp+=(Mlvl*10);}
if(Mlvl>=60){MmaxHp+=(Mlvl*10);}
if(Mlvl>=70){MmaxHp+=(Mlvl*10);}
if(Mlvl>=80){MmaxHp+=(Mlvl*10);}
if(Mlvl>=90){MmaxHp+=(Mlvl*10);}
MmaxHp+=(Mlvl*100);Mstr+=1+(Mlvl*2.3);Mdef=100;Mint+=5+(Mlvl*2.3);Mpoison=100;Mmagic=100;Mlightning=100;Mcold=100;Mfire=100;if(g.difficulty===2){MmaxHp=MmaxHp*1.2;}else if(g.difficulty===3){MmaxHp=MmaxHp*1.5;}
monsterID=monsterID+1;if(monsterID>1024){monsterID=1;};Mxp=Mlvl*18+12;if(Mrare===3){Mjob="";}
if(Mjob!==""){if(Mjob==="MNK"){Mskill[1]="shadow kick";Mskill[2]="shadow kick";Mskill[3]="shadow kick";Mskill[4]="shadow kick";Mfreq=8;MmaxHp*=.9;}
if(Mjob==="ROG"){Mskill[1]="backstab";Mskill[2]="backstab";Mskill[3]="backstab";Mskill[4]="backstab";Mfreq=8;MmaxHp*=.95;}
if(Mjob==="SK"){Mskill[2]="engulfing darkness";Mskill[3]="fear";Mskill[4]="poison cloud";Mfreq=7;MharmTouch=0;Mskeleton=0;Mfreq=8;}
if(Mjob==="DRU"||Mjob==="RNG"){Mskill[1]="heal";Mskill[2]="conflagration";Mskill[3]="fireball";Mskill[4]="root";Mfreq=4;if(Mjob==="RNG"){monsterSpeed*=.9;Mstr*=1.1;Mfreq=7;MmaxHp*=.95;}else{Mthorns=0;Mint*=1.1;MmaxHp*=.95;MmaxHp*=.9;}}
if(Mjob==="CLR"||Mjob==="PAL"){Mskill[1]="heal";Mskill[2]="blind";Mskill[3]="smite";Mskill[4]="root";Mresolution=0;Mfreq=4;if(Mjob==="PAL"){MlayHands=true;}else{Mint*=1.1;}}
if(Mjob==="SHM"){Mskill[1]="heal";Mskill[2]="envenom";Mskill[3]="yawn";Mskill[4]="weaken";Mfreq=4;Mwolf=0;Mint*=1.1;}
if(Mjob==="NEC"){Mskill[1]="engulfing darkness";Mskill[2]="fear";Mskill[3]="poison cloud";Mskill[4]="energy bolt";Mskeleton=0;Mfreq=3;Mint*=1.1;MmaxHp*=.8;}
if(Mjob==="ENC"){Mskill[1]="yawn";Mskill[2]="mind numb";Mskill[3]="confuse";Mskill[4]="smite";Mfreq=3;Mrune=0;Mint*=1.1;MmaxHp*=.8;}
if(Mjob==="MAG"){Mskill[1]="energy bolt";Mskill[2]="ice shard";Mskill[3]="mind drain";Mskill[4]="static field";Mfreq=3;Melemental=0;Mlava=0;Mint*=1.1;MmaxHp*=.8;}
if(Mjob==="WIZ"){Mskill[1]="ice shard";Mskill[2]="blizzard";Mskill[3]="energy bolt";Mskill[4]="fireball";Mfreq=3;Mint*=1.1;MmaxHp*=.8;}}
Mtype=0;if(Mimg=="a bat"){mobImgX=290;mobImgY=427;cX=137;cY=99;if(Mwidth===200){Mwidth=220;}
Maud1="bat_att";Maud2="bat_hit";Maud3="bat_die";}
if(Mimg=="a beetle"){mobImgX=200;mobImgY=85;cX=93;cY=56;Maud1="beetlatt";Maud2="beetlhit";Maud3="beetldie";Mlightning=67;}
if(Mimg=="a blue goblin"){mobImgX=200;mobImgY=249;cX=96;cY=70;Maud1="gob_att";Maud2="gob_hit";Maud3="gob_die";Mcold=67;Mtype=1;}
if(Mimg=="a brown spider"){mobImgX=200;mobImgY=111;cX=101;cY=56;Maud1="spid_att";Maud2="spid_hit";Maud3="spid_die";Mdrain=true;Mpoison=67;}
if(Mimg=="a clay golem"){mobImgX=274;mobImgY=365;cX=108;cY=99;Maud1="golumatt";Maud2="golumhit";Maud3="golumdie";MmaxHp*=1.2;Mpoison=67;}
if(Mimg=="a dark elf female plate"){mobImgX=200;mobImgY=345;cX=110;cY=108;Maud2="gethit3f";Maud3="death_fl";Mtype=1;MmaxHp*=1.2;}
if(Mimg=="a dark elf female"||Mimg=="a dark elf matron"){mobImgX=200;mobImgY=320;cY=79;Maud2="gethit3f";Maud3="death_fl";MmaxHp*=.9;Mint*=1.1;Mtype=1;}
if(Mimg=="a dark elf male plate"){mobImgX=200;mobImgY=313;Mtype=1;MmaxHp*=1.2;}
if(Mimg=="a dark elf male"){Mwidth=124;mobImgX=124;mobImgY=286;cX=65;cY=66;MmaxHp*=.9;Mint*=1.1;Mtype=1;}
if(Mimg=="a dark skeleton"){mobImgX=200;mobImgY=334;cX=97;cY=81;Maud1="skeleton_att";Maud2="skeleton_hit";Maud3="skeleton_die";Mfire=125;Mtype=1;Mskill[3]="fireball";Mskill[4]="fireball";McastSpeed=500*g.speed;}
if(Mimg=="a dhampyre"){mobImgX=200;mobImgY=306;Maud1="vmpematt";Maud2="vmpemhit";Maud3="vmpemdie";Mfire=125;Mtype=1;Mdrain=true;}
if(Mimg=="a faerie"){mobImgX=200;mobImgY=310;cX=103;cY=70;Maud1="fairyatt";Maud2="fairyhit";Maud3="fairydie";Mlightning=67;Mtype=1;}
if(Mimg=="a female zombie"){mobImgX=200;mobImgY=333;Maud1="zomf_att";Maud2="gethit3f";Maud3="zomf_die";MmaxHp*=.9;Mfire=125;Mtype=1;}
if(Mimg=="a fire elemental"){mobImgX=200;mobImgY=241;cX=122;cY=73;Maud1="elem_att3";Maud2="elem_hit3";Maud3="elem_die3";Mfire=67;Mcold=125;Mskill[3]="fireball";Mskill[4]="fireball";McastSpeed=500;Mlava=0;}
if(Mimg=="an anuran"){mobImgX=220;mobImgY=233;cX=112;cY=82;Maud1="frog_att";Maud2="frog_hit";Maud3="frog_die";Mtype=1;}
if(Mimg=="a fungus"){mobImgX=200;mobImgY=315;cY=138;Maud1="fung_att";Maud2="fung_hit";Maud3="fung_die";Mpoison=67;Mtype=1;Mskill[3]="yawn";Mskill[4]="yawn";}
if(Mimg==="a gargoyle"){mobImgX=269;mobImgY=410;cX=120;cY=86;Maud1="garg_att";Maud2="garg_hit";Maud3="garg_die";Mlightning=67;Mtype=1;}
if(Mimg==="a ghoul"){mobImgX=200;mobImgY=235;cY=58;Maud1="ghoulatt";Maud2="ghoulhit";Maud3="ghouldie";Mfire=125;Mtype=1;Mskill[2]="root";Mskill[3]="root";McastSpeed=500;}
if(Mimg==="a gnoll"){mobImgX=200;mobImgY=285;Maud1="gnollatt";Maud2="gnollhit";Maud3="gnolldie";Mtype=1;Mwolf=1;}
if(Mimg==="a gorilla"){mobImgX=200;mobImgY=172;cX=104;cY=75;Maud1="gorilatt";Maud2="gorilhit";Maud3="gorildie";Mstr*=1.05;}
if(Mimg==="a heart spider"){mobImgX=200;mobImgY=100;cX=93;cY=49;Maud1="spid_att";Maud2="spid_hit";Maud3="spid_die";Mdrain=true;Mpoison=67;}
if(Mimg==="a human male"){mobImgX=200;mobImgY=330;cX=95;cY=78;MmaxHp*=.9;Mwidth=200;Mtype=1;}
if(Mimg==="a human female"){mobImgX=200;mobImgY=330;cX=101;cY=74;Maud2="gethit3f";Maud3="death_fl";MmaxHp*=.9;Mtype=1;}
if(Mimg==="a jungle spider"){mobImgX=200;mobImgY=108;cX=93;cY=69;Maud1="spid_att";Maud2="spid_hit";Maud3="spid_die";Mdrain=true;Mpoison=67;}
if(Mimg==="a kobold"){mobImgX=200;mobImgY=200;cX=92;cY=82;Maud1="werewatt";Maud2="werewhit";Maud3="werewdie";Mtype=1;}
if(Mimg==="a lizardman"){mobImgX=200;mobImgY=254;cX=108;cY=71;Maud1="liza_att";Maud2="liza_hit";Maud3="liza_die";Mfire=67;Mtype=1;}
if(Mimg==="a male zombie"){mobImgX=100;mobImgY=329;cX=47;cY=76;Maud1="zom_att";Maud3="zom_die";MmaxHp*=.9;Mfire=125;Mtype=1;Mwidth=100;}
if(Mimg==="a mummy"){mobImgX=200;mobImgY=330;cY=81;Maud1="zom_att";Maud3="zom_die";MmaxHp*=.9;Mfire=125;Mtype=1;}
if(Mimg==="a rat"){mobImgX=200;mobImgY=170;cX=90;cY=90;Maud1="rat_att";Maud2="rat_hit";Maud3="rat_die";MmaxHp*=.9;Mpoison=67;Mdrain=true;}
if(Mimg==="a red goblin"){mobImgX=200;mobImgY=270;cX=88;cY=74;Maud1="gob_att";Maud2="gob_hit";Maud3="gob_die";Mfire=67;Mtype=1;}
if(Mimg==="a shadowed man"){mobImgX=200;mobImgY=332;cX=94;cY=86;Mmagic=67;Mint*1.1;Mtype=1;}
if(Mimg==="a skeleton"){mobImgX=200;mobImgY=334;cX=95;cY=85;Maud1="skeleton_att";Maud2="skeleton_hit";Maud3="skeleton_die";if(Mname.indexOf(" pet")===-1){Mskill[3]="fireball";Mskill[4]="fireball";}
Mfire=125;Mtype=1;McastSpeed=500;}
if(Mimg==="a steel golem"){mobImgX=250;mobImgY=336;cX=132;Maud1="golumatt";Maud2="golumhit";Maud3="golumdie";MmaxHp*=1.2;Mpoison=67;}
if(Mimg==="a stone golem"){mobImgX=274;mobImgY=365;cX=108;cY=99;Maud1="golumatt";Maud2="golumhit";Maud3="golumdie";MmaxHp*=1.2;Mpoison=67;Msilence=true;}
if(Mimg==="a terror"){mobImgX=200;mobImgY=198;cX=110;cY=128;Maud1="tent_att";Maud2="tent_hit";Maud3="tent_die";Mmagic=67;Mdrain=true;}
if(Mimg==="a vampire female"){mobImgX=200;mobImgY=256;cX=79;cY=88;Maud1="vmpefatt";Maud2="vmpefhit";Maud3="vmpefdie";Mfire=125;Mtype=1;Mdrain=true;}
if(Mimg==="a werewolf"){mobImgX=260;mobImgY=288;cX=122;cY=133;Maud1="werewatt";Maud2="werewhit";Maud3="werewdie";Mmagic=67;Mtype=1;Mdrain=true;}
if(Mimg==="a white spider"){mobImgX=333;mobImgY=151;cX=164;cY=70;Mwidth=333;Maud1="spid_att";Maud2="spid_hit";Maud3="spid_die";Mdrain=true;Mcold=67;}
if(Mimg==="a white wolf"){mobImgX=200;mobImgY=215;Maud1="wolf_att2";Maud2="wolf_hit2";Maud3="wolf_die2";Mcold=67;}
if(Mimg==="a wisp"){mobImgX=200;mobImgY=300;cY=69;Maud1="wilo_att";Maud2="wilo_hit";Maud3="wilo_die";Mint*=1.1;Mskill[2]="static field";Mskill[3]="energy bolt";Mlightning=67;}
if(Mimg==="a wolf"){Maud1="wolf_att2";Maud2="wolf_hit2";Maud3="wolf_die2";Mcold=67;}
if(Mimg==="an earth elemental"){mobImgX=240;mobImgY=299;cX=114;cY=76;Maud1="elem_att3";Maud2="elem_hit3";Maud3="elem_die3";Mlightning=67;Mpoison=125;Mskill[3]="root";Mskill[4]="root";McastSpeed=500;}
if(Mimg==="an evil eye round"){mobImgX=200;mobImgY=512;cX=88;cY=95;Maud1="behdatt";Maud2="behldhit";Maud3="behddie";Mint*=1.1;Mmagic=67;Msilence=true;}
if(Mimg==="an ice giant"){mobImgX=304;mobImgY=410;cX=161;cY=119;Mwidth=380;Maud1="giantatt";Maud2="gianthit";Maud3="giantdie";MmaxHp*=1.6;Mcold=67;Mtype=2;}
if(Mimg==="an imp"){mobImgX=200;mobImgY=280;cX=114;cY=49;Maud1="imp_att";Maud2="imp_hit";Maud3="imp_die";Mfire=67;Mtype=1;Mskill[3]="fireball";Mskill[4]="fireball";McastSpeed=500;}
if(Mimg==="an orc"){mobImgX=200;mobImgY=266;cX=111;cY=90;Maud1="orc_att";Maud2="orc_hit";Maud3="orc_die";Mcold=67;Mtype=1;Mwolf=1;}
if(Mimg==="grimden"){Maud1="orc_att";Maud2="orc_hit";Maud3="orc_die";Mcold=67;Mtype=1;Mwolf=1;}
if(Mimg==="avatar of fear"){mobImgX=200;mobImgY=279;Maud1="cazt_att";$Maud2="cazt_hit";Maud3="cazt_die";Mtype=1;McastSpeed=500;Mstr*=1.2;Mmagic=67;MmaxHp*=1.35;Msilence=true;}
if(Mimg==="garanel rucksif"){mobImgX=200;mobImgY=244;cX=105;cY=110;Maud1="ghostatt";Maud2="giosthit";Maud3="ghostdie";Mstr*=1.2;Mmagic=67;Mtype=1;}
if(Mimg==="a fire giant"){mobImgX=348;mobImgY=426;cX=185;cY=148;Maud1="giantatt";Maud2="gianthit";Maud3="giantdie";MmaxHp*=1.6;Mfire=67;Mtype=2;Mwidth=348;}
if(Mimg==="a purple dragon"){mobImgX=606;mobImgY=588;cX=285;cY=66;Maud1="drag_att";Maud2="drag_hit";Maud3="drag_die";MmaxHp*=3;}
if(Mimg==="a red dragon"){mobImgX=606;mobImgY=588;cX=285;cY=66;Maud1="drag_att";Maud2="drag_hit";Maud3="drag_die";Mstr*=1.6;MmaxHp*=3.4;Mfire=67;Mtype=3;Mint*=2;Mfreq=4;Mskill[1]="conflagration";Mskill[2]="conflagration";Mskill[3]="fireball";Mskill[4]="fear";Mwidth=570;}
if(Mimg==="a blue dragon"){mobImgX=493;mobImgY=479;cX=254;cY=116;Maud1="drag_att";Maud2="dragfhit";Maud3="drag_die";Mstr*=1.5;MmaxHp*=3.4;Mcold=67;Mtype=3;Mwidth=606;Mint*=2;Mfreq=4;Mskill[1]="blizzard";Mskill[2]="blizzard";Mskill[3]="ice shard";Mskill[4]="fear";MlayHands=true;}
if(Mimg==="phinigel autropos"){mobImgX=647;mobImgY=540;cX=294;cY=157;Maud1="kedgeatt";Maud2="kedgehit";Maud3="kedgedie";Mstr*=1.5;MmaxHp*=3.2;Mlightning=67;Mtype=3;Mwidth=606;Mint*=2.2;Mfreq=3;Mskill[1]="engulfing darkness";Mskill[2]="static field";Mskill[3]="smite";Mskill[4]="energy bolt";Mrune=0;Msilence=true;}
if(Mimg==="maestro"){mobImgX=396;mobImgY=586;cX=260;cY=165;Maud1="vampkatt";Maud2="vampkhit";Maud3="vampkdie";Mlightning=125;Mtype=3;Mstr*=1.5;MmaxHp*=2.7;Mpoison=67;Mdrain=true;}
if(Mimg==="dracoliche"){mobImgX=629;mobImgY=396;cX=217;cY=268;Maud1="drsk_att";Maud2="drskhit";Maud3="drsk_die";if(Mname==="Falzitherin"){MmaxHp*=3.2;}}
if(Mimg==="innoruuk"){mobImgX=325;mobImgY=476;cX=165;cY=176;Maud1="inn_att";Maud2="inn_hit";Maud3="inn_die";Mtype=3;Mstr*=1.7;MmaxHp*=3;Mrune=0;MironMaiden=true;Mfreq=3;Mskill[1]="static field";Mskill[2]="engulfing darkness";Mskill[3]="smite";Mskill[4]="ice shard";Msilence=true;}
if(Mimg==="cazic"){mobImgX=602;mobImgY=695;cX=261;cY=290;Maud1="cazt_att";Maud2="cazt_hit";Maud3="cazt_die";Mtype=3;Mstr*=1.6;MmaxHp*=3.8;MharmTouch=0;Mskeleton=0;Msilence=true;}
if(Mimg=="a bat"){Mwidth=500;mobImgX=600;mobImgY=500;cX=298;cY=151;Maud1="bat_att2";Maud2="bat_hit2";Maud3="bat_die2";}
if(Mimg=="a beetle"){mobImgX=600;mobImgY=230;cX=300;cY=177;Maud1="beetle_att";Maud2="beetle_hit";Maud3="beetle_die";}
if(Mimg=="a blue goblin"){Mwidth=220;mobImgX=377;mobImgY=400;cX=183;cY=149;Maud1="goblin_att";Maud2="goblin_hit";Maud3="goblin_die";}
if(Mimg=="a brown spider"){mobImgX=500;mobImgY=251;cX=249;cY=181;Maud1="spider_att";Maud2="spider_hit";Maud3="spider_die";}
if(Mimg=="a clay golem"){if(Mname==="Guardian of Misery"){Mwidth=455;}else{Mwidth=350;}
mobImgX=455;mobImgY=600;cX=228;cY=158;Maud1="zombie_att";Maud2="zombie_hit";Maud3="zombie_die";}
if(Mimg=="a dark elf female plate"){Mwidth=210;mobImgX=223;mobImgY=400;cX=108;cY=119;Maud2="gethit3f";Maud3="death_fl";}
if(Mimg=="a dark elf female"){Mwidth=190;mobImgX=207;mobImgY=400;cX=106;cY=94;Maud2="gethit3f";Maud3="death_fl";}
if(Mimg=="braxxen"){Mwidth=320;mobImgX=470;mobImgY=600;cX=228;cY=173;Maud2="gethit3f";Maud3="death_fl";}
if(Mimg=="a dark elf matron"){Mwidth=280;mobImgX=287;mobImgY=400;cX=136;cY=120;Maud2="gethit3f";Maud3="death_fl";}
if(Mimg=="a dark elf male plate"){Mwidth=225;mobImgX=240;mobImgY=400;cX=137;cY=111;}
if(Mimg=="a dark elf male"){Mwidth=190;mobImgX=203;mobImgY=400;cX=99;cY=104;}
if(Mimg=="a dark skeleton"){Mwidth=175;mobImgX=240;mobImgY=503;cX=123;cY=114;Maud1="skeleton_att";Maud2="skeleton_hit";Maud3="skeleton_die";}
if(Mimg=="a dhampyre"){Mwidth=220;mobImgX=227;mobImgY=400;cX=117;cY=108;Maud1="dhampyre_att";Maud2="dhampyre_hit";Maud3="dhampyre_die";}
if(Mimg=="a faerie"){Mwidth=130;mobImgX=205;mobImgY=500;cX=101;cY=124;Maud1="fairy_att";Maud2="fairy_hit";Maud3="fairy_die";}
if(Mimg=="a female zombie"){Mwidth=160;mobImgX=176;mobImgY=400;cX=82;cY=99;Maud1="zombief_att";Maud2="zombief_hit";Maud3="zombief_die";}
if(Mimg=="a fire elemental"){Mwidth=300;mobImgX=358;mobImgY=400;cX=176;cY=140;Maud1="elem_att3";Maud2="elem_hit3";Maud3="elem_die3";}
if(Mimg=="an anuran"){Mwidth=290;mobImgX=370;mobImgY=282;cX=186;cY=127;Maud1="anuran_att";Maud2="anuran_hit";Maud3="anuran_die";}
if(Mimg=="a fungus"){Mwidth=320;mobImgX=386;mobImgY=400;cX=192;cY=175;Maud1="fungus_att";Maud2="fungus_hit";Maud3="fungus_die";}
if(Mimg=="a gargoyle"){Mwidth=430;mobImgX=479;mobImgY=550;cX=236;cY=116;Maud1="garg_att2";Maud2="garg_hit2";Maud3="garg_die2";}
if(Mimg=="a ghoul"){mobImgX=442;mobImgY=400;cX=244;cY=91;Maud1="ghoul_att";Maud2="ghoul_hit";Maud3="ghoul_die";}
if(Mimg==="a gnoll"){mobImgX=400;mobImgY=473;cX=205;cY=203;Maud1="gnoll_att";Maud2="gnoll_hit2";Maud3="gnoll_die";}
if(Mimg=="a gorilla"){mobImgX=585;mobImgY=600;cX=293;cY=282;Maud1="gorilla_att";Maud2="gorilla_hit";Maud3="gorilla_die";}
if(Mimg=="a heart spider"){mobImgX=500;mobImgY=266;cX=247;cY=171;Maud1="spider_att";Maud2="spider_hit";Maud3="spider_die";}
if(Mimg=="a human male"){Mwidth=170;mobImgX=224;mobImgY=500;cX=110;cY=121;}
if(Mimg=="a human female"){Mwidth=165;mobImgX=223;mobImgY=500;cX=112;cY=115;Maud2="gethit3f";Maud3="death_fl";}
if(Mimg=="a jungle spider"){Mwidth=500;mobImgX=500;mobImgY=158;cX=251;cY=94;Maud1="spider_att";Maud2="spider_hit";Maud3="spider_die";}
if(Mimg=="a kobold"){mobImgX=460;mobImgY=420;cX=220;cY=153;Maud1="kobold_att";Maud2="kobold_hit";Maud3="kobold_die";}
if(Mimg==="a lizardman"){Mwidth=400;mobImgX=501;mobImgY=400;cX=253;cY=134;Maud1="liz_att2";Maud2="liz_hit2";Maud3="liz_die2";Maud5="liz_cast";}
if(Mimg=="a male zombie"){Mwidth=190;mobImgX=210;mobImgY=400;cX=101;cY=91;Maud1="zombie_att";Maud2="zombie_hit";Maud3="zombie_die";}
if(Mimg=="a mummy"){Mwidth=250;mobImgX=324;mobImgY=500;cX=159;cY=157;Maud1="werewolf_att";Maud2="werewolf_hit";Maud3="werewolf_die";}
if(Mimg=="a rat"){if(Mname==='Flippy the Rat God'){Mwidth=665;MmaxHp*=1.75;}else{Mwidth=350;}
mobImgX=465;mobImgY=200;cX=233;cY=127;Maud1="rat_att2";Maud2="rat_hit2";Maud3="rat_die2";}
if(Mimg=="a red goblin"){Mwidth=220;mobImgX=377;mobImgY=400;cX=183;cY=149;Maud1="goblin_att";Maud2="goblin_hit";Maud3="goblin_die";}
if(Mimg=="a shadowed man"){Mwidth=182;mobImgX=182;mobImgY=400;cX=87;cY=89;}
if(Mimg=="a skeleton"){Mwidth=180;mobImgX=240;mobImgY=503;cX=123;cY=114;Maud1="skeleton_att";Maud2="skeleton_hit";Maud3="skeleton_die";}
if(Mimg=="a steel golem"){if(Mname==="Guardian of Ruin"){Mwidth=641;}else{Mwidth=500;}
mobImgX=641;mobImgY=600;cX=317;cY=243;Maud1="zombie_att";Maud2="zombie_hit";Maud3="zombie_die";}
if(Mimg=="a stone golem"){if(Mname==="Guardian of Strife"){Mwidth=643;}else{Mwidth=500;}
mobImgX=643;mobImgY=600;cX=322;cY=156;Maud1="zombie_att";Maud2="zombie_hit";Maud3="zombie_die";}
if(Mimg=="a terror"){Mwidth=480;mobImgX=582;mobImgY=400;cX=288;cY=200;Maud1="terror_att";Maud2="terror_hit";Maud3="terror_die";}
if(Mimg=="a vampire female"){Mwidth=193;mobImgX=193;mobImgY=400;cX=97;cY=100;Maud1="vampire_att";Maud2="vampire_hit";Maud3="vampire_die";}
if(Mimg=="a werewolf"){Mwidth=250;mobImgX=300;mobImgY=500;cX=157;cY=177;Maud1="werewolf_att";Maud2="werewolf_hit";Maud3="werewolf_die";}
if(Mimg=="a white spider"){Mwidth=500;mobImgX=500;mobImgY=209;cX=249;cY=118;Maud1="spider_att";Maud2="spider_hit";Maud3="spider_die";}
if(Mimg=="a white wolf"){mobImgX=538;mobImgY=400;cX=285;cY=153;Maud1="wolf_att2";Maud2="wolf_hit2";Maud3="wolf_die2";}
if(Mimg=="a wisp"){Mwidth=250;mobImgX=331;mobImgY=500;cX=158;cY=128;Maud1="wisp_att";Maud2="wisp_hit";Maud3="wisp_die";}
if(Mimg=="a wolf"){mobImgX=538;mobImgY=400;cX=387;cY=114;Maud1="wolf_att2";Maud2="wolf_hit2";Maud3="wolf_die2";}
if(Mimg=="an earth elemental"){Mwidth=300;mobImgX=346;mobImgY=400;cX=171;cY=98;Maud1="earth_att";Maud2="earth_hit";Maud3="earth_die";}
if(Mimg=="an evil eye round"){Mwidth=240;mobImgX=321;mobImgY=400;cX=162;cY=80;Maud1="wisp_att";Maud2="wisp_hit";Maud3="wisp_die";}
if(Mimg=="an ice giant"){Mwidth=528;mobImgX=528;mobImgY=600;cX=269;cY=160;Maud1="giant_att";Maud2="giant_hit";Maud3="giant_die";}
if(Mimg==="an imp"){Mwidth=320;mobImgX=385;mobImgY=500;cX=189;cY=99;Maud1="imp_att2";Maud2="imp_hit2";Maud3="imp_die2";}
if(Mimg==="an orc"){Mwidth+=60;mobImgX=382;mobImgY=400;cX=189;cY=112;Maud1="orc_att2";Maud2="orc_hit2";Maud3="orc_die2";}
if(Mimg==="grimden"){Mwidth=739;mobImgX=739;mobImgY=500;cX=367;cY=138;Maud1="orc_att2";Maud2="orc_hit2";Maud3="orc_die2";}
if(Mimg==="avatar of fear"){Mwidth=600;mobImgX=633;mobImgY=600;cX=329;cY=170;Maud1="avatar_att";Maud2="avatar_hit";Maud3="avatar_die";}
if(Mimg==="garanel rucksif"){Mwidth=500;mobImgX=597;mobImgY=600;cX=303;cY=175;Maud1="garanel_att";Maud2="garanel_hit";Maud3="garanel_die";}
if(Mimg==="a fire giant"){Mwidth=674;mobImgX=674;mobImgY=600;cX=339;cY=155;Maud1="giant_att";Maud2="giant_hit";Maud3="giant_die";}
if(Mimg==="a purple dragon"||Mimg==="a red dragon"||Mimg==="a blue dragon"){if(Mimg==="a purple dragon"){Mwidth=940;}else{Mwidth=1431;}
mobImgX=1431;mobImgY=550;cX=713;cY=132;Maud1="dragon_att";Maud2="dragon_hit";Maud3="dragon_die";Maud5="dragon_cast";}
if(Mimg==="phinigel autropos"){Mwidth=720;mobImgX=720;mobImgY=500;cX=358;cY=155;Maud1="viston_att";Maud2="viston_hit";Maud3="viston_die";}
if(Mimg==="maestro"){Mwidth=557;mobImgX=650;mobImgY=700;cX=310;cY=257;Maud1="vixen_att";Maud2="vixen_hit";Maud3="vixen_die";}
if(Mimg==="dracoliche"){Mwidth=1431;mobImgX=1431;mobImgY=550;cX=713;cY=132;Maud1="dragon_att";Maud2="dragon_hit";Maud3="dragon_die";Maud5="dragon_cast";}
if(Mimg==="innoruuk"){Mwidth=1100;mobImgX=1100;mobImgY=600;cX=550;cY=180;Maud1="innoruuk_att";Maud2="innoruuk_hit";Maud3="innoruuk_die";}
if(Mimg==="cazic"){Mwidth=1100;mobImgX=1186;mobImgY=700;cX=589;cY=235;Maud1="cazic_att";Maud2="cazic_hit";Maud3="cazic_die";}
if(Mrare===3){if(g.difficulty===1){Mxp=Mxp*3.2;}else if(g.difficulty===2){Mxp=Mxp*3.4;}else{Mxp=Mxp*3.6;}
McastSpeed=500;if(Mname==="Chief Grimden"){Mcold=100;Mskill[1]="envenom";Mskill[2]="envenom";Mskill[3]="poison cloud";Mtype=3;Mstr*=1.3;MmaxHp*=2.6;Mfreq=5;}
if(Mname==="Arcturin, the Lich King"){Mskill[1]="ice shard";Mskill[2]="blizzard";Mskill[3]="blizzard";Mskill[4]="blizzard";Mtype=3;Mstr*=1.3;MmaxHp*=2.6;Msilence=true;Mrune=0;Mfreq=5;}
if(Mname==="Sentoth, Lord of Rapture"){Mskill[1]="energy bolt";Mskill[2]="static field";Mskill[3]="static field";Mskill[4]="static field";Mtype=3;Mstr*=1.3;MmaxHp*=2.6;Mdrain=true;Mfreq=5;}
mobDauntless=true;if(g.difficulty>=2){if(Mname==="Chief Grimden"){mobPoisonEnchanted=true;Mpoison=67;Mbarrier=true;}
if(Mname==="Arcturin, the Lich King"){mobColdEnchanted=true;Msanctuary=true;Mpcold=67;}
if(Mname==="Sentoth, Lord of Rapture"){mobLightningEnchanted=true;MironMaiden=true;Mlightning=67;}
if(Mname==="Highlord Szarthax"){mobFireEnchanted=true;Mfire=67;}
if(Mname==="Matron Maelentia"){mobColdEnchanted=true;Mcold=67;}
if(Mname==="Revenant Viston"){mobLightningEnchanted=true;Mlightning=67;}
if(Mname==="Falzitherin"){mobPoisonEnchanted=true;Mpoison=67;}
if(Mname==="Vixen Sarmina"){mobVampiric=true;}
if(Mname==="Nalatos, God of Chaos"){mobSummoner=true;}
if(Mname==="Sanctum Guardian Ghalentus"){mobConvictionAura=true;}}
if(g.difficulty===3){if(Mname==="Chief Grimden"){mobShreddingAura=true;}
if(Mname==="Arcturin, the Lich King"){mobLamprey=true;}
if(Mname==="Sentoth, Lord of Rapture"){mobCripplingAura=true;}
if(Mname==="Highlord Szarthax"){mobShreddingAura=true;}
if(Mname==="Matron Maelentia"){mobLamprey=true;}
if(Mname==="Revenant Viston"){mobConcussiveAura=true;}
if(Mname==="Falzitherin"){mobDisruptionAura=true;}
if(Mname==="Vixen Sarmina"){mobFrenzy=true;Mflurry=true;}
if(Mname==="Nalatos, God of Chaos"){mobZealousAura=true;}
if(Mname==="Sanctum Guardian Ghalentus"){mobCripplingAura=true;}}}
if(cityStatus===true){MmaxHp*=5;Mxp=0;}
if(g.difficulty===1){if(monsterSpeed<2500*g.speed){monsterSpeed=2500*g.speed;}
if(McastSpeed<2000){McastSpeed=2000;}}else if(g.difficulty===2){if(monsterSpeed<2000*g.speed){monsterSpeed=2000*g.speed;}
if(McastSpeed<1750){McastSpeed=1750;}}else{if(monsterSpeed<1500*g.speed){monsterSpeed=1500*g.speed;}
if(McastSpeed<1500){McastSpeed=1500;}}
if(Mname==="Chief Grimden"){McastSpeed=0;}
if(Mtype===0){Mgold=0;}else if(Mtype===1){Mgold+=M.random()*(Mlvl*.75);}else if(Mtype===2){Mgold+=M.random()*(Mlvl*1.5);}else{Mgold+=M.random()*(Mlvl*4.5)+Mlvl;}
if(Mrare===0){Mwidth*=1.05;if(g.difficulty===1){MmaxHp=MmaxHp*2;Mxp=Mxp*1.2;}else if(g.difficulty===2){MmaxHp=~~(MmaxHp*2.5);Mxp=Mxp*1.4;}else{MmaxHp=MmaxHp*3;Mxp=Mxp*1.6;}
Mxp=Mxp*1.75;}else{if(g.difficulty===1){var zoo=1 / 9;}else if(g.difficulty===2){var zoo=1 / 5.3;}else{var zoo=1 / 3.2;}
if(g.difficulty===1){if(mob[2].rare===0){zoo=0;}}
if(mobsFound()===false){zoo=0;}
if(Mlvl>20&&M.random()<zoo&&Mrare!==3&&cityStatus===false){Mrare=2;if(g.difficulty===1){MmaxHp*=2.2;Mxp=Mxp*2.2;}else if(g.difficulty===2){MmaxHp*=2.6;Mxp=Mxp*2.4;}else{MmaxHp*=3.2;Mxp=Mxp*2.6;}
Mstr=(Mstr*1.1);Mint=(Mint*1.1);Mgold=(Mgold*2)+Mlvl;if(g.difficulty>=1){getTrait();}
if(g.difficulty>=2){getTrait();}
if(g.difficulty===3){getTrait();}}}
function getTrait(){var foo=~~(M.random()*(23))+1;if(foo==1&&!mobFireEnchanted){mobFireEnchanted=true;Mfire=67;Mskill[1]="fireball";Mskill[2]="fireball";Mskill[3]="fireball";Mskill[4]="conflagration";Mfreq=4;}else if(foo==2&&!mobColdEnchanted){mobColdEnchanted=true;Mcold=67;Mskill[1]="ice shard";Mskill[2]="ice shard";Mskill[3]="ice shard";Mskill[4]="blizzard";Mfreq=4;}else if(foo==3&&!mobLightningEnchanted){mobLightningEnchanted=true;Mlightning=67;Mskill[1]="energy bolt";Mskill[2]="energy bolt";Mskill[3]="energy bolt";Mskill[4]="static field";Mfreq=4;}else if(foo==4&&!mobPoisonEnchanted){mobPoisonEnchanted=true;Mpoison=67;Mskill[1]="poison cloud";Mskill[2]="poison cloud";Mskill[3]="poison cloud";Mskill[4]="envenom";Mfreq=4;}else if(foo==5&&!mobSummoner){mobSummoner=true;Melemental=0;Mlava=0;getRandomDD1();getRandomDD2();getRandomDD3();getRandomDot();Mfreq=4;}else if(foo==6&&!mobVicious){mobVicious=true;MironMaiden=true;Mstr=(Mstr*1.2);Mint=(Mint*1.2);Mskill[2]="backstab";Mskill[3]="shadow kick";}else if(foo==7&&!mobFrenzy){mobFrenzy=true;Mflurry=true;monsterSpeed-=700;Mskill[2]="shadow kick";Mskill[3]="shadow kick";}else if(foo==8&&!mobJuggernaut){mobJuggernaut=true;Mwidth=(Mwidth*1.2);MmaxHp*=1.5;Menrage=true;}else if(foo==9&&!mobTough){mobTough=true;Mbarrier=true;Mdef=66;Mskill[2]="weaken";Mskill[3]="weaken";}else if(foo==10&&!mobChromatic){mobChromatic=true;Msanctuary=true;}else if(foo==11&&!mobSprinter){getTrait();}else if(foo==12&&!mobVampiric){mobVampiric=true;Mdrain=true;Mskill[2]="yawn";Mskill[3]="heal";}else if(foo==13&&!mobLamprey){mobLamprey=true;Msilence=true;Mskill[2]="mind drain";Mskill[3]="mind drain";}else if(foo==14&&!mobMartyr){mobMartyr=true;Mskill[2]="heal";Mskill[3]="shadow kick";}else if(foo==15&&!mobPhased){mobPhased=true;Msilence=true;Mrune=0;Mlava=0;}else if(foo==16&&!mobDauntless){mobDauntless=true;Mresolution=0;Mskill[3]="fear";Mskill[2]="heal";}else if(foo==17&&!mobCripplingAura){mobCripplingAura=true;Mskill[2]="shadow kick";Mskill[3]="weaken";}else if(foo==18&&!mobDisruptionAura){mobDisruptionAura=true;Msilence=true;Mskill[2]="confuse";Mskill[3]="mind numb";}else if(foo==19&&!mobConvictionAura){mobConvictionAura=true;Msilence=true;getRandomDD1();getRandomDD2();getRandomDD3();getRandomDot();Mfreq=4;Mamp=true;}else if(foo==20&&!mobConcussiveAura){mobConcussiveAura=true;Mskill[2]="confuse";Mskill[3]="blind";}else if(foo==21&&!mobEnsnaringAura){mobEnsnaringAura=true;Mthorns=0;Mskill[2]="root";Mskill[3]="root";}else if(foo==22&&!mobZealousAura){mobZealousAura=true;Mskill[2]="blind";Mskill[3]="heal";}else if(foo==23&&!mobShreddingAura){mobShreddingAura=true;Mskill[2]="backstab";Mskill[3]="shadow kick";}else{getTrait();}}
function getRandomDD1(){var foo=~~(M.random()*(5))+1;if(foo==1){Mskill[1]="poison cloud";}
if(foo==2){Mskill[1]="smite";}
if(foo==3){Mskill[1]="energy bolt";}
if(foo==4){Mskill[1]="ice shard";}
if(foo==5){Mskill[1]="fireball";}}
function getRandomDD2(){var foo=~~(M.random()*(5))+1;if(foo==1){Mskill[2]="poison cloud";}
if(foo==2){Mskill[2]="smite";}
if(foo==3){Mskill[2]="energy bolt";}
if(foo==4){Mskill[2]="ice shard";}
if(foo==5){Mskill[2]="fireball";}}
function getRandomDD3(){var foo=~~(M.random()*(5))+1;if(foo==1){Mskill[3]="poison cloud";}
if(foo==2){Mskill[3]="smite";}
if(foo==3){Mskill[3]="energy bolt";}
if(foo==4){Mskill[3]="ice shard";}
if(foo==5){Mskill[3]="fireball";}}
function getRandomDot(){var foo=~~(M.random()*(5))+1;if(foo==1){Mskill[4]="envenom";}
if(foo==2){Mskill[4]="engulfing darkness";}
if(foo==3){Mskill[4]="static field";}
if(foo==4){Mskill[4]="blizzard";}
if(foo==5){Mskill[4]="conflagration";}}
checkTestData();monsterFound=true;if(Mlvl<20){if(Mfreq<9){Mfreq=9;}}
if(g.difficulty===1){if(mobChromatic===true){if(Mpoison>67){Mpoison=80;}
if(Mmagic>67){Mmagic=80;}
if(Mlightning>67){Mlightning=80;}
if(Mfire>67){Mfire=80;}
if(Mcold>67){Mcold=80;}}
if(Mrare===3){MmaxHp=~~(MmaxHp*1.5);}}else if(g.difficulty===2){if(Mdef===67){Mdef=58;}
if(Mpoison===67){Mpoison=50;}
if(Mmagic===67){Mmagic=50;}
if(Mlightning===67){Mlightning=50;}
if(Mcold===67){Mcold=50;}
if(Mfire===67){Mfire=50;}
if(mobChromatic===true){if(Mpoison>50){Mpoison=67;}
if(Mmagic>50){Mmagic=67;}
if(Mlightning>50){Mlightning=67;}
if(Mfire>50){Mfire=67;}
if(Mcold>50){Mcold=67;}}
if(Mrare===3){MmaxHp=~~(MmaxHp*2);}}else if(g.difficulty===3){if(Mdef===67){Mdef=50;}
if(Mpoison===67){Mpoison=33;}
if(Mmagic===67){Mmagic=33;}
if(Mlightning===67){Mlightning=33;}
if(Mcold===67){Mcold=33;}
if(Mfire===67){Mfire=33;}
if(mobChromatic===true){if(Mpoison>33){Mpoison=50;}
if(Mmagic>33){Mmagic=50;}
if(Mlightning>33){Mlightning=50;}
if(Mfire>33){Mfire=50;}
if(Mcold>33){Mcold=50;}}
if(Mrare===3){MmaxHp=~~(MmaxHp*3);}}
if(Mlvl<10){Mdef=100;Mpoison=100;Mmagic=100;Mlightning=100;Mcold=100;Mfire=100;}
if(g.difficulty===2){MmaxHp*=1.25;}else if(g.difficulty===3){MmaxHp*=1.8;}
Mhp=MmaxHp;loadSlotData();if(Mrare===3){triggerAmbush(true);if(Mname==="Chief Grimden"){playMusic("The Dark Amulet (New)");}else if(Mname==="Arcturin, the Lich King"){playMusic("Heroic Demise (2013 - With Choir)");}else if(Mname==="Sentoth, Lord of Rapture"){playMusic("Dark Descent (Adventure Edit) from _Fatblade_");}else if(Mname==="Revenant Viston"){playMusic("Blackmoor Colossus");}else if(Mname==="Matron Maelentia"){playMusic("Heroic Demise (2013 - With Choir)");}else if(Mname==="Highlord Szarthax"){playMusic("Arclight");}else if(Mname==="Vixen Sarmina"){playMusic("The Dark Amulet (New)");}else if(Mname==="Falzitherin"){playMusic("Dark Descent (Adventure Edit) from _Fatblade_");}else if(Mname==="Sanctum Guardian Ghalentus"){playMusic("Blackmoor Colossus");}else if(Mname==="Nalatos, God of Chaos"){playMusic("Arclight");}}
initChampTraits();}
function getNewSlotNumber(){var count=countMobs();if(count>=5){newSlotNumber=false;}else if(count===0){newSlotNumber=2;}else{function doit(){var x=~~(M.random()*(5));if(!mob[x].name){newSlotNumber=x;}else{doit();}}
doit();}}
function DADJ(Mlvl){if(g.difficulty===2){if(Mlvl<75){var adj=~~((75-Mlvl)/ 2);Mlvl+=adj;}}else if(g.difficulty===3){if(Mlvl<94){var adj=~~((94-Mlvl)/ 2);Mlvl+=adj;}}
return Mlvl;}
function loadSlotData(Slot,summoned){getNewSlotNumber();if(newSlotNumber===false){return;}
attackStatus=0;var x=newSlotNumber;var aggro=false;for(var i=0;i<=4;i++){if(mob[i].attackStatus===0){aggro=true;}}
if(aggro===true){if(cityStatus===false){mob[x].attackStatus=0;mob[x].attack.kill();mob[x].attack=T.delayedCall(.75,function(){mobDamage(x);});}}else{TGT=x;mob[x].attackStatus=1;MOBNAME[x].style.color='#ffff00';D.getElementById('mobShadow'+x).src="//i.imgur.com/fnHtalN.png";}
MOB[x].style.display='block';mob[x].name=Mname;mob[x].level=Mlvl;mob[x].maxHp=~~(MmaxHp);mob[x].hp=~~(Mhp);mob[x].xp=~~(Mxp);mob[x].str=~~(Mstr);mob[x].def=~~(Mdef);mob[x].gold=M.ceil(Mgold);mob[x].type=Mtype;mob[x].image=Mimg;mob[x].rare=Mrare;mob[x].skill1=Mskill[1];mob[x].skill2=Mskill[2];mob[x].skill3=Mskill[3];mob[x].skill4=Mskill[4];mob[x].castFreq=Mfreq;mob[x].poison=~~(Mpoison);mob[x].magic=~~(Mmagic);mob[x].lightning=~~(Mlightning);mob[x].fire=~~(Mfire);mob[x].cold=~~(Mcold);mob[x].speed=~~(monsterSpeed);mob[x].castSpeed=~~(McastSpeed);mob[x].imageWidth=Mwidth;mob[x].intel=~~(Mint);mob[x].mp=monsterMp;mob[x].harmTouch=MharmTouch;mob[x].rune=Mrune;mob[x].skeleton=Mskeleton;mob[x].wolf=Mwolf;mob[x].elemental=Melemental;mob[x].thorns=Mthorns;mob[x].lavaShield=Mlava;mob[x].silenceStatus=Msilence;mob[x].silenced=false;mob[x].resolution=Mresolution;mob[x].enrageStatus=Menrage;mob[x].ironMaidenStatus=MironMaiden;mob[x].layHands=MlayHands;mob[x].flurryStatus=Mflurry;mob[x].ampMagicStatus=Mamp;mob[x].sanctuaryStatus=Msanctuary;mob[x].barrierStatus=Mbarrier;mob[x].drainStatus=Mdrain;mob[x].ID=~~(monsterID);mob[x].enrageTimer.kill();mob[x].ironMaidenTimer.kill();mob[x].flurryTimer.kill();mob[x].ampMagicTimer.kill();mob[x].sanctuaryTimer.kill();mob[x].barrierTimer.kill();mob[x].enrage=false;mob[x].ironMaiden=false;mob[x].barrier=false;mob[x].sanctuary=false;mob[x].ampMagic=false;mob[x].flurry=false;mob[x].imageBaseX=mobImgX;mob[x].imageBaseY=mobImgY;mob[x].cX=cX;mob[x].cY=cY;mob[x].vicious=mobVicious;mob[x].frenzy=mobFrenzy;mob[x].juggernaut=mobJuggernaut;mob[x].tough=mobTough;mob[x].chromatic=mobChromatic;mob[x].summoner=mobSummoner;mob[x].sprinter=mobSprinter;mob[x].vampiric=mobVampiric;mob[x].lamprey=mobLamprey;mob[x].fireEnchanted=mobFireEnchanted;mob[x].coldEnchanted=mobColdEnchanted;mob[x].lightningEnchanted=mobLightningEnchanted;mob[x].poisonEnchanted=mobPoisonEnchanted;mob[x].mobMartyr=mobMartyr;mob[x].phased=mobPhased;mob[x].dauntless=mobDauntless;mob[x].cripplingAura=mobCripplingAura;mob[x].disruptionAura=mobDisruptionAura;mob[x].convictionAura=mobConvictionAura;mob[x].concussiveAura=mobConcussiveAura;mob[x].ensnaringAura=mobEnsnaringAura;mob[x].zealousAura=mobZealousAura;mob[x].shreddingAura=mobShreddingAura;mob[x].audio1=Maud1;mob[x].audio2=Maud2;mob[x].audio3=Maud3;mob[x].audio4=Maud4;mob[x].audio5=Maud5;mob[x].audio6=Maud6;Mskeleton=1;Melemental=1;Mwolf=1;for(var i=1;i<=6;i++){loadAudio(mob[x]['audio'+i]);}
for(var i=1;i<=4;i++){if(Mskill[i]==="poison cloud"){asset[240+i+(x*4)]=new Image();asset[240+i+(x*4)].src="images1/greenparticle200.png";}else if(Mskill[i]==="smite"){asset[240+i+(x*4)]=new Image();asset[240+i+(x*4)].src="images1/magentaparticle200.png";}else if(Mskill[i]==="energy bolt"){asset[240+i+(x*4)]=new Image();asset[240+i+(x*4)].src="images1/yellowparticle200.png";}else if(Mskill[i]==="ice shard"){asset[240+i+(x*4)]=new Image();asset[240+i+(x*4)].src="images1/glacialSpike.png";}else if(Mskill[i]==="fireball"){asset[240+i+(x*4)]=new Image();asset[240+i+(x*4)].src="images1/fireball.png";}}
mob[x].traits=champString(x);var imgRatio=(mob[x].imageWidth / mob[x].imageBaseX);mob[x].cX=mob[x].cX*imgRatio;mob[x].cY=mob[x].cY*imgRatio;var leftAdjust=152+(x*244)-(mob[x].imageWidth / 2);var u=Mwidth / mob[x].imageBaseX;var mobHeight=M.round(mob[x].imageBaseY*u);mob[x].imageHeight=mobHeight;canvas[x].width=Mwidth;canvas[x].height=mobHeight;stage[x].removeAllChildren();bmp[x]=new C.Bitmap("images1/"+Mimg+".png");bmpTint[x].poison=new C.Bitmap("images1/"+Mimg+".png");bmpTint[x].magic=new C.Bitmap("images1/"+Mimg+".png");bmpTint[x].lightning=new C.Bitmap("images1/"+Mimg+".png");bmpTint[x].fire=new C.Bitmap("images1/"+Mimg+".png");bmpTint[x].cold=new C.Bitmap("images1/"+Mimg+".png");bmp[x].image.onload=function(){var e=bmp[x].getBounds();var t=bmp[x].image.width / 2;var r=bmp[x].image.height / 2;var i=Mwidth / 2;var s=mobHeight / 2;bmp[x].setTransform(i,s,u,u,0,0,0,t,r);bmpTint[x].poison.setTransform(i,s,u,u,0,0,0,t,r);bmpTint[x].magic.setTransform(i,s,u,u,0,0,0,t,r);bmpTint[x].lightning.setTransform(i,s,u,u,0,0,0,t,r);bmpTint[x].fire.setTransform(i,s,u,u,0,0,0,t,r);bmpTint[x].cold.setTransform(i,s,u,u,0,0,0,t,r);bmp[x].cache(e.x,e.y,e.width,e.height);bmpTint[x].poison.cache(e.x,e.y,e.width,e.height);bmpTint[x].magic.cache(e.x,e.y,e.width,e.height);bmpTint[x].lightning.cache(e.x,e.y,e.width,e.height);bmpTint[x].fire.cache(e.x,e.y,e.width,e.height);bmpTint[x].cold.cache(e.x,e.y,e.width,e.height);bmpTint[x].poison.alpha=0;bmpTint[x].magic.alpha=0;bmpTint[x].lightning.alpha=0;bmpTint[x].fire.alpha=0;bmpTint[x].cold.alpha=0;stage[x].addChild(bmp[x]);stage[x].addChild(bmpTint[x].poison);stage[x].addChild(bmpTint[x].magic);stage[x].addChild(bmpTint[x].lightning);stage[x].addChild(bmpTint[x].fire);stage[x].addChild(bmpTint[x].cold);}
var bot1=(M.random()*(268)-300);var bot2=floorB;T.set(MOB[x],{scale:1,width:Mwidth,height:mobHeight,left:leftAdjust,bottom:bot2});MOBNAME[x].style.fontSize='1.2em';MOBNAME[x].textContent=Mname;var nameWid=MOBNAME[x].offsetWidth;var mobWid=MOB[x].offsetWidth;var ADJ=(mobWid / 2)-(nameWid / 2);MOBNAME[x].style.left=ADJ+'px';$("#mobIcons"+x).empty();T.to(MOB[x],.5,{startAt:{opacity:0,left:leftAdjust+(M.random()*(320)-160)},left:leftAdjust,opacity:1});T.to(MOB[x],.5,{startAt:{bottom:bot1},bottom:bot2,force3D:"auto",ease:ez.Bout});if(mob[x].phased){T.set(canvas[x],{scale:1,rotationY:~~(M.random()*(2))*180,opacity:.5});}else{T.set(canvas[x],{scale:1,rotationY:~~(M.random()*(2))*180,opacity:1});}
CStat();if(diff()===2){mob[x].xp=~~(mob[x].xp*1.15)}
if(location.protocol==='https:'&&mob[x].name){$.ajax({url:'php/game1.php',data:{run:"setMob",name:mob[x].name,Slot:x,exp:mob[x].xp,gold:mob[x].gold}}).fail(function(data){failToCommunicate();});}}
function failToCommunicate(){Chat("SERVER ERROR: Cannot contact the server",1);T.pauseAll();setTimeout(function(){serverLogout();},5000);}
function blur(Slot,amount){if(isFirefox===true||isOpera===true||isChrome===true){if(amount===undefined){amount=1;}
var bb=bmp[Slot].getBounds();var bbx=bb.x;var bby=bb.y;var bbWidth=bb.width;var bbHeight=bb.height;var blurFilter=new C.BlurFilter(amount,amount,1);bmp[Slot].filters=[blurFilter];var bounds=blurFilter.getBounds();bmp[Slot].cache((bbx+bounds.x),(bby+bounds.y),(bbWidth+bounds.width),(bbHeight+bounds.height));}}
function initBmpTint(Slot,mType,d){var i="#0f0";if(mType==="magic"){i="#f0f"}else if(mType==="lightning"){i="#fff"}else if(mType==="fire"){i="#f80"}else if(mType==="cold"){i="#0ff"}
bmpTint[Slot][mType].name=mob[Slot].image;T.set(bmpTint[Slot][mType],{easel:{tint:i,tintAmount:.5}});tint(Slot,mType,d);}
function tint(Slot,mType,d){if(mType==='physical'||!mType){return;}
if(isFirefox===true||isChrome===true||isOpera===true){if(GLB.videoSetting==="High"){if(bmpTint[Slot][mType].name!==mob[Slot].image){initBmpTint(Slot,mType,d)}else{tintTimer[Slot][mType].kill();bmpTint[Slot][mType].alpha=1;tintTimer[Slot][mType]=T.delayedCall(d,function(){bmpTint[Slot][mType].alpha=0;});}}}}
function champString(Slot){var foo="";var zag=1;var x=newSlotNumber;if(mob[Slot].vicious){foo+=" Vicious ";zag=0;}
if(mob[Slot].frenzy){foo+=" Frenzied ";zag=0;}
if(mob[Slot].juggernaut){foo+=" Juggernaut ";zag=0;}
if(mob[Slot].tough){foo+=" Tough ";zag=0;}
if(mob[Slot].chromatic){foo+=" Chromatic ";zag=0;}
if(mob[Slot].summoner){foo+=" Summoner ";zag=0;}
if(mob[Slot].sprinter){foo+=" Sprinter ";zag=0;}
if(mob[Slot].vampiric){foo+=" Vampiric ";zag=0;}
if(mob[Slot].lamprey){foo+=" Lamprey ";zag=0;}
if(mob[Slot].fireEnchanted){foo+=" Fire Enchanted ";zag=0;}
if(mob[Slot].coldEnchanted){foo+=" Cold Enchanted ";zag=0;}
if(mob[Slot].lightningEnchanted){foo+=" Lightning Enchanted ";zag=0;}
if(mob[Slot].poisonEnchanted){foo+=" Poison Enchanted ";zag=0;}
if(mob[Slot].mobMartyr){foo+=" Martyr ";zag=0;}
if(mob[Slot].phased){foo+=" Phased ";zag=0;}
if(mob[Slot].dauntless){foo+=" Dauntless ";zag=0;}
if(mob[Slot].cripplingAura){foo+=" Crippling Aura ";zag=0;}
if(mob[Slot].disruptionAura){foo+=" Disruption Aura ";zag=0;}
if(mob[Slot].convictionAura){foo+=" Conviction Aura ";zag=0;}
if(mob[Slot].concussiveAura){foo+=" Concussive Aura ";zag=0;}
if(mob[Slot].ensnaringAura){foo+=" Ensnaring Aura ";zag=0;}
if(mob[Slot].zealousAura){foo+=" Zealous Aura ";zag=0;}
if(mob[Slot].shreddingAura){foo+=" Shredding Aura ";zag=0;}
if(zag==0){foo+="<br>";}
if(mob[x].def<100){foo+=" Physical Resistant ".fontcolor("#ffffff");}
if(mob[x].poison<100){foo+=" Poison Resistant ".fontcolor("#00ff00");}
if(mob[x].magic<100){foo+=" Magic Resistant ".fontcolor("#ff00ff");}
if(mob[x].lightning<100){foo+=" Lightning Resistant ".fontcolor("#ffff00");}
if(mob[x].cold<100){foo+=" Cold Resistant ".fontcolor("#00ffff");}
if(mob[x].fire<100){foo+=" Fire Resistant ".fontcolor("#ff0000");}
if(mob[x].def>100){foo+=" Physical Weakness ".fontcolor("#ffffff");}
if(mob[x].poison>100){foo+=" Poison Weakness ".fontcolor("#00ff00");}
if(mob[x].magic>100){foo+=" Magic Weakness ".fontcolor("#ff00ff");}
if(mob[x].lightning>100){foo+=" Lightning Weakness ".fontcolor("#ffff00");}
if(mob[x].cold>100){foo+=" Cold Weakness ".fontcolor("#00ffff");}
if(mob[x].fire>100){foo+=" Fire Weakness ".fontcolor("#ff0000");}
return foo;}
function monsterCastingParticleLeft1(Slot){var y=0;var x=0;var z=mob[Slot].image;if(Slot===5){var z=petImage;y-=50;}
if(z==="a lizardman"){x+=116;y+=229;}
if(z==="an orc"){x+=52;y+=240;}
if(z==="a gnoll"){x+=61;y+=260;}
if(z==="a kobold"){x+=103;y+=236;}
if(z==="a purple dragon"){x+=714;y+=418;}
if(z==="a red dragon"){x+=714;y+=418;}
if(z==="a blue dragon"){x+=714;y+=418;}
if(z==="dracoliche"){x+=714;y+=418;}
if(z==="an anuran"){x+=53;y+=133;}
if(z==="a skeleton"){x+=63;y+=256;}
if(z==="a dark skeleton"){x+=63;y+=256;}
if(z==="a male zombie"){x+=21;y+=207;}
if(z==="a female zombie"){x+=24;y+=212;}
if(z==="garanel rucksif"){x+=200;y+=296;}
if(z==="a dark elf male plate"){x+=63;y+=220;}
if(z==="a dark elf male"){x+=21;y+=215;}
if(z==="a dark elf female"){x+=20;y+=257;}
if(z==="a dark elf female plate"){x+=24;y+=275;}
if(z==="a dark elf matron"){x+=104;y+=194;}
if(z==="a vampire female"){x+=14;y+=337;}
if(z==="a dhampyre"){x+=44;y+=230;}
if(z==="phinigel autropos"){x+=247;y+=300;}
if(z==="a red goblin"){x+=48;y+=216;}
if(z==="a blue goblin"){x+=49;y+=216;}
if(z==="braxxen"){x+=86;y+=361;}
if(z==="an ice giant"){x+=62;y+=368;}
if(z==="cazic"){x+=388;y+=362;}
if(z==="innoruuk"){x+=417;y+=335;}
if(z==="maestro"){x+=213;y+=371;}
if(z==="a faerie"){x+=62;y+=390;}
if(z==="grimden"){x+=256;y+=253;}
if(z==="an evil eye round"){x+=160;y+=320;}
if(z==="a gargoyle"){x+=160;y+=365;}
if(z==="an imp"){x+=128;y+=361;}
if(z==="a mummy"){x+=69;y+=240;}
if(z==="a human female"){x+=27;y+=279;}
if(z==="a human male"){x+=27;y+=254;}
if(z==="a stone golem"){x+=71;y+=225;}
if(z==="a shadowed man"){x+=21;y+=198;}
if(z==="avatar of fear"){x+=208;y+=358;}
if(z==="a steel golem"){x+=159;y+=271;}
if(z==="a werewolf"){x+=113;y+=263;}
if(z==="a clay golem"){x+=103;y+=321;}
if(z==="a fungus"){x+=100;y+=147;}
if(z==="a fire giant"){x+=94;y+=305;}
if(z==="a beetle"){x+=300;y+=50;}
if(z==="a bat"){x+=298;y+=348;}
if(z==="a brown spider"){x+=250;y+=68;}
if(z==="a jungle spider"){x+=250;y+=63;}
if(z==="a heart spider"){x+=246;y+=105;}
if(z==="a ghoul"){x+=119;y+=275;}
if(z==="a white spider"){x+=249;y+=89;}
if(z==="a gorilla"){x+=170;y+=145;}
if(z==="a rat"){x+=233;y+=69;}
if(z==="a wisp"){x+=61;y+=382;}
if(z==="a terror"){x+=135;y+=201;}
if(z==="a white wolf"){x+=385;y+=286;}
if(z==="a wolf"){x+=385;y+=286;}
if(z==="an earth elemental"){x+=60;y+=253;}
if(z==="a fire elemental"){x+=71;y+=205;}
if(Slot!==5){var widthDifferenceX=mob[Slot].imageWidth / mob[Slot].imageBaseX;var widthDifferenceY=mob[Slot].imageHeight / mob[Slot].imageBaseY;x=M.ceil(x*widthDifferenceX);y=M.ceil(y*widthDifferenceY);}else{x=(MOB[5].offsetLeft+petWidth / 2);y=(497-MOB[5].offsetTop-100);}
return[x,y];}
function monsterCastingParticleLeft2(Slot){var y=0;var x=0;var z=mob[Slot].image;if(Slot===5){z=petImage;y-=50;}
if(z==="a lizardman"){x+=397;y+=231;}
if(z==="an orc"){x+=334;y+=195;}
if(z==="a gnoll"){x+=351;y+=251;}
if(z==="a kobold"){x+=373;y+=241;}
if(z==="a purple dragon"){x+=714;y+=418;}
if(z==="a red dragon"){x+=714;y+=418;}
if(z==="a blue dragon"){x+=714;y+=418;}
if(z==="dracoliche"){x+=714;y+=418;}
if(z==="an anuran"){x+=322;y+=133;}
if(z==="a skeleton"){x+=190;y+=266;}
if(z==="a dark skeleton"){x+=190;y+=266;}
if(z==="a male zombie"){x+=179;y+=211;}
if(z==="a female zombie"){x+=150;y+=218;}
if(z==="garanel rucksif"){x+=415;y+=299;}
if(z==="a dark elf male plate"){x+=198;y+=207;}
if(z==="a dark elf male"){x+=179;y+=234;}
if(z==="a dark elf female"){x+=186;y+=242;}
if(z==="a dark elf female plate"){x+=196;y+=266;}
if(z==="a dark elf matron"){x+=245;y+=342;}
if(z==="a vampire female"){x+=165;y+=346;}
if(z==="a dhampyre"){x+=186;y+=228;}
if(z==="phinigel autropos"){x+=450;y+=295;}
if(z==="a red goblin"){x+=345;y+=237;}
if(z==="a blue goblin"){x+=345;y+=237;}
if(z==="braxxen"){x+=362;y+=444;}
if(z==="an ice giant"){x+=461;y+=337;}
if(z==="cazic"){x+=781;y+=356;}
if(z==="innoruuk"){x+=726;y+=334;}
if(z==="maestro"){x+=460;y+=368;}
if(z==="a faerie"){x+=145;y+=387;}
if(z==="grimden"){x+=508;y+=255;}
if(z==="an evil eye round"){x+=160;y+=320;}
if(z==="a gargoyle"){x+=311;y+=365;}
if(z==="an imp"){x+=246;y+=369;}
if(z==="a mummy"){x+=269;y+=222;}
if(z==="a human female"){x+=194;y+=280;}
if(z==="a human male"){x+=187;y+=255;}
if(z==="a stone golem"){x+=567;y+=224;}
if(z==="a shadowed man"){x+=152;y+=200;}
if(z==="avatar of fear"){x+=461;y+=413;}
if(z==="a steel golem"){x+=528;y+=272;}
if(z==="a werewolf"){x+=256;y+=239;}
if(z==="a clay golem"){x+=370;y+=321;}
if(z==="a fungus"){x+=285;y+=145;}
if(z==="a fire giant"){x+=579;y+=302;}
if(z==="a beetle"){x+=300;y+=50;}
if(z==="a bat"){x+=298;y+=347;}
if(z==="a brown spider"){x+=250;y+=68;}
if(z==="a jungle spider"){x+=250;y+=63;}
if(z==="a heart spider"){x+=246;y+=105;}
if(z==="a ghoul"){x+=382;y+=263;}
if(z==="a white spider"){x+=249;y+=89;}
if(z==="a gorilla"){x+=439;y+=140;}
if(z==="a rat"){x+=233;y+=69;}
if(z==="a wisp"){x+=257;y+=377;}
if(z==="a terror"){x+=517;y+=206;}
if(z==="a white wolf"){x+=385;y+=286;}
if(z==="a wolf"){x+=385;y+=286;}
if(z==="an earth elemental"){x+=275;y+=244;}
if(z==="a fire elemental"){x+=275;y+=206;}
if(Slot!==5){var widthDifferenceX=mob[Slot].imageWidth / mob[Slot].imageBaseX;var widthDifferenceY=mob[Slot].imageHeight / mob[Slot].imageBaseY;x=M.ceil(x*widthDifferenceX);y=M.ceil(y*widthDifferenceY);}else{x=(MOB[5].offsetLeft+petWidth / 2);y=(497-MOB[5].offsetTop-100);}
return[x,y];}
function Qcolor(msg,qux){var Ldiff=my.level-qux;var bar;if(my.level>=1&&my.level<20){if(qux<my.level-10){bar="grey";}
if(qux>=my.level-10&&qux<my.level-4){bar="darkgreen";}
if(qux>=my.level-4&&qux<my.level-2){bar="lightBlue";}
if(qux>=my.level-2&&qux<my.level){bar="blue4";}
if(qux==my.level){bar="white";}
if(qux>my.level&&qux<=my.level+2){bar="yellow2";}
if(qux>my.level+2){bar="red2";qux="?";}}else{if(qux<(M.round(my.level*.4))){bar="grey";}
if(qux>=(M.round(my.level*.4))&&qux<my.level*.6){bar="darkgreen";}
if(qux>=(M.round(my.level*.6))&&qux<my.level*.8){bar="lightBlue";}
if(qux>=my.level*.8&&qux<my.level){bar="blue4";}
if(qux==my.level){bar="white";}
if(qux>my.level&&qux<=my.level+2){bar="yellow2";}
if(qux>my.level+2){bar="red2";qux="?";}}
msg="<span class='"+bar+" mouse'>"+msg+"</span>";qux=(qux+'').fontcolor(bar);return msg;}
$("#questJournal").on('click','.QT',function(){var quest=$(this).text();var subzone=$(this).data('subzone');quest=quest.replace("- ","");QupdateJournal(quest,subzone);});QL={edenburg1:false,salubrin1:false,salubrin3:false,tendolin1:false,greenthorn1:false,greenthorn2:false,greenthorn3:false,grotto1:false,grotto2:false,grotto3:false,lanfeld1:false,lanfeld2:false,lanfeld3:false,aspen1:false,braxxen1:false,braxxen2:false,braxxen3:false,marshlands1:false,marshlands2:false,marshlands3:false,arcturin1:false,arcturin1:false,arcturin1:false,artremia1:false,fahnlir1:false,fahnlir2:false,fahnlir3:false,ruins1:false,ruins2:false,ruins3:false,temple1:false,temple2:false,temple3:false,fenwoven1:false,viston1:false,viston2:false,viston3:false,viston4:false,galeblast1:false,galeblast2:false,galeblast3:false,galeblast4:false,ashenflow1:false,ashenflow2:false,ashenflow3:false,ashenflow4:false,dire1:false,nimgaul1:false};function QupdateJournal(c,sz,bypass){if(!bypass){if(questJournalBlock===1){return;}}
T.set('#QindicatorWrap',{opacity:1});var d=8000;var R="#ff0000";var Ir="#cccc52";var Iu="#a59263";var Y="#ffff00";var y="#ffd700";var G="#ffffff";var x=g.difficulty-1;var s1="";var s2="";var z="";var q="";var QH='';var QP='';var Z1=myZone();var SZ=mySubzone();qmsg='';var m1='';var dAdj=0;if(g.difficulty===2){dAdj=25;}
if(g.difficulty===3){dAdj=44;}
var Done=false;function QHead(questName,sz){if(!sz||sz===parseInt(mySubzone(),10)){QH=questName;}}
function QI(msg,sz){if(!sz||sz===parseInt(mySubzone(),10)){QP+=msg;}
return msg;}
if(P.Q[x].GreaterFaydark<4){z="Salubrin Forest";q="Orcish Marauders";if(P.Q[x].GreaterFaydark<=1){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(2+dAdj))+"</div>";}
if(P.Q[x].GreaterFaydark===2){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(3+dAdj))+"</div>";}
if(P.Q[x].GreaterFaydark===3){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(4+dAdj))+"</div>";}
if(((Z1===z||Z1==="Edenburg")&&c===undefined)||c===q&&Done===false){if(P.Q[x].GreaterFaydark<2){QHead(q);var wc1="Clicking";var wc2="click";if(isMobile===true){wc1="Tapping";wc2="tap";}
if(P.Q[x].GreaterFaydark===0){m1=gold("Miranda: ")+"Hail and well met, "+my.name+". My name is Miranda Crossheart, Commander of the Edenburg Recruit Detachment. So you are here to make something of yourself here in Vandamor, eh?<br><br>"+"My job is to ensure that even an ordinary "+my.race.toLowerCase()+" like yourself succeeds in that task. There is plenty of busy work around here that doesn't include carrying around a clipboard.<br><br>"+"The best way to learn how to swim is by jumping into a river, so here's your first mission!<br><br>"+"Our scouts have reported that a group of orc marauders are terrorizing the perimeter of the city. Proceed to "+gold("Salubrin Forest")+" and eliminate the orcs! Be sure to test out all of your skills in combat so you know what you're doing.";if(!QL.edenburg1&&(Z1===z&&SZ===0||Z1==="Edenburg")){QL.edenburg1=1;lore(m1);}
if(Z1==="Edenburg"){makePortal();}
P.Q[x].GreaterFaydark=1;save.quests();}else{m1=gold("Miranda: ")+"Alright, "+my.name+". Time to warm up by killing off these worthless orc vermin. I hope you remember something useful from our weeks of intense combat training.<br><br>"+"If things don't go your way, you can always run back to Edenburg with your tail between your legs. Or you could make Edenburg proud and crush these pesky orcs. The choice is yours!";if(!QL.salubrin1&&(Z1===z&&SZ===0||Z1==="Edenburg")){QL.salubrin1=1;lore(m1);}}
s2=m1+"<br><br>Slay four "+"orc pawns".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].GF1+"/4 orc pawns slain").fontcolor(G));}
if(P.Q[x].GreaterFaydark===3){QHead(q);m1=gold("Miranda: ")+"By the Light of Venova, maybe I'm not wasting my time with you after all, "+my.name+". You sent those orcs runnin' to the hills!<br><br>"+"That's some fine work for a recruit that just learned how to put their diapers on. Most of my recruits come limping back with excuses, so this is refreshing. Demonstrate that you can finish the job and pursue these orcs to their rallying point.<br><br>"+"Our intel reports indicate that these orcs are from Lanfeld Outpost, commanded by Chief Grimden. I am truly amazed that a pack of dim-witted orcs managed to lumber their way here from Lanfeld Outpost.<br><br>"+"Orcs aren't exactly known for their expeditionary activities. Something out of the ordinary is going on here. This is the most aggressive orc incursion in centuries, but what does it mean?<br><br>"+"Search and destroy the remaining orcs in Salubrin Forest. From there we'll plan our counter-attack on Lanfeld Outpost.";if(!QL.salubrin3&&(Z1===z&&SZ===0||Z1==="Edenburg")){QL.salubrin3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"orcs".fontcolor(y)+".<br><br>";s2+=QI('- '+(P.Q[x].GF1+"/10 orcs slain<br><br>").fontcolor(G));"Reward: "+"Rare Weapon".fontcolor(Ir);}
Done=true;}}
if(P.Q[x].LesserFaydark<2&&P.Q[x].GreaterFaydark>=4){z="Tendolin Meadows";q="Pixie Problems";if(P.Q[x].LesserFaydark<=1){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(4+dAdj))+"</div>";}
if(((Z1===z||Z1==="Edenburg")&&c===undefined)||c===q&&Done===false){if(P.Q[x].LesserFaydark<2){QHead(q);P.Q[x].LesserFaydark=1;m1=gold("Miranda: ")+"Well done, "+my.name+". That was commendable work for such an ordinary "+my.race.toLowerCase()+" like yourself. I knew the indoc sergeants were wrong about you! I suspected there was at least a remote chance you would amount to something.<br><br>";if(my.deaths===0){m1+="It looks like you haven't died so far. Great job! The problem with success is that you get rewarded with more work to do, so here's your next mission!<br><br>"}else{m1+="It looks like you have died "+my.deaths+" time so far. You might want to be more careful out there. Nevertheless, here is your next mission.<br><br>";}
m1+="Our latest intel reports that a spy network of pixies are working with the orcs. They found Lanfeld insignia left behind at their hiding spots.<br><br>"+"I suspect they are supplying information to the orcs which would explain the recent ambushes on traveling merchants. Scout out "+gold("Tendolin Meadows")+" and eliminate the pixies at once.";if(!QL.tendolin1&&(Z1===z&&SZ===0||Z1==="Edenburg")){QL.tendolin1=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"pixie tricksters".fontcolor(y)+" and 5 "+"pixie pranksters".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].LF1+"/10 pixie tricksters slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].LF2+"/5 pixie pranksters slain").fontcolor(G));}
Done=true;}}
if(P.Q[x].Blackburrow<4&&P.Q[x].LesserFaydark>=2){z="Greenthorn Cavern";q="Viceroy's Ledge";if(P.Q[x].Blackburrow<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(8+dAdj))+"</div>";}
if(P.Q[x].Blackburrow===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(10+dAdj))+"</div>";}
if(P.Q[x].Blackburrow===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(12+dAdj))+"</div>";}
if(((Z1===z||Z1==="Edenburg")&&c===undefined)||c===q&&Done===false){if(P.Q[x].Blackburrow<2){QHead(q,1);P.Q[x].Blackburrow=1;m1=gold("Miranda: ")+"Alright, "+my.name+", you've done a fine job securing Edenburg's perimeter. Let's proceed toward Lanfeld Outpost and execute our counter-attack. The only way there from here is through Greenthorn Cavern.<br><br>"+"Hostile gnolls inhabit the cavern, so making your way through in one piece won't be easy. The first part is simple. Scout out "+gold("Greenthorn Cavern")+" and eliminate the gnolls guarding the entrance.";if(!QL.greenthorn1&&(Z1===z&&SZ===1||Z1==="Edenburg")){QL.greenthorn1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"gnoll pups".fontcolor(y)+", 6 "+"scrawny gnolls".fontcolor(y)+", and 4 "+"gnoll scouts".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].BB1+"/8 gnoll pups slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].BB2+"/6 scrawny gnolls slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].BB3+"/4 gnoll scouts slain<br>").fontcolor(G),1);}
if(P.Q[x].Blackburrow===2){QHead(q,2);m1=gold("Miranda: ")+"Stellar work, but there's no time to rest now, "+my.name+". Continue to the bridge where Furrpaw Barxen performs combat training.<br><br>"+"The gnolls you'll encounter there are a cut above the hapless whelps you handled at the entrance of the cavern, so don't expect a walk through the park this time.";if(!QL.greenthorn2&&(Z1===z&&SZ===2||Z1==="Edenburg")){QL.greenthorn2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"gnoll shamans".fontcolor(y)+", 8 "+"patrolling gnolls".fontcolor(y)+", 6 "+"gnoll sergeants".fontcolor(y)+", and "+"Furrpaw Barxen".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].BB1+"/8 gnoll shamans slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].BB2+"/8 patrolling gnolls slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].BB3+"/6 gnoll sergeants slain<br>").fontcolor(G),2);if(P.Q[x].BB4===0){s2+=QI("- "+"Slay Furrpaw Barxen".fontcolor(G),2);}else{s2+=QI("- "+"Furrpaw Barxen slain".fontcolor(G),2);}}
if(P.Q[x].Blackburrow===3){QHead(q,3);m1=gold("Miranda: ")+"Okay, "+my.name+", you're in for a real challenge this time. Viceroy Tanaden's command ledge blocks the exit to the cavern, so you will have to eliminate his guards and Tanaden to proceed further.<br><br>"+"His cadre of guards, tacticians, and commanders are no pushovers, so I wouldn't be surprised to hear of your untimely demise. Don't disappoint me, "+my.name+". I just told my commanding officer that you're no ordinary "+my.race.toLowerCase()+". Don't prove me wrong.";if(!QL.greenthorn3&&(Z1===z&&SZ===3||Z1==="Edenburg")){QL.greenthorn3=1;lore(m1);}
s2=m1+"<br><br>Slay 12 "+"elite gnoll guards".fontcolor(y)+", 8 "+"gnoll tacticians".fontcolor(y)+", 4 "+"gnoll commanders".fontcolor(y)+", and "+"Viceroy Tanaden".fontcolor(y)+" himself.<br><br>";s2+=QI("- "+(P.Q[x].BB1+"/12 elite gnoll guards slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].BB2+"/8 gnoll tacticians slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].BB3+"/4 gnoll commanders slain<br>").fontcolor(G),3);if(P.Q[x].BB4===0){s2+=QI("- "+"Slay Viceroy Tanaden".fontcolor(G),3);}else{s2+=QI("- "+"Viceroy Tanaden slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].Befallen<4&&P.Q[x].Blackburrow>=4){z="Riven Grotto";q="Under the River";if(P.Q[x].Befallen<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(13+dAdj))+"</div>";}
if(P.Q[x].Befallen===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(15+dAdj))+"</div>";}
if(P.Q[x].Befallen===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(16+dAdj))+"</div>";}
if(((Z1===z||Z1==="Edenburg")&&c===undefined)||c===q&&Done===false){if(P.Q[x].Befallen<2){QHead(q,1);P.Q[x].Befallen=1;m1=gold("Miranda: ")+"Outstanding, "+my.name+"! I'd almost wager you have some talent for this line of business.<br><br>";if(talentsRemaining()>0){m1+="Speaking of talents, I see that you have some talent points to allocate. Open the Talent Tab on the Character Statistics Window to train your skills. You get a new skill point each time you level up, so don't forget!<br><br>";}else{m1+="Speaking of talents, I see that you allocated your talent points, so it seems you already know what you're doing. You're one of the sharpest recruits to come through our detachment in a while.<br><br>";}
m1+="Now, in order to exact revenge at Lanfeld Outpost there's one last obstacle in our way: the Holomir River. Did you bring a bridge with you? If not you're going to have to use the underground passage in "+gold("Riven Grotto")+".<br><br>"+"In any case, I'm sure a scrappy "+my.race.toLowerCase()+" like yourself would prefer the adventurous route. The good news is you get to crack some skulls as the grotto is packed to the brim with undead and practitioners of forbidden magic.<br><br>"+"The entrance is lightly guarded by necromancer initiates and their pets. Deal with them first and then you can continue through the grotto.";if(!QL.grotto1&&(Z1===z&&SZ===1||Z1==="Edenburg")){QL.grotto1=1;lore(m1);}
s2=m1+"<br><br>Slay 6 "+"necro neophytes".fontcolor(y)+", 6 "+"necro initiates".fontcolor(y)+", and 6 "+"dread bones".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].BF1+"/6 necro neophytes slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].BF2+"/6 necro initiates slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].BF3+"/6 dread bones slain<br>").fontcolor(G),1);}
if(P.Q[x].Befallen===2){QHead(q,2);m1=gold("Miranda: ")+"Did you see how scared they were, "+my.name+"? You really reformed those dregs. I'm proud of you. I don't think I could have done it better myself. That'll teach them to dabble in forbidden magic. These outcasts have no respect for the law!<br><br>"+"Take care to show them no mercy as their blasphemy threatens the foundation of Edenburg. Proceed to their central chamber where Dark Priest Nymda leads their ritualistic ceremonies to their dark lord.<br><br>"+"Be prepared to face a varied assortment of undead horrors which have been re-animated using their ghastly techniques. As an added bonus, once they are eliminated we can make our way to the exit.";if(!QL.grotto2&&(Z1===z&&SZ===2||Z1==="Edenburg")){QL.grotto2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"ice boned skeletons".fontcolor(y)+", 8 "+"necro acolytes".fontcolor(y)+", 5 "+"ghouls".fontcolor(y)+", and "+"Dark Priest Nymda".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].BF1+"/8 ice boned skeletons slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].BF2+"/8 necro acolytes slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].BF3+"/5 ghouls slain<br>").fontcolor(G),2);if(P.Q[x].BF4===0){s2+=QI("- "+"Slay Dark Priest Nymda".fontcolor(G),2);}else{s2+=QI("- "+"Dark Priest Nymda slain".fontcolor(G),2);}}
if(P.Q[x].Befallen===3){QHead(q,3);m1=gold("Miranda: ")+"You've managed to reach the surface, but it appears to be an ambush! It seems that the Black Seer knew you were coming and positioned his undead army surrounding the exit. You must eliminate his entourage and then kill the Black Seer.<br><br>"+"Be wary that he is a powerful wizard so take heed when you battle him. Use all measures available to shut down his magical abilities. Many skills have the ability to stun or interrupt your target. Use them wisely to ensure victory!";if(!QL.grotto3&&(Z1===z&&SZ===3||Z1==="Edenburg")){QL.grotto3=1;lore(m1);}
s2=m1+"<br><br>Slay 9 "+"elf skeletons".fontcolor(y)+", 7 "+"burnt zombie".fontcolor(y)+", 7 "+"dread corpses".fontcolor(y)+", and "+"The Black Seer".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].BF1+"/9 elf skeletons slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].BF2+"/7 burnt zombies slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].BF3+"/7 dread corpses slain<br>").fontcolor(G),3);if(P.Q[x].BF4===0){s2+=QI("- "+"Slay The Black Seer".fontcolor(G),3);}else{s2+=QI("- "+"The Black Seer slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].Crushbone<5&&P.Q[x].repeatCB===false&&P.Q[x].Befallen>=4){z="Lanfeld Outpost";q="Grimden's Gambit";if(P.Q[x].Crushbone<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(17+dAdj))+"</div>";}
if(P.Q[x].Crushbone===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(18+dAdj))+"</div>";}
if(P.Q[x].Crushbone===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(20+dAdj))+"</div>";}
if(P.Q[x].Crushbone===4){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(20+dAdj))+"</div>";}
if(((Z1===z||Z1==="Edenburg")&&c===undefined)||c===q&&Done===false){if(P.Q[x].Crushbone<2){QHead(q,1);P.Q[x].Crushbone=1;m1=gold("Miranda: ")+"At last you have made it to Lanfeld Outpost. It's time to give Chief Grimden a taste of his own medicine. Grimden has something up his sleeve. I just don't trust him.<br><br>"+"Their recent hostility is unusual, even for orcs. Proceed to the entrance where you will find low-ranking orcs guarding the perimeter. Give them a taste of their own medicine!.";if(!QL.lanfeld1&&(Z1===z&&SZ===1||Z1==="Edenburg")){QL.lanfeld1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"orc pawns".fontcolor(y)+", 4 "+"orc centurions".fontcolor(y)+", and 4 "+"orc slavers".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CB1+"/8 orc pawns slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CB2+"/4 orc centurions slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CB3+"/4 orc slavers slain<br>").fontcolor(G),1);}
if(P.Q[x].Crushbone===2){QHead(q,2);m1=gold("Miranda: ")+"You are within striking distance of Chief Grimden. His post lies at the top of Lanfeld hill. A well-trained phalanx of orc guards block your way to the top of the hill. Strike them down and make haste for Grimden's command post!";if(!QL.lanfeld2&&(Z1===z&&SZ===2||Z1==="Edenburg")){QL.lanfeld2=1;lore(m1);}
s2=m1+"<br><br>Slay 7 "+"orc oracles".fontcolor(y)+", 7 "+"orc legionnaires".fontcolor(y)+", 7 "+"orc lookouts".fontcolor(y)+", and the "+"orc warlord".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CB1+"/7 orc oracles slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CB2+"/7 orc legionnaires slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CB3+"/7 orc lookouts slain<br>").fontcolor(G),2);if(P.Q[x].CB4===0){s2+=QI("- "+"Slay the orc warlord".fontcolor(G),2);}else{s2+=QI("- "+"The orc warlord has been slain".fontcolor(G),2);}}
if(P.Q[x].Crushbone>=3){QHead(q,3);m1=gold("Miranda: ")+"Phenomenal work, "+my.name+"! You have reached Grimden's command post! He is closely guarded by his most trusted orcs, including the royal guard and his emissaries. Eliminate them and then kill Chief Grimden. Edenburg will tremble in fear no longer.";if(!QL.lanfeld3&&P.Q[x].Crushbone===3&&(Z1===z&&SZ===3||Z1==="Edenburg")){QL.lanfeld3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"orc scoutsmen".fontcolor(y)+", 8 "+"orc royal guards".fontcolor(y)+", 6 "+"orc emissaries".fontcolor(y)+",  and "+"Chief Grimden".fontcolor(y)+". <br><br>";s2+=QI("- "+(P.Q[x].CB1+"/10 orc scoutsmen slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CB2+"/8 orc royal guards slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CB3+"/6 orc emissaries slain<br>").fontcolor(G),3);if(P.Q[x].CB5===0){s2+=QI("- "+"Slay Chief Grimden".fontcolor(G),3);}else{s2+=QI("- "+"Chief Grimden slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].Najena<4&&P.Q[x].Crushbone>=4){z="Braxxen's Bastille";q="Vigilante Justice";if(P.Q[x].Najena<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(21+dAdj))+"</div>";}
if(P.Q[x].Najena===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(22+dAdj))+"</div>";}
if(P.Q[x].Najena===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(24+dAdj))+"</div>";}
if(((Z1===z||Z1==="Aspen Grove")&&c===undefined)||c===q&&Done===false){if(P.Q[x].Najena<2){QHead(q,1);if(P.Q[x].Najena===0){m1=gold("Rendo: ")+"Oh, my goodness! A visitor? Here in Aspen Grove. This is unexpected. Hardly anyone comes to visit here these days. Well, I mean, I have people that visit. Just not often from strangers.<br><br>"+"What brings you to Aspen Grove? The booming tourism industry? The exotic flora and fauna? What? Oh! Miranda Crossheart sent you to me? Heh! Well! That is something!<br><br>"+"Oh, my manners, I haven't even introduced myself. I am Rendo Surefoot of Rinara's Preservation Guild. We are simple folk that study the planet's life force! Are you here to talk about the life force?!<br><br>"+"Er? Wait, what is this?! An Idol of Chaos?! Oh Rinara above, the elders were right, again. They sensed a disturbance in the life force and this must be related. Of course! It's all starting to make sense now.<br><br>"+"This isn't any ordinary Idol. This is an artifact enchanted by Nalatos, the God of Chaos, himself. This signifies his return to Vandamor.<br><br>"+"He must physically remain in his realm, but he selects agents to sow his seeds of chaos throughout the land and empowers them with these Idols. The Idols fill their owner full of strength and malice. Perfect traits to perform Nalatos's dirty work!<br><br>"+"We should probably do something about all of this! Well, you should. I am going to stay right here where it's safe.<br><br>"+"Nalatos could have given an Idol to almost anyone. Our best bet is investigating any unusual activity. In fact there have been some strange happenings over at Arcturin's Crypt.<br><br>"+"Arcturin is known to many as a famous war hero. Sadly he was raised from the dead and seen raising other undead under his command. Quite tragic. My halfling instincts tell me that he was given an Idol, too!<br><br>"+"There's only one way to find out. You'll need to cross a mountain passage blocked by Braxxen's Bastille, a compound where Braxxen's motley henchmen run their black operations. That's a very dangerous place though. Do you think you can make it through?!";if(!QL.aspen1&&(Z1===z&&SZ===1||Z1==="Aspen Grove")){QL.aspen1=1;lore(m1);}
if(Z1==="Aspen Grove"){makePortal();}
P.Q[x].Najena=1;}else{m1=gold("Rendo: ")+"Braxxen will hire anyone with a heart full of evil. Her henchmen are known for every brand of jackbooted thuggery you can think of! Slavery, torture, organ harvesting, and even magical experiments.<br><br>"+"It's dreadful. Just last week Aspen Grove's mayor had his cousin go missing. Officials have been too scared to investigate due to fear of retaliation.<br><br>"+"I think you are quite brave to go there at all. Anurans, skeletons, and goblins crowd the entrance. Good luck!";if(!QL.braxxen1&&(Z1===z&&SZ===1||Z1==="Aspen Grove")){QL.braxxen1=1;lore(m1);}}
s2=m1+"<br><br>Slay 10 "+"goblin warriors".fontcolor(y)+", 6 "+"greater skeletons".fontcolor(y)+", 4 "+"anuran guards".fontcolor(y)+", and "+"Grippywor".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NJ1+"/10 goblin warriors slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].NJ2+"/6 greater skeletons slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].NJ3+"/4 anuran guards slain<br>").fontcolor(G),1);if(P.Q[x].NJ4===0){s2+=QI("- "+"Slay Grippywor".fontcolor(G),1);}else{s2+=QI("- "+"Grippywor slain".fontcolor(G),1);}}
if(P.Q[x].Najena===2){QHead(q,2);m1=gold("Rendo: ")+"Yikes! I think you have their attention now! Braxxen's enforcers now block your path in the central torture chamber! Please take great care that you don't end up another of Braxxen's missing victims...";if(!QL.braxxen2&&(Z1===z&&SZ===2||Z1==="Aspen Grove")){QL.braxxen2=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"goblin officers".fontcolor(y)+", 8 "+"necromancers".fontcolor(y)+", 6 "+"anuran torturers".fontcolor(y)+", and "+"Munin".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NJ1+"/10 goblin officers slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].NJ2+"/8 necromancers slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].NJ3+"/6 anuran torturers slain<br>").fontcolor(G),2);if(P.Q[x].NJ4===0){s2+=QI("- "+"Slay Munin".fontcolor(G),2);}else{s2+=QI("- "+"Munin slain".fontcolor(G),2);}}
if(P.Q[x].Najena===3){QHead(q,3);m1=gold("Rendo: ")+"Braxxen has sealed off the exit along with the help from her inner circle. She is assisted by goblin captains, cephalids, and her most skilled summoners. Such odds seem rather overwhelming! Are you sure you want to go to Arcturin's Crypt that badly?<br><br>"+"Maybe it would be better to just retire to a simple life fishing off the shore of Aspen Grove? Recovering all of these Idols would be great, but it's so dangerous! Do you think you were chosen by the Gods to complete this mission? You're going to need a divine intervention.<br><br>"+"I mean, I'm not trying to discourage you, but life is short, you know? I've never heard any prophecy about a "+my.race.toLowerCase()+" "+my.job.toLowerCase()+" single-handedly saving the world from Nalatos's shadowy return to Vandamor. That sounds absurd. But, hey, give it a go if you insist.";if(!QL.braxxen3&&(Z1===z&&SZ===3||Z1==="Aspen Grove")){QL.braxxen3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"magicians".fontcolor(y)+", 8 "+"cephalid subverters".fontcolor(y)+", 8 "+"goblin captains".fontcolor(y)+", "+"Burzina".fontcolor(y)+", and "+"Braxxen".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NJ1+"/10 magicians slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].NJ2+"/8 cephalid subverters slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].NJ3+"/8 goblin captains slain<br>").fontcolor(G),3);if(P.Q[x].NJ4<2){s2+=QI("- "+"Slay Burzina<br>".fontcolor(G),3);}else{s2+=QI("- "+"Burzina slain<br>".fontcolor(G),3);}
if(P.Q[x].NJ5<2){s2+=QI("- "+"Slay Braxxen".fontcolor(G),3);}else{s2+=QI("- "+"Braxxen slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].UpperGuk<4&&P.Q[x].Najena>=4){z="Kordata Marshlands";q="Anuran Keymaster";if(P.Q[x].UpperGuk<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(25+dAdj))+"</div>";}
if(P.Q[x].UpperGuk===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(26+dAdj))+"</div>";}
if(P.Q[x].UpperGuk===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(28+dAdj))+"</div>";}
if(((Z1===z||Z1==="Aspen Grove")&&c===undefined)||c===q&&Done===false){if(P.Q[x].UpperGuk<2){QHead(q,1);P.Q[x].UpperGuk=1;m1=gold("Rendo: ")+my.name+", I can't tell if it's luck or skill. One of these days, your luck will run out, so I hope it's skill! You punched your way through Braxxen's Bastille like it was nothing. You gave her a good rump bouncin' she'll never soon forget.<br><br>"+"The path is clear to Arcturin's crypt, but the gate is locked and we'll need a key to gain access. The only key I know of is held by the Prince Kerpple in Kortada Marshlands. Head northwest and defeat the anuran minions blocking your path.";if(!QL.marshlands1&&(Z1===z&&SZ===1||Z1==="Aspen Grove")){QL.marshlands1=1;lore(m1);}
s2=m1+"<br><br>Slay 9 "+"anuran sur warriors".fontcolor(y)+", 6 "+"anuran sur knights".fontcolor(y)+", and 6 "+"anuran sur shamans".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].UG1+"/9 anuran sur warriors slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].UG2+"/6 anuran sur knights slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].UG3+"/6 anuran sur shamans slain<br>").fontcolor(G),1);}
if(P.Q[x].UpperGuk===2){QHead(q,2);m1=gold("Rendo: ")+"Yippie! You really stuck it to those amphibians! So what's it like to be such a powerful adventurer? Say, did you have a mysterious childhood? Maybe you're the hero we're looking for after all.<br><br>"+"You know, I always dreamed of traveling the world, collecting artifacts, and slaying monsters, but I don't think it was my destiny. My talents are more along the lines of collecting obscure information about lost keys and ancient artifacts.<br><br>"+"Well, we all play our roles, I suppose! Now, now, now, back to the matter at hand! Your job is not yet finished, "+my.name+". Continue further northwest and you'll encounter the anuran shamans and priests along with their fungus men lackeys.";if(!QL.marshlands2&&(Z1===z&&SZ===2||Z1==="Aspen Grove")){QL.marshlands2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"fungus breeders".fontcolor(y)+", 8 "+"anuran tir shamans".fontcolor(y)+", 6 "+"anuran priests".fontcolor(y)+", and the "+"anuran warden".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].UG1+"/8 fungus breeders slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].UG2+"/8 anuran tir shamans slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].UG3+"/6 anuran priests slain<br>").fontcolor(G),2);if(P.Q[x].UG4===0){s2+=QI("- "+"Slay the anuran warden".fontcolor(G),2);}else{s2+=QI("- "+"Anuran warden slain".fontcolor(G),2);}}
if(P.Q[x].UpperGuk===3){QHead(q,3);m1=gold("Rendo: ")+"Impressive work, brave "+my.race.toLowerCase()+"! I don't think I've ever seen a "+my.job.toLowerCase()+" fight like that before. Where did you receive your training? Did you learn to fight like that in Edenburg or does it all come naturally? You will need those skills to retrieve the key from Prince Kerpple. I have total confidence in you this time!";if(!QL.marshlands3&&(Z1===z&&SZ===3||Z1==="Aspen Grove")){QL.marshlands3=1;lore(m1);}
s2=m1+"<br><br>Slay 12 "+"anuran tonta knights".fontcolor(y)+", 8 "+"anuran summoner".fontcolor(y)+", 8 "+"anuran fal shamans".fontcolor(y)+", and "+"Prince Kerpple".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].UG1+"/12 anuran tonta knights slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].UG2+"/8 anuran summoners slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].UG3+"/8 anuran fal shamans slain<br>").fontcolor(G),3);if(P.Q[x].UG4===0){s2+=QI("- "+"Slay Prince Kerpple".fontcolor(G),3);}else{s2+=QI("- "+"Prince Kerpple slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].EstateofUnrest<5&&P.Q[x].repeatER===false&&P.Q[x].UpperGuk>=4){z="Arcturin's Crypt";q="Laid to Rest";if(P.Q[x].EstateofUnrest<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(29+dAdj))+"</div>";}
if(P.Q[x].EstateofUnrest===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(30+dAdj))+"</div>";}
if(P.Q[x].EstateofUnrest===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(31+dAdj))+"</div>";}
if(P.Q[x].EstateofUnrest===4&&P.Q[x].repeatER===false){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(31+dAdj))+"</div>";}
if(((Z1===z||Z1==="Aspen Grove")&&c===undefined)||c===q&&Done===false){if(P.Q[x].EstateofUnrest<2){QHead(q,1);P.Q[x].EstateofUnrest=1;m1=gold("Rendo: ")+"Ha, ha! Yes, I knew you could do it! And now we can unlock the crypt. The crypt was locked up once all of the crazy undead started marching around.<br><br>"+"Methinks you are a bit crazy to consider going in there, but it seems you always end up okay no matter the odds. You will be greeted by beetles, zombies, and mummies at the entrance. But be prepared for anything in the crypt! Good luck, "+my.name+".";if(!QL.arcturin1&&(Z1===z&&SZ===1||Z1==="Aspen Grove")){QL.arcturin1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"death beetles".fontcolor(y)+", 6 "+"tormented dead".fontcolor(y)+", and 4 "+"lumbering mummies".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].ER1+"/8 death beetles slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].ER2+"/6 tormented dead slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].ER3+"/4 lumbering mummies slain<br>").fontcolor(G),1);}
if(P.Q[x].EstateofUnrest===2){QHead(q,2);m1=gold("Rendo: ")+"Wow! You took care of that so quickly. That looked easy. Did you know I can see everything you're doing? I have a magic spell that allows me to remotely view your activity.<br><br>"+"That might sound a little creepy. Maybe I should have told you about that in advance! It's only to keep tabs on what you're doing. Honestly, how else would I know what you're up to?<br><br>"+"And how do you think I knew where the Idol of Chaos was? Amazing, eh!? I am the all-seeing Rendo! Bow before me!<br><br>"+"Ahem, so, you're going to have to slay the Arch Duke of Artremia. He's the guardian of Arcturin's tomb. Nobody goes in or out without his permission. So get hoppin'!";if(!QL.arcturin2&&(Z1===z&&SZ===2||Z1==="Aspen Grove")){QL.arcturin2=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"dry bone skeletons".fontcolor(y)+", 8 "+"crazed ghouls".fontcolor(y)+", 6 "+"nymphs".fontcolor(y)+", and the "+"Arch Duke of Artremia".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].ER1+"/10 dry bone skeletons slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].ER2+"/8 crazed ghouls slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].ER3+"/6 nymphs slain<br>").fontcolor(G),2);if(P.Q[x].ER4===0){s2+=QI("- "+"Slay the Arch Duke of Artremia".fontcolor(G),2);}else{s2+=QI("- "+"Arch Duke of Artremia slain".fontcolor(G),2);}}
if(P.Q[x].EstateofUnrest>=3){QHead(q,3);m1=gold("Rendo: ")+"Oh good Rinara above, you actually gained access to Arcturin's tomb! Be prepared for anything down there. There's no telling what kind of undead horrors Arcturin has animated for his amusement down there.<br><br>"+"Be sure to sharpen your weapons. You do know you can upgrade your weapons and armor in any city, right? It costs some gold, but it's a good investment!";if(!QL.arcturin3&&P.Q[x].EstateofUnrest===3&&(Z1===z&&SZ===3||Z1==="Aspen Grove")){QL.arcturin3=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"mortuary fungi".fontcolor(y)+", 8 "+"dusty werewolves".fontcolor(y)+", 5 "+"cephalid subverters".fontcolor(y)+", 5 "+"festering hags".fontcolor(y)+", and "+"Arcturin, the Lich King".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].ER1+"/8 mortuary fungi slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].ER2+"/8 dusty werewolves slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].ER3+"/5 cephalid subverters slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].ER4+"/5 festering hags slain<br>").fontcolor(G),3);if(P.Q[x].ER5===0){s2+=QI("- "+"Slay Arcturin, the Lich King".fontcolor(G),3);}else{s2+=QI("- "+"Arcturin, the Lich King slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].repeatCm3===false&&((P.Q[x].CastleMistmoore<4&&P.Q[x].EstateofUnrest>=4)||P.Q[x].CastleMistmoore>3)){z="Fahlnir Citadel";q="Tribal Warfare";if(P.Q[x].CastleMistmoore<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(32+dAdj))+"</div>";}
if(P.Q[x].CastleMistmoore===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(34+dAdj))+"</div>";}
if(P.Q[x].CastleMistmoore===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(35+dAdj))+"</div>";}else if(P.Q[x].CastleMistmoore>3&&P.Q[x].repeatCm3===false){s1+="<div class='questZones'>"+z+" (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(35+dAdj))+"</div>";}
if(((Z1===z||Z1==="Artremia")&&c===undefined)||c===q&&Done===false){if(P.Q[x].CastleMistmoore<2){QHead(q,1);if(P.Q[x].CastleMistmoore===0){P.Q[x].CastleMistmoore=1;m1=gold("Valeska: ")+"Welcome to Artremia, capital city of the wood elves, "+my.name+". I am Valeska Windcrest, Chief Archivist at the Druidic Temple of DEITY studies. It is a pleasure to meet you, "+my.name+".<br><br>"+"Rendo raved about your prowess on the battlefield. I'm glad he sent you my way, as we have our own share of concerns here in Artremia. Rumors about the Idols of Chaos have been confirmed, as you now possess two of them!<br><br>"+"I did some research on this topic and it appears that Nalatos can only empower three at once or it will drain his powers too much. It seems even Gods have their limits. That means only one idol remains, and I suspect that I know where it is.<br><br>"+"But first, I have a request. Our people have been under siege by the dark elves of "+gold("Fahlnir Citadel")+". They are led by Countess Varnia, a powerful necromancer.<br><br>"+"She commands a well organized army of dark elves committed to wiping Artremia off the map. If you put an end to their schemes, I promise to help you with your quest.";if(!QL.artremia1&&(Z1===z&&SZ===1||Z1==="Artremia")){QL.artremia1=1;lore(m1);}
if(Z1==="Artremia"){makePortal();}}else{m1=gold("Valeska: ")+"You can start by scouting out "+gold("Fahlnir Citadel")+". At the entrance you will find a group of dark elf trainees preparing to attack our city. They are led by Lieutenant Xagorn. Ormir's blessings upon you, "+my.name+"!";if(!QL.fahnlir1&&(Z1===z&&SZ===1||Z1==="Artremia")){QL.fahnlir1=1;lore(m1);}}
s2=m1+"<br><br>Slay 8 "+"pledge familiars".fontcolor(y)+", 7 "+"initiate familiars".fontcolor(y)+", 6 "+"gnoll scouts".fontcolor(y)+", and "+"Lieutenant Xagorn".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CM1+"/8 pledge familiars slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CM2+"/7 initiate familiars slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CM3+"/6 glyphed familiars slain<br>").fontcolor(G),1);if(P.Q[x].CM4===0){s2+=QI("- "+"Slay Lieutenant Xagorn".fontcolor(G),1);}else{s2+=QI("- "+"Glyphed ghoul slain".fontcolor(G),1);}}
if(P.Q[x].CastleMistmoore===2){QHead(q,2);m1=gold("Valeska: ")+"Astonishing work, "+my.name+". Rendo was right about you. I've never seen a "+my.job.toLowerCase()+" fight the way you do. Lieutenant Xagorn scarcely stood a chance against you. Our Fallen Leaf Militia should study your tactics.<br><br>"+"We can barely defend our city's perimeter these days. So few take city defense seriously and our people have grown weak with complacency. Our people are obsessed with abstract thinking to the point where we rationalize our own extinction.<br><br>"+"Personally, I believe it is destroying our culture, but our leadership won't make any reforms. We are in quite a mess even without the dark elves preying upon us. If they don't destroy us, the wood elves surely will!<br><br>"+"Enough of my soliloquy. Continue with your mission by attacking deeper in the citadel. You will encounter Dragoon Reklyn, the famed officer in charge of all melee training. Take care when confronting him. He is a respected veteran in combat.";if(!QL.fahnlir2&&(Z1===z&&SZ===2||Z1==="Artremia")){QL.fahnlir2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"glyphed guards".fontcolor(y)+", 6 "+"glyphed sentries".fontcolor(y)+", 6 "+"glyphed custodians".fontcolor(y)+", 4 "+"negotiators".fontcolor(y)+", and "+"Dragoon Reklyn".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CM1+"/8 glyphed guards slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CM2+"/6 glyphed sentries slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CM3+"/6 glyphed custodians slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CM4+"/4 negotiators slain<br>").fontcolor(G),2);if(P.Q[x].CM5===0){s2+=QI("- "+"Slay Dragoon Reklyn".fontcolor(G),2);}else{s2+=QI("- "+"Dragoon Reklyn slain".fontcolor(G),2);}}
if(P.Q[x].CastleMistmoore===3||(P.Q[x].CastleMistmoore>3&&P.Q[x].repeatCm3===false)){QHead(q,3);m1=gold("Valeska: ")+"Well done! Yet another quest where you made it look so easy. This final leg of the mission is the most deadly. You will have to confront Countess Varnia and her bodyguard, Zigruben, a powerful shadow knight. The wood elves of Artremia are counting on you, "+my.name+".";if(!QL.fahnlir3&&P.Q[x].CastleMistmoore===3&&(Z1===z&&SZ===3||Z1==="Artremia")){QL.fahnlir3=1;lore(m1);}
s2=m1+"<br><br>Slay 7 "+"deathly harbingers".fontcolor(y)+", 7 "+"dark ritualists".fontcolor(y)+", 7 "+"shadowy sages".fontcolor(y)+", 7 "+"leering gargoyles".fontcolor(y)+", "+"Countess Varnia".fontcolor(y)+" and "+"Zigruben".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CM1+"/7 deathly harbingers slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CM2+"/7 dark ritualists slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CM3+"/7 shadowy sages slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CM4+"/7 leering gargoyles slain<br>").fontcolor(G),3);if(P.Q[x].CM5<2){s2+=QI("- "+"Slay Countess Varnia<br>".fontcolor(G),3);}else{s2+=QI("- "+"Countess Varnia slain<br>".fontcolor(G),3);}
if(P.Q[x].CM6<2){s2+=QI("- "+"Slay Zigruben".fontcolor(G),3);}else{s2+=QI("- "+"Zigruben slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].repeatLg3===false&&((P.Q[x].LowerGuk<4&&P.Q[x].CastleMistmoore>=4)||P.Q[x].LowerGuk>3)){z="Kordata Ruins";q="Mired in Ruins";if(P.Q[x].LowerGuk<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(36+dAdj))+"</div>";}
if(P.Q[x].LowerGuk===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(37+dAdj))+"</div>";}
if(P.Q[x].LowerGuk===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(38+dAdj))+"</div>";}else if(P.Q[x].LowerGuk>3&&P.Q[x].repeatLg3===false){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(38+dAdj))+"</div>";}
if(((Z1===z||Z1==="Artremia")&&c===undefined)||c===q&&Done===false){if(P.Q[x].LowerGuk<2){QHead(q,1);P.Q[x].LowerGuk=1;m1=gold("Valeska: ")+my.name+", on the behalf of all wood elves, I thank you for eliminating the threat of Countess Varnia. Finally our people can live in peace. And now, as promised, I can help you with your quest.<br><br>"+"Our scouts have reported that Sentoth, the Lord of Rapture, has returned to the Temple of Pressor. The lizardmen there worship him as a deity, though he is only a demi-God, not a true deity.<br><br>"+"Little is known about his true nature or where he originates from, but it is clear that he is back to lead their blood fervor. They have been terrorizing nearby towns and using their captors in repulsive sacrificial rituals. Truly revolting and unspeakable horrors, ugh!<br><br>"+"I informed Rendo and, indeed, he was able to confirm with remote viewing that Sentoth possesses an Idol Of Chaos. Your only obstacle is the anuran army at the "+gold("Kordata Ruins")+". They control the swamps between here and the Temple of Prenssor.<br><br>"+"You will have to fight your way there. Begin at the entrance of the ruins. Beware that the anuran assassin is known to guard the entrance from anyone that dares to invade their territory. Don't be surprised if he brings heavy support.";if(!QL.ruins1&&(Z1===z&&SZ===1||Z1==="Artremia")){QL.ruins1=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"anuran tir knights".fontcolor(y)+", 8 "+"lem anuran wizards".fontcolor(y)+", 6 "+"amn anuran wizards".fontcolor(y)+", the "+"anuran assassin".fontcolor(y)+", and the "+"anuran supplier".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].LG1+"/10 anuran tir knights slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].LG2+"/8 lem anuran wizards slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].LG3+"/6 amn anuran wizards slain<br>").fontcolor(G),1);if(P.Q[x].LG4<2){s2+=QI("- "+"Slay the anuran assassin<br>".fontcolor(G),1);}else{s2+=QI("- "+"Anuran assassin slain<br>".fontcolor(G),1);}
if(P.Q[x].LG5<2){s2+=QI("- "+"Slay the anuran supplier".fontcolor(G),1);}else{s2+=QI("- "+"Anuran supplier slain".fontcolor(G),1);}}
if(P.Q[x].LowerGuk===2){QHead(q,2);m1=gold("Valeska: ")+"Nice work, "+my.name+". You have made solid progress into anuran territory. They are a militaristic order known for their discipline. They have a detailed ranking system assigned to each anuran, which indicates their strength in battle.<br><br>"+"Proceed further and you will encounter much tougher anurans. The frenzied anuran and the anuran sentinel control the central territory. You will have to eliminate them before you can advance any further.";if(!QL.ruins2&&(Z1===z&&SZ===2||Z1==="Artremia")){QL.ruins2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"pul anuran knights".fontcolor(y)+", 8 "+"dol anuran wizards".fontcolor(y)+", 6 "+"vex anuran wizards".fontcolor(y)+", 6 "+"ber anuran knights".fontcolor(y)+", the "+"frenzied anuran".fontcolor(y)+", and the "+"anuran sentinel".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].LG1+"/8 pul anuran knights slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].LG2+"/8 dol anuran wizards slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].LG3+"/6 vex anuran wizards slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].LG4+"/6 ber anuran knights slain<br>").fontcolor(G),2);if(P.Q[x].LG5<2){s2+=QI("- "+"Slay the frenzied anuran<br>".fontcolor(G),2);}else{s2+=QI("- "+"Frenzied anuran slain<br>".fontcolor(G),2);}
if(P.Q[x].LG6<2){s2+=QI("- "+"Slay the anuran sentinel".fontcolor(G),2);}else{s2+=QI("- "+"Anuran sentinel slain".fontcolor(G),2);}}
if(P.Q[x].LowerGuk===3||(P.Q[x].LowerGuk>3&&P.Q[x].repeatLg3===false)){QHead(q,3);m1=gold("Valeska: ")+"Splendid! You are drawing near to the Temple of Prenssor. Only King Froaki and his personal arch magi stand in your way. Of course you will have to defeat their henchmen first, which is no small task either.<br><br>"+"The arch magi uses vicious magic spells. Have you been collecting armor with good resistances on them? It's a good idea to hang on to armor with strong resistances. In some fights, high resists are more important than armor.<br><br>"+"I have heard that some armor can even absorb magic damage! I've never seen it myself, but that's amazing if it's true.";if(!QL.ruins3&&P.Q[x].LowerGuk===3&&(Z1===z&&SZ===3||Z1==="Artremia")){QL.ruins3=1;lore(m1);}
s2=m1+"<br><br>Slay 12 "+"mal anuran knights".fontcolor(y)+", 10 "+"zod anuran wizards".fontcolor(y)+", 8 "+"zod anuran knights".fontcolor(y)+", "+"King Froaki".fontcolor(y)+" and the "+"anuran arch magus".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].LG1+"/12 mal anuran knights slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].LG2+"/10 zod anuran wizards slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].LG3+"/8 zod anuran knights slain<br>").fontcolor(G),3);if(P.Q[x].LG4<2){s2+=QI("- "+"Slay King Froaki<br>".fontcolor(G),3);}else{s2+=QI("- "+"King Froaki slain<br>".fontcolor(G),3);}
if(P.Q[x].LG5<2){s2+=QI("- "+"Slay the anuran arch magus".fontcolor(G),3);}else{s2+=QI("- "+"Anuran arch magus slain".fontcolor(G),3);}}
Done=true;}}
if(P.Q[x].repeatCt3===false&&P.Q[x].LowerGuk>=4){z="Temple of Prenssor";q="Omen of the Serpent Lord";if(P.Q[x].CazicThule<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(39+dAdj))+"</div>";}
if(P.Q[x].CazicThule===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(40+dAdj))+"</div>";}
if(P.Q[x].CazicThule===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(41+dAdj))+"</div>";}else if(P.Q[x].CazicThule>3&&P.Q[x].repeatCt3===false){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(41+dAdj))+"</div>";}
if(((Z1===z||Z1==="Artremia")&&c===undefined)||c===q&&Done===false){if(P.Q[x].CazicThule<2){QHead(q,1);P.Q[x].CazicThule=1;m1=gold("Valeska: ")+"That is quite a trail of destruction you left in your wake! Those anurans didn't know what hit them. Now it's time to attack the "+gold("Temple of Prenssor")+". The courtyard is defended by Soprenti the Anointed and his adjuncts. Make haste and slay them at once.";if(!QL.temple1&&(Z1===z&&SZ===1||Z1==="Artremia")){QL.temple1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"lizard disciples".fontcolor(y)+", 6 "+"lizard pages".fontcolor(y)+", 4 "+"lizard defenders".fontcolor(y)+", and "+"Soprenti the Anointed".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CT1+"/8 lizard disciples slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CT2+"/6 lizard pages slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].CT3+"/4 lizard defenders slain<br>").fontcolor(G),1);if(P.Q[x].CT4===0){s2+=QI("- "+"Slay Soprenti the Anointed".fontcolor(G),1);}else{s2+=QI("- "+"Soprenti the Anointed slain".fontcolor(G),1);}}
if(P.Q[x].CazicThule===2){QHead(q,2);m1=gold("Valeska: ")+"You're sure to have Sentoth's attention at this point. You have intruded on his territory and he won't be pleased. Nonetheless, continue toward the temple's altar.<br><br>"+"You will find a bridge guarded by Merszas the Divine and Sartuth the Possessed, a deadly team of lizardmen. Once you eliminate them you may proceed to the sacrificial altar.";if(!QL.temple2&&(Z1===z&&SZ===2||Z1==="Artremia")){QL.temple2=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"lizard heralds".fontcolor(y)+", 8 "+"lizard protectors".fontcolor(y)+", 6 "+"lizard justicars".fontcolor(y)+", "+"Sartuth the Possessed".fontcolor(y)+", and "+"Merszas the Divine".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CT1+"/10 lizard heralds slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CT2+"/8 lizard protectors slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].CT3+"/6 lizard justicars slain<br>").fontcolor(G),2);if(P.Q[x].CT4<2){s2+=QI("- "+"Slay Sartuth the Possessed<br>".fontcolor(G),2);}else{s2+=QI("- "+"Sartuth the Possessed slain<br>".fontcolor(G),2);}
if(P.Q[x].CT5<2){s2+=QI("- "+"Slay Merszas the Divine".fontcolor(G),2);}else{s2+=QI("- "+"Merszas the Divine slain".fontcolor(G),2);}}
if(P.Q[x].CazicThule===3||(P.Q[x].CazicThule>3&&P.Q[x].repeatCt3===false)){QHead(q,3);m1=gold("Valeska: ")+"You have made it to the altar. This is it! The chance to collect all three Idols of Chaos! Sentoth's elite lizardmen will be at the altar ready to defend against your assault. Be prepared to fight Sentoth, the toughest encounter thus far.";if(!QL.temple3&&P.Q[x].CazicThule===3&&(Z1===z&&SZ===3||Z1==="Artremia")){QL.temple3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"lizard zealots".fontcolor(y)+", 10 "+"lizard crusaders".fontcolor(y)+", 8 "+"lizard champions".fontcolor(y)+", and the "+"Sentoth, Lord of Rapture".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].CT1+"/10 lizard zealots slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CT2+"/10 lizard crusaders slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].CT3+"/8 lizard champions slain<br>").fontcolor(G),3);if(P.Q[x].CT4===0){s2+=QI("- "+"Slay Sentoth, Lord of Rapture".fontcolor(G),3);}else{s2+=QI("- "+"Sentoth, Lord of Rapture slain".fontcolor(G),3);}}
Done=true;}}
if(((P.Q[x].KedgeKeep<=5&&P.Q[x].CazicThule>=4)||P.Q[x].KedgeKeep>3)){z="Viston's Redoubt";q="A Dark Undertaking";if(P.Q[x].KedgeKeep<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(42+dAdj))+"</div>";}
if(P.Q[x].KedgeKeep===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(43+dAdj))+"</div>";}
if(P.Q[x].KedgeKeep===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(43+dAdj))+"</div>";}else if(P.Q[x].KedgeKeep>3&&P.Q[x].repeatKk3===false){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(43+dAdj))+"</div>";}
if(P.Q[x].KedgeKeep===4){s1+="<div class='questZones'>"+z+" 4</div><div class='QT' data-subzone='4'>- "+Qcolor(q,DADJ(44+dAdj))+"</div>";}
if(P.Q[x].KedgeKeep===5&&P.Q[x].repeatKk4===false){s1+="<div class='questZones'>"+z+" 4 (repeatable)</div><div class='QT' data-subzone='4'>- "+Qcolor(q,DADJ(44+dAdj))+"</div>";}
if(((Z1===z||Z1==="Fenwoven")&&c===undefined)||c===q&&Done===false){if(P.Q[x].KedgeKeep<2){QHead(q,1);if(P.Q[x].KedgeKeep===0){P.Q[x].KedgeKeep=1;m1=gold("Arwen: ")+"Good day, "+my.name+". I am Arwen, the Village Shaman of Fenwoven. I have heard at length about your remarkable effort to collect the Idols of Chaos from Edenburg to Artremia. And now you stand here before me in our humble village. It is an honor to serve you, however I can.<br><br>"+"First and foremost, it is a great achievement to collect the Idols of Chaos. The Idols are spiritual artifacts enchanted with Nalatos's power. Over time they will lose their enchantment, allowing him to spread his chaotic influence once again.<br><br>"+"And here's what most do not realize: the enchanted Idols are also keys to unlock a portal to Nimgaul, the astral plane where Nalatos dwells.<br><br>"+"The Shamans of Fenwoven are adept at sensing these astral disturbances, which are clearly coming from the depths of Ashenflow Peak. This is bad news as it is well guarded by legendary dragons and their minions.<br><br>"+"Galeblast Fortress is the only way to access the subterranean caves of Ashenflow Peak, but you must acquire a key from Revenant Viston. Little is known about him except that he commands a faction of vampires at "+gold("Viston's Redoubt")+".";if(!QL.fenwoven1&&(Z1===z&&SZ===1||Z1==="Fenwoven")){QL.fenwoven1=1;lore(m1);}
if(Z1==="Fenwoven"){makePortal();}}else{m1=gold("Arwen: ")+"Sari Portentia and her minions guard the entrance to the redoubt. Destroy her and her minions to clear a path to Viston's inner sanctum.";if(!QL.viston1&&(Z1===z&&SZ===1||Z1==="Fenwoven")){QL.viston1=1;lore(m1);}}
s2=m1+"<br><br>Slay 8 "+"peering gargoyles".fontcolor(y)+", 8 "+"fettered defilers".fontcolor(y)+", 8 "+"dread werewolves".fontcolor(y)+", and "+"Sari Portentia".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].KK1+"/8 peering gargoyles slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].KK2+"/8 fettered defilers slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].KK3+"/8 dread werewolf slain<br>").fontcolor(G),1);if(P.Q[x].KK4===0){s2+=QI("- "+"Slay Sari Portentia".fontcolor(G),1);}else{s2+=QI("- "+"Sari Portentia slain".fontcolor(G),1);}}
if(P.Q[x].KedgeKeep===2){QHead(q,2);m1=gold("Arwen: ")+"You've made your way inside Viston's Redoubt. Well done! Now to eliminate the minions who guard the way to his sanctuary.<br><br>"+"Shardok is his enchanted gargoyle sentinel that alerts him of any intruders into his redoubt. You will have to eliminate him to proceed any further.";if(!QL.viston2&&(Z1===z&&SZ===2||Z1==="Fenwoven")){QL.viston2=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"brooding imps".fontcolor(y)+", 8 "+"manacled spoilers".fontcolor(y)+", 5 "+"lusting werewolves".fontcolor(y)+", 5 "+"bloodthirsty bats".fontcolor(y)+" and "+"Shardok".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].KK1+"/8 brooding imps slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].KK2+"/8 manacled spoilers slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].KK3+"/5 lusting werewolves slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].KK4+"/5 bloodthirsty bats slain<br>").fontcolor(G),2);if(P.Q[x].KK5===0){s2+=QI("- "+"Slay Shardok".fontcolor(G),2);}else{s2+=QI("- "+"Shardok slain".fontcolor(G),2);}}
if(P.Q[x].repeatKk3===false){if(P.Q[x].KedgeKeep===3||(P.Q[x].KedgeKeep>=4&&sz===3)||(P.Q[x].KedgeKeep>=4&&(c===undefined&&mySubzone()===3))){QHead(q,3);m1=gold("Arwen: ")+"Viston is likely readying his forces and is aware of your intrusion into his redoubt. Korman Valen and Artun Desmoni will be guarding the steps to his altar. Fight through their minions and eliminate this duo to proceed.";if(!QL.viston3&&P.Q[x].KedgeKeep===3&&(Z1===z&&SZ===3||Z1==="Fenwoven")){QL.viston3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"pained seethers".fontcolor(y)+", 10 "+"soul destroyers".fontcolor(y)+", 8 "+"vampire bats".fontcolor(y)+", "+"Artun Desmoni".fontcolor(y)+" and  "+"Korman Valen".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].KK1+"/10 pained seethers slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].KK2+"/10 soul destroyers slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].KK3+"/8 vampire bats slain<br>").fontcolor(G),3);if(P.Q[x].KK4<2){s2+=QI("- "+"Slay Artun Desmoni<br>".fontcolor(G),3);}else{s2+=QI("- "+"Artun Desmoni slain<br>".fontcolor(G),3);}
if(P.Q[x].KK5<2){s2+=QI("- "+"Slay Korman Valen".fontcolor(G),3);}else{s2+=QI("- "+"Korman Valen slain".fontcolor(G),3);}}}
if(P.Q[x].repeatKk4===false){if(P.Q[x].KedgeKeep===4&&P.Q[x].repeatKk3===true||P.Q[x].KedgeKeep>=4&&sz===4||P.Q[x].KedgeKeep>=4&&(sz===4&&c===undefined)){QHead(q,4);m1=gold("Arwen: ")+"You have cleared the way to Viston's altar. Here is guarded by sinew punishers and his elite blood guardians. If you manage to clear them you will have a shot at Revenant Viston and access to Galeblast Fortress! Good luck, "+my.name+". We are all counting on you!";if(!QL.viston4&&P.Q[x].KedgeKeep===4&&(Z1===z&&SZ===4||Z1==="Fenwoven")){QL.viston4=1;lore(m1);}
s2=m1+"<br><br>Slay 18 "+"sinew punishers".fontcolor(y)+", 12 "+"Blood Guardians".fontcolor(y)+", and "+"Revenant Viston".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].KK6+"/18 sinew punishers slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].KK7+"/12 Blood Guardians slain<br>").fontcolor(G),4);if(P.Q[x].KK8<=1){s2+=QI("- "+"Slay Revenant Viston".fontcolor(G),4);}else{s2+=QI("- "+"Revenant Viston slain".fontcolor(G),4);}}}
Done=true;}}
if(P.Q[x].PermafrostKeep<=5&&P.Q[x].KedgeKeep>=5){z="Galeblast Fortress";q="Frozen Fortress";if(P.Q[x].PermafrostKeep<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(45+dAdj))+"</div>";}
if(P.Q[x].PermafrostKeep===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(46+dAdj))+"</div>";}
if(P.Q[x].PermafrostKeep===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT'>- "+Qcolor(q,DADJ(46+dAdj))+"</div>";}
if(P.Q[x].PermafrostKeep===4){s1+="<div class='questZones'>"+z+" 4</div><div class='QT'>- "+Qcolor(q,DADJ(47+dAdj))+"</div>";}else if(P.Q[x].PermafrostKeep===5){s1+="<div class='questZones'>"+z+" 4 (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(47+dAdj))+"</div>";}
if(((Z1===z||Z1==="Fenwoven")&&c===undefined)||c===q&&Done===false){if(P.Q[x].PermafrostKeep<2){QHead(q,1);P.Q[x].PermafrostKeep=1;var lowerClass=my.job.toLowerCase();m1=gold("Arwen: ")+"A horde of fierce ice goblins now stand in your way. An ice goblin keymaster holds the key to access the next section of Galeblast Fortress. You'll have to defeat him and his minions to proceed.<br><br>"+"Do you think Nalatos could have made this journey any more arduous? He obviously didn't want anyone messing with his portal. I guess he wasn't counting on Edenburg's finest rising to the challenge!";if(!QL.galeblast1&&(Z1===z&&SZ===1||Z1==="Fenwoven")){QL.galeblast1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"ice goblins".fontcolor(y)+", 6 "+"goblin evokers".fontcolor(y)+", 6 "+"dire wolves".fontcolor(y)+", and the "+"ice goblin keymaster".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PK1+"/8 ice goblins slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].PK2+"/6 goblin evokers slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].PK3+"/6 dire wolves slain<br>").fontcolor(G),1);if(P.Q[x].PK4===0){s2+=QI("- "+"Slay the ice goblin keymaster".fontcolor(G),1);}else{s2+=QI("- "+"Ice goblin keymaster slain".fontcolor(G),1);}}
if(P.Q[x].PermafrostKeep===2){QHead(q,2);m1=gold("Arwen: ")+"You're making great progress, "+my.name+". Just keep charging forward and you'll find the portal in due time. The next area is patrolled by goblin elites and spellcasters. A goblin excavator holds the key to the next area. Defeat him and we're one step closer!";if(!QL.galeblast2&&(Z1===z&&SZ===2||Z1==="Fenwoven")){QL.galeblast2=1;lore(m1);}
s2=m1+"<br><br>Slay 7 "+"goblin wizards".fontcolor(y)+", 7 "+"elite goblin guards".fontcolor(y)+", 7 "+"goblin preachers".fontcolor(y)+", and the "+"goblin excavator".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PK1+"/7 goblin wizards slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].PK2+"/7 elite goblin guards slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].PK3+"/7 goblin preachers slain<br>").fontcolor(G),2);if(P.Q[x].PK4===0){s2+=QI("- "+"Slay the goblin excavator".fontcolor(G),2);}else{s2+=QI("- "+"Goblin excavator slain".fontcolor(G),2);}}
if(P.Q[x].PermafrostKeep===3){QHead(q,3);m1=gold("Arwen: ")+"You have reached the ice goblins' royal lair. Magnate Dinbopp and Pontiff Krindletin command an elite force of goblins here. Also, be on the lookout for ice giants. The ice giants are Matron Maelentia's personal guardians.";if(!QL.galeblast3&&(Z1===z&&SZ===3||Z1==="Fenwoven")){QL.galeblast3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"goblin sages".fontcolor(y)+", 10 "+"elite honor guards".fontcolor(y)+", 10 "+"ice giant youths".fontcolor(y)+", "+"Pontiff Krindletin".fontcolor(y)+", and  "+"Magnate Dinbopp".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PK1+"/10 goblin sages slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].PK2+"/10 elite honor guards slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].PK3+"/5 ice giant youths slain<br>").fontcolor(G),3);if(P.Q[x].PK4<2){s2+=QI("- "+"Slay Pontiff Krindletin<br>".fontcolor(G),3);}else{s2+=QI("- "+"Pontiff Krindletin slain<br>".fontcolor(G),3);}
if(P.Q[x].PK5<2){s2+=QI("- "+"Slay Magnate Dinbopp".fontcolor(G),3);}else{s2+=QI("- "+"Magnate Dinbopp slain".fontcolor(G),3);}}
if(P.Q[x].PermafrostKeep>=4){QHead(q,4);m1=gold("Arwen: ")+"Unbelievable! You have done what none have done before. You have reached the lair of Matron Maelentia, the great ice dragon. She is guarded by ice giants, so you must defeat them first.<br><br>"+"Dragons' roars may cause you to run in fear, so I suggest finding armor that protects you from fear effects. Armor with cold resistance will also mitigate her powerful ice breath attacks.";if(!QL.galeblast4&&P.Q[x].PermafrostKeep===4&&(Z1===z&&SZ===4||Z1==="Fenwoven")){QL.galeblast4=1;lore(m1);}
s2=m1+"<br><br>Slay 4 "+"ice giant champions".fontcolor(y)+", 4 "+"ice giant warders".fontcolor(y)+", 4 "+"ice giant preservers".fontcolor(y)+", 3 "+"ice giants".fontcolor(y)+", 2 "+"ice giant magi".fontcolor(y)+", 2 "+"ice giant priests".fontcolor(y)+", "+"Margrave Kalgresh the Usurper".fontcolor(y)+", "+"Vizier Kongumen Divorn".fontcolor(y)+", and "+"Matron Maelentia".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PK1+"/4 ice giant champions slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].PK2+"/4 ice giant warders slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].PK3+"/4 ice giant preservers slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].PK4+"/3 ice giants slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].PK5+"/2 ice giant magi slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].PK6+"/2 ice giant priests slain<br>").fontcolor(G),4);if(P.Q[x].PK7<=1){s2+=QI("- "+"Slay Margrave Kalgresh the Usurper<br>".fontcolor(G),4);}else{s2+=QI("- "+"Margrave Kalgresh the Usurper slain<br>".fontcolor(G),4);}
if(P.Q[x].PK8<=1){s2+=QI("- "+"Slay Vizier Kongumen Divorn<br>".fontcolor(G),4);}else{s2+=QI("- "+"Vizier Kongumen Divorn slain<br>".fontcolor(G),4);}
if(P.Q[x].PK9===0){s2+=QI("- "+"Slay Matron Maelentia".fontcolor(G),4);}else{s2+=QI("- "+"Matron Maelentia slain".fontcolor(G),4);}}
Done=true;}}
if(P.Q[x].PermafrostKeep>=5&&P.Q[x].NagafensLair<=5){if(P.Q[x].repeatNl3===false||P.Q[x].repeatNl4===false){z="Ashenflow Peak";q="Volcanic Siege";if(P.Q[x].NagafensLair<=1){s1+="<div class='questZones'>"+z+" 1</div><div class='QT'>- "+Qcolor(q,DADJ(47+dAdj))+"</div>";}
if(P.Q[x].NagafensLair===2){s1+="<div class='questZones'>"+z+" 2</div><div class='QT'>- "+Qcolor(q,DADJ(48+dAdj))+"</div>";}
if(P.Q[x].NagafensLair===3){s1+="<div class='questZones'>"+z+" 3</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(49+dAdj))+"</div>";}else if(P.Q[x].NagafensLair>3&&P.Q[x].repeatNl3===false){s1+="<div class='questZones'>"+z+" 3 (repeatable)</div><div class='QT' data-subzone='3'>- "+Qcolor(q,DADJ(49+dAdj))+"</div>";}
if(P.Q[x].NagafensLair===4){s1+="<div class='questZones'>"+z+" 4</div><div class='QT' data-subzone='4'>- "+Qcolor(q,DADJ(50+dAdj))+"</div>";}else if(P.Q[x].NagafensLair===5){s1+="<div class='questZones'>"+z+" 4 (repeatable)</div><div class='QT' data-subzone='4'>- "+Qcolor(q,DADJ(50+dAdj))+"</div>";}
if(((Z1===z||Z1==="Fenwoven")&&c===undefined)||c===q&&Done===false){if(P.Q[x].NagafensLair<2){QHead(q,1);P.Q[x].NagafensLair=1;m1=gold("Arwen: ")+"The tunnels below ashenflow are guarded by a faction of kobolds! Eliminate them and then defeat the ashenflow kobold king. He is accompanied by a kobold noble, an enchanter with deadly mind magic.";if(!QL.ashenflow1&&(Z1===z&&SZ===1||Z1==="Fenwoven")){QL.ashenflow1=1;lore(m1);}
s2=m1+"<br><br>Slay 8 "+"greater kobolds".fontcolor(y)+", 8 "+"greater kobold shamans".fontcolor(y)+", 5 "+"ashenflow kobolds".fontcolor(y)+", 5 "+"ashenflow kobold shamans".fontcolor(y)+", the "+"kobold noble".fontcolor(y)+", and the "+"ashenflow kobold king".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NL1+"/8 greater kobolds slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].NL2+"/8 greater kobold shamans slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].NL3+"/5 ashenflow kobolds slain<br>").fontcolor(G),1);s2+=QI("- "+(P.Q[x].NL4+"/5 ashenflow kobold shamans slain<br>").fontcolor(G),1);if(P.Q[x].NL5<2){s2+=QI("- "+"Slay the kobold noble<br>".fontcolor(G),1);}else{s2+=QI("- "+"Kobold noble slain<br>".fontcolor(G),1);}
if(P.Q[x].NL6<2){s2+=QI("- "+"Slay the ashenflow kobold king".fontcolor(G),1);}else{s2+=QI("- "+"Ashenflow kobold king slain".fontcolor(G),1);}}
if(P.Q[x].NagafensLair===2){QHead(q,2);m1=gold("Arwen: ")+"Be careful of the magma flows prevalent throughout the cavern. This portion of the cavern is infested with bugs, bats, spiders, and other nasty creatures. It looks like you'll have to do some exterminating here. Be on the lookout for the stone and noxious spiders which are particularly deadly!";if(!QL.ashenflow2&&(Z1===z&&SZ===2||Z1==="Fenwoven")){QL.ashenflow2=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"sonic bats".fontcolor(y)+", 8 "+"lava beetles".fontcolor(y)+", 8 "+"lava duct crawlers".fontcolor(y)+", the "+"noxious spider".fontcolor(y)+" and the "+"stone spider".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NL1+"/10 sonic bats slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].NL2+"/8 lava beetles slain<br>").fontcolor(G),2);s2+=QI("- "+(P.Q[x].NL3+"/8 lava duct crawlers slain<br>").fontcolor(G),2);if(P.Q[x].NL4<2){s2+=QI("- "+"Slay the noxious spider<br>".fontcolor(G),2);}else{s2+=QI("- "+"Noxious spider slain<br>".fontcolor(G),2);}
if(P.Q[x].NL5<2){s2+=QI("- "+"Slay the stone spider".fontcolor(G),2);}else{s2+=QI("- "+"Stone spider slain".fontcolor(G),2);}}
if(P.Q[x].NagafensLair===3||((P.Q[x].NagafensLair>=4&&P.Q[x].repeatNl3===false)&&sz===3)||((P.Q[x].NagafensLair>=4&&P.Q[x].repeatNl3===false)&&(sz===undefined&&mySubzone()===3))){QHead(q,3);m1=gold("Arwen: ")+"That last section was pretty disgusting! I can't stand bugs or spiders. That's why I choose to live in the frigid north where I don't see nasty critters like that!<br><br>"+"It looks like this next area is full of imps and lava elementals. Far less disgusting, I'd say. The tunnel to Highlord Szarthax's lair is guarded by General Ovext, a powerful imp with deadly fire magic.";if(!QL.ashenflow3&&P.Q[x].NagafensLair===3&&(Z1===z&&SZ===3||Z1==="Fenwoven")){QL.ashenflow3=1;lore(m1);}
s2=m1+"<br><br>Slay 10 "+"lava guardians".fontcolor(y)+", 15 "+"imp protectors".fontcolor(y)+", and "+"General Ovext".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NL1+"/10 lava guardians slain<br>").fontcolor(G),3);s2+=QI("- "+(P.Q[x].NL2+"/15 imp protectors slain<br>").fontcolor(G),3);if(P.Q[x].NL3===0){s2+=QI("- "+"Slay General Ovext".fontcolor(G),3);}else{s2+=QI("- "+"General Ovext slain".fontcolor(G),3);}}
if(P.Q[x].NagafensLair>=4&&sz===4||P.Q[x].NagafensLair>=4&&(mySubzone()===4&&sz===undefined)){QHead(q,4);m1=gold("Arwen: ")+"I can't believe it! Look how far you have come in your journey. You now stand in the lair of Highlord Szarthax, the most fearsome dragon in all of Vandamor.<br><br>"+"The good news is you have some experience fighting dragons, so you should know what to expect. The bad news is he is well guarded by his own coterie of merciless fire giants. Good luck, "+my.name+"!";if(!QL.ashenflow4&&P.Q[x].NagafensLair===4&&(Z1===z&&SZ===4||Z1==="Fenwoven")){QL.ashenflow4=1;lore(m1);}
s2=m1+"<br><br>Slay 12 "+"fire giant warriors".fontcolor(y)+", 8 "+"fire giant wizards".fontcolor(y)+", "+"King Argentus".fontcolor(y)+", "+"Duke Carthenage".fontcolor(y)+", "+"Battle Mage Turento".fontcolor(y)+", and "+"Highlord Szarthax".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].NL7+"/12 fire giant warriors slain<br>").fontcolor(G),4);s2+=QI("- "+(P.Q[x].NL8+"/8 fire giant wizards slain<br>").fontcolor(G),4);if(P.Q[x].NL9<=1){s2+=QI("- "+"Slay King Argentus<br>".fontcolor(G),4);}else{s2+=QI("- "+"King Argentus slain<br>".fontcolor(G),4);}
if(P.Q[x].NL10<=1){s2+=QI("- "+"Slay Duke Carthenage<br>".fontcolor(G),4);}else{s2+=QI("- "+"Duke Carthenage slain<br>".fontcolor(G),4);}
if(P.Q[x].NL11<=1){s2+=QI("- "+"Slay Battle Mage Turento<br>".fontcolor(G),4);}else{s2+=QI("- "+"Battle Mage Turento slain<br>".fontcolor(G),4);}
if(P.Q[x].NL12===0){s2+=QI("- "+"Slay Highlord Szarthax".fontcolor(G),4);}else{s2+=QI("- "+"Highlord Szarthax slain".fontcolor(G),4);}}
Done=true;}}}
if(P.Q[x].PlaneofHate<=2&&P.Q[x].NagafensLair>=5){z="Dire Sanctum";q="Forgotten City";if(P.Q[x].PlaneofHate<2){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(52+dAdj))+"</div>";}else if(P.Q[x].PlaneofHate>=2){s1+="<div class='questZones'>"+z+" (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(52+dAdj))+"</div>";}
if(Done===false){if(((Z1===z||Z1==="Fenwoven")&&c===undefined)||c===q){if(P.Q[x].PlaneofHate<=2){QHead(q);m1=gold("Arwen: ")+"According to my ancient tomes, this place is called Dire Sanctum, a long forgotten city buried beneath an ancient eruption from Ashenflow Peak. It is believed Gods anchor their astral planes here due to its seclusion. You are the first mortal to venture there in many centuries.<br><br>"+"Nonetheless it is heavily guarded in case an intruder is brave enough to venture near. I know not what lies in wait for you down there. I can only offer platitudes.<br><br>"+"Seek out the portal and eliminate anything or anyone that blocks your path. The extraordinary resistance you are facing shows that they do not want you meddling with the portal.";if(!QL.dire1&&P.Q[x].PlaneofHate<=1&&(Z1===z&&SZ===0||Z1==="Fenwoven")){QL.dire1=1;lore(m1);}
s2=m1+"<br><br>Slay all denizens in the Dire Sanctum including "+"Vixen Sarmina".fontcolor(y)+" and "+"Sanctum Guardian Ghalentus".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PH1+"/4 toiling drudges slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH2+"/4 slavering corpses slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH3+"/4 fetid vagabonds slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH4+"/4 impulse servants slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH5+"/4 servants of corruption slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH6+"/4 embalmed vagrants slain<br>").fontcolor(G));if(P.Q[x].PH12===0){s2+=QI("- "+"Slay Vixen Sarmina<br><br>".fontcolor(G));}else{s2+=QI("- "+"Vixen Sarmina slain<br><br>".fontcolor(G));}
s2+=QI("- "+(P.Q[x].PH7+"/5 ghastly indulgers slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH8+"/5 infected rodents slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH9+"/5 flittering menaces slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH10+"/5 hallowed harbingers slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PH11+"/5 cephalid sorcerers slain<br>").fontcolor(G));if(P.Q[x].PH13===0){s2+=QI("- "+"Slay Sanctum Guardian Ghalentus<br><br>".fontcolor(G));}else{s2+=QI("- "+"Sanctum Guardian Ghalentus slain<br><br>".fontcolor(G));}}
Done=true;}}}
if(P.Q[x].PlaneofFear<=2&&P.Q[x].PlaneofHate>=2){z="Nimgaul";q="Order Through Chaos";if(P.Q[x].PlaneofFear<2){s1+="<div class='questZones'>"+z+"</div><div class='QT'>- "+Qcolor(q,DADJ(54+dAdj))+"</div>";}else if(P.Q[x].PlaneofFear>=2){s1+="<div class='questZones'>"+z+" (repeatable)</div><div class='QT'>- "+Qcolor(q,DADJ(54+dAdj))+"</div>";}
if(Done===false){if(((Z1===z||Z1==="Fenwoven")&&c===undefined)||c===q){if(P.Q[x].PlaneofFear<=2){QHead(q);m1=gold("Arwen: ")+"Not much is known about Nimgaul, "+my.name+". You are the first mortal to ever walk there. The most that is known about Nimgaul is that Nalatos and his minions are within.<br><br>"+"The most that I was able to learn from the Fenwoven library is that Nalatos has a dragon named Falzitherin that patrols the plane. Falzitherin uses deadly poison magic, so you can make good use of poison resistance armor against him.<br><br>"+"Once you eliminate all of his minions you may confront Nalatos. Defeat him and Vandamor shall be free from his wicked schemes.";if(!QL.nimgaul1&&P.Q[x].PlaneofFear<=1&&(Z1===z&&SZ===0||Z1==="Fenwoven")){QL.nimgaul1=1;lore(m1);}
s2=m1+"<br><br>Slay all denizens of Nimgaul including "+"Falzitherin".fontcolor(y)+" and "+"Nalatos, God of Chaos".fontcolor(y)+".<br><br>";s2+=QI("- "+(P.Q[x].PF1+"/3 wailing banshees slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF2+"/3 festering dregs slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF3+"/3 lurid nymphs slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF4+"/3 peering menaces slain<br>").fontcolor(G));if(P.Q[x].PF18===0){s2+=QI("- "+"Slay Guardian of Misery<br><br>".fontcolor(G));}else{s2+=QI("- "+"Guardian of Misery slain<br><br>".fontcolor(G));}
s2+=QI("- "+(P.Q[x].PF5+"/3 accursed slatterns slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF6+"/3 brooding fungus slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF7+"/3 cursed marionettes slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF8+"/3 tremulant imps slain<br>").fontcolor(G));if(P.Q[x].PF21===0){s2+=QI("- "+"Slay Falzitherin<br><br>".fontcolor(G));}else{s2+=QI("- "+"Falzitherin slain<br><br>".fontcolor(G));}
s2+=QI("- "+(P.Q[x].PF9+"/3 deranged gorillas slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF10+"/3 boreal spiders slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF11+"/3 cephalid enticer slain<br>").fontcolor(G));if(P.Q[x].PF19===0){s2+=QI("- "+"Slay Guardian of Strife<br><br>".fontcolor(G));}else{s2+=QI("- "+"Guardian of Strife slain<br><br>".fontcolor(G));}
s2+=QI("- "+(P.Q[x].PF12+"/3 panicked anurans slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF13+"/3 chaos punishers slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF14+"/3 chaos enforcers slain<br>").fontcolor(G));if(P.Q[x].PF20===0){s2+=QI("- "+"Slay Guardian of Ruin<br><br>".fontcolor(G));}else{s2+=QI("- "+"Guardian of Ruin slain<br><br>".fontcolor(G));}
s2+=QI("- "+(P.Q[x].PF15+"/3 pustulant vessels slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF16+"/3 shrieking wisps slain<br>").fontcolor(G));s2+=QI("- "+(P.Q[x].PF17+"/3 sorrow slitherers slain<br>").fontcolor(G));if(P.Q[x].PF22===0){s2+=QI("- "+"Slay Nalatos, God of Chaos".fontcolor(G));}else{s2+=QI("- "+"Nalatos, God of Chaos slain".fontcolor(G));}}
Done=true;}}}
if(c===undefined){var e5=D.getElementById('QindicatorHead');e5.textContent=QH;var e6=D.getElementById('QindicatorContent');e6.innerHTML=QP;}
D.getElementById('questJournalContent').innerHTML=s1;D.getElementById('questJournalContent2').innerHTML=s2;var currentQuest=$("#QindicatorHead").html();if(currentQuest!==''){var zone=myZone();var currentSubzone=mySubzone();if(currentSubzone!==''){zone+=' '+currentSubzone;}
var newHeight=0;$('.questZones').each(function(){var foo=this.textContent;if(foo.indexOf(zone)!==-1){this.nextSibling.style.backgroundColor='#002a5a';T.to(this.nextSibling,.75,{backgroundColor:'#004aaa',repeat:-1,yoyo:true});newHeight=this.offsetTop;}});if(!c){T.delayedCall(0,function(){D.getElementById('questJournalContent').scrollTop=newHeight;});}}}
function Qprogress(Slot){var Y="#ffff00";var d=8000;var d2=10000;var dAdj=0;if(g.difficulty===2){dAdj=25;}
if(g.difficulty===3){dAdj=44;}
var x=(g.difficulty-1);var weapon="slashed";if(my.job==="Monk"||my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){weapon="staff";}
if(my.job==="Rogue"){weapon="pierced";}
if(my.job==="Shaman"||my.job==="Druid"||my.job==="Cleric"){weapon="crushed";}
if(my.job==="Paladin"||my.job==="Shadow Knight"){weapon="cleaved";}
var armor="plate";if(my.job==="Monk"||my.job==="Druid"){armor="leather";}
if(my.job==="Ranger"||my.job==="Shaman"||my.job==="Rogue"){armor="chain";}
if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){armor="cloth";}
var mz=myZone();if(mz==="Fahlnir Citadel"){if(P.Q[x].CastleMistmoore<2){if(mob[Slot].name==="a pledge familiar"&&P.Q[x].CM1<8){P.Q[x].CM1++;QMsg(P.Q[x].CM1+"/8 pledge familiars slain");}
if(mob[Slot].name==="an initiate familiar"&&P.Q[x].CM2<7){P.Q[x].CM2++;QMsg(P.Q[x].CM2+"/7 initiate familiars slain");}
if(mob[Slot].name==="a glyphed familiar"&&P.Q[x].CM3<6){P.Q[x].CM3++;QMsg(P.Q[x].CM3+"/6 glyphed familiars slain");}
if(P.Q[x].CM1>=8&&P.Q[x].CM2>=7&&P.Q[x].CM3>=6&&mob[Slot].name==="Lieutenant Xagorn"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].CastleMistmoore=2;P.Q[x].CM1=0;P.Q[x].CM2=0;P.Q[x].CM3=0;return;}}
if(P.Q[x].CastleMistmoore===2){if(mob[Slot].name==="a glyphed guard"&&P.Q[x].CM1<8){P.Q[x].CM1++;QMsg(P.Q[x].CM1+"/8 glyphed guards slain");}
if(mob[Slot].name==="a glyphed sentry"&&P.Q[x].CM2<6){P.Q[x].CM2++;QMsg(P.Q[x].CM2+"/6 glyphed sentries slain");}
if(mob[Slot].name==="a glyphed custodian"&&P.Q[x].CM3<6){P.Q[x].CM3++;QMsg(P.Q[x].CM3+"/6 glyphed custodians slain");}
if(mob[Slot].name==="a negotiator"&&P.Q[x].CM4<4){P.Q[x].CM4++;QMsg(P.Q[x].CM4+"/4 negotiators slain");}
if(P.Q[x].CM1>=8&&P.Q[x].CM2>=6&&P.Q[x].CM3>=6&&P.Q[x].CM4>=4&&mob[Slot].name==="Dragoon Reklyn"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].CastleMistmoore=3;P.Q[x].CM1=0;P.Q[x].CM2=0;P.Q[x].CM3=0;P.Q[x].CM4=0;return;}}
if(P.Q[x].CastleMistmoore===3||(P.Q[x].CastleMistmoore>3&&P.Q[x].repeatCm3===false)){if(mob[Slot].name==="a deathly harbinger"&&P.Q[x].CM1<7){P.Q[x].CM1++;QMsg(P.Q[x].CM1+"/7 deathly harbingers slain");}
if(mob[Slot].name==="a dark ritualist"&&P.Q[x].CM2<7){P.Q[x].CM2++;QMsg(P.Q[x].CM2+"/7 dark ritualists slain");}
if(mob[Slot].name==="a shadowy sage"&&P.Q[x].CM3<7){P.Q[x].CM3++;QMsg(P.Q[x].CM3+"/7 shadowy sages slain");}
if(mob[Slot].name==="a leering gargoyle"&&P.Q[x].CM4<7){P.Q[x].CM4++;QMsg(P.Q[x].CM4+"/7 leering gargoyles slain");}
if(mob[Slot].name==="Countess Varnia"&&P.Q[x].CM5<2){P.Q[x].CM5=2;QMsg("Countess Varnia slain");}
if(mob[Slot].name==="Zigruben"&&P.Q[x].CM6<2){P.Q[x].CM6=2;QMsg("Zigruben slain");}
if(P.Q[x].CM1>=7&&P.Q[x].CM2>=7&&P.Q[x].CM3>=7&&P.Q[x].CM4>=7&&P.Q[x].CM5>=2&&P.Q[x].CM6>=2&&P.Q[x].repeatCm3===false){playAudio("endquest");my.quests++;QMsg("Quest Completed!");P.Q[x].CastleMistmoore=4;setEquipValues();P.Q[x].repeatCm3=true;return;}}}
if(mz==="Lanfeld Outpost"){if(P.Q[x].Crushbone<2){if(mob[Slot].name==="an orc pawn"&&P.Q[x].CB1<8){P.Q[x].CB1++;QMsg(P.Q[x].CB1+"/8 orc pawns slain");}
if(mob[Slot].name==="an orc centurion"&&P.Q[x].CB2<4){P.Q[x].CB2++;QMsg(P.Q[x].CB2+"/4 orc centurions slain");}
if(mob[Slot].name==="an orc slaver"&&P.Q[x].CB3<4){P.Q[x].CB3++;QMsg(P.Q[x].CB3+"/4 orc slavers slain");}
if(P.Q[x].CB1>=8&&P.Q[x].CB2>=4&&P.Q[x].CB3>=4){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Crushbone=2;P.Q[x].CB1=0;P.Q[x].CB2=0;P.Q[x].CB3=0;return;}}
if(P.Q[x].Crushbone===2){if(mob[Slot].name==="an orc oracle"&&P.Q[x].CB1<7){P.Q[x].CB1++;QMsg(P.Q[x].CB1+"/7 orc oracles slain");}
if(mob[Slot].name==="an orc legionnaire"&&P.Q[x].CB2<7){P.Q[x].CB2++;QMsg(P.Q[x].CB2+"/7 orc legionnaires slain");}
if(mob[Slot].name==="an orc lookout"&&P.Q[x].CB3<7){P.Q[x].CB3++;QMsg(P.Q[x].CB3+"/7 orc lookouts slain");}
if(P.Q[x].CB1>=7&&P.Q[x].CB2>=7&&P.Q[x].CB3>=7&&mob[Slot].name==="an orc warlord"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Crushbone=3;P.Q[x].CB1=0;P.Q[x].CB2=0;P.Q[x].CB3=0;return;}}
if(P.Q[x].Crushbone>=3){if(mob[Slot].name==="an orc scoutsman"&&P.Q[x].CB1<10){P.Q[x].CB1++;QMsg(P.Q[x].CB1+"/10 orc scoutsmen slain");}
if(mob[Slot].name==="an orc royal guard"&&P.Q[x].CB2<8){P.Q[x].CB2++;QMsg(P.Q[x].CB2+"/8 orc royal guards slain");}
if(mob[Slot].name==="an orc emissary"&&P.Q[x].CB3<6){P.Q[x].CB3++;QMsg(P.Q[x].CB3+"/6 orc emissaries slain");}
if(mob[Slot].name==="Chief Grimden"){P.Q[x].CB5=2;my.epicQuests++;}
if(P.Q[x].CB1>=10&&P.Q[x].CB2>=8&&P.Q[x].CB3>=6&&P.Q[x].CB5>=2){playAudio("endquest");my.quests++;QMsg("Quest Completed!");if(P.Q[x].Crushbone===3){var a="Permanent +1 Talent Point".fontcolor("#dd7711");QMsg("Quest Reward: "+a,0,0,8000);lore("Chief Grimden was driven to madness by the Idol of Chaos. We must investigate this matter further. I hereby relieve you of your duties to the Edenburg Training Detachment for a special duty.<br><br>Inquire about the Idols of Chaos at "+gold("Aspen Grove")+". Speak to Rendo Surefoot, a quirky, yet resourceful halfling reknowned for his occult knowledge. Good luck on your mission, "+my.name+".");}
stopMusic();P.Q[x].Crushbone++;P.Q[x].repeatCB=true;setEquipValues();tweeter("Chief Grimden");return;}}}
if(mz==="Arcturin's Crypt"){if(P.Q[x].EstateofUnrest<2){if(mob[Slot].name==="a death beetle"&&P.Q[x].ER1<8){P.Q[x].ER1++;QMsg(P.Q[x].ER1+"/8 death beetles slain");}
if(mob[Slot].name==="a tormented dead"&&P.Q[x].ER2<6){P.Q[x].ER2++;QMsg(P.Q[x].ER2+"/6 tormented dead slain");}
if(mob[Slot].name==="a lumbering mummy"&&P.Q[x].ER3<4){P.Q[x].ER3++;QMsg(P.Q[x].ER3+"/4 lumbering mummies slain");}
if(P.Q[x].ER1>=8&&P.Q[x].ER2>=6&&P.Q[x].ER3>=4){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].EstateofUnrest=2;P.Q[x].ER1=0;P.Q[x].ER2=0;P.Q[x].ER3=0;return;}}
if(P.Q[x].EstateofUnrest===2){if(mob[Slot].name==="a dry bone skeleton"&&P.Q[x].ER1<10){P.Q[x].ER1++;QMsg(P.Q[x].ER1+"/10 dry bone skeletons slain");}
if(mob[Slot].name==="a crazed ghoul"&&P.Q[x].ER2<8){P.Q[x].ER2++;QMsg(P.Q[x].ER2+"/8 crazed ghouls slain");}
if(mob[Slot].name==="a nymph"&&P.Q[x].ER3<6){P.Q[x].ER3++;QMsg(P.Q[x].ER3+"/6 nymphs slain");}
if(P.Q[x].ER1>=10&&P.Q[x].ER2>=8&&P.Q[x].ER3>=6&&mob[Slot].name==="Arch Duke of Artremia"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].EstateofUnrest=3;P.Q[x].ER1=0;P.Q[x].ER2=0;P.Q[x].ER3=0;return;}}
if(P.Q[x].EstateofUnrest>=3){if(mob[Slot].name==="a mortuary fungus"&&P.Q[x].ER1<8){P.Q[x].ER1++;QMsg(P.Q[x].ER1+"/8 mortuary fungi slain");}
if(mob[Slot].name==="a dusty werewolf"&&P.Q[x].ER2<8){P.Q[x].ER2++;QMsg(P.Q[x].ER2+"/8 dusty werewolves slain");}
if(mob[Slot].name==="a cephalid subverter"&&P.Q[x].ER3<5){P.Q[x].ER3++;QMsg(P.Q[x].ER3+"/5 cephalid subverters slain");}
if(mob[Slot].name==="a festering hag"&&P.Q[x].ER4<5){P.Q[x].ER4++;QMsg(P.Q[x].ER4+"/5 festering hags slain");}
if(P.Q[x].ER1>=8&&P.Q[x].ER2>=8&&P.Q[x].ER3>=5&&P.Q[x].ER4>=5&&mob[Slot].name==="Arcturin, the Lich King"){playAudio("endquest");my.quests++;my.epicQuests++;QMsg("Quest Completed!");if(P.Q[x].EstateofUnrest===3){var a="Permanent +1 Talent Point".fontcolor("#dd7711");QMsg("Quest Reward: "+a,0,0,8000);lore("My halfling instincts are never wrong! Once again you have found another Idol of Chaos. I happen to know that Nalatos cannot enchant more than three idols at once or it will spread his powers too thin.<br><br>I am not aware of any other suspicious activity in Vandamor. Perhaps it would be worth investigating in nearby "+gold("Artremia")+". Valeska Windcrest is a resourceful wood elf who may be able to assist you. If she doesn't have any useful information, she'll know someone who will.");}
stopMusic();P.Q[x].EstateofUnrest++;P.Q[x].repeatER=true;setEquipValues();tweeter("Arcturin, the Lich King");return;}}}
if(mz==="Salubrin Forest"){if(P.Q[x].GreaterFaydark<2){if(mob[Slot].name==="an orc pawn"){P.Q[x].GF1++;if(P.Q[x].GF1<4){QMsg(P.Q[x].GF1+"/4 orc pawns slain");}else{playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].GreaterFaydark=3;P.Q[x].GF1=0;return;}}}
if(P.Q[x].GreaterFaydark===3){if(mob[Slot].image==="an orc"){P.Q[x].GF1++;if(P.Q[x].GF1<10){QMsg(P.Q[x].GF1+"/10 orcs slain");}else{playAudio("endquest");QMsg("Quest Completed!<br>");my.quests++;P.Q[x].GreaterFaydark=4;QMsg("You received a reward from the Soldiers of Rinara!",0,0,d);getLoot(5,"weapons",weapon,2);T.delayedCall(d2/1000,QMsg,["Use the Map [M] to travel to other zones and find quests. Zones are unlocked as your level increases.",0,1,d]);return;}}}}
if(mz==="Viston's Redoubt"){if(P.Q[x].KedgeKeep<2){if(mob[Slot].name==="a peering gargoyle"&&P.Q[x].KK1<8){P.Q[x].KK1++;QMsg(P.Q[x].KK1+"/8 peering gargoyles slain");}
if(mob[Slot].name==="a fettered defiler"&&P.Q[x].KK2<8){P.Q[x].KK2++;QMsg(P.Q[x].KK2+"/8 fettered defilers slain");}
if(mob[Slot].name==="a dread werewolf"&&P.Q[x].KK3<8){P.Q[x].KK3++;QMsg(P.Q[x].KK3+"/8 dread werewolves slain");}
if(P.Q[x].KK1>=8&&P.Q[x].KK2>=8&&P.Q[x].KK3>=8&&mob[Slot].name==="Sari Portentia"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].KedgeKeep=2;P.Q[x].KK1=0;P.Q[x].KK2=0;P.Q[x].KK3=0;return;}}
if(P.Q[x].KedgeKeep===2){if(mob[Slot].name==="a brooding imp"&&P.Q[x].KK1<8){P.Q[x].KK1++;QMsg(P.Q[x].KK1+"/8 brooding imps slain");}
if(mob[Slot].name==="a manacled spoiler"&&P.Q[x].KK2<8){P.Q[x].KK2++;QMsg(P.Q[x].KK2+"/8 manacled spoilers slain");}
if(mob[Slot].name==="a lusting werewolf"&&P.Q[x].KK3<5){P.Q[x].KK3++;QMsg(P.Q[x].KK3+"/5 lusting werewolves slain");}
if(mob[Slot].name==="a bloodthirsty bat"&&P.Q[x].KK4<5){P.Q[x].KK4++;QMsg(P.Q[x].KK4+"/5 bloodthirsty bats slain");}
if(P.Q[x].KK1>=8&&P.Q[x].KK2>=8&&P.Q[x].KK3>=5&&P.Q[x].KK4>=5&&mob[Slot].name==="Shardok"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].KedgeKeep=3;P.Q[x].KK1=0;P.Q[x].KK2=0;P.Q[x].KK3=0;P.Q[x].KK4=0;return;}}
if(P.Q[x].KedgeKeep===3||(P.Q[x].KedgeKeep>3&&P.Q[x].repeatKk3===false)){if(mob[Slot].name==="a pained seether"&&P.Q[x].KK1<10){P.Q[x].KK1++;QMsg(P.Q[x].KK1+"/10 pained seethers slain");}
if(mob[Slot].name==="a soul destroyer"&&P.Q[x].KK2<10){P.Q[x].KK2++;QMsg(P.Q[x].KK2+"/10 soul destroyers slain");}
if(mob[Slot].name==="a vampire bat"&&P.Q[x].KK3<8){P.Q[x].KK3++;QMsg(P.Q[x].KK3+"/8 vampire bats slain");}
if(mob[Slot].name==="Artun Desmoni"&&P.Q[x].KK4<2){P.Q[x].KK4=2;QMsg("Artun Desmoni slain");}
if(mob[Slot].name==="Korman Valen"&&P.Q[x].KK5<2){P.Q[x].KK5=2;QMsg("Korman Valen slain");}
if(P.Q[x].KK1>=10&&P.Q[x].KK2>=10&&P.Q[x].KK3>=8&&P.Q[x].KK4>=2&&P.Q[x].KK5>=2&&P.Q[x].repeatKk3===false){playAudio("endquest");my.quests++;P.Q[x].KK1=0;P.Q[x].KK2=0;P.Q[x].KK3=0;P.Q[x].KK4=0;P.Q[x].KK5=0;QMsg("Quest Completed!");P.Q[x].KedgeKeep=4;setEquipValues();P.Q[x].repeatKk3=true;return;}}
if(P.Q[x].KedgeKeep>=4){if(mob[Slot].name==="a sinew punisher"&&P.Q[x].KK6<18){P.Q[x].KK6++;QMsg(P.Q[x].KK6+"/18 sinew punishers slain");}
if(mob[Slot].name==="Blood Guardian"&&P.Q[x].KK7<12){P.Q[x].KK7++;QMsg(P.Q[x].KK7+"/12 Blood Guardians slain");}
if(P.Q[x].KK6>=18&&P.Q[x].KK7>=12&&mob[Slot].name==="Revenant Viston"){playAudio("endquest");if(P.Q[x].KedgeKeep===4){P.Q[x].KedgeKeep=5;my.quests++;}else{P.Q[x].KedgeKeep++;}
P.Q[x].KK8=2;P.Q[x].repeatKk4=true;QMsg("Quest Completed!");P.Q[x].KedgeKeep++;my.epicQuests++;stopMusic();tweeter("Revenant Viston");return;}}}
if(mz==="Tendolin Meadows"){if(P.Q[x].LesserFaydark<2){if(mob[Slot].name==="a pixie trickster"||mob[Slot].name==="a pixie prankster"){if(mob[Slot].name==="a pixie trickster"&&P.Q[x].LF1<10){P.Q[x].LF1++;QMsg(P.Q[x].LF1+"/10 pixie tricksters slain");}
if(mob[Slot].name==="a pixie prankster"&&P.Q[x].LF2<5){P.Q[x].LF2++;QMsg(P.Q[x].LF2+"/5 pixie pranksters slain");}
if(P.Q[x].LF1>=10&&P.Q[x].LF2>=5&&P.Q[x].LesserFaydark<2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].LesserFaydark=2;QMsg("You received a reward from Miranda Crossheart!",0,0,d);getLoot(5,"weapons",0,2);return;}}}}
if(mz==="Riven Grotto"){if(P.Q[x].Befallen<2){if(mob[Slot].name==="a necro neophyte"&&P.Q[x].BF1<6){P.Q[x].BF1++;QMsg(P.Q[x].BF1+"/6 necro neophytes slain");}
if(mob[Slot].name==="a necro initiate"&&P.Q[x].BF2<6){P.Q[x].BF2++;QMsg(P.Q[x].BF2+"/6 necro initiates slain");}
if(mob[Slot].name==="a dread bone"&&P.Q[x].BF3<6){P.Q[x].BF3++;QMsg(P.Q[x].BF3+"/6 dread bones slain");}
if(P.Q[x].BF1>=6&&P.Q[x].BF2>=6&&P.Q[x].BF3>=6){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Befallen=2;P.Q[x].BF1=0;P.Q[x].BF2=0;P.Q[x].BF3=0;return;}}
if(P.Q[x].Befallen===2){if(mob[Slot].name==="an ice boned skeleton"&&P.Q[x].BF1<8){P.Q[x].BF1++;QMsg(P.Q[x].BF1+"/8 ice boned skeletons slain");}
if(mob[Slot].name==="a necro acolyte"&&P.Q[x].BF2<8){P.Q[x].BF2++;QMsg(P.Q[x].BF2+"/8 necro acolytes slain");}
if(mob[Slot].name==="a ghoul"&&P.Q[x].BF3<5){P.Q[x].BF3++;QMsg(P.Q[x].BF3+"/5 ghouls slain");}
if(P.Q[x].BF1>=8&&P.Q[x].BF2>=8&&P.Q[x].BF3>=5&&mob[Slot].name==="Dark Priest Nymda"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Befallen=3;P.Q[x].BF1=0;P.Q[x].BF2=0;P.Q[x].BF3=0;return;}}
if(P.Q[x].Befallen===3){if(mob[Slot].name==="an elf skeleton"&&P.Q[x].BF1<9){P.Q[x].BF1++;QMsg(P.Q[x].BF1+"/9 elf skeletons slain");}
if(mob[Slot].name==="a burnt zombie"&&P.Q[x].BF2<7){P.Q[x].BF2++;QMsg(P.Q[x].BF2+"/7 burnt zombies slain");}
if(mob[Slot].name==="a dread corpse"&&P.Q[x].BF3<7){P.Q[x].BF3++;QMsg(P.Q[x].BF3+"/7 dread corpses slain");}
if(P.Q[x].BF1>=9&&P.Q[x].BF2>=7&&P.Q[x].BF3>=7&&mob[Slot].name==="The Black Seer"){playAudio("endquest");my.quests++;P.Q[x].Befallen=4;QMsg("Quest Completed!");setEquipValues();return;}}}
if(mz==="Greenthorn Cavern"){if(P.Q[x].Blackburrow<2){if(mob[Slot].name==="a gnoll pup"&&P.Q[x].BB1<8){P.Q[x].BB1++;QMsg(P.Q[x].BB1+"/8 gnoll pups slain");}
if(mob[Slot].name==="a scrawny gnoll"&&P.Q[x].BB2<6){P.Q[x].BB2++;QMsg(P.Q[x].BB2+"/6 scrawny gnolls slain");}
if(mob[Slot].name==="a gnoll scout"&&P.Q[x].BB3<4){P.Q[x].BB3++;QMsg(P.Q[x].BB3+"/4 gnoll scouts slain");}
if(P.Q[x].BB1>=8&&P.Q[x].BB2>=6&&P.Q[x].BB3>=4){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Blackburrow=2;P.Q[x].BB1=0;P.Q[x].BB2=0;P.Q[x].BB3=0;return;}}
if(P.Q[x].Blackburrow===2){if(mob[Slot].name==="a gnoll shaman"&&P.Q[x].BB1<8){P.Q[x].BB1++;QMsg(P.Q[x].BB1+"/8 gnoll shamans slain");}
if(mob[Slot].name==="a patrolling gnoll"&&P.Q[x].BB2<8){P.Q[x].BB2++;QMsg(P.Q[x].BB2+"/8 patrolling gnolls slain");}
if(mob[Slot].name==="a gnoll sergeant"&&P.Q[x].BB3<6){P.Q[x].BB3++;QMsg(P.Q[x].BB3+"/6 gnoll sergeants slain");}
if(P.Q[x].BB1>=8&&P.Q[x].BB2>=8&&P.Q[x].BB3>=6&&mob[Slot].name==="Furrpaw Barxen"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Blackburrow=3;P.Q[x].BB1=0;P.Q[x].BB2=0;P.Q[x].BB3=0;return;}}
if(P.Q[x].Blackburrow===3){if(mob[Slot].name==="an elite gnoll guard"&&P.Q[x].BB1<12){P.Q[x].BB1++;QMsg(P.Q[x].BB1+"/12 elite gnoll guards slain");}
if(mob[Slot].name==="a gnoll tactician"&&P.Q[x].BB2<8){P.Q[x].BB2++;QMsg(P.Q[x].BB2+"/8 gnoll tacticians slain");}
if(mob[Slot].name==="a gnoll commander"&&P.Q[x].BB3<4){P.Q[x].BB3++;QMsg(P.Q[x].BB3+"/4 gnoll commanders slain");}
if(P.Q[x].BB1>=12&&P.Q[x].BB2>=8&&P.Q[x].BB3>=4&&mob[Slot].name==="Viceroy Tanaden"){playAudio("endquest");my.quests++;P.Q[x].Blackburrow=4;QMsg("Quest Completed!");setEquipValues();return;}}}
if(mz==="Temple of Prenssor"){if(P.Q[x].CazicThule<2){if(mob[Slot].name==="a lizard disciple"&&P.Q[x].CT1<8){P.Q[x].CT1++;QMsg(P.Q[x].CT1+"/8 lizard disciples slain");}
if(mob[Slot].name==="a lizard page"&&P.Q[x].CT2<6){P.Q[x].CT2++;QMsg(P.Q[x].CT2+"/6 lizard pages slain");}
if(mob[Slot].name==="a lizard defender"&&P.Q[x].CT3<4){P.Q[x].CT3++;QMsg(P.Q[x].CT3+"/4 lizard defenders slain");}
if(P.Q[x].CT1>=8&&P.Q[x].CT2>=6&&P.Q[x].CT3>=4&&mob[Slot].name==="Soprenti the Anointed"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].CazicThule=2;P.Q[x].CT1=0;P.Q[x].CT2=0;P.Q[x].CT3=0;return;}}
if(P.Q[x].CazicThule===2){if(mob[Slot].name==="a lizard herald"&&P.Q[x].CT1<10){P.Q[x].CT1++;QMsg(P.Q[x].CT1+"/10 lizard heralds slain");}
if(mob[Slot].name==="a lizard protector"&&P.Q[x].CT2<8){P.Q[x].CT2++;QMsg(P.Q[x].CT2+"/8 lizard protectors slain");}
if(mob[Slot].name==="a lizard justicar"&&P.Q[x].CT3<6){P.Q[x].CT3++;QMsg(P.Q[x].CT3+"/6 lizard justicars slain");}
if(mob[Slot].name==="Sartuth the Possessed"&&P.Q[x].CT4<2){P.Q[x].CT4=2;QMsg("Sartuth the Possessed slain");}
if(mob[Slot].name==="Merszas the Divine"&&P.Q[x].CT5<2){P.Q[x].CT5=2;QMsg("Merszas the Divine slain");}
if(P.Q[x].CT1>=10&&P.Q[x].CT2>=8&&P.Q[x].CT3>=6&&P.Q[x].CT4>=2&&P.Q[x].CT5>=2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].CazicThule=3;P.Q[x].CT1=0;P.Q[x].CT2=0;P.Q[x].CT3=0;P.Q[x].CT4=0;P.Q[x].CT5=0;return;}}
if(P.Q[x].CazicThule===3||(P.Q[x].CazicThule>3&&P.Q[x].repeatCt3===false)){if(mob[Slot].name==="a lizard zealot"&&P.Q[x].CT1<10){P.Q[x].CT1++;QMsg(P.Q[x].CT1+"/10 lizard zealots slain");}
if(mob[Slot].name==="a lizard crusader"&&P.Q[x].CT2<10){P.Q[x].CT2++;QMsg(P.Q[x].CT2+"/10 lizard crusaders slain");}
if(mob[Slot].name==="a lizard champion"&&P.Q[x].CT3<8){P.Q[x].CT3++;QMsg(P.Q[x].CT3+"/8 lizard champions slain");}
if(P.Q[x].CT1>=10&&P.Q[x].CT2>=10&&P.Q[x].CT3>=8&&mob[Slot].name==="Sentoth, Lord of Rapture"){playAudio("endquest");my.quests++;my.epicQuests++;QMsg("Quest Completed!");P.Q[x].repeatCt3=true;if(P.Q[x].CazicThule===3){var a="Permanent +1 Talent Point".fontcolor("#dd7711");QMsg("Quest Reward: "+a,0,0,8000);lore(my.name+", I don't believe it! Surely you have been anointed by the Gods. Despite the odds you have triumphed once again. You have collected all of the Idols of Chaos, denying Nalatos's influence in our world.<br><br>Head north to Fenwoven, where a wise shaman named Arwen lives. Only he will know what to do with the Idols of Chaos. The Barbarian race have unique knowledge about this due to their proximity to Ashenflow Peak in their homeland.");}
stopMusic();P.Q[x].CazicThule++;setEquipValues();tweeter("Sentoth, Lord of Rapture");return;}}}
if(mz==="Kordata Ruins"){if(P.Q[x].LowerGuk<2){if(mob[Slot].name==="an anuran tir knight"&&P.Q[x].LG1<10){P.Q[x].LG1++;QMsg(P.Q[x].LG1+"/10 anuran tir knights slain");}
if(mob[Slot].name==="a lem anuran wizard"&&P.Q[x].LG2<8){P.Q[x].LG2++;QMsg(P.Q[x].LG2+"/8 lem anuran wizards slain");}
if(mob[Slot].name==="an amn anuran wizard"&&P.Q[x].LG3<6){P.Q[x].LG3++;QMsg(P.Q[x].LG3+"/6 amn anuran wizards slain");}
if(mob[Slot].name==="an anuran assassin"&&P.Q[x].LG4<2){P.Q[x].LG4=2;QMsg("Anuran assassin slain");}
if(mob[Slot].name==="an anuran supplier"&&P.Q[x].LG5<2){P.Q[x].LG5=2;QMsg("Anuran supplier slain");}
if(P.Q[x].LG1>=10&&P.Q[x].LG2>=8&&P.Q[x].LG3>=6&&P.Q[x].LG4>=2&&P.Q[x].LG5>=2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].LowerGuk=2;P.Q[x].LG1=0;P.Q[x].LG2=0;P.Q[x].LG3=0;P.Q[x].LG4=0;P.Q[x].LG5=0;return;}}
if(P.Q[x].LowerGuk===2){if(mob[Slot].name==="a pul anuran knight"&&P.Q[x].LG1<8){P.Q[x].LG1++;QMsg(P.Q[x].LG1+"/8 pul anuran knights slain");}
if(mob[Slot].name==="a dol anuran wizard"&&P.Q[x].LG2<8){P.Q[x].LG2++;QMsg(P.Q[x].LG2+"/8 dol anuran wizards slain");}
if(mob[Slot].name==="a vex anuran wizard"&&P.Q[x].LG3<6){P.Q[x].LG3++;QMsg(P.Q[x].LG3+"/6 vex anuran wizards slain");}
if(mob[Slot].name==="a ber anuran knight"&&P.Q[x].LG4<6){P.Q[x].LG4++;QMsg(P.Q[x].LG4+"/6 ber anuran knights slain");}
if(mob[Slot].name==="a frenzied anuran"&&P.Q[x].LG5<2){P.Q[x].LG5=2;QMsg("Frenzied anuran slain");}
if(mob[Slot].name==="an anuran sentinel"&&P.Q[x].LG6<2){P.Q[x].LG6=2;QMsg("Anuran sentinel slain");}
if(P.Q[x].LG1>=8&&P.Q[x].LG2>=8&&P.Q[x].LG3>=6&&P.Q[x].LG4>=6&&P.Q[x].LG5>=2&&P.Q[x].LG6>=2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].LowerGuk=3;P.Q[x].LG1=0;P.Q[x].LG2=0;P.Q[x].LG3=0;P.Q[x].LG4=0;P.Q[x].LG5=0;P.Q[x].LG6=0;return;}}
if(P.Q[x].LowerGuk===3||(P.Q[x].LowerGuk>3&&P.Q[x].repeatLg3===false)){if(mob[Slot].name==="a mal anuran knight"&&P.Q[x].LG1<12){P.Q[x].LG1++;QMsg(P.Q[x].LG1+"/12 mal anuran knights slain");}
if(mob[Slot].name==="a zod anuran wizard"&&P.Q[x].LG2<10){P.Q[x].LG2++;QMsg(P.Q[x].LG2+"/10 zod anuran wizards slain");}
if(mob[Slot].name==="a zod anuran knight"&&P.Q[x].LG3<8){P.Q[x].LG3++;QMsg(P.Q[x].LG3+"/8 zod anuran knights slain");}
if(mob[Slot].name==="King Froaki"&&P.Q[x].LG4<2){P.Q[x].LG4=2;QMsg("King Froaki slain");}
if(mob[Slot].name==="the anuran arch magus"&&P.Q[x].LG5<2){P.Q[x].LG5=2;QMsg("Anuran arch magus slain");}
if(P.Q[x].LG1>=12&&P.Q[x].LG2>=10&&P.Q[x].LG3>=8&&P.Q[x].LG4>=2&&P.Q[x].LG5>=2&&P.Q[x].repeatLg3===false){playAudio("endquest");my.quests++;P.Q[x].LowerGuk=4;QMsg("Quest Completed!");setEquipValues();P.Q[x].repeatLg3=true;return;}}}
if(mz==="Ashenflow Peak"){if(P.Q[x].NagafensLair<2){if(mob[Slot].name==="a greater kobold"&&P.Q[x].NL1<8){P.Q[x].NL1++;QMsg(P.Q[x].NL1+"/8 greater kobolds slain");}
if(mob[Slot].name==="a greater kobold shaman"&&P.Q[x].NL2<8){P.Q[x].NL2++;QMsg(P.Q[x].NL2+"/8 greater kobold shamans slain");}
if(mob[Slot].name==="an ashenflow kobold"&&P.Q[x].NL3<5){P.Q[x].NL3++;QMsg(P.Q[x].NL3+"/5 ashenflow kobolds slain");}
if(mob[Slot].name==="an ashenflow kobold shaman"&&P.Q[x].NL4<5){P.Q[x].NL4++;QMsg(P.Q[x].NL4+"/5 ashenflow kobold shamans slain");}
if(mob[Slot].name==="a kobold noble"&&P.Q[x].NL5<2){P.Q[x].NL5=2;QMsg("Kobold noble slain");}
if(mob[Slot].name==="an ashenflow kobold king"&&P.Q[x].NL6<2){P.Q[x].NL6=2;QMsg("Ashenflow kobold king slain");}
if(P.Q[x].NL1>=8&&P.Q[x].NL2>=8&&P.Q[x].NL3>=5&&P.Q[x].NL4>=5&&P.Q[x].NL5>=2&&P.Q[x].NL6>=2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].NagafensLair=2;P.Q[x].NL1=0;P.Q[x].NL2=0;P.Q[x].NL3=0;P.Q[x].NL4=0;P.Q[x].NL5=0;P.Q[x].NL6=0;return;}}
if(P.Q[x].NagafensLair===2){if(mob[Slot].name==="a sonic bat"&&P.Q[x].NL1<10){P.Q[x].NL1++;QMsg(P.Q[x].NL1+"/10 sonic bats slain");}
if(mob[Slot].name==="a lava beetle"&&P.Q[x].NL2<8){P.Q[x].NL2++;QMsg(P.Q[x].NL2+"/8 lava beetles slain");}
if(mob[Slot].name==="a lava duct crawler"&&P.Q[x].NL3<8){P.Q[x].NL3++;QMsg(P.Q[x].NL3+"/8 lava duct crawlers slain");}
if(mob[Slot].name==="a noxious spider"&&P.Q[x].NL4<2){P.Q[x].NL4=2;QMsg("Noxious spider slain");}
if(mob[Slot].name==="a stone spider"&&P.Q[x].NL5<2){P.Q[x].NL5=2;QMsg("Stone spider slain");}
if(P.Q[x].NL1>=10&&P.Q[x].NL2>=8&&P.Q[x].NL3>=8&&P.Q[x].NL4>=2&&P.Q[x].NL5>=2){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].NagafensLair=3;P.Q[x].NL1=0;P.Q[x].NL2=0;P.Q[x].NL3=0;P.Q[x].NL4=0;P.Q[x].NL5=0;return;}}
if(P.Q[x].NagafensLair===3||(P.Q[x].NagafensLair>3&&P.Q[x].repeatNl3===false)){if(mob[Slot].name==="a lava guardian"&&P.Q[x].NL1<10){P.Q[x].NL1++;QMsg(P.Q[x].NL1+"/10 lava guardians slain");}
if(mob[Slot].name==="an imp protector"&&P.Q[x].NL2<15){P.Q[x].NL2++;QMsg(P.Q[x].NL2+"/15 imp protectors slain");}
if(P.Q[x].NL1>=10&&P.Q[x].NL2>=15&&mob[Slot].name==="General Ovext"){playAudio("endquest");my.quests++;P.Q[x].NL1=0;P.Q[x].NL2=0;QMsg("Quest Completed!");if(P.Q[x].NagafensLair<4){P.Q[x].NagafensLair=4;}
setEquipValues();P.Q[x].repeatNl3=true;return;}}
if(P.Q[x].NagafensLair>=4){if(mob[Slot].name==="a fire giant warrior"&&P.Q[x].NL7<12){P.Q[x].NL7++;QMsg(P.Q[x].NL7+"/12 fire giant warriors slain");}
if(mob[Slot].name==="a fire giant wizard"&&P.Q[x].NL8<8){P.Q[x].NL8++;QMsg(P.Q[x].NL8+"/8 fire giant wizards slain");}
if(mob[Slot].name==="King Argentus"&&P.Q[x].NL9<2){P.Q[x].NL9=2;QMsg("King Argentus slain");}
if(mob[Slot].name==="Duke Carthenage"&&P.Q[x].NL10<2){P.Q[x].NL10=2;QMsg("Duke Carthenage slain");}
if(mob[Slot].name==="Battle Mage Turento"&&P.Q[x].NL11<2){P.Q[x].NL11=2;QMsg("Battle Mage Turento slain");}
if(mob[Slot].name==="Highlord Szarthax"&&P.Q[x].NL12<1){P.Q[x].NL12=2;my.epicQuests++;stopMusic();}
if(P.Q[x].NL7>=12&&P.Q[x].NL8>=8&&P.Q[x].NL9>=2&&P.Q[x].NL10>=2&&P.Q[x].NL11>=2&&P.Q[x].NL12>=1&&P.Q[x].repeatNl4===false&&mob[Slot].name==="Highlord Szarthax"){playAudio("endquest");if(P.Q[x].NagafensLair===4){my.quests++;lore("Amazing! You fell Highlord Szarthax, the most fearsome dragon in all of Vandamor. It looks like the portal isn't here, but there's a secret tunnel at the back of his lair.<br><br>It looks like this tunnel leads to a long forgotten city, now called "+gold("Dire Sanctum")+", that was buried beneath the volcano. Quite a hiding spot for a well guarded dimensional portal! The portal must be inside.");}
QMsg("Quest Completed!");if(P.Q[x].NagafensLair===4){var a="Permanent +1 Talent Point".fontcolor("#dd7711");QMsg("Quest Reward: "+a,0,0,8000);}
P.Q[x].NagafensLair++;P.Q[x].repeatNl4=true;tweeter("Highlord Szarthax");return;}}}
if(mz==="Braxxen's Bastille"){if(P.Q[x].Najena<2){if(mob[Slot].name==="a goblin warrior"&&P.Q[x].NJ1<10){P.Q[x].NJ1++;QMsg(P.Q[x].NJ1+"/10 goblin warriors slain");}
if(mob[Slot].name==="a greater skeleton"&&P.Q[x].NJ2<6){P.Q[x].NJ2++;QMsg(P.Q[x].NJ2+"/6 greater skeletons slain");}
if(mob[Slot].name==="an anuran guard"&&P.Q[x].NJ3<4){P.Q[x].NJ3++;QMsg(P.Q[x].NJ3+"/4 anuran guards slain");}
if(P.Q[x].NJ1>=10&&P.Q[x].NJ2>=6&&P.Q[x].NJ3>=4&&mob[Slot].name==="Grippywor"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Najena=2;P.Q[x].NJ1=0;P.Q[x].NJ2=0;P.Q[x].NJ3=0;return;}}
if(P.Q[x].Najena===2){if(mob[Slot].name==="a goblin officer"&&P.Q[x].NJ1<10){P.Q[x].NJ1++;QMsg(P.Q[x].NJ1+"/10 goblin officers slain");}
if(mob[Slot].name==="a necromancer"&&P.Q[x].NJ2<8){P.Q[x].NJ2++;QMsg(P.Q[x].NJ2+"/8 necromancers slain");}
if(mob[Slot].name==="an anuran torturer"&&P.Q[x].NJ3<6){P.Q[x].NJ3++;QMsg(P.Q[x].NJ3+"/6 anuran torturers slain");}
if(P.Q[x].NJ1>=10&&P.Q[x].NJ2>=8&&P.Q[x].NJ3>=6&&mob[Slot].name==="Munin"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].Najena=3;P.Q[x].NJ1=0;P.Q[x].NJ2=0;P.Q[x].NJ3=0;return;}}
if(P.Q[x].Najena===3){if(mob[Slot].name==="a magician"&&P.Q[x].NJ1<10){P.Q[x].NJ1++;QMsg(P.Q[x].NJ1+"/10 magicians slain");}
if(mob[Slot].name==="a cephalid subverter"&&P.Q[x].NJ2<8){P.Q[x].NJ2++;QMsg(P.Q[x].NJ2+"/8 cephalid subverters slain");}
if(mob[Slot].name==="a goblin captain"&&P.Q[x].NJ3<8){P.Q[x].NJ3++;QMsg(P.Q[x].NJ3+"/8 goblin captains slain");}
if(mob[Slot].name==="Burzina"){P.Q[x].NJ4=2;QMsg("Burzina slain");}
if(mob[Slot].name==="Braxxen"){P.Q[x].NJ5=2;QMsg("Braxxen slain");}
if(P.Q[x].NJ1>=10&&P.Q[x].NJ2>=8&&P.Q[x].NJ3>=8&&P.Q[x].NJ4>=2&&P.Q[x].NJ5>=2){playAudio("endquest");my.quests++;P.Q[x].Najena=4;QMsg("Quest Completed!");setEquipValues();return;}}}
if(mz==="Galeblast Fortress"){if(P.Q[x].PermafrostKeep<2){if(mob[Slot].name==="an ice goblin"&&P.Q[x].PK1<8){P.Q[x].PK1++;QMsg(P.Q[x].PK1+"/8 ice goblins slain");}
if(mob[Slot].name==="a goblin evoker"&&P.Q[x].PK2<6){P.Q[x].PK2++;QMsg(P.Q[x].PK2+"/6 goblin evokers slain");}
if(mob[Slot].name==="a dire wolf"&&P.Q[x].PK3<6){P.Q[x].PK3++;QMsg(P.Q[x].PK3+"/6 dire wolves slain");}
if(P.Q[x].PK1>=8&&P.Q[x].PK2>=6&&P.Q[x].PK3>=6&&mob[Slot].name==="an ice goblin keymaster"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].PermafrostKeep=2;P.Q[x].PK1=0;P.Q[x].PK2=0;P.Q[x].PK3=0;return;}}
if(P.Q[x].PermafrostKeep===2){if(mob[Slot].name==="a goblin wizard"&&P.Q[x].PK1<7){P.Q[x].PK1++;QMsg(P.Q[x].PK1+"/7 goblin wizards slain");}
if(mob[Slot].name==="an elite goblin guard"&&P.Q[x].PK2<7){P.Q[x].PK2++;QMsg(P.Q[x].PK2+"/7 elite goblin guards slain");}
if(mob[Slot].name==="a goblin preacher"&&P.Q[x].PK3<7){P.Q[x].PK3++;QMsg(P.Q[x].PK3+"/7 goblin preachers slain");}
if(P.Q[x].PK1>=7&&P.Q[x].PK2>=7&&P.Q[x].PK3>=7&&mob[Slot].name==="a goblin excavator"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].PermafrostKeep=3;P.Q[x].PK1=0;P.Q[x].PK2=0;P.Q[x].PK3=0;return;}}
if(P.Q[x].PermafrostKeep===3){if(mob[Slot].name==="a goblin sage"&&P.Q[x].PK1<10){P.Q[x].PK1++;QMsg(P.Q[x].PK1+"/10 goblin sages slain");}
if(mob[Slot].name==="an elite honor guard"&&P.Q[x].PK2<10){P.Q[x].PK2++;QMsg(P.Q[x].PK2+"/10 elite honor guards slain");}
if(mob[Slot].name==="an ice giant youth"&&P.Q[x].PK3<5){P.Q[x].PK3++;QMsg(P.Q[x].PK3+"/5 ice giant youths slain");}
if(mob[Slot].name==="Pontiff Krindletin"&&P.Q[x].PK4<2){P.Q[x].PK4=2;QMsg("Pontiff Krindletin slain");}
if(mob[Slot].name==="Magnate Dinbopp"&&P.Q[x].PK5<2){P.Q[x].PK5=2;QMsg("Magnate Dinbopp slain");}
if(P.Q[x].PK1>=10&&P.Q[x].PK2>=10&&P.Q[x].PK3>=5&&P.Q[x].PK4>=2&&P.Q[x].PK5>=2){playAudio("endquest");my.quests++;if(P.Q[x].PermafrostKeep<4){P.Q[x].PermafrostKeep=4;}
P.Q[x].PK1=0;P.Q[x].PK2=0;P.Q[x].PK3=0;P.Q[x].PK4=0;P.Q[x].PK5=0;QMsg("Quest Completed!");setEquipValues();return;}}
if(P.Q[x].PermafrostKeep>=4){if(mob[Slot].name==="an ice giant champion"&&P.Q[x].PK1<4){P.Q[x].PK1++;QMsg(P.Q[x].PK1+"/4 ice giant champions slain");}
if(mob[Slot].name==="an ice giant warder"&&P.Q[x].PK2<4){P.Q[x].PK2++;QMsg(P.Q[x].PK2+"/4 ice giant warders slain");}
if(mob[Slot].name==="an ice giant preserver"&&P.Q[x].PK3<4){P.Q[x].PK3++;QMsg(P.Q[x].PK3+"/4 ice giant preservers slain");}
if(mob[Slot].name==="an ice giant"&&P.Q[x].PK4<3){P.Q[x].PK4++;QMsg(P.Q[x].PK4+"/3 ice giants slain");}
if(mob[Slot].name==="an ice giant magus"&&P.Q[x].PK5<2){P.Q[x].PK5++;QMsg(P.Q[x].PK5+"/2 ice giant magi slain");}
if(mob[Slot].name==="an ice giant priest"&&P.Q[x].PK6<2){P.Q[x].PK6++;QMsg(P.Q[x].PK6+"/2 ice giant priests slain");}
if(mob[Slot].name==="Margrave Kalgresh the Usurper"){P.Q[x].PK7=2;QMsg("Margrave Kalgresh the Usurper slain");}
if(mob[Slot].name==="Vizier Kongumen Divorn"){P.Q[x].PK8=2;QMsg("Vizier Kongumen Divorn slain");}
if(P.Q[x].PK1>=4&&P.Q[x].PK2>=4&&P.Q[x].PK3>=4&&P.Q[x].PK4>=3&&P.Q[x].PK5>=2&&P.Q[x].PK6>=2&&P.Q[x].PK7>=2&&P.Q[x].PK8>=2&&mob[Slot].name==="Matron Maelentia"){playAudio("endquest");P.Q[x].PK9=2;QMsg("Quest Completed!");if(P.Q[x].PermafrostKeep===4){P.Q[x].PermafrostKeep=5;my.quests++;lore("Blizzards of Shendova, you have triumphed against Matron Maelentia! The underground caverns of Ashenflow Peak are now accessible.<br><br>Make your way toward the lair of Highlord Szarthax, the deadly fire dragon.");}else{P.Q[x].PermafrostKeep++;}
P.Q[x].repeatPk4=true;my.epicQuests++;stopMusic();tweeter("Matron Maelentia");return;}}}
if(mz==="Nimgaul"){if(P.Q[x].PlaneofFear<=2){if(mob[Slot].name==="a wailing banshee"&&P.Q[x].PF1<3){P.Q[x].PF1++;QMsg(P.Q[x].PF1+"/3 wailing banshees slain");}
if(mob[Slot].name==="a festering dreg"&&P.Q[x].PF2<3){P.Q[x].PF2++;QMsg(P.Q[x].PF2+"/3 festering dregs slain");}
if(mob[Slot].name==="a lurid nymph"&&P.Q[x].PF3<3){P.Q[x].PF3++;QMsg(P.Q[x].PF3+"/3 lurid nymphs slain");}
if(mob[Slot].name==="a peering menace"&&P.Q[x].PF4<3){P.Q[x].PF4++;QMsg(P.Q[x].PF4+"/3 peering menaces slain");}
if(mob[Slot].name==="an accursed slattern"&&P.Q[x].PF5<3){P.Q[x].PF5++;QMsg(P.Q[x].PF5+"/3 accursed slatterns slain");}
if(mob[Slot].name==="a brooding fungus"&&P.Q[x].PF6<3){P.Q[x].PF6++;QMsg(P.Q[x].PF6+"/3 brooding fungi slain");}
if(mob[Slot].name==="a cursed marionette"&&P.Q[x].PF7<3){P.Q[x].PF7++;QMsg(P.Q[x].PF7+"/3 cursed marionettes slain");}
if(mob[Slot].name==="a tremulant imp"&&P.Q[x].PF8<3){P.Q[x].PF8++;QMsg(P.Q[x].PF8+"/3 tremulant imps slain");}
if(mob[Slot].name==="a deranged gorilla"&&P.Q[x].PF9<3){P.Q[x].PF9++;QMsg(P.Q[x].PF9+"/3 deranged gorillas slain");}
if(mob[Slot].name==="a boreal spider"&&P.Q[x].PF10<3){P.Q[x].PF10++;QMsg(P.Q[x].PF10+"/3 boreal spiders slain");}
if(mob[Slot].name==="a cephalid enticer"&&P.Q[x].PF11<3){P.Q[x].PF11++;QMsg(P.Q[x].PF11+"/3 cephalid enticers slain");}
if(mob[Slot].name==="a panicked anuran"&&P.Q[x].PF12<3){P.Q[x].PF12++;QMsg(P.Q[x].PF12+"/3 panicked anurans slain");}
if(mob[Slot].name==="a chaos punisher"&&P.Q[x].PF13<3){P.Q[x].PF13++;QMsg(P.Q[x].PF13+"/3 chaos punishers slain");}
if(mob[Slot].name==="a chaos enforcer"&&P.Q[x].PF14<3){P.Q[x].PF14++;QMsg(P.Q[x].PF14+"/3 chaos enforcers slain");}
if(mob[Slot].name==="a pustulant vessel"&&P.Q[x].PF15<3){P.Q[x].PF15++;QMsg(P.Q[x].PF15+"/3 pustulant vessels slain");}
if(mob[Slot].name==="a shrieking wisp"&&P.Q[x].PF16<3){P.Q[x].PF16++;QMsg(P.Q[x].PF16+"/3 shrieking wisps slain");}
if(mob[Slot].name==="a sorrow slitherer"&&P.Q[x].PF17<3){P.Q[x].PF17++;QMsg(P.Q[x].PF17+"/3 sorrow slitherers slain");}
if(mob[Slot].name==="Guardian of Misery"){P.Q[x].PF18=2;QMsg("Guardian of Misery slain");}
if(mob[Slot].name==="Guardian of Strife"){P.Q[x].PF19=2;QMsg("Guardian of Strife slain");}
if(mob[Slot].name==="Guardian of Ruin"){P.Q[x].PF20=2;QMsg("Guardian of Ruin slain");}
if(mob[Slot].name==="Falzitherin"){P.Q[x].PF21=2;QMsg("Falzitherin slain");my.epicQuests++;stopMusic();tweeter("Falzitherin");}
if(mob[Slot].name==="Nalatos, God of Chaos"){P.Q[x].PF22=2;my.epicQuests++;stopMusic();}
if(P.Q[x].PF1>=3&&P.Q[x].PF2>=3&&P.Q[x].PF3>=3&&P.Q[x].PF4>=3&&P.Q[x].PF5>=3&&P.Q[x].PF6>=3&&P.Q[x].PF7>=3&&P.Q[x].PF8>=3&&P.Q[x].PF9>=3&&P.Q[x].PF10>=3&&P.Q[x].PF11>=3&&P.Q[x].PF12>=3&&P.Q[x].PF13>=3&&P.Q[x].PF14>=3&&P.Q[x].PF15>=3&&P.Q[x].PF16>=3&&P.Q[x].PF17>=3&&P.Q[x].PF18>=1&&P.Q[x].PF19>=1&&P.Q[x].PF20>=1&&P.Q[x].PF21>=1&&P.Q[x].PF22>=1&&mob[Slot].name==="Nalatos, God of Chaos"){playAudio("endquest");if(P.Q[x].PlaneofFear<2){P.Q[x].PlaneofFear=2;my.quests++;}else{P.Q[x].PlaneofFear++;}
QMsg("Quest Completed!");tweeter("Nalatos, God of Chaos");return;}}}
if(mz==="Dire Sanctum"){if(P.Q[x].PlaneofHate<=2){if(mob[Slot].name==="a toiling drudge"&&P.Q[x].PH1<4){P.Q[x].PH1++;QMsg(P.Q[x].PH1+"/4 toiling drudges slain");}
if(mob[Slot].name==="a slavering corpse"&&P.Q[x].PH2<4){P.Q[x].PH2++;QMsg(P.Q[x].PH2+"/4 slavering corpses slain");}
if(mob[Slot].name==="a fetid vagabond"&&P.Q[x].PH3<4){P.Q[x].PH3++;QMsg(P.Q[x].PH3+"/4 fetid vagabonds slain");}
if(mob[Slot].name==="an impulse servant"&&P.Q[x].PH4<4){P.Q[x].PH4++;QMsg(P.Q[x].PH4+"/4 impulse servants slain");}
if(mob[Slot].name==="a servant of corruption"&&P.Q[x].PH5<4){P.Q[x].PH5++;QMsg(P.Q[x].PH5+"/4 servants of corruption slain");}
if(mob[Slot].name==="an embalmed vagrant"&&P.Q[x].PH6<4){P.Q[x].PH6++;QMsg(P.Q[x].PH6+"/4 embalmed vagrants slain");}
if(mob[Slot].name==="a ghastly indulger"&&P.Q[x].PH7<5){P.Q[x].PH7++;QMsg(P.Q[x].PH7+"/5 ghastly indulgers slain");}
if(mob[Slot].name==="an infected rodent"&&P.Q[x].PH8<5){P.Q[x].PH8++;QMsg(P.Q[x].PH8+"/5 infected rodents slain");}
if(mob[Slot].name==="a flittering menace"&&P.Q[x].PH9<5){P.Q[x].PH9++;QMsg(P.Q[x].PH9+"/5 flittering menaces slain");}
if(mob[Slot].name==="a hallowed harbinger"&&P.Q[x].PH10<5){P.Q[x].PH10++;QMsg(P.Q[x].PH10+"/5 hallowed harbingers slain");}
if(mob[Slot].name==="a cephalid sorcerer"&&P.Q[x].PH11<5){P.Q[x].PH11++;QMsg(P.Q[x].PH11+"/5 cephalid sorcerers slain");}
if(mob[Slot].name==="Vixen Sarmina"&&P.Q[x].PH12<1){P.Q[x].PH12=2;QMsg("Vixen Sarmina slain");my.epicQuests++;stopMusic();tweeter("Vixen Sarmina");}
if(mob[Slot].name==="Sanctum Guardian Ghalentus"&&P.Q[x].PH13<1){P.Q[x].PH13=2;my.epicQuests++;stopMusic();}
if(P.Q[x].PH1>=4&&P.Q[x].PH2>=4&&P.Q[x].PH3>=4&&P.Q[x].PH4>=4&&P.Q[x].PH5>=4&&P.Q[x].PH6>=4&&P.Q[x].PH7>=5&&P.Q[x].PH8>=5&&P.Q[x].PH9>=5&&P.Q[x].PH10>=5&&P.Q[x].PH11>=5&&P.Q[x].PH12>=1&&P.Q[x].PH13>=1&&mob[Slot].name==="Sanctum Guardian Ghalentus"){playAudio("endquest");if(P.Q[x].PlaneofHate<2){P.Q[x].PlaneofHate=2;my.quests++;lore("By the Gods, you have done it! With Ghalentus out of the way, the portal has been left unguarded! Use your Idols of Chaos to cross over to Nimgaul, the astral plane of Chaos.");}else{P.Q[x].PlaneofHate++;}
QMsg("Quest Completed!");tweeter("Sanctum Guardian Ghalentus");return;}}}
if(mz==="Kordata Marshlands"){if(P.Q[x].UpperGuk<2){if(mob[Slot].name==="an anuran sur warrior"&&P.Q[x].UG1<9){P.Q[x].UG1++;QMsg(P.Q[x].UG1+"/9 anuran sur warriors slain");}
if(mob[Slot].name==="an anuran sur knight"&&P.Q[x].UG2<6){P.Q[x].UG2++;QMsg(P.Q[x].UG2+"/6 anuran sur knights slain");}
if(mob[Slot].name==="an anuran sur shaman"&&P.Q[x].UG3<6){P.Q[x].UG3++;QMsg(P.Q[x].UG3+"/6 anuran sur shamans slain");}
if(P.Q[x].UG1>=9&&P.Q[x].UG2>=6&&P.Q[x].UG3>=6){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].UpperGuk=2;P.Q[x].UG1=0;P.Q[x].UG2=0;P.Q[x].UG3=0;return;}}
if(P.Q[x].UpperGuk===2){if(mob[Slot].name==="a fungus breeder"&&P.Q[x].UG1<8){P.Q[x].UG1++;QMsg(P.Q[x].UG1+"/8 fungus breeders slain");}
if(mob[Slot].name==="an anuran tir shaman"&&P.Q[x].UG2<8){P.Q[x].UG2++;QMsg(P.Q[x].UG2+"/8 anuran tir shamans slain");}
if(mob[Slot].name==="an anuran priest"&&P.Q[x].UG3<6){P.Q[x].UG3++;QMsg(P.Q[x].UG3+"/6 anuran priests slain");}
if(P.Q[x].UG1>=8&&P.Q[x].UG2>=8&&P.Q[x].UG3>=6&&mob[Slot].name==="the anuran warden"){playAudio("endquest");QMsg("Quest Completed!");my.quests++;P.Q[x].UpperGuk=3;P.Q[x].UG1=0;P.Q[x].UG2=0;P.Q[x].UG3=0;return;}}
if(P.Q[x].UpperGuk===3){if(mob[Slot].name==="an anuran tonta knight"&&P.Q[x].UG1<12){P.Q[x].UG1++;QMsg(P.Q[x].UG1+"/12 anuran tonta knights slain");}
if(mob[Slot].name==="an anuran summoner"&&P.Q[x].UG2<8){P.Q[x].UG2++;QMsg(P.Q[x].UG2+"/8 anuran summoners slain");}
if(mob[Slot].name==="an anuran fal shaman"&&P.Q[x].UG3<8){P.Q[x].UG3++;QMsg(P.Q[x].UG3+"/8 anuran fal shamans slain");}
if(P.Q[x].UG1>=12&&P.Q[x].UG2>=8&&P.Q[x].UG3>=8&&mob[Slot].name==="Prince Kerpple"){playAudio("endquest");my.quests++;P.Q[x].UpperGuk=4;QMsg("Quest Completed!");setEquipValues();return;}}}}
function refreshMerchantItems(count){if(count===undefined){count=24;}
var diffBonus=0;if(g.difficulty===2){diffBonus=25;}else if(g.difficulty===3){diffBonus=44;}
var merchantMax=10;var z=myZone();if(z==="Aspen Grove"){merchantMax=25;}else if(z==="Artremia"){merchantMax=40;}else if(z==="Fenwoven"){merchantMax=55;}
merchantMax+=diffBonus;mob[0].level=merchantMax;var newItem=getItemSlot(merchantMax);var newTier=getItemTier(0);var foo=getArmor(0,newItem,newTier);var newArmor=foo[0];var newX=foo[1];var newY=foo[2];var newName=foo[3];var newDamage=foo[4];var newDelay=foo[5];var newType=foo[6];var newQuality=foo[7];var newRarity=1;if(M.random()*100>75){newRarity=2;}
if((count+1)>P.item.length){P.item[count]={};for(var x=0,len=g.key.length;x<len;x++){P.item[count][g.key[x]]=g.val[x];}}else{for(var x=0,len=g.key.length;x<len;x++){P.item[count][g.key[x]]=g.val[x];}}
P.item[count].rarity=newRarity;P.item[count].itemSlot=newItem;P.item[count].xPos=newX;P.item[count].yPos=newY;P.item[count].name=newName;P.item[count].armor=newArmor;P.item[count].damage=newDamage;P.item[count].delay=newDelay;P.item[count].type=newType;P.item[count].quality=newQuality;if(newRarity===2){var prefCount=M.ceil(M.random()*3);var sufCount=M.ceil(M.random()*3);if(prefCount===1&&sufCount===1){sufCount+=1;}
for(var i=1;i<=prefCount;i++){getItemPrefix(count,newItem,newType,0,newName);}
for(var i=1;i<=sufCount;i++){getItemSuffix(count,newItem,newType,0,newName);}
P.item[count].name=getRareName(newItem,newType,newName);}
if(newRarity===1){if(M.random()<=.5){getItemPrefix(count,newItem,newType,0,newName);if(M.random()>.5){getItemSuffix(count,newItem,newType,0,newName);}}else{getItemSuffix(count,newItem,newType,0,newName);if(M.random()<=.5){getItemPrefix(count,newItem,newType,0,newName);}}}
if(P.item[count].enhancedDamage){P.item[count].damage+=P.item[count].enhancedDamage;}
if(P.item[count].enhancedArmor){P.item[count].armor=P.item[count].armor+M.round(P.item[count].armor*(P.item[count].enhancedArmor/100));}
if(P.item[count].ias){P.item[count].delay=P.item[count].delay*(1-P.item[count].ias);P.item[count].delay=M.round(P.item[count].delay/100);P.item[count].delay*=100;P.item[count].ias=M.round(P.item[count].ias*100);}
updateCitySlot(count);if(count<=43){refreshMerchantItems(++count);}}
$("#cityWrap").on('click','#training',function(){cityMenuClick();var foo=$("#trainingOptions");if(foo.css("left")==="-700px"){foo.css("left",320);$("#trainOK").css("left",528);}}).on('click','.trainingButton',function(){function flashThis(that){if(cityToggleStatus===true){that.style.border="1px solid #f00";cityToggleStatus=false;}else{that.style.border="1px solid #600";cityToggleStatus=true;}
flashingCityBorder=T.delayedCall(.1,function(){flashThis(that)});}
var that=this;trainSkill=$(this).text();getTrainingCost();Chat(NPCname+' says, "Train '+trainSkill+' for '+cost+' gold?"');Chat2(NPCname+' says, "Train '+trainSkill+' for '+cost+' gold?"');var cityToggleStatus=true;flashingCityBorder.kill();$NG.trainingButton.css("border","1px solid #111");flashThis(that);});function getTrainingCost(){var X=trainSkill;if(X==="One-Hand Slashing"){cost=my.oneHandSlash;}
if(X==="Two-Hand Slashing"){cost=my.twoHandSlash;}
if(X==="One-Hand Blunt"){cost=my.oneHandBlunt;}
if(X==="Two-Hand Blunt"){cost=my.twoHandBlunt;}
if(X==="Piercing"){cost=my.piercing;}
if(X==="Hand to Hand"){cost=my.handtohand;}
if(X==="Offense"){cost=my.offense;}
if(X==="Dual Wield"){cost=my.dualWield;}
if(X==="Double Attack"){cost=my.doubleAttack;}
if(X==="Defense"){cost=my.defense;}
if(X==="Dodge"){cost=my.dodge;}
if(X==="Parry"){cost=my.parry;}
if(X==="Riposte"){cost=my.riposte;}
if(X==="Alteration"){cost=my.alteration;}
if(X==="Evocation"){cost=my.evocation;}
if(X==="Conjuration"){cost=my.conjuration;}
if(X==="Abjuration"){cost=my.abjuration;}
if(X==="Channeling"){cost=my.channeling;}
var kek=cost;cost=((cost*.7)+1);if(kek>50){cost=cost+(cost*.25);}
if(kek>100){cost=cost+(cost*.25);}
if(kek>150){cost=cost+(cost*.25);}
if(kek>200){cost=cost+(cost*.25);}
cost=~~cost;trainSkillCost=cost;}
function resetTalents(){for(var i=1;i<=12;i++){my['talent'+i]=0;}
if(my.job==="Wizard"){updateIcebolt();}
talentNotify();CStat();if(petName){slainPet();}
if(location.protocol==='http:'){save.my();}}
$("#cityWrap").on('click','#trainOK',function(){if(buttonLock===true){return;}
function fail(){Error("You don't have enough gold.");}
var X=trainSkill;if(X===""){Error("Select a skill to train first!");return;}
if(my.gold<trainSkillCost){fail();return;}
var foo;if(X==="One-Hand Slashing"){foo=levelUp1hs();}
if(X==="Two-Hand Slashing"){foo=levelUp2hs();}
if(X==="One-Hand Blunt"){foo=levelUp1hb();}
if(X==="Two-Hand Blunt"){foo=levelUp2hb();}
if(X==="Piercing"){foo=levelUpPierce();}
if(X==="Hand to Hand"){foo=levelUpH2h();}
if(X==="Offense"){foo=levelUpOffense();}
if(X==="Dual Wield"){foo=levelUpDualWield();}
if(X==="Double Attack"){foo=levelUpDoubleAttack();}
if(X==="Defense"){foo=levelUpDefense();}
if(X==="Dodge"){foo=levelUpDodge();}
if(X==="Parry"){foo=levelUpParry();}
if(X==="Riposte"){foo=levelUpRiposte();}
if(X==="Alteration"){foo=levelUpAlteration();}
if(X==="Evocation"){foo=levelUpEvocation();}
if(X==="Conjuration"){foo=levelUpConjuration();}
if(X==="Abjuration"){foo=levelUpAbjuration();}
if(X==="Channeling"){foo=levelUpChanneling();}
if(foo===false){Error("You cannot train that skill any higher right now.");return;}
function doit(){playAudio("buyitem");Chat(('You spent '+trainSkillCost+' gold to train '+X+'.'),5);my.gold-=trainSkillCost;$("#inventoryGoldAmount").text(my.gold);$("#cityGold").html("<div id='goldIcon' class='goldIcon'></div> "+my.gold);CStat();save.my();getTrainingCost();Chat(NPCname+' says, "Train '+X+' for '+cost+' gold?"');Chat2(NPCname+' says, "Train '+X+' for '+cost+' gold?"');}
if(location.protocol==='http:'){doit();}else{buttonLock=true;$.ajax({url:'php/town1.php',data:{run:"trainSkill",cost:trainSkillCost,name:my.name}}).done(function(data){doit();buttonLock=false;}).fail(function(){failToCommunicate();});}}).on('click','#upgrade',function(){$("#upgradeOK").text("Ok");$("#upgradeCANCEL").text("Cancel");cityMenuClick();resetTalentPrompt=false;upgradeMode=true;upgradePrompt=false;upgradePhysical=true;$("#upgradeConfirm").css("left",350);$("#upgradePrompt").html("Upgrade An Item");$("#upgradeConfirm2").html("Select an item in your inventory. Weapons, cloth armor, leather armor, chain armor, plate armor, off-hand items, and shields may be upgraded.");if(inventoryToggle==1){inventory();}}).on('click','#upgradeOK',function(){if(my.gold<cost){Error("You don't have enough gold.");cityMenuClick();return;}
if(resetTalentPrompt===true){function do1(){my.gold-=cost;Chat(NPCname+" resets your talents for "+cost+" gold.",5);D.getElementById('cityGold').innerHTML="<div id='goldIcon' class='goldIcon'></div> "+my.gold;$('#inventoryGoldAmount').text(my.gold);resetTalents();playAudio("buyitem");$("#upgradeConfirm").css("left",-700);save.my();}
if(location.protocol==='https:'){g.lockScreen();$.ajax({url:'php/town1.php',data:{run:"resetTalents",cost:cost,name:my.name}}).done(function(data){var a=data.split("|");if(a[0]==='ok'){do1();}
g.unlockScreen();}).fail(function(){failToCommunicate();});}else{do1();}
return;}
if(upgradePrompt){upgradePhysical=true;}
upgradeItem();}).on('click','#upgradeCANCEL',function(){if(upgradePrompt){if(my.gold<cost){Error("You don't have enough gold.");cityMenuClick();return;}
upgradePhysical=false;upgradeItem();return;}
cityMenuClick();upgradeMode=false;}).on('click','#merchant',function(){cityMenuClick();merchantMode=true;$("#merchantContainer").css("left",330);if(inventoryToggle==1){inventory();}}).on('click','#sellOK',function(){sellItem();}).on('click','#buyOK',function(){function do1(){buyMode=false;playAudio("buyitem");my.gold-=cost;D.getElementById('cityGold').innerHTML="<div id='goldIcon' class='goldIcon'></div> "+my.gold;$('#inventoryGoldAmount').text(my.gold);var baz=logItemName(P.item[dragSlot].name,P.item[dragSlot].rarity);Chat(('You purchased '+baz+' for '+cost+' gold.'),5);for(var x in P.item[dragSlot]){P.item[dropSlot][x]=P.item[dragSlot][x];}
updateInvDrop(dropSlot);P.item[dragSlot].name="";P.item[dragSlot].xPos=0;P.item[dragSlot].yPos=0;updateCitySlot(dragSlot);cancelDragging();buyMode=false;save.item(dropSlot);}
if(buyMode){dropSlot=findFirstInvSlot();if(dropSlot===false){Error("There is no room in your inventory.");return;}
if(cost>my.gold){Error("You don't have enough gold.");return;}
if(P.item[dragSlot].name){if(location.protocol==='https:'){$.ajax({url:'php/town1.php',data:{run:"buyItem",cost:cost,name:my.name}}).done(function(data){do1();});}else{do1();}}}else{Error("You must select an item to buy first.");}});function upgradeItem(){var X=P.item[dragSlot];function completeUpgrade(){$("#campId").css("display","block");var bar=X.upgrade;var up1h=0;var up2h=0;var upRes=0;var upArm=0;var zag=true;if(bar===0){up1h=1;up2h=2;upRes=1;upArm=3;}
if(bar===1){up1h=1;up2h=2;upRes=1;upArm=3;}
if(bar===2){up1h=1;up2h=2;upRes=1;upArm=3;}
if(bar===3){up1h=1;up2h=2;upRes=1;upArm=3;}
if(bar===4){up1h=1;up2h=2;upRes=1;upArm=4;}
if(bar===5){up1h=1;up2h=2;upRes=1;upArm=4;}
if(bar===6){up1h=2;up2h=4;upRes=2;upArm=6;}
if(bar===7){up1h=2;up2h=4;upRes=2;upArm=6;}
if(bar===8){up1h=2;up2h=4;upRes=2;upArm=8;}
if(bar===9){up1h=3;up2h=6;upRes=3;upArm=10;}
var baz=logItemName(X.name,X.rarity);function upgradeSuccess(){my.gold-=cost;D.getElementById('cityGold').innerHTML="<div id='goldIcon' class='goldIcon'></div> "+my.gold;$('#inventoryGoldAmount').text(my.gold);if(zag===true){g.unlockScreen();playAudio("upgrade");P.item[dragSlot].upgrade+=1;if(upgradePhysical){if(X.type==="slashed"||X.type==="crushed"||X.type==="pierced"||X.type==="offhand"){P.item[dragSlot].enhancePhysical=parseInt(X.enhancePhysical+up1h);Chat(NPCname+' says, "Success! '+baz+' has been upgraded with +'+up1h+'% physical damage!"');}
if(X.type==="cleaved"||X.type==="smashed"||X.type==="staff"){P.item[dragSlot].enhancePhysical=parseInt(X.enhancePhysical+up2h);Chat(NPCname+' says, "Success! '+baz+' has been upgraded with +'+up2h+'% physical damage!"');}}else{if(X.enhanceAll===undefined||isNaN(X.enhanceAll)){P.item[dragSlot].enhanceAll=0;}
if(X.type==="slashed"||X.type==="crushed"||X.type==="pierced"||X.type==="offhand"){P.item[dragSlot].enhanceAll=parseInt(X.enhanceAll+up1h);Chat(NPCname+' says, "Success! '+baz+' has been upgraded with +'+up1h+'% magical damage!"');}
if(X.type==="cleaved"||X.type==="smashed"||X.type==="staff"){P.item[dragSlot].enhanceAll=parseInt(X.enhanceAll+up2h);Chat(NPCname+' says, "Success! '+baz+' has been upgraded with +'+up2h+'% magical damage!"');}}
if(X.type==="cloth"||X.type==="leather"||X.type==="chain"||X.type==="plate"||X.type==="shield"){P.item[dragSlot].allResist+=upRes;var lel=M.round(X.armor*(upArm/100));if(lel<1){lel=1;}
P.item[dragSlot].armor+=lel;Chat(NPCname+' says, "Success! I upgraded '+baz+' with +'+lel+' armor and +'+upRes+' all resistances!"');}
my.upgrades+=1;zoo.stop(true,true).css({display:"none",top:y1,left:x1});$("#blackOverlay").css("display","none");upgradeMsgUpdate();upgradePrompt=false;upgradePhysical=true;}
save.item(dragSlot);save.my();}
if(location.protocol==='https:'){$.ajax({url:'php/town1.php',data:{run:"buyUpgrade",cost:cost,name:my.name}}).done(function(data){upgradeSuccess();});}else{upgradeSuccess();}
CStat();$("#upgradeOK").text("Ok");$("#upgradeCANCEL").text("Cancel");}
if(!itemUpgradeMode){Error("You must select an item to upgrade first.");return;}
if(X.upgrade>=10){Error("That item cannot be upgraded anymore.");cityMenuClick();return;}
if(my.gold<cost){Error("You don't have enough gold.");return;}
if($("#upgradeOK").text()==="Ok"&&(X.type==="slashed"||X.type==="crushed"||X.type==="pierced"||X.type==="cleaved"||X.type==="smashed"||X.type==="offhand"||X.type==="staff")){upgradePrompt=true;$("#upgradeOK").text("Physical");$("#upgradeCANCEL").text("Magical");$("#upgradeConfirm2").html("Upgrade this weapon with physical or magical damage?");return;}
if(X.type==="cloth"||X.type==="leather"||X.type==="chain"||X.type==="plate"||X.type==="slashed"||X.type==="crushed"||X.type==="pierced"||X.type==="cleaved"||X.type==="smashed"||X.type==="shield"||X.type==="offhand"||X.type==="staff"){var xi=("You spent "+cost+" gold upgrading ").fontcolor("#00aa00");Chat(xi+logItemName(X.name,X.rarity)+".");$("#campId").css("display","none");g.lockScreen();var foo=$("#upgradeBar");foo.width(0);var x1=486;var y1=430;var zoo=$("#upgradeWrap");zoo.stop(true,true).css("display","block");var duration=2000;function doit(kek){if(kek>(duration-500)){return;}
var zod=M.random();if(zod>.66){playAudio("repair");}else if(zod<.33){playAudio("shldblk");}else{playAudio("bashshld");}
var qux=M.random()*(200)+(500-(X.upgrade*50));kek+=qux;T.to(zoo,.1,{top:(y1+M.random()*(4)+2),left:(x1+M.random()*(6)-3),onComplete:function(){T.to(zoo,.1,{top:y1,left:x1});}});T.delayedCall(qux/1000,function(){doit(kek);});}
doit(0);T.to(foo,2,{width:300,onComplete:function(){completeUpgrade();}});}else{Error("That type of item cannot be upgraded.");cityMenuClick();upgradePrompt=false;upgradePhysical=true;}}
function sellItem(){var x=$("#"+dragID);if(buyMode){Error("You can't sell the merchant's items.");return;}
var z=P.item[dragSlot];if(z.name===''){cancelDragging();return;}
if(dragStatus===false){Error("You must select an item to sell first.");}else{if(x.hasClass("bank")===true){Error("You cannot sell items from your bank.");return;}
if(x.hasClass("equipment")===true){Error("You cannot sell items that you are wearing.");return;}
if(x.hasClass("inventory")===true){function writeGold(){my.gold+=kek;if(my.gold>999999999){my.gold=999999999;}
$('#cityGold').html("<div id='goldIcon' class='goldIcon'></div> "+my.gold);$('#inventoryGoldAmount').text(my.gold);CStat();}
var kek=itemSellValue(dragSlot);playAudio("buyitem");var baz=logItemName(z.name,z.rarity);Chat(('You sold '+baz+' for '+kek+' gold.'),5);if(location.protocol==='https:'){$.ajax({url:'php/town1.php',data:{run:"sellItem",cost:kek,name:my.name}}).done(function(data){writeGold();});}else{writeGold();}
cancelDragging();for(var x=0,len=g.key.length;x<len;x++){z[g.key[x]]=g.val[x];}
updateInvDrag(dragSlot);save.item(dragSlot);NG.ttItem.style.display='none';}}}
function itemSellValue(z){if(buyMode||z>23){var foo=15;}else{var foo=5;}
if(P.item[z].enhancedDamage){foo+=P.item[z].enhancedDamage;}
if(P.item[z].ias){foo+=P.item[z].ias;}
if(P.item[z].armor){foo+=P.item[z].armor*15;}
if(P.item[z].itemSlot==="ring"||P.item[z].itemSlot==="amulet"){foo+=100;}
if(P.item[z].damage&&(P.item[z].type==="slashed"||P.item[z].type==="pierced"||P.item[z].type==="crushed")){foo+=P.item[z].damage*110;}
if(P.item[z].damage&&(P.item[z].type==="cleaved"||P.item[z].type==="smashed"||P.item[z].type==="staff"||P.item[z].itemSlot==="range"||P.item[z].type==="offhand")){foo+=P.item[z].damage*55;}
if(P.item[z].weight){foo+=50;}
if(P.item[z].hp){foo+=P.item[z].hp*15;}
if(P.item[z].mp){foo+=P.item[z].mp*15;}
if(P.item[z].str){foo+=P.item[z].str*15;}
if(P.item[z].sta){foo+=P.item[z].sta*15;}
if(P.item[z].agi){foo+=P.item[z].agi*15;}
if(P.item[z].dez){foo+=P.item[z].dez*15;}
if(P.item[z].intel){foo+=P.item[z].intel*15;}
if(P.item[z].wis){foo+=P.item[z].wis*15;}
if(P.item[z].cha){foo+=P.item[z].cha*15;}
if(P.item[z].allStats){foo+=P.item[z].allStats*300;}
if(P.item[z].hpRegen){foo+=P.item[z].hpRegen*25;}
if(P.item[z].mpRegen){foo+=P.item[z].mpRegen*25;}
if(P.item[z].attack){foo+=P.item[z].attack*40;}
if(P.item[z].oneHandSlash){foo+=P.item[z].oneHandSlash*50;}
if(P.item[z].twoHandSlash){foo+=P.item[z].twoHandSlash*50;}
if(P.item[z].oneHandBlunt){foo+=P.item[z].oneHandBlunt*50;}
if(P.item[z].twoHandBlunt){foo+=P.item[z].twoHandBlunt*50;}
if(P.item[z].piercing){foo+=P.item[z].piercing*50;}
if(P.item[z].handtohand){foo+=P.item[z].handtohand*50;}
if(P.item[z].offense){foo+=P.item[z].offense*50;}
if(P.item[z].dualWield){foo+=P.item[z].dualWield*50;}
if(P.item[z].doubleAttack){foo+=P.item[z].doubleAttack*50;}
if(P.item[z].defense){foo+=P.item[z].defense*50;}
if(P.item[z].dodge){foo+=P.item[z].dodge*50;}
if(P.item[z].parry){foo+=P.item[z].parry*50;}
if(P.item[z].riposte){foo+=P.item[z].riposte*50;}
if(P.item[z].alteration){foo+=P.item[z].alteration*50;}
if(P.item[z].evocation){foo+=P.item[z].evocation*50;}
if(P.item[z].conjuration){foo+=P.item[z].conjuration*50;}
if(P.item[z].abjuration){foo+=P.item[z].abjuration*50;}
if(P.item[z].channeling){foo+=P.item[z].channeling*50;}
if(P.item[z].allSkills){foo+=P.item[z].allSkills*1000;}
if(P.item[z].critChance){foo+=P.item[z].critChance*200;}
if(P.item[z].critDamage){foo+=P.item[z].critDamage*100;}
if(P.item[z].phyMit){foo+=P.item[z].phyMit*10;}
if(P.item[z].magMit){foo+=P.item[z].magMit*10;}
if(P.item[z].resistPoison){foo+=P.item[z].resistPoison*20;}
if(P.item[z].resistMagic){foo+=P.item[z].resistMagic*20;}
if(P.item[z].resistLightning){foo+=P.item[z].resistLightning*20;}
if(P.item[z].resistCold){foo+=P.item[z].resistCold*20;}
if(P.item[z].resistFire){foo+=P.item[z].resistFire*20;}
if(P.item[z].allResist){foo+=P.item[z].allResist*300;}
if(P.item[z].goldFind){foo+=P.item[z].goldFind*10;}
if(P.item[z].expFind){foo+=P.item[z].expFind*10;}
if(P.item[z].thorns){foo+=P.item[z].thorns*10;}
if(P.item[z].absorbPoison){foo+=P.item[z].absorbPoison*50;}
if(P.item[z].absorbMagic){foo+=P.item[z].absorbMagic*50;}
if(P.item[z].absorbLightning){foo+=P.item[z].absorbLightning*50;}
if(P.item[z].absorbCold){foo+=P.item[z].absorbCold*50;}
if(P.item[z].absorbFire){foo+=P.item[z].absorbFire*50;}
if(P.item[z].hpKill){foo+=P.item[z].hpKill*10;}
if(P.item[z].mpKill){foo+=P.item[z].mpKill*10;}
if(P.item[z].physicalDamage){foo+=P.item[z].physicalDamage*10;}
if(P.item[z].poisonDamage){foo+=P.item[z].poisonDamage*10;}
if(P.item[z].magicDamage){foo+=P.item[z].magicDamage*10;}
if(P.item[z].lightningDamage){foo+=P.item[z].lightningDamage*10;}
if(P.item[z].coldDamage){foo+=P.item[z].coldDamage*10;}
if(P.item[z].fireDamage){foo+=P.item[z].fireDamage*10;}
if(P.item[z].enhancePhysical){foo+=P.item[z].enhancePhysical*100;}
if(P.item[z].enhancePoison){foo+=P.item[z].enhancePoison*200;}
if(P.item[z].enhanceMagic){foo+=P.item[z].enhanceMagic*200;}
if(P.item[z].enhanceLightning){foo+=P.item[z].enhanceLightning*200;}
if(P.item[z].enhanceCold){foo+=P.item[z].enhanceCold*200;}
if(P.item[z].enhanceFire){foo+=P.item[z].enhanceFire*200;}
if(P.item[z].enhanceAll){foo+=P.item[z].enhanceAll*100;}
if(P.item[z].lightRadius){foo+=P.item[z].lightRadius*5;}
if(P.item[z].fear){foo+=P.item[z].fear*10;}
if(P.item[z].stun){foo+=P.item[z].stun*10;}
if(P.item[z].cold){foo+=P.item[z].cold*10;}
if(P.item[z].silence){foo+=P.item[z].silence*10;}
if(P.item[z].leech){foo+=P.item[z].leech*50;}
if(P.item[z].wraith){foo+=P.item[z].wraith*50;}
if(P.item[z].runSpeed){foo+=P.item[z].runSpeed;}
if(P.item[z].haste){var bar=(P.item[z].haste/10)*-1;foo+=bar*100;}
if(P.item[z].globalHaste){var bar=(P.item[z].globalHaste/10)*-1;foo+=bar*100;}
if(P.item[z].castingHaste){var bar=(P.item[z].castingHaste/10)*-1;foo+=bar*100;}
if(P.item[z].proc){foo+=200;}
var zog=chaTotal();if(z>23){foo=M.round(foo-(foo*(zog/1600)));}
if(z<=23){if(P.item[z].rarity===3){foo=(foo/4);}
foo=(foo/8);foo=M.round(foo+(foo*(zog/1600)));if(foo>(250+(my.level*15))){foo=(250+(my.level*15));}}
return M.ceil(foo/4);}
$("#cityWrap").on('click','#exitCity',function(){cityMenuClick();Chat(NPCname+' says, "Thank you for stopping by, '+my.name+'. Be sure to check our wares after our next shipment arrives.');$("#cityWindow").css("left",-700);});$("#cityWrap").on('click','#cityNPC',function(){cityMenuClick();Chat(NPCname+' says, "Hello, '+my.name+'. How can I help you?"');$("#cityWindow").css("left",10);});function setAbsorbAll(NI,x){P.item[NI].absorbPoison=x;P.item[NI].absorbMagic=x;P.item[NI].absorbLightning=x;P.item[NI].absorbCold=x;P.item[NI].absorbFire=x;}
function setAllResists(NI,pr,mr,lr,cr,fr){P.item[NI].resistPoison=pr;P.item[NI].resistMagic=mr;P.item[NI].resistLightning=lr;P.item[NI].resistCold=cr;P.item[NI].resistFire=fr;}
function setAllStatus(NI,sr,fr,cr,sr){P.item[NI].stun=sr;P.item[NI].fear=fr;P.item[NI].cold=cr;P.item[NI].silence=sr;}
function getItemSlot(lvl){var x=M.random()*100;var foo="shoulders";if(foo==="shoulders"&&lvl<10&&x<7){x=M.random()*(86)+14;}
if(x>=7&&x<14){foo="helmet";}
if(foo==="helmet"&&lvl<15){x=M.random()*(86)+14;}
if(x>=14&&x<17){foo="neck";}
if(x>=17&&x<22){foo="ring";}
if(x>=22&&x<29){foo="back";}
if(x>=29&&x<36){foo="chest";}
if(x>=36&&x<43){foo="bracers";}
if(x>=43&&x<50){foo="gloves";}
if(x>=50&&x<57){foo="belt";}
if(x>=57&&x<64){foo="legs";}
if(x>=64&&x<71){foo="boots";}
if(x>=71&&x<88){foo="weapons";}
if(x>=88&&x<96){foo="shield";}
if(x>=96){foo="range";}
return foo;}
function getItemTier(Slot){var minBump=M.random()*(.33)+M.random()*(.33)+M.random()*(.33);var d=diff();var x=mob[Slot].level;if(d===0){if(x>55){x=55;}}else if(d===1){if(x>80){x=80;}}else if(d===2){if(x>99){x=99;}}
var min=x*minBump;if(min<1){min=1;}
var range=mob[Slot].level-min;var foo=M.ceil(M.random()*range+min);if(foo>99){foo=99;}
if(foo<1){foo=1;}
return foo;}
function getArmor(Slot,newItem,newTier){var foo=0;var xPos=0;var yPos=0;var name="";var damage=0;var delay=0;var type="";var quality=0;var N=newTier;var qux=~~(M.random()*4)+1;if(newItem==="helmet"){xPos=-64;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){type="cloth";if(qux==1){foo=2;yPos=0;name="Hood";}
if(qux==2){foo=5;yPos=-64;name="Cap";}
if(qux==3){foo=8;yPos=-128;name="Bandana";}
if(qux==4){foo=12;yPos=-192;name="Diadem";}
if(N>=49&&N<=76){quality=1;foo+=12;}
if(N>=77){quality=2;foo+=24;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){type="cloth";if(qux==1){foo=8;yPos=-256;name="Dark Hood";}
if(qux==2){foo=9;yPos=-320;name="Coronet";}
if(qux==3){foo=10;yPos=-384;name="Miter";}
if(qux==4){foo=12;yPos=-448;name="Astral Hood";}
if(N>=49&&N<=76){quality=1;foo+=12;}
if(N>=77){quality=2;foo+=24;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){type="chain";if(qux==1){foo=16;yPos=-512;name="Mail Hood";}
if(qux==2){foo=20;yPos=-576;name="Coif";}
if(qux==3){foo=22;yPos=-640;name="Armet";}
if(qux==4){foo=24;yPos=-704;name="Sallet";}
if(N>=49&&N<=76){quality=1;foo+=24;}
if(N>=77){quality=2;foo+=48;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){type="plate";if(qux==1){foo=24;yPos=-768;name="Burgonet";}
if(qux==2){foo=26;yPos=-832;name="Great Helm";}
if(qux==3){foo=28;yPos=-896;name="Barbute";}
if(qux==4){foo=30;yPos=-960;name="Royal Helm";}
if(N>=49&&N<=76){quality=1;foo+=30;}
if(N>=77){quality=2;foo+=60;}}}
if(newItem==="neck"){xPos=0;name="Amulet";var x=~~(1+M.random()*(5));if(x===1){yPos=-64;}
if(x===2){yPos=-128;}
if(x===3){yPos=-192;}
if(x===4){yPos=-256;}
if(x===5){yPos=-320;}
if(N>=49&&N<=76){quality=1;}
if(N>=77){quality=2;}}
if(newItem==="ring"){xPos=0;name="Ring";var x=~~(1+M.random()*(4));if(x===1){yPos=-384;}
if(x===2){yPos=-448;}
if(x===3){yPos=-512;}
if(x===4){yPos=-576;}
if(N>=49&&N<=76){quality=1;}
if(N>=77){quality=2;}}
if(newItem==="shoulders"){xPos=-128;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux==1){foo=2;yPos=0;name="Cloth Drape";}
if(qux==2){foo=7;yPos=-256;name="Leather Shoulders";}
if(qux==3){foo=9;yPos=-512;name="Scaled Mantle";}
if(qux==4){foo=12;yPos=-768;name="Cobalt Spaulders";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux==1){foo=4;yPos=-64;name="Woven Drape";}
if(qux==2){foo=10;yPos=-320;name="Studded Shoulders";}
if(qux==3){foo=12;yPos=-576;name="Chain Mantle";}
if(qux==4){foo=16;yPos=-832;name="Mithril Pauldrons";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux==1){foo=7;yPos=-128;name="Azure Shawl";}
if(qux==2){foo=12;yPos=-384;name="Spiked Shoulders";}
if(qux==3){foo=16;yPos=-640;name="Kusari Mantle";}
if(qux==4){foo=20;yPos=-896;name="Sode";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux==1){foo=10;yPos=-192;name="Archon Shawl";}
if(qux==2){foo=16;yPos=-448;name="Brigand Shoulders";}
if(qux==3){foo=20;yPos=-704;name="Laminar Mantle";}
if(qux==4){foo=24;yPos=-960;name="Monarch Pauldrons";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=10;}
if(N>=77){quality=2;foo+=20;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=16;}
if(N>=77){quality=2;foo+=32;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=25;}
if(N>=77){quality=2;foo+=50;}}}
if(newItem==="back"){xPos=-192;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1){foo=1;yPos=0;name="Cape";}
if(qux===2){foo=2;yPos=-64;name="Cloak";}
if(qux===3){foo=3;yPos=-128;name="Woven Cloak";}
if(qux===4){foo=4;yPos=-192;name="Fur-Lined Cloak";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1){foo=4;yPos=-256;name="Drake-hide Cloak";}
if(qux===2){foo=5;yPos=-320;name="Brigand's Shroud";}
if(qux===3){foo=5;yPos=-384;name="Regal Shroud";}
if(qux===4){foo=5;yPos=-448;name="Orcish Cloak";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1){foo=6;yPos=-512;name="Elven Shroud";}
if(qux===2){foo=7;yPos=-576;name="Emerald Cloak";}
if(qux===3){foo=7;yPos=-640;name="Aviak Cloak";}
if(qux===4){foo=8;yPos=-704;name="Chlamys";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1){foo=8;yPos=-768;name="Dragon Cape";}
if(qux===2){foo=9;yPos=-832;name="Umbral Shroud";}
if(qux===3){foo=9;yPos=-896;name="Archon Cloak";}
if(qux===4){foo=10;yPos=-960;name="Astral Cloak";}}
if(qux===1){if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}
if(qux===2){if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}
if(qux===3){if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}
if(qux===4){if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}}
if(newItem==="chest"){xPos=-256;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux==1){foo=4;yPos=0;name="Elven Robe";}
if(qux==2){foo=11;yPos=-256;name="Quilted Tunic";}
if(qux==3){foo=14;yPos=-512;name="Chain Mail";}
if(qux==4){foo=16;yPos=-768;name="Breast Plate";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux==1){foo=7;yPos=-64;name="Silk Robe";}
if(qux==2){foo=16;yPos=-320;name="Spiked Vestment";}
if(qux==3){foo=20;yPos=-576;name="Ring Mail";}
if(qux==4){foo=24;yPos=-832;name="Cuirass";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux==1){foo=11;yPos=-128;name="Linen Robe";}
if(qux==2){foo=20;yPos=-384;name="Leather Armor";}
if(qux==3){foo=24;yPos=-640;name="Scale Mail";}
if(qux==4){foo=30;yPos=-896;name="Gothic Plate";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux==1){foo=14;yPos=-192;name="Azure Robe";}
if(qux==2){foo=24;yPos=-448;name="Studded Leather";}
if(qux==3){foo=30;yPos=-704;name="Kusari Mail";}
if(qux==4){foo=38;yPos=-960;name="Archon Plate";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=24;}
if(N>=77){quality=2;foo+=48;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=31;}
if(N>=77){quality=2;foo+=62;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=38;}
if(N>=77){quality=2;foo+=76;}}}
if(newItem==="bracers"){xPos=-320;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux==1){foo=3;yPos=0;name="Jade Bracers";}
if(qux==2){foo=8;yPos=-256;name="Leather Bracers";}
if(qux==3){foo=10;yPos=-512;name="Scaled Bracers";}
if(qux==4){foo=12;yPos=-768;name="Bronze Bracers";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux==1){foo=4;yPos=-64;name="Bone Bracers";}
if(qux==2){foo=10;yPos=-320;name="Patent Bracers";}
if(qux==3){foo=12;yPos=-576;name="Laminar Bracers";}
if(qux==4){foo=16;yPos=-832;name="Cobalt Bracers";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux==1){foo=7;yPos=-128;name="Sapphire Bracers";}
if(qux==2){foo=12;yPos=-384;name="Bonded Bracers";}
if(qux==3){foo=16;yPos=-640;name="Splinted Bracers";}
if(qux==4){foo=20;yPos=-896;name="Tetrarch Bracers";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux==1){foo=10;yPos=-192;name="Opulent Bracers";}
if(qux==2){foo=16;yPos=-448;name="Elven Bracers";}
if(qux==3){foo=20;yPos=-704;name="Kusari Bracers";}
if(qux==4){foo=24;yPos=-960;name="Gilded Bracers";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=10;}
if(N>=77){quality=2;foo+=20;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=16;}
if(N>=77){quality=2;foo+=32;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=25;}
if(N>=77){quality=2;foo+=50;}}}
if(newItem==="gloves"){xPos=-384;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux==1){foo=3;yPos=0;name="Gloves";}
if(qux==2){foo=8;yPos=-256;name="Rawhide Gloves";}
if(qux==3){foo=10;yPos=-512;name="Lamellar Gauntlets";}
if(qux==4){foo=12;yPos=-768;name="Cobalt Gauntlets";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux==1){foo=5;yPos=-64;name="Cloth Gloves";}
if(qux==2){foo=10;yPos=-320;name="Drakescale Gloves";}
if(qux==3){foo=12;yPos=-576;name="Banded Gauntlets";}
if(qux==4){foo=16;yPos=-832;name="Ornate Gauntlets";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux==1){foo=8;yPos=-128;name="Woven Gloves";}
if(qux==2){foo=12;yPos=-384;name="Sharkskin Gloves";}
if(qux==3){foo=16;yPos=-640;name="Kusari Gauntlets";}
if(qux==4){foo=20;yPos=-896;name="Tetrarch Gauntlets";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux==1){foo=10;yPos=-192;name="Mesh Gloves";}
if(qux==2){foo=16;yPos=-448;name="Studded Gloves";}
if(qux==3){foo=20;yPos=-704;name="Brigandine Gauntlets";}
if(qux==4){foo=24;yPos=-960;name="Gilded Gauntlets";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=10;}
if(N>=77){quality=2;foo+=20;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=16;}
if(N>=77){quality=2;foo+=32;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=25;}
if(N>=77){quality=2;foo+=50;}}}
if(newItem==="belt"){xPos=-448;if(N<=24||(N>=49&&N<=62)||(N>=77&&N<=88)){if(qux==1){foo=2;yPos=0;name="Sash";}
if(qux==2){foo=7;yPos=-128;name="Leather Belt";}
if(qux==3){foo=10;yPos=-256;name="Mesh Belt";}
if(qux==4){foo=12;yPos=-384;name="Monarch Girdle";}}
if((N>24&&N<=48)||(N>=63&&N<=76)||N>=89){if(qux==1){foo=7;yPos=-64;name="Azure Sash";}
if(qux==2){foo=12;yPos=-192;name="Heavy Belt";}
if(qux==3){foo=16;yPos=-320;name="Splinted Belt";}
if(qux==4){foo=20;yPos=-448;name="Mithril Girdle";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=8;}
if(N>=77){quality=2;foo+=16;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=12;}
if(N>=77){quality=2;foo+=24;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=16;}
if(N>=77){quality=2;foo+=32;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}}
if(newItem==="legs"){xPos=-512;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux==1){foo=2;yPos=0;name="Pants";}
if(qux==2){foo=8;yPos=-256;name="Fur Pants";}
if(qux==3){foo=10;yPos=-512;name="Scaled Legs";}
if(qux==4){foo=14;yPos=-768;name="Cobalt Legplates";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux==1){foo=5;yPos=-64;name="Cotton Pants";}
if(qux==2){foo=12;yPos=-320;name="Wolf-Hide Pants ";}
if(qux==3){foo=14;yPos=-576;name="Chausses";}
if(qux==4){foo=11;yPos=-832;name="Iron Legplates";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux==1){foo=9;yPos=-128;name="Linen Pants";}
if(qux==2){foo=16;yPos=-384;name="Sharkskin Legs";}
if(qux==3){foo=20;yPos=-640;name="Kusazuri";}
if(qux==4){foo=24;yPos=-896;name="Mithril Legplates";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux==1){foo=12;yPos=-192;name="Silk Leggings";}
if(qux==2){foo=20;yPos=-448;name="Studded Legs";}
if(qux==3){foo=24;yPos=-704;name="Poleyn";}
if(qux==4){foo=28;yPos=-960;name="Royal Legplates";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=12;}
if(N>=77){quality=2;foo+=24;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=24;}
if(N>=77){quality=2;foo+=48;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=30;}
if(N>=77){quality=2;foo+=60;}}}
if(newItem==="boots"){xPos=-448;if(N<=24||(N>=49&&N<=62)||(N>=77&&N<=88)){if(qux==1){foo=3;yPos=-512;name="Boots";}
if(qux==2){foo=9;yPos=-640;name="Heavy Boots";}
if(qux==3){foo=11;yPos=-768;name="Chain Boots";}
if(qux==4){foo=14;yPos=-896;name="Steel Boots";}}
if((N>24&&N<=48)||(N>=63&&N<=76)||N>=89){if(qux==1){foo=9;yPos=-576;name="Light Boots";}
if(qux==2){foo=15;yPos=-704;name="Sharkskin Boots";}
if(qux==3){foo=19;yPos=-832;name="Sovereign Boots";}
if(qux==4){foo=24;yPos=-960;name="Sabatons";}}
if(qux===1){type="cloth";if(N>=49&&N<=76){quality=1;foo+=10;}
if(N>=77){quality=2;foo+=20;}}
if(qux===2){type="leather";if(N>=49&&N<=76){quality=1;foo+=16;}
if(N>=77){quality=2;foo+=32;}}
if(qux===3){type="chain";if(N>=49&&N<=76){quality=1;foo+=20;}
if(N>=77){quality=2;foo+=40;}}
if(qux===4){type="plate";if(N>=49&&N<=76){quality=1;foo+=25;}
if(N>=77){quality=2;foo+=50;}}}
if(newItem==="weapons"){var ber=M.random();if(ber<.25){xPos=-576;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=0;name="Sword";damage=3;delay=3300;}
if(qux===3||qux===4){yPos=-64;name="Scimitar";damage=3;delay=3000;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=10;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-128;name="Axe";damage=4;delay=3600;}
if(qux===3||qux===4){yPos=-192;name="Claws";damage=4;delay=3200;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=10;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-256;name="Long Sword";damage=5;delay=3500;}
if(qux===3||qux===4){yPos=-320;name="Chokuto";damage=6;delay=3600;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=10;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-384;name="War Axe";damage=7;delay=3500;}
if(qux===3||qux===4){yPos=-448;name="Kusanagi";damage=8;delay=3200;}
if(N>=49&&N<=76){quality=1;damage+=4;}
if(N>=77){quality=2;damage+=8;}}
type="slashed";}
if(ber>=.25&&ber<.5){xPos=-640;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=0;name="Mace";damage=4;delay=4200;}
if(qux===3||qux===4){yPos=-64;name="Club";damage=4;delay=3800;}
if(N>=49&&N<=76){quality=1;damage+=6;}
if(N>=77){quality=2;damage+=12;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-128;name="Morning Star";damage=5;delay=4200;}
if(qux===3||qux===4){yPos=-192;name="Spiked Club";damage=5;delay=3800;}
if(N>=49&&N<=76){quality=1;damage+=6;}
if(N>=77){quality=2;damage+=12;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-256;name="Jagged Star";damage=6;delay=4000;}
if(qux===3||qux===4){yPos=-320;name="Scepter";damage=7;delay=4100;}
if(N>=49&&N<=76){quality=1;damage+=6;}
if(N>=77){quality=2;damage+=12;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-384;name="Cudgel";damage=8;delay=3900;}
if(qux===3||qux===4){yPos=-448;name="Caduceus";damage=9;delay=3500;}
if(N>=49&&N<=76){quality=1;damage+=4;}
if(N>=77){quality=2;damage+=9;}}
type="crushed";}
if(ber>=.5&&ber<.75){xPos=-704;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=0;name="Dagger";damage=2;delay=2400;}
if(qux===3||qux===4){yPos=-64;name="Dirk";damage=3;delay=3100;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=8;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-128;name="Kris";damage=3;delay=2800;}
if(qux===3||qux===4){yPos=-192;name="Poignard";damage=3;delay=2500;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=8;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-256;name="Rondel";damage=4;delay=2900;}
if(qux===3||qux===4){yPos=-320;name="Spear";damage=4;delay=2600;}
if(N>=49&&N<=76){quality=1;damage+=5;}
if(N>=77){quality=2;damage+=10;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-384;name="Cinquedeas";damage=5;delay=2600;}
if(qux===3||qux===4){yPos=-448;name="Stiletto";damage=6;delay=2500;}
if(N>=49&&N<=76){quality=1;damage+=3;}
if(N>=77){quality=2;damage+=7;}}
type="pierced";}
if(ber>=.75&&ber<.85){xPos=-576;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=-512;name="Giant Sword";damage=5;delay=4200;}
if(qux===3||qux===4){yPos=-576;name="Giant Axe";damage=6;delay=4400;}
if(N>=49&&N<=76){quality=1;damage+=12;}
if(N>=77){quality=2;damage+=24;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-640;name="Champion Sword";damage=7;delay=4400;}
if(qux===3||qux===4){yPos=-704;name="Bastard Sword";damage=8;delay=4200;}
if(N>=49&&N<=76){quality=1;damage+=13;}
if(N>=77){quality=2;damage+=26;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-768;name="Gothic Axe";damage=10;delay=4200;}
if(qux===3||qux===4){yPos=-832;name="Katana";damage=11;delay=4000;}
if(N>=49&&N<=76){quality=1;damage+=13;}
if(N>=77){quality=2;damage+=26;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-896;name="Colossus Sword";damage=13;delay=4100;}
if(qux===3||qux===4){yPos=-960;name="Mythical Sword";damage=16;delay=4200;}
if(N>=49&&N<=76){quality=1;damage+=12;}
if(N>=77){quality=2;damage+=26;}}
type="cleaved";}
if(ber>=.85){if(M.random()<.65){xPos=-640;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=-512;name="Giant Mace";damage=6;delay=4800;}
if(qux===3||qux===4){yPos=-576;name="Auric Maul";damage=7;delay=4900;}
if(N>=49&&N<=76){quality=1;damage+=15;}
if(N>=77){quality=2;damage+=30;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-640;name="Mallet";damage=8;delay=4800;}
if(qux===3||qux===4){yPos=-704;name="Ogre Maul";damage=9;delay=4500;}
if(N>=49&&N<=76){quality=1;damage+=15;}
if(N>=77){quality=2;damage+=30;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-768;name="Great Maul";damage=11;delay=4400;}
if(qux===3||qux===4){yPos=-832;name="Sledgehammer";damage=13;delay=4600;}
if(N>=49&&N<=76){quality=1;damage+=14;}
if(N>=77){quality=2;damage+=30;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-896;name="Umbral Hammer";damage=15;delay=4500;}
if(qux===3||qux===4){yPos=-960;name="Thunder Maul";damage=11;delay=4500;}
if(N>=49&&N<=76){quality=1;damage+=13;}
if(N>=77){quality=2;damage+=27;}}
type="smashed";}else{xPos=0;if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){yPos=-640;name="Staff";damage=5;delay=4800;if(N>=49&&N<=76){quality=1;damage+=15;}
if(N>=77){quality=2;damage+=30;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-704;name="Runic Staff";damage=7;delay=4600;}
if(qux===3||qux===4){yPos=-768;name="Cedar Staff";damage=10;delay=4500;}
if(N>=49&&N<=76){quality=1;damage+=15;}
if(N>=77){quality=2;damage+=30;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){yPos=-832;name="Quarterstaff";damage=12;delay=4600;if(N>=49&&N<=76){quality=1;damage+=14;}
if(N>=77){quality=2;damage+=30;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-896;name="Cosmic Staff";damage=14;delay=4600;}
if(qux===3||qux===4){yPos=-960;name="Archon Staff";damage=11;delay=4500;}
if(N>=49&&N<=76){quality=1;damage+=13;}
if(N>=77){quality=2;damage+=27;}}
type="staff";}}}
if(newItem==="shield"){xPos=-768;type="shield";if(M.random()>.5){if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){foo=6;yPos=0;name="Buckler";}
if(qux===3||qux===4){foo=13;yPos=-64;name="Small Shield";}
if(N>=49&&N<=76){quality=1;foo+=15;}
if(N>=77){quality=2;foo+=30;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){foo=17;yPos=-128;name="Kite Shield";}
if(qux===3||qux===4){foo=24;yPos=-192;name="Round Shield";}
if(N>=49&&N<=76){quality=1;foo+=24;}
if(N>=77){quality=2;foo+=48;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){foo=26;yPos=-256;name="Gothic Shield";}
if(qux===3||qux===4){foo=30;yPos=-320;name="Crown Shield";}
if(N>=49&&N<=76){quality=1;foo+=31;}
if(N>=77){quality=2;foo+=62;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){foo=33;yPos=-384;name="Aegis";}
if(qux===3||qux===4){foo=38;yPos=-448;name="Monarch";}
if(N>=49&&N<=76){quality=1;foo+=38;}
if(N>=77){quality=2;foo+=76;}}}else{type="offhand";if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=-512;name="Stein";}
if(qux===3||qux===4){yPos=-576;name="Dark Orb";}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-640;name="Ancient Tome";}
if(qux===3||qux===4){yPos=-704;name="Totem";}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-768;name="Crystal Ball";}
if(qux===3||qux===4){yPos=-832;name="Skull";}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-896;name="Emblazoned Orb";}
if(qux===3||qux===4){yPos=-960;name="Idol";}}
if(N>=49&&N<=76){quality=1;}
if(N>=77){quality=2;}}}
if(newItem==="range"){xPos=-704;if(M.random()<.7){if(N<=12||(N>=49&&N<=54)||(N>=77&&N<=82)){if(qux===1||qux===2){yPos=-512;name="Short Bow";damage=5;delay=3900;}
if(qux===3||qux===4){yPos=-512;name="Hunter's Bow";damage=6;delay=4100;}
if(N>=49&&N<=76){quality=1;damage+=12;}
if(N>=77){quality=2;damage+=24;}}
if((N>12&&N<=24)||(N>=55&&N<=62)||(N>=83&&N<=88)){if(qux===1||qux===2){yPos=-576;name="Composite Bow";damage=7;delay=4100;}
if(qux===3||qux===4){yPos=-640;name="Siege Bow";damage=8;delay=3900;}
if(N>=49&&N<=76){quality=1;damage+=12;}
if(N>=77){quality=2;damage+=25;}}
if((N>24&&N<=36)||(N>=63&&N<=69)||(N>=89&&N<=94)){if(qux===1||qux===2){yPos=-704;name="Astral Bow";damage=10;delay=3900;}
if(qux===3||qux===4){yPos=-704;name="Gothic Bow";damage=11;delay=3700;}
if(N>=49&&N<=76){quality=1;damage+=11;}
if(N>=77){quality=2;damage+=24;}}
if((N>36&&N<=48)||(N>=70&&N<=76)||N>=95){if(qux===1||qux===2){yPos=-768;name="Ward Bow";damage=13;delay=3800;}
if(qux===3||qux===4){yPos=-768;name="Hydra Bow";damage=16;delay=3900;}
if(N>=49&&N<=76){quality=1;damage+=11;}
if(N>=77){quality=2;damage+=23;}}
type="range";}else{if(N<=16||(N>=49&&N<=58)||(N>=77&&N<=85)){yPos=-832;name="Trinket";}
if((N>16&&N<=32)||(N>=59&&N<=67)||(N>=86&&N<=92)){yPos=-896;name="Memento";}
if((N>32&&N<=48)||(N>=68&&N<=76)||N>=93){yPos=-960;name="Charm";}
if(N>=49&&N<=76){quality=1;}
if(N>=77){quality=2;}
type="trinket";}}
return[M.ceil(foo),xPos,yPos,name,damage,delay,type,quality];}
function findFirstInvSlot(){var foo=false;for(var i=23;i>=0;i--){if(!P.item[i].name){foo=i;}}
return foo;}
function getRareName(newItem,newType,newName){var foo=newName;var x="Beast";var qux=~~(1+M.random()*42);if(qux===1){x="Armageddon";}
if(qux===2){x="Beast";}
if(qux===3){x="Bitter";}
if(qux===4){x="Blood";}
if(qux===5){x="Bone";}
if(qux===6){x="Bramble";}
if(qux===7){x="Brimstone";}
if(qux===8){x="Carrion";}
if(qux===9){x="Chaos";}
if(qux===10){x="Corpse";}
if(qux===11){x="Corruption";}
if(qux===12){x="Cruel";}
if(qux===13){x="Death";}
if(qux===14){x="Demon";}
if(qux===15){x="Dire";}
if(qux===16){x="Dread";}
if(qux===17){x="Doom";}
if(qux===11){x="Eagle";}
if(qux===19){x="Entropy";}
if(qux===20){x="Fiend";}
if(qux===21){x="Gale";}
if(qux===22){x="Ghoul";}
if(qux===23){x="Glyph";}
if(qux===24){x="Grim";}
if(qux===25){x="Hailstone";}
if(qux===26){x="Havoc";}
if(qux===27){x="Imp";}
if(qux===28){x="Loath";}
if(qux===29){x="Order";}
if(qux===30){x="Pain";}
if(qux===31){x="Plague";}
if(qux===32){x="Raven";}
if(qux===33){x="Rift";}
if(qux===34){x="Rune";}
if(qux===35){x="Shadow";}
if(qux===36){x="Skull";}
if(qux===37){x="Soul";}
if(qux===38){x="Spirit";}
if(qux===39){x="Stone";}
if(qux===40){x="Storm";}
if(qux===41){x="Viper";}
if(qux===42){x="Wraith";}
var y="Torc";if(newItem==="helmet"){var bar=~~(1+M.random()*(9));if(bar===1){y="Brow";}
if(bar===2){y="Casque";}
if(bar===3){y="Cowl";}
if(bar===4){y="Crest";}
if(bar===5){y="Horn";}
if(bar===6){y="Mask";}
if(bar===7){y="Veil";}
if(bar===8){y="Visage";}
if(bar===9){y="Visor";}}
if(newItem==="neck"){var bar=~~(1+M.random()*(9));if(bar===1){y="Beads";}
if(bar===2){y="Collar";}
if(bar===3){y="Gorget";}
if(bar===4){y="Heart";}
if(bar===5){y="Necklace";}
if(bar===6){y="Noose";}
if(bar===7){y="Scarab";}
if(bar===8){y="Talisman";}
if(bar===9){y="Torc";}}
if(newItem==="ring"){var bar=~~(1+M.random()*16);if(bar===1){y="Band";}
if(bar===2){y="Circle";}
if(bar===3){y="Coil";}
if(bar===4){y="Eye";}
if(bar===5){y="Finger";}
if(bar===6){y="Grasp";}
if(bar===7){y="Grip";}
if(bar===8){y="Gyre";}
if(bar===9){y="Hold";}
if(bar===10){y="Knuckle";}
if(bar===11){y="Loop";}
if(bar===12){y="Nails";}
if(bar===13){y="Spiral";}
if(bar===14){y="Touch";}
if(bar===15){y="Turn";}
if(bar===16){y="Whorl";}}
if(newItem==="shoulders"){var bar=~~(1+M.random()*(7));if(bar===1){y="Tabard";}
if(bar===2){y="Bulkhead";}
if(bar===3){y="Drape";}
if(bar===4){y="Stout";}
if(bar===5){y="Clavicle";}
if(bar===6){y="Awning";}
if(bar===7){y="Shelter";}}
if(newItem==="back"){var bar=~~(1+M.random()*(7));if(bar===1){y="Blind";}
if(bar===2){y="Guiser";}
if(bar===3){y="Manteau";}
if(bar===4){y="Capote";}
if(bar===5){y="Veneer";}
if(bar===6){y="Facade";}
if(bar===7){y="Talma";}}
if(newItem==="chest"){var bar=~~(1+M.random()*(7));if(bar===1){y="Carapace";}
if(bar===2){y="Hide";}
if(bar===3){y="Jack";}
if(bar===4){y="Pelt";}
if(bar===5){y="Shroud";}
if(bar===6){y="Suit";}
if(bar===7){y="Wrap";}}
if(newItem==="bracers"){var bar=~~(1+M.random()*(8));if(bar===1){y="Bracket";}
if(bar===2){y="Peg";}
if(bar===3){y="Grip";}
if(bar===4){y="Clamp";}
if(bar===5){y="Strut";}
if(bar===6){y="Splint";}
if(bar===7){y="Truss";}
if(bar===8){y="Vice";}}
if(newItem==="gloves"){var bar=~~(1+M.random()*(9));if(bar===1){y="Claw";}
if(bar===2){y="Clutches";}
if(bar===3){y="Finger";}
if(bar===4){y="Fist";}
if(bar===5){y="Grasp";}
if(bar===6){y="Grip";}
if(bar===7){y="Hand";}
if(bar===8){y="Touch";}
if(bar===9){y="Knuckle";}}
if(newItem==="belt"){var bar=~~(1+M.random()*(10));if(bar===1){y="Buckle";}
if(bar===2){y="Chain";}
if(bar===3){y="Clasp";}
if(bar===4){y="Cord";}
if(bar===5){y="Fringe";}
if(bar===6){y="Harness";}
if(bar===7){y="Lash";}
if(bar===8){y="Lock";}
if(bar===9){y="Strap";}
if(bar===10){y="Winding";}}
if(newItem==="legs"){var bar=~~(1+M.random()*(7));if(bar===1){y="Muster";}
if(bar===2){y="Join";}
if(bar===3){y="Cowl";}
if(bar===4){y="Pillar";}
if(bar===5){y="Support";}
if(bar===6){y="Trestle";}
if(bar===7){y="Stud";}}
if(newItem==="boots"){var bar=~~(1+M.random()*(6));if(bar===1){y="Treck";}
if(bar===2){y="Spur";}
if(bar===3){y="Fate";}
if(bar===4){y="Destiny";}
if(bar===5){y="Dare";}
if(bar===6){y="Hazard";}}
if(newType==="slashed"||newType==="cleaved"){var bar=~~(1+M.random()*11);if(bar===1){y="Barb";}
if(bar===2){y="Bite";}
if(bar===3){y="Cleaver";}
if(bar===4){y="Edge";}
if(bar===5){y="Fang";}
if(bar===6){y="Gutter";}
if(bar===7){y="Impaler";}
if(bar===8){y="Needle";}
if(bar===9){y="Razor";}
if(bar===10){y="Saw";}
if(bar===11){y="Scalpel";}
if(bar===12){y="Scratch";}
if(bar===13){y="Scythe";}
if(bar===14){y="Sever";}
if(bar===15){y="Skewer";}
if(bar===16){y="Song";}
if(bar===17){y="Stinger";}
if(bar===11){y="Thirst";}}
if(newType==="crushed"||newType==="smashed"||newType==="staff"){var bar=~~(1+M.random()*(12));if(bar===1){y="Bane";}
if(bar===2){y="Blow";}
if(bar===3){y="Brand";}
if(bar===4){y="Break";}
if(bar===5){y="Crack";}
if(bar===6){y="Crusher";}
if(bar===7){y="Grinder";}
if(bar===8){y="Knell";}
if(bar===9){y="Mallet";}
if(bar===10){y="Ram";}
if(bar===11){y="Smasher";}
if(bar===12){y="Star";}}
if(newType==="pierced"){var bar=~~(1+M.random()*17);if(bar===1){y="Barb";}
if(bar===2){y="Branch";}
if(bar===3){y="Dart";}
if(bar===4){y="Fang";}
if(bar===5){y="Goad";}
if(bar===6){y="Gutter";}
if(bar===7){y="Impaler";}
if(bar===8){y="Lance";}
if(bar===9){y="Nails";}
if(bar===10){y="Needle";}
if(bar===11){y="Prod";}
if(bar===12){y="Scourge";}
if(bar===13){y="Scratch";}
if(bar===14){y="Skewer";}
if(bar===15){y="Spike";}
if(bar===16){y="Stinger";}
if(bar===17){y="Wrack";}}
if(newType==="staff"){var bar=~~(1+M.random()*(10));if(bar===1){y="Branch";}
if(bar===2){y="Call";}
if(bar===3){y="Chant";}
if(bar===4){y="Cry";}
if(bar===5){y="Goad";}
if(bar===6){y="Gnarl";}
if(bar===7){y="Spell";}
if(bar===8){y="Spire";}
if(bar===9){y="Song";}
if(bar===10){y="Weaver";}}
if(newType==="shield"){var bar=~~(1+M.random()*(9));if(bar===1){y="Badge";}
if(bar===2){y="Emblem";}
if(bar===3){y="Guard";}
if(bar===4){y="Mark";}
if(bar===5){y="Rock";}
if(bar===6){y="Tower";}
if(bar===7){y="Ward";}
if(bar===8){y="Wing";}
if(bar===9){y="Bulwark";}}
if(newType==="offhand"){var bar=~~(1+M.random()*(9));if(bar===1){y="Globule";}
if(bar===2){y="Marble";}
if(bar===3){y="Star";}
if(bar===4){y="Crest";}
if(bar===5){y="Cycle";}
if(bar===6){y="Dust";}
if(bar===7){y="Smoke";}
if(bar===8){y="Void";}
if(bar===9){y="Tremor";}}
if(newType==="range"){var bar=~~(1+M.random()*(9));if(bar===1){y="Bolt";}
if(bar===2){y="Thirst";}
if(bar===3){y="Fletch";}
if(bar===4){y="Flight";}
if(bar===5){y="Horn";}
if(bar===6){y="Nock";}
if(bar===7){y="Quarrel";}
if(bar===8){y="Quill";}
if(bar===9){y="Stinger";}}
if(newType==="trinket"){var bar=~~(1+M.random()*(7));if(bar===1){y="Breaker";}
if(bar===2){y="Chant";}
if(bar===3){y="Cry";}
if(bar===4){y="Song";}
if(bar===5){y="Star";}
if(bar===6){y="Talisman";}
if(bar===7){y="Torc";}}
foo=x+" "+y+" "+foo;return foo;}
function getUniqueItem(NI,newItem,newTier,newType,newName,Slot,newQuality){var I=P.item[NI];var N=newName;var nt=newType;var nT=newTier;var ni=newItem;if(newQuality===0){if(ni==="helmet"){if(N==="Hood"){I.name="Glyphed Cowl";I.intel=11;I.wis=13;I.evocation=4;I.channeling=3;I.allStats=5;I.mp=30;I.req=11;}
if(N==="Cap"){I.name="Rendo's Bonnet";I.enhancedArmor=35;I.defense=5;I.attack=2;I.hp=15;I.mp=15;}
if(N==="Bandana"){if(M.random()>.5){I.name="Laozen's Headband";I.enhancedArmor=50;I.cold=7;I.handtohand=3;I.lightningDamage=6;I.fear=8;I.hp=25;I.hpKill=6;I.req=11;}else{I.name="Samurai's Devotion";I.armor=25;I.allSkills=2;I.dex=15;I.str=10;I.allResist=6;I.fear=15;I.req=24;I.rarity=4;}}
if(N==="Diadem"){I.name="Grandmaster's Crown";I.enhancedArmor=75;I.dualWield=5
I.doubleAttack=6;I.handtohand=6;I.cold=13
I.allSkills=1;I.phyMit=3;I.allResist=7;I.flavorText="A thousand fists are not as strong as a tempered mind.";I.req=32;}
if(N==="Dark Hood"){var xyz=~~(1+M.random()*(2));if(xyz===1){I.name="Reaper's Cowl";I.enhancedArmor=55;I.conjuration=5;I.mpKill=6;I.silence=13;I.hp=15;I.mp=30;I.resistCold=15;I.critDamage=6;I.req=32;}
if(xyz===2){I.name="Executioner's Hood";I.enhancedArmor=75;I.offense=3;I.str=14;I.dex=11;I.critDamage=6;I.cold=13;I.riposte=5;I.dualWield=3;I.req=34;}}
if(N==="Coronet"){I.name="Crown of King Argentus";I.enhancedArmor=55;I.alteration=5;I.channeling=5;I.stun=9;I.silence=13;I.resistMagic=20;I.cha=15;I.twoHandBlunt=6;I.req=34;}
if(N==="Miter"){if(M.random()>.5){I.name="Summoner's Beacon";I.enhancedArmor=44;I.conjuration=6;I.abjuration=4;I.silence=13;I.hp=30;I.hpKill=7;I.allResist=9;I.lightRadius=12;I.req=34;}else{I.name="Orator's Shout";I.enhancedArmor=45;I.allSkills=1;I.resistPoison=30;I.resistLightning=20;I.silence=35;I.expFind=12;I.req=24;I.rarity=4;}}
if(N==="Astral Hood"){I.name="Dragon Lord's Cowl";I.enhancedArmor=40;I.absorbFire=8;I.evocation=7;I.enhanceFire=3;I.silence=13;I.hp=25;I.mp=35;I.critChance=5;I.goldFind=10;I.req=34;}
if(N==="Mail Hood"){if(M.random()>.5){I.name="Windstalker's Malice";I.enhancedArmor=49;I.dualWield=8;I.allSkills=2;I.oneHandSlash=3;I.allResist=9;I.weight=1;I.riposte=5;I.flavorText="A legendary warder's protective hood. Used in defense of rabid bears and wolves.";I.req=26;}else{I.name="Sage's Vision";I.enhancedArmor=45;I.allSkills=2;I.hp=35;I.mpKill=3;I.critChance=3;I.critDamage=7;I.req=25;I.rarity=4;}}
if(N==="Coif"){I.name="Coif of Glory";I.enhancedArmor=42;I.allSkills=1;I.goldFind=11;I.resistLightning=20;I.hpKill=12;I.lightRadius=9;I.thorns=6;I.req=16;}
if(N==="Armet"){I.name="Pride of Fenwoven";I.enhancedArmor=43;I.conjuration=5;I.alteration=6;I.wis=15;I.allResist=5;I.resistCold=21;I.wraith=4;I.req=20;}
if(N==="Sallet"){I.name="Dusky Visor";I.enhancedArmor=50;I.weight=1;I.physicalDamage=8;I.allResist=15;I.phyMit=7;I.req=22;}
if(N==="Burgonet"){I.name="Crested Helm";I.enhancedArmor=42;I.allSkills=1;I.dualWield=5;I.alteration=5;I.str=11;I.cha=14;I.req=12;}
if(N==="Great Helm"){if(M.random()>.5){I.name="Call of the Hero";I.enhancedArmor=45;I.alteration=5;I.allSkills=1;I.allStats=9;I.cold=9;I.hpKill=5;I.mpKill=5;I.hp=15;I.req=15;}else{I.name="Minotaur's Horns";I.enhancedArmor=55;I.critChance=4;I.phyMit=3;I.stun=12;I.resistCold=20;I.resistLightning=25;I.req=24;I.rarity=4;}}
if(N==="Barbute"){I.name="Wurmskull Barbute";I.enhancedArmor=60;I.twoHandSlash=7;I.twoHandBlunt=7;I.resistMagic=22;I.str=22;I.hp=45;I.req=20;}
if(N==="Royal Helm"){I.name="Vor's Adulation";I.enhancedArmor=50;I.defense=4;I.allResist=14;I.allStats=9;I.wraith=3;I.silence=10;I.fear=10;I.hpRegen=3;I.req=36;}}
if(ni==="neck"){if(nT<=16){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Kordata Relic";I.globalHaste=-40;I.resistFire=12;I.absorbFire=4;I.fireDamage=5;I.fear=10;I.lightRadius=5;I.req=10;}
if(zoo===2){I.name="The Eye of Riltan";I.lightRadius=4;I.allSkills=1;I.hpKill=9;I.coldDamage=5;I.phyMit=3;I.req=11;}
if(zoo===3){I.name="The Arboretum Curio";I.armor=10;I.attack=10;I.allResist=10;I.allStats=10;I.req=14;}
if(zoo===4){I.name="Chancellor's Remorse";I.abjuration=4;I.conjuration=4;I.resistCold=20;I.allSkills=1;I.mp=35;I.req=12;I.rarity=4;}
if(zoo===5){I.name="Etched Granite Charm";I.str=5;I.wis=5;I.intel=5;I.stun=4;I.fear=4;I.dodge=2;}}
if(nT>16&&nT<=32){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Saracen's Guard";I.thorns=9;I.allResist=10;I.allStats=8;I.req=14;}
if(zoo===2){I.name="Magnate's Token";I.resistAll=14;I.allStats=5;I.allSkills=2;I.enhanceFire=3;I.req=24;I.rarity=4;}
if(zoo===3){I.name="Miner's Memento";I.hp=25;I.mp=25;I.dex=16;I.goldFind=15;I.allResist=7;I.req=20;I.rarity=4;}
if(zoo===4){I.name="Martyr's Manifesto";I.allSkills=2;I.agi=11;I.critDamage=6;I.critChance=3;I.fear=25;I.req=22;I.rarity=4;}}
if(nT>32){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="The Prowler's Eye";I.runSpeed=15;I.haste=-60;I.armor=25;I.dex=20;I.req=22;}
if(zoo===2){I.name="Wyvern's Scale";I.resistFire=35;I.enhanceFire=3;I.absorbFire=2;I.hp=33;I.mp=55;I.evocation=3;I.req=20;I.rarity=4;}
if(zoo===3){I.name="Enchanted Bone Collar";I.hp=30;I.mp=30;I.lightRadius=-3;I.armor=8;I.stun=8;I.twoHandBlunt=3;I.req=24;}
if(zoo===4){I.name="Anuran Talisman";I.intel=10;I.wis=10;I.mp=35;I.mpKill=5;I.dex=8;I.critDamage=7;I.req=26;I.xPos=0;I.yPos=-64;}}}
if(ni==="ring"){if(nT<=16){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Samurai's Fidelity";I.leech=3;I.wraith=3;I.hpKill=5;I.resistCold=25;I.resistLightning=25;I.mp=25;I.req=12;I.rarity=4;}
if(zoo===2){I.name="Magnate's Curio";I.resistLightning=20;I.castingHaste=-40;I.magMit=3;I.phyMit=3;I.stun=8;I.fear=8;I.silence=8;I.req=12;I.rarity=4;}
if(zoo===3){I.name="Vagabond's Seal";I.resistCold=24;I.offense=5;I.str=15;I.parry=3;I.hp=25;I.enhancePhysical=2;I.req=12;I.rarity=4;}
if(zoo===4){I.name="Bishop's Faith";I.wraith=4;I.silence=15;I.expFind=8;I.allSkills=1;I.alteration=6;I.req=12;I.rarity=4;}}
if(nT>16&&nT<=32){var zoo=~~(1+M.random()*(4));if(zoo===1){if(M.random()>.5){I.name="Stone of Artremia";I.allSkills=1;I.mpKill=5;I.lightningDamage=6;I.mp=25;I.req=15;I.silence=7;I.wraith=5;I.flavorText="An enchanted ring worn by elven elites.";}else{I.name="Miner's Glimmer";I.mpRegen=2;I.magMit=4;I.runSpeed=12;I.silence=16;I.allStats=6;I.req=8;I.rarity=4;}}
if(zoo===2){I.name="Jagged Band";I.str=12;I.armor=5;I.parry=3;I.thorns=5;I.critDamage=5;I.req=12;}
if(zoo===3){I.name="Ring of Howling Thicket";I.armor=6;I.wis=10;I.intel=10;I.resistPoison=13;I.wraith=3;I.dex=5;I.alteration=3;I.req=13;}
if(zoo===4){I.name="Beryl Skull Ring";I.hp=25;I.mp=20;I.cha=-5;I.hpKill=12;I.leech=3;I.physicalDamage=5;I.critDamage=6;I.req=11;}}
if(nT>32){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Blazing Star";I.hp=30;I.dodge=2;I.absorbFire=5;I.magMit=5;I.goldFind=10;I.silence=10;I.req=21;}
if(zoo===2){I.name="Crow's Frost";I.attack=13;I.coldDamage=9;I.dex=11;I.mp=30;I.cold=13;I.absorbCold=6;I.req=24;}
if(zoo===3){I.name="Moonstone Band";I.str=5;I.mp=30;I.wis=12;I.evocation=3;I.alteration=3;I.conjuration=3;I.silence=10;I.wraith=3;I.req=25;}
if(zoo===4){if(M.random()>.5){I.name="Ovext's Amethyst Ring";I.hp=35;I.agi=15;I.dex=5;I.critChance=3;I.critDamage=5;I.resistFire=13;I.wraith=3;I.req=28;}else{I.name="Miner's Shard";I.hpKill=6;I.str=20;I.sta=12;I.cold=15;I.globalHaste=-50;I.req=8;I.rarity=4;}}}}
if(ni==="shoulders"){if(N==="Cloth Drape"){I.name="Gilded Cloth";I.enhancedArmor=11;I.intel=13;I.wis=8;I.alteration=2;I.silence=7;I.critChance=2;I.resistMagic=7;}
if(N==="Woven Drape"){I.name="Pegasus Feather Drape";I.enhancedArmor=30;I.globalHaste=-30;I.agi=5;I.dex=15;I.resistLightning=12;I.absorbLightning=3;I.runSpeed=9;I.xPos=-192;I.yPos=-128;}
if(N==="Azure Shawl"){I.name="Ringwraith's Amice";I.enhancedArmor=40;I.conjuration=4;I.alteration=3;I.dex=11;I.mpKill=5;I.coldDamage=7;I.silence=9;I.allResist=12;I.lightRadius=-10;I.req=11;}
if(N==="Archon Shawl"){I.name="Riptide Shawl";I.enhancedArmor=44;I.mp=32;I.sta=5;I.critDamage=8;I.resistCold=11;I.evocation=4;I.channeling=3;I.req=22;}
if(N==="Leather Shoulders"){I.name="Lizardscale Mantle";I.enhancedArmor=27;I.alteration=2;I.wis=5;I.intel=5;I.resistPoison=7;I.defense=2;I.resistFire=7;}
if(N==="Studded Shoulders"){I.name="Vagrant's Timber";I.armor=20;I.allResist=12;I.thorns=12;I.mpRegen=2;I.sta=12;I.resistCold=15;I.resistMagic=15;I.resistPoison=12;I.req=11;I.rarity=4;}
if(N==="Spiked Shoulders"){I.name="Tanaden's Spiked Shoulderpads";I.enhancedArmor=45;I.hp=15;I.agi=15;I.stun=10;I.offense=2;I.attack=2;I.leech=3;I.allResist=5;I.req=16;}
if(N==="Brigand Shoulders"){I.name="Prayer Shawl";I.enhancedArmor=45;I.hp=35;I.wis=20;I.dex=5;I.absorbMagic=3;I.silence=7;I.alteration=4;I.fear=12;I.req=23;}
if(N==="Scaled Mantle"){I.name="Guardian's Bulwark";I.enhancedArmor=30;I.mp=16;I.wis=8;I.dex=5;I.expFind=7;I.silence=7;I.poisonDamage=5;}
if(N==="Chain Mantle"){I.name="Bloodstained Mantle";I.enhancedArmor=28;I.fear=5;I.str=7;I.resistMagic=12;I.hpKill=4;I.leech=3;I.doubleAttack=3;I.attack=2;I.req=12;}
if(N==="Kusari Mantle"){I.name="Matsuwari's Solace";I.enhancedArmor=35;I.hp=20;I.agi=10;I.dex=10;I.critChance=3;I.phyMit=5;I.fear=9;I.req=11;}
if(N==="Laminar Mantle"){I.name="Frostwalker's Covenant";I.enhancedArmor=41;I.hp=35;I.wis=15;I.twoHandBlunt=5;I.cold=13;I.conjuration=4;I.resistCold=13;I.resistPoison=13;I.req=24;}
if(N==="Cobalt Spaulders"){I.name="Blackened Iron Spaulders";I.enhancedArmor=40;I.hp=10;I.defense=2;I.oneHandBlunt=2;I.oneHandSlash=2;I.str=5;I.thorns=2;}
if(N==="Mithril Pauldrons"){I.name="Minotaur's Sprawl";I.enhancedArmor=30;I.oneHandSlash=2;I.hpKill=6;I.lightRadius=7;I.str=15;I.critDamage=12;I.req=12;I.rarity=4;}
if(N==="Sode"){I.name="Golem's Shelf";I.enhancedArmor=38;I.abjuration=3;I.resistMagic=25;I.mp=20;I.oneHandBlunt=3;I.req=15;I.rarity=4;}
if(N==="Monarch Pauldrons"){I.name="Carnal Pauldrons";I.enhancedArmor=45;I.mp=25;I.mpRegen=1;I.dex=11;I.magMit=5;I.allResist=10;I.fear=11;I.req=25;}}
if(ni==="back"){if(N==="Cape"){I.name="Arctic Cloak";I.expFind=2;I.attack=4;I.dex=5;I.abjuration=2;I.coldDamage=4;I.resistCold=7;I.cold=9;}
if(N==="Cloak"){I.name="Lizardscale Cloak";I.mpKill=2;I.intel=7;I.abjuration=1;I.alteration=2;I.critDamage=5;I.resistPoison=7;}
if(N==="Woven Cloak"){I.name="Gossamer Cloak";I.dodge=2;I.intel=8;I.wis=6;I.channeling=4;I.phyMit=4;I.resistLightning=8;I.resistPoison=8;I.silence=9;}
if(N==="Fur-Lined Cloak"){I.name="Vagrant's Copse";I.castingHaste=-80;I.silence=30;I.wis=20;I.enhanceFire=5;I.hpRegen=2;I.critChance=3;I.req=15;I.rarity=4;}
if(N==="Drake-hide Cloak"){I.name="Highwayman's Cloak";I.goldFind=13;I.dex=10;I.dodge=2;I.parry=2;I.piercing=3;I.physicalDamage=2;I.req=12;}
if(N==="Brigand's Shroud"){I.name="Cloak of the Polar Bear";I.hp=20;I.coldDamage=2;I.magMit=2;I.absorbCold=3;I.twoHandSlash=2;I.twoHandBlunt=2;I.cold=13;I.resistCold=25;I.req=14;}
if(N==="Regal Shroud"){if(M.random()>.5){I.name="Molten Cloak";I.thorns=3;I.intel=13;I.absorbFire=2;I.evocation=2;I.critChance=2;I.resistFire=21;I.req=15;}else{I.name="Samurai's Ardor";I.haste=-50;I.globalHaste=-50;I.allStats=7;I.critChance=5;I.req=12;I.rarity=4;}}
if(N==="Orcish Cloak"){I.name="Ominous Black Cloak";I.hp=45;I.str=5;I.alteration=2;I.oneHandBlunt=2;I.oneHandSlash=2;I.piercing=2;I.req=11;}
if(N==="Elven Shroud"){I.name="Grovecaller's Shroud";I.conjuration=3;I.absorbLightning=2;I.agi=13;I.dex=13;I.oneHandSlash=5;I.resistFire=9;I.resistLightning=17;I.req=11;}
if(N==="Emerald Cloak"){I.name="Cloak of Leaves";I.wis=13;I.alteration=3;I.thorns=5;I.conjuration=2;I.critDamage=7;I.resistLightning=9;I.silence=9;I.req=11;}
if(N==="Aviak Cloak"){I.name="Seahorse Scale Cloak";I.attack=3;I.channeling=3;I.abjuration=3;I.dex=12;I.mpKill=6;I.coldDamage=3;I.resistCold=21;I.req=21;}
if(N==="Chlamys"){I.name="Tribal Warfare Cloak";I.goldFind=15;I.str=14;I.agi=8;I.piercing=3;I.alteration=3;I.critChance=3;I.allResist=9;I.req=21;}
if(N==="Dragon Cape"){if(M.random()>.5){I.name="Cloak of Qalon";I.dex=9;I.agi=9;I.haste=-60;I.handtohand=4;I.offense=2;I.oneHandSlash=3;I.fireDamage=2;I.resistFire=14;I.req=26;}else{I.name="Magmashroud";I.dex=16;I.agi=16;I.haste=-150;I.handtohand=4;I.offense=3;I.fireDamage=7;I.resistFire=28;I.flavorText="The royal cape of Highlord Szarthax. Stolen by a dwarven rogue with a reckless disdain for his own life.";I.req=32;}}
if(N==="Umbral Shroud"){I.name="Wyvern's Wing";I.defense=6;I.hp=20;I.agi=23;I.silence=25;I.expFind=12;I.alteration=5;I.critDamage=5;I.req=17;I.rarity=4;}
if(N==="Archon Cloak"){I.name="Cloak of Icing Death";I.twoHandSlash=3;I.allStats=9;I.magMit=8;I.resistCold=17;I.cold=17;I.coldDamage=5;I.absorbCold=5;I.flavorText="A cape used in Dragon ceremonies to bury Tetrarchs of the Scaled Order.";I.req=35;}
if(N==="Astral Cloak"){I.name="Soothsayer's Ethereal Cloak";I.twoHandBlunt=3;I.alteration=4;I.allResist=9;I.allStats=8;I.allSkills=1;I.fear=9;I.stun=9;I.silence=16;I.flavorText="A slumbering inter-dimensional dragon sleeps quietly, waiting to shatter the world.";I.req=38;}}
if(ni==="chest"){if(N==="Elven Robe"){I.name="Green Silken Drape";I.enhancedArmor=25;I.sta=9;I.dex=10;I.intel=5;I.resistPoison=9;I.stun=2;}
if(N==="Silk Robe"){if(M.random()>.5){I.name="Heavenly Garb";I.enhancedArmor=33;I.mp=21;I.mpRegen=2;I.allResist=7;I.enhanceMagic=3;I.silence=9;I.req=12;}else{I.name="Chancellor's Ceremony";I.armor=22;I.allResist=10;I.allStats=9;I.hpRegen=5;I.mpRegen=5;I.intel=10;I.req=25;I.rarity=4;}}
if(N==="Linen Robe"){I.name="Orator's Whisper";I.enhancedArmor=45;I.mp=75;I.hp=30;I.intel=25;I.conjuration=5;I.req=26;I.rarity=4;}
if(N==="Azure Robe"){var qux=~~(1+M.random()*(2));if(qux===1){I.name="Metallic-Plated Robe";I.enhancedArmor=55;I.intel=11;I.agi=11;I.evocation=3;I.castingHaste=-50;I.mpKill=5;I.resistCold=10;I.resistFire=10;I.enhanceCold=5;I.silence=12;I.req=26;I.xPos=-256;I.yPos=-128;}else{I.name="Robe of the Seer";I.enhancedArmor=55;I.mp=30;I.intel=11;I.wis=11;I.evocation=4;I.conjuration=3;I.enhanceLightning=5;I.silence=13;I.req=32;}}
if(N==="Quilted Tunic"){I.name="Foreman's Tunic";I.enhancedArmor=30;I.handtohand=2;I.wis=12;I.str=12;I.dodge=2;I.weight=1;I.defense=2;I.physicalDamage=4;}
if(N==="Spiked Vestment"){I.name="Ripjaw Hide Vest";I.enhancedArmor=42;I.attack=3;I.sta=11;I.handtohand=3;I.stun=8;I.globalHaste=-50;I.weight=1;I.req=11;}
if(N==="Leather Armor"){I.name="Twitchthrash";I.enhancedArmor=39;I.haste=-30;I.twoHandBlunt=2;I.runSpeed=10;I.dex=14;I.str=14;I.resistPoison=17;I.req=16;}
if(N==="Studded Leather"){I.name="Brown Chitin Shell";I.enhancedArmor=45;I.dex=11;I.sta=11;I.agi=11;I.abjuration=2;I.alteration=3;I.defense=3;I.phyMit=5;I.silence=24;I.req=22;}
if(N==="Chain Mail"){I.name="Samurai's Duty";I.armor=45;I.dodge=5;I.defense=5;I.parry=5;I.riposte=5;I.allResist=11;I.hp=35;I.req=12;I.rarity=4;}
if(N==="Ring Mail"){I.name="Eagle Claw Armor";I.enhancedArmor=34;I.hp=17;I.poisonDamage=3;I.hpKill=5;I.runSpeed=9;I.absorbCold=4;I.resistCold=14;I.cold=13;I.req=10;}
if(N==="Scale Mail"){I.name="Frost Flicker";I.enhancedArmor=30;I.conjuration=4;I.twoHandBlunt=5;I.wis=17;I.coldDamage=5;I.resistCold=17;I.magMit=3;I.lightRadius=5;I.cold=11;I.req=15;}
if(N==="Kusari Mail"){I.name="Fencer's Tunic";I.enhancedArmor=40;I.str=19;I.sta=12;I.weight=1;I.oneHandSlash=3;I.piercing=3;I.globalHaste=-80;I.allSkills=1;I.physicalDamage=7;I.silence=7;I.req=23;}
if(N==="Breast Plate"){I.name="Gravelstone Coat";I.enhancedArmor=30;I.hp=20;I.str=8;I.defense=2;I.expFind=5;I.phyMit=7;I.weight=1;}
if(N==="Cuirass"){I.name="Chestplate of the Blooddrinker";I.enhancedArmor=30;I.str=17;I.allSkills=1;I.resistFire=11;I.dualWield=3;I.evocation=2;I.alteration=2;I.req=14;}
if(N==="Gothic Plate"){I.name="Dahlia's Chestplate";I.enhancedArmor=50;I.hpRegen=5;I.hpKill=5;I.leech=4;I.allResist=9;I.allSkills=2;I.abjuration=4;I.flavorText="A mythical breastplate discovered by the lizardmen of Temple of Prenssor. Often rumored to be a legend, but it has recently been discovered once again.";I.req=23;}
if(N==="Archon Plate"){if(M.random()>.5){I.name="Silks of the Guardian";I.enhancedArmor=50;I.dex=13;I.resistMagic=17;I.wraith=3;I.mpKill=5;I.absorbLightning=8;I.silence=9;I.hpKill=10;I.magicDamage=8;I.lightRadius=7;I.allSkills=1;I.req=34;}else{I.name="Golem's Ore";I.enhancedArmor=45;I.enhanceMagic=3;I.leech=3;I.sta=25;I.mp=33;I.resistPoison=15;I.allSkills=1;I.req=15;I.rarity=4;}}}
if(ni==="bracers"){if(N==="Jade Bracers"){I.name="Gilded Jade Bracelet";I.enhancedArmor=28;I.hp=16;I.wis=10;I.evocation=2;I.channeling=3;I.conjuration=3;I.lightRadius=4;}
if(N==="Bone Bracers"){I.name="Burnished Bone Bracelet";I.enhancedArmor=35;I.mp=21;I.wis=12;I.intel=12;I.resistMagic=9;I.silence=12;I.critDamage=5;I.channeling=2;I.req=10;}
if(N==="Sapphire Bracers"){I.name="Bracelet of Woven Silk";I.enhancedArmor=30;I.hp=17;I.wis=5;I.intel=10;I.resistLightning=9;I.thorns=3;I.silence=9;I.castingHaste=-40;I.channeling=2;I.req=11;}
if(N==="Opulent Bracers"){I.name="Orator's Entreat";I.enhancedArmor=45;I.resistFire=15;I.sta=12;I.dex=9;I.fear=10;I.stun=15;I.dodge=5;I.req=17;I.rarity=4;}
if(N==="Leather Bracers"){I.name="Bracers of Battle";I.enhancedArmor=25;I.attack=3;I.str=3;I.dex=9;I.twoHandSlash=2;I.physicalDamage=2;I.flavorText="The bracers of an orc warlord that patrols Lanfeld Outpost's perimeter.";}
if(N==="Patent Bracers"){I.name="Ivory Bracelet";I.enhancedArmor=33;I.mp=11;I.agi=12;I.hpRegen=1;I.expFind=5;I.goldFind=5;I.critDamage=5;I.stun=5;I.req=11;}
if(N==="Bonded Bracers"){I.name="Granite Bracer";I.enhancedArmor=42;I.hp=10;I.str=7;I.sta=12;I.weight=1;I.stun=10;I.cold=12;I.phyMit=4;I.req=16;}
if(N==="Elven Bracers"){I.name="Serpentine Bracer";I.enhancedArmor=40;I.mpRegen=2;I.agi=16;I.dex=10;I.castingHaste=-40;I.dodge=2;I.resistPoison=12;I.wraith=3;I.req=22;}
if(N==="Scaled Bracers"){I.name="Basilisk Bracer";I.enhancedArmor=28;I.hp=12;I.wis=10;I.agi=5;I.cold=9;I.stun=13;I.oneHandBlunt=2;I.abjuration=2;}
if(N==="Laminar Bracers"){I.name="Runed Adamantium Bracer";I.enhancedArmor=40;I.mpKill=5;I.wis=14;I.str=5;I.magMit=2;I.silence=13;I.magicDamage=2;I.weight=1;I.req=11;}
if(N==="Splinted Bracers"){I.name="Martyr's Agony";I.enhancedArmor=55;I.haste=-50;I.dex=13;I.hp=12;I.stun=10;I.dualWield=4;I.req=12;I.rarity=4;}
if(N==="Kusari Bracers"){if(M.random()>.5){I.name="Dragon Bane Bracer";I.enhancedArmor=36;I.str=14;I.agi=9;I.abjuration=3;I.piercing=2;I.resistFire=9;I.resistMagic=9;I.resistCold=9;I.leech=3;I.req=25;}else{I.name="Emissary's Dispute";I.enhancedArmor=45;I.resistLightning=30;I.silence=15;I.fear=15;I.parry=3;I.offense=5;I.hp=11;I.req=11;I.rarity=4;}}
if(N==="Bronze Bracers"){I.name="Chief Grimden's Bracer";I.enhancedArmor=25;I.hp=16;I.str=8;I.hpKill=3;I.expFind=4;I.physicalDamage=2;I.flavorText="Formerly used by a wood elf that dared to spy on Lanfeld Outpost, it was later kept by Chief Grimden as a trophy.";I.runSpeed=5;}
if(N==="Cobalt Bracers"){I.name="Arbiter's Galvanized Bracer";I.enhancedArmor=35;I.mp=10;I.alteration=3;I.defense=3;I.abjuration=2;I.oneHandBlunt=5;I.req=12;}
if(N==="Tetrarch Bracers"){I.name="Dragon Claw Bracer";I.enhancedArmor=30;I.mp=11;I.hp=9;I.critChance=3;I.hpKill=5;I.weight=1;I.thorns=4;I.allResist=8;I.leech=3;I.req=20;}
if(N==="Gilded Bracers"){I.name="Scaled Brass Bracer";I.enhancedArmor=50;I.fear=9;I.silence=12;I.cha=25;I.critDamage=9;I.oneHandSlash=2;I.dex=12;I.allResist=9;I.req=26;}}
if(ni==="gloves"){if(N==="Gloves"){I.name="The Hand of Armetrin";I.enhancedArmor=34;I.mp=13;I.mpRegen=1;I.leech=3;I.hpKill=2;I.mpKill=2;I.defense=2;I.resistPoison=8;}
if(N==="Cloth Gloves"){I.name="Dusty Bloodstained Gloves";I.enhancedArmor=30;I.mp=21;I.intel=12;I.evocation=2;I.channeling=3;I.resistMagic=9;I.resistLightning=9;I.req=12;}
if(N==="Woven Gloves"){I.name="Gauntlets of Omnipotence";I.enhancedArmor=37;I.evocation=3;I.intel=12;I.mpKill=5;I.enhanceCold=4;I.resistCold=11;I.silence=7;I.castingHaste=-60;I.req=19;}
if(N==="Mesh Gloves"){I.name="Luminescent Touch";I.enhancedArmor=28;I.hp=12;I.critChance=2;I.critDamage=5;I.allStats=5;I.allResist=7;I.castingHaste=-40;I.req=26;}
if(N==="Rawhide Gloves"){I.name="Bloodfist Gloves";I.enhancedArmor=35;I.hp=25;I.haste=-30;I.globalHaste=-30;I.oneHandBlunt=2;I.leech=3;I.defense=3;I.physicalDamage=5;}
if(N==="Drakescale Gloves"){if(M.random()>.5){I.name="Greenthorn Hide Gloves";I.enhancedArmor=24;I.hp=21;I.mp=14;I.dex=9;I.sta=9;I.dodge=3;I.conjuration=2;I.resistPoison=14;I.req=13;}else{I.name="Vagabond's Survey";I.armor=22;I.resistPoison=20;I.haste=-70;I.fireDamage=7;I.str=24;I.stun=30;I.req=22;I.rarity=4;}}
if(N==="Sharkskin Gloves"){I.name="Griffon Talon Gloves";I.enhancedArmor=33;I.mp=16;I.haste=-40;I.hpKill=3;I.leech=3;I.offense=3;I.parry=3;I.resistLightning=12;I.req=11;}
if(N==="Studded Gloves"){if(M.random()>.5){I.name="Impskin Gloves";I.enhancedArmor=45;I.mp=21;I.wis=12;I.leech=2;I.intel=12;I.leech=3;I.silence=7;I.lightRadius=6;I.resistPoison=10;I.resistFire=11;I.req=22;}else{I.name="Lupine Serrated Gauntlets";I.enhancedArmor=38;I.haste=-50;I.critChance=4;I.lightningDamage=3;I.leech=3;I.resistLightning=10;I.handtohand=3;I.str=10;I.req=20;}}
if(N==="Lamellar Gauntlets"){I.name="Merchant's Guards";I.enhancedArmor=11;I.lightRadius=5;I.goldFind=13;I.expFind=5;I.defense=2;I.attack=2;}
if(N==="Banded Gauntlets"){I.name="Sorcerer's Gauntlets";I.enhancedArmor=28;I.mp=16;I.defense=2
I.castingHaste=-50;I.weight=1;I.enhanceFire=3;I.mpRegen=3;I.fireDamage=4;I.silence=9;I.req=15;}
if(N==="Kusari Gauntlets"){I.name="Moss Etched Gauntlets";I.enhancedArmor=32;I.mp=16;I.hp=24
I.dualWield=5;I.doubleAttack=4;I.attack=3;I.allResist=8;I.req=19;}
if(N==="Brigandine Gauntlets"){I.name="Sage's Acumen";I.enhancedArmor=45;I.castingHaste=-80;I.hp=20;I.mp=35;I.silence=15;I.resistFire=24;I.req=22;I.rarity=4;}
if(N==="Cobalt Gauntlets"){I.name="Frostburn Grips";I.enhancedArmor=44;I.mp=25;I.wis=10;I.evocation=3;I.intel=7;I.wraith=4;I.cold=7;I.defense=3;I.coldDamage=5;}
if(N==="Ornate Gauntlets"){I.name="Junon's Gleaming Gauntlets";I.enhancedArmor=40;I.hpKill=5;I.leech=3;I.dualWield=5;I.cha=11;I.lightRadius=10;I.conjuration=3;I.channeling=3;I.req=14;}
if(N==="Tetrarch Gauntlets"){I.name="Charred Gauntlets";I.enhancedArmor=30;I.mp=16;I.wis=8;I.mpKill=3;I.sta=7;I.defense=2;I.fireDamage=5;I.leech=3;I.lightRadius=9;I.req=17;}
if(N==="Gilded Gauntlets"){I.name="Gauntlets of Brute Strength";I.enhancedArmor=50;I.sta=14;I.str=20;I.globalHaste=-50;I.twoHandSlash=4;I.twoHandBlunt=4;I.thorns=6;I.critDamage=6;I.req=26;}}
if(ni==="belt"){if(N==="Sash"){if(M.random()>.5){I.name="Lenymo Sash";I.enhancedArmor=15;I.critDamage=4;I.hp=15;I.mp=15;I.lightRadius=4;I.allResist=5;I.mpKill=3;}else{I.name="Sphinx Hair Cord";I.enhancedArmor=15;I.phyMit=2;I.cha=9;I.intel=9;I.stun=12;I.castingHaste=-40;setAllResists(NI,0,0,10,10,10);}}
if(N==="Azure Sash"){if(M.random()>.5){I.name="Grimsmoke Belt";I.enhancedArmor=24;I.defense=2;I.mpKill=7;I.phyMit=4;I.allResist=9;I.mp=25;}else{if(M.random()>.5){I.name="Sash of the Dragonborn";I.enhancedArmor=25;I.critChance=2;I.mpKill=7;I.haste=-50;I.globalHaste=-50;I.castingHaste=-50;I.resistFire=15;I.yPos=-192;I.mp=25;}else{I.name="Orator's Desire";I.enhancedArmor=45;I.castingHaste=-70;I.resistMagic=15;I.resistCold=10;I.mpKill=3;I.critDamage=5;I.silence=15;I.req=19;I.rarity=4;}}}
if(N==="Leather Belt"){if(M.random()>.5){I.name="Snakecord";I.enhancedArmor=30;I.agi=3;I.wis=5;I.hpRegen=1;I.magMit=4;I.resistPoison=9;I.poisonDamage=2;I.defense=2;I.wraith=4;I.req=12;}else{I.name="Thalen Belt";I.enhancedArmor=30;I.str=8;I.wis=12;I.intel=8;I.fireDamage=5;I.resistFire=12;I.silence=5;I.absorbFire=3;I.req=12;}}
if(N==="Heavy Belt"){if(M.random()>.5){if(M.random()>.5){I.name="Frenzied Sash of Kordata";I.enhancedArmor=30;I.haste=-120;I.globalHaste=-60;I.weight=1;I.req=21;}else{I.name="Vagabond's Cinch";I.enhancedArmor=45;I.resistFire=12;I.globalHaste=-100;I.lightRadius=10;I.magMit=3;I.doubleAttack=5;I.absorbMagic=3;I.req=11;I.rarity=4;}}else{I.name="Sash of Infinite Blows";I.enhancedArmor=30;I.haste=-70;I.globalHaste=-120;I.handtohand=5;I.dualWield=3;I.doubleAttack=3;I.leech=2;I.weight=1;I.req=21;}}
if(N==="Mesh Belt"){if(M.random()>.5){I.name="Archivist's Belt";I.enhancedArmor=30;I.allStats=5;I.wis=10;I.weight=1;I.hp=21;I.alteration=2;I.channeling=2;I.req=24;}else{I.name="Spinechill Belt";I.enhancedArmor=31;I.haste=-50;I.wis=10;I.resistCold=21;I.absorbCold=3;I.mpKill=5;I.mp=25;I.req=24;}}
if(N==="Splinted Belt"){if(M.random()>.5){I.name="Sage's Clamp";I.enhancedArmor=45;I.castingHaste=-50;I.haste=-80;I.goldFind=10;I.hpKill=5;I.dodge=3;I.resistLightning=11;I.req=6;I.rarity=4;}else{I.name="Martyr's Ideal";I.enhancedArmor=40;I.globalHaste=-80;I.hpRegen=2;I.agi=12;I.str=15;I.resistPoison=30;I.resistFire=12;I.req=16;I.rarity=4;}}
if(N==="Monarch Girdle"){if(M.random()>.5){if(M.random()>.5){I.name="Goldclasp";I.enhancedArmor=45;I.goldFind=14;I.silence=11;I.cold=11;I.haste=-50;I.weight=1;I.lightRadius=5;I.hpKill=3;I.req=20;}else{I.name="Sludged Girdle";I.enhancedArmor=45;I.cha=5;I.intel=12;I.hp=20;I.mp=10;I.enhancePoison=3;I.enhanceMagic=3;I.req=20;}}else{I.name="Bishop's Purity";I.enhancedArmor=55;I.globalHaste=-80;I.cold=15;I.magMit=5;I.resistMagic=25;I.resistFire=25;I.abjuration=4;I.req=20;I.rarity=4;}}
if(N==="Mithril Girdle"){if(M.random()>.5){I.name="Mithril Plated Girth";I.enhancedArmor=40;I.str=12;I.sta=9;I.dex=14;I.allResist=9;I.phyMit=6;I.mpKill=4;I.hpKill=5;I.req=26;}else{I.name="Guardian Girdle";I.enhancedArmor=40;I.hp=25;I.sta=8;I.cha=5;I.defense=3;I.hpKill=6;I.resistMagic=15;I.req=26;}}}
if(ni==="legs"){if(N==="Pants"){I.name="Blessed Chargers";I.enhancedArmor=20;I.channeling=6;I.lightRadius=6;I.allResist=4;I.mp=13;I.evocation=2;I.mpKill=5;I.intel=9;}
if(N==="Cotton Pants"){I.name="Gossamer Leggings";I.enhancedArmor=36;I.defense=2
I.dodge=2
I.runSpeed=4;I.hpKill=3;I.lightRadius=7;I.cha=10;I.abjuration=2;I.req=11;}
if(N==="Linen Pants"){I.name="Chancellor's Qualm";I.armor=16;I.defense=3;I.hp=26;I.dodge=7;I.channeling=5;I.evocation=3;I.critChance=3;I.req=20;I.rarity=4;}
if(N==="Silk Leggings"){I.name="Wyvern's Tail";I.enhancedArmor=45;I.runSpeed=10;I.dex=12;I.intel=30;I.allResist=7;I.req=23;I.rarity=4;}
if(N==="Fur Pants"){if(M.random()>.5){I.name="Feathered Leggings";I.enhancedArmor=25;I.sta=10;I.agi=5;I.hpKill=2;I.offense=2
I.runSpeed=5;I.stun=5;}else{I.name="Disciple's Oath";I.enhancedArmor=28;I.defense=2
I.offense=2;I.handtohand=3;I.hpRegen=2;I.thorns=3;I.physicalDamage=4;}}
if(N==="Wolf-Hide Pants "){I.name="Gatorscale Leggings";I.enhancedArmor=35;I.hp=16;I.sta=5;I.wis=10;I.expFind=5;I.defense=2;I.physicalDamage=4;I.req=9;}
if(N==="Sharkskin Legs"){I.name="Damask Leggings";I.enhancedArmor=42;I.critDamage=5;I.dex=9;I.phyMit=4;I.offense=3;I.agi=8;I.piercing=2;I.weight=1;I.req=16;}
if(N==="Studded Legs"){I.name="Gladewalker's Leggings";I.enhancedArmor=44;I.mp=58;I.wis=15;I.evocation=3;I.conjuration=3;I.mpRegen=3;I.absorbLightning=5;I.req=25;}
if(N==="Scaled Legs"){I.name="Barbed Legplates";I.enhancedArmor=21;I.agi=7;I.thorns=4;I.expFind=7;I.defense=2;I.coldDamage=5;}
if(N==="Chausses"){I.name="Silver-Plated Leggings";I.enhancedArmor=30;I.mp=16;I.wis=8;I.mpKill=3;I.expFind=7;I.defense=2;I.coldDamage=5;I.req=13;}
if(N==="Kusazuri"){I.name="Emissary's Poise";I.enhancedArmor=45;I.allSkills=1;I.allStats=10;I.absorbCold=4;I.thorns=8;I.magMit=4;I.resistMagic=20;I.req=24;I.rarity=4;}
if(N==="Poleyn"){I.name="Black Chitin Leggings";I.enhancedArmor=30;I.mp=16;I.wis=9;I.mpKill=5;I.silence=9;I.resistPoison=11;I.resistFire=11;I.conjuration=4;I.alteration=3;I.req=22;}
if(N==="Cobalt Legplates"){I.name="Dauntless Legplates";I.enhancedArmor=30;I.hp=16;I.str=9;I.hpKill=2;I.lightningDamage=3;I.stun=5;I.fear=11;}
if(N==="Iron Legplates"){I.name="Bishop's Merit";I.enhancedArmor=40;I.allStats=7;I.mpRegen=3;I.wis=14;I.str=20;I.resistPoison=50;I.req=11;I.rarity=4;}
if(N==="Mithril Legplates"){I.name="Golem's Crust";I.enhancedArmor=45;I.attack=12;I.alteration=4;I.allSkills=3;I.stun=30;I.cold=30;I.req=20;I.rarity=4;}
if(N==="Royal Legplates"){I.name="Icy Greaves";I.enhancedArmor=43;I.mp=30;I.critDamage=8;I.mpKill=5;I.resistCold=11;I.absorbCold=4;I.coldDamage=6;I.cold=13;I.req=22;}}
if(ni==="boots"){if(N==="Boots"){if(M.random()>.5){I.name="Lavaspur";I.enhancedArmor=33;I.dex=8;I.evocation=1;I.intel=8;I.defense=2;I.fireDamage=3;I.resistFire=15;I.req=8;}else{I.name="Firewalker Boots";I.enhancedArmor=37;I.evocation=2;I.allStats=4;I.critChance=2;I.enhanceFire=2;I.resistFire=20;I.req=8;}}
if(N==="Light Boots"){if(M.random()>.5){I.name="Golden Baelor Boots";I.enhancedArmor=45;I.hp=16;I.wis=15;I.intel=15;I.allSkills=1;I.absorbFire=3;I.resistFire=14;I.silence=7;I.req=26;}else{I.name="Amice-Lined Shoes";I.enhancedArmor=42;I.hp=15;I.allStats=5;I.dodge=2;I.evocation=3;I.resistPoison=13
I.resistCold=18;I.cold=15;I.req=26;}}
if(N==="Heavy Boots"){if(M.random()>.5){I.name="Vagabond's Voyage";I.armor=24;I.runSpeed=28;I.allStats=6;I.lightRadius=13;I.fear=12;I.allResist=7;I.req=24;I.rarity=4;}else{I.name="Boots of the Destroyer";I.enhancedArmor=25;I.str=10;I.sta=15;I.twoHandSlash=4;I.twoHandBlunt=4;I.runSpeed=12;I.hp=15;I.attack=5;I.req=9;}}
if(N==="Sharkskin Boots"){if(M.random()>.5){I.name="Craftsman's Boots";I.enhancedArmor=40;I.goldFind=9;I.agi=15;I.wis=5;I.runSpeed=11;I.stun=5;I.offense=2;I.weight=1;I.flavorText="A legendary item preferred by adventurers of all types. Its ability to whisk its owner away to safety is widely regarded.";I.req=21;}else{I.name="Gorilla-Hide Boots";I.enhancedArmor=40;I.str=11;I.agi=9;I.sta=11;I.runSpeed=15;I.parry=3;I.attack=5;I.req=21;}}
if(N==="Chain Boots"){if(M.random()>.5){I.name="Treads of Vergundi";I.enhancedArmor=27;I.hp=17;I.poisonDamage=4;I.hpKill=4;I.resistPoison=9;I.resistFire=9;I.runSpeed=15;I.req=8;}else{I.name="Emissary's Finesse";I.armor=25;I.runSpeed=35;I.conjuration=3;I.offense=3;I.allResist=6;I.channeling=5;I.expFind=8;I.req=14;I.rarity=4;}}
if(N==="Sovereign Boots"){if(M.random()>.5){I.name="Dwarven Militia Boots";I.enhancedArmor=44;I.hp=17;I.str=10;I.dex=15;I.allResist=9;I.critDamage=5;I.flavorText="Boots of a Dwarven nobleman that haunted the basement of Unrest.";I.req=20;}else{I.name="Charred Boots";I.enhancedArmor=44;I.abjuration=4;I.channeling=6;I.absorbFire=5;I.agi=7;I.resistFire=21;I.resistPoison=15;I.req=20;}}
if(N==="Steel Boots"){if(M.random()>.5){I.name="Goblin Captain's Boots";I.enhancedArmor=30;I.hp=16;I.mp=16;I.magMit=2;I.phyMit=3;I.critDamage=7;I.lightRadius=-3;I.offense=2;I.req=7;}else{I.name="Greenmist Boots";I.enhancedArmor=30;I.hp=20;I.mp=20;I.str=10;I.sta=10;I.intel=10;I.agi=10;I.resistPoison=20;I.req=7;}}
if(N==="Sabatons"){if(M.random()>.5){I.name="Minotaur's Hooves";I.enhancedArmor=35;I.runSpeed=20;I.resistFire=11;I.expFind=8;I.agi=12;I.hp=15;I.dodge=3;I.req=15;I.rarity=4;}else{I.name="Boots of the Righteous";I.enhancedArmor=30;I.str=19;I.wis=14;I.abjuration=4;I.alteration=3;I.enhanceMagic=2;setAllStatus(NI,15,15,15,15);I.req=11;}}}
if(ni==="weapons"){if(nt==="slashed"){if(N==="Sword"){I.name="Gladius";I.ias=.05+(2*.05);I.enhancedDamage=3;I.magMit=4;I.agi=7;I.dex=7;I.sta=7;I.critDamage=5;I.magicDamage=7;}
if(N==="Scimitar"){I.name="Iceshard Scimitar";I.enhancedDamage=4;I.hp=16;I.allStats=5;I.lightRadius=7;I.mpKill=4;I.resistCold=9;I.coldDamage=9;I.proc="Effect: Arctic Blast";I.req=12;}
if(N==="Axe"){if(M.random()>.5){I.name="Minotaur Battle Axe";I.ias=.05+(2*.05);I.enhancedDamage=3;I.str=10;I.sta=5;I.oneHandSlash=3;I.attack=3;I.stun=7;I.physicalDamage=9;I.req=13;I.flavorText="The axe of choice for bloodthirsty minotaurs.";}else{I.name="Minotaur's Gore";I.damage=11;I.delay=3200;I.coldDamage=12;I.resistLightning=20;I.enhancePhysical=3;I.critDamage=5;I.str=13;I.req=11;I.rarity=4;}}
if(N==="Claws"){I.name="Bladed Prenssor Claws";I.ias=.4;I.enhancedDamage=1;I.oneHandSlash=4;I.leech=4;I.dex=10;I.fear=8;I.haste=-40;I.allSkills=1;I.proc="Effect: Blistering Blood";I.poisonDamage=10;I.req=15;I.flavorText="Deep within the Temple of Prenssor, howls of terror echoed throughout the antechamber. Yet another victim to Sentoth's orgy of bloodletting.";}
if(N==="Long Sword"){I.name="Razormaw Cutlass";I.ias=.05+(2*.05);I.enhancedDamage=3;I.sta=13;I.enhancePhysical=2;I.magMit=5;I.thorns=7;I.leech=3;I.critChance=3;I.coldDamage=12;I.req=19;}
if(N==="Chokuto"){if(M.random()>.5){I.name="Short Sword of the Crokyn";I.enhancedDamage=5;I.globalHaste=-60;I.hpKill=4;I.leech=3;I.riposte=4;I.allResist=7;I.oneHandSlash=5;I.magicDamage=14;I.proc="Effect: Crokyn";I.req=26;I.flavorText="Crafted in secrecy by the anuran zod elites, the Short Sword of the Crokyn was entrusted to the ghoulish Anuran Lord for safe keeping.";}else{I.name="Soulgrinder";I.ias=.34;I.enhancedDamage=2;I.mpRegen=2;I.lightRadius=15;I.wraith=4;I.parry=5;I.resistMagic=17;I.oneHandSlash=5;I.abjuration=5;I.magicDamage=15;I.proc="Effect: Dismiss Undead";I.req=24;I.yPos=-704;I.flavorText="Wielded by an anuran with a penchant for justice, the Soulgrinder brings tidings of deliverance upon undead adversaries.";}}
if(N==="War Axe"){I.name="Silvery War Axe";I.ias=.05+(2*.05);I.enhancedDamage=3;I.magMit=5;I.channeling=5;I.dodge=5;I.castingHaste=-50;I.allResist=9;I.defense=4;I.wraith=3;I.coldDamage=25;I.req=24;}
if(N==="Kusanagi"){if(M.random()>.5){I.name="Chromium-Bladed Masamune";I.ias=.05+(2*.05);I.enhancedDamage=1;I.critChance=4;I.critDamage=5;I.allStats=5;I.wraith=3;I.enhancePhysical=3;I.allSkills=1;I.lightningDamage=11;I.req=26;I.flavorText="A treasure discovered by a captured servant beholden to the High Revenant Viston. Stolen from Revenant Viston's armory in the middle of the night.";}else{I.name="Spriggan's Blade";I.enhancedDamage=2;I.thorns=15;I.hpRegen=2;I.conjuration=3;I.evocation=3;I.phyMit=4;I.leech=5;I.enhancePhysical=2;I.critDamage=11;I.physicalDamage=15;I.req=25;I.proc="Effect: Entangling Roots";I.flavorText="This sinister blade was once the prized possession of an anuran elder in Kordata Ruins. Its thorny properties make attackers think twice.";}}}
if(nt==="crushed"){if(N==="Mace"){I.name="Sageknot";I.ias=.1;I.enhancedDamage=3;I.mp=16;I.wis=5;I.oneHandBlunt=2;I.phyMit=4;I.resistLightning=14;I.resistFire=7;}
if(N==="Club"){I.name="Brimthorn";I.ias=.1;I.enhancedDamage=3;I.globalHaste=-60;I.sta=8;I.critDamage=4;I.thorns=7;I.magMit=4;I.physicalDamage=7;I.flavorText="A piece of wood with a protruding nail. This makes it much more effective than a regular piece of wood.";}
if(N==="Morning Star"){if(M.random()>.5){I.name="Howling Mace";I.ias=.1;I.enhancedDamage=4;I.mpRegen=2;I.fear=5;I.enhanceMagic=2;I.wraith=3;I.alteration=3;I.evocation=3;I.magicDamage=9;I.proc="Effect: Howling Strike";I.flavorText="The slave revolt in Lanfeld Outpost was ultimately quelled, but not before this was discovered in the taskmaster's den.";I.req=12;}else{I.name="Sage's Wit";I.damage=12;I.delay=3900;I.mpRegen=3;I.mpKill=3;I.lightRadius=12;I.silence=15;I.stun=10;I.intel=13;I.req=11;I.rarity=4;}}
if(N==="Spiked Club"){if(M.random()>.5){I.name="Bloodrise";I.ias=.1;I.enhancedDamage=4;I.hp=11;I.hpKill=5;I.leech=3;I.lightRadius=8;I.attack=4;I.fireDamage=10;I.absorbFire=3;I.req=13;}else{I.name="Vagrant's Branch";I.damage=9;I.delay=2900;I.wis=20;I.intel=15;I.enhanceCold=3;I.critDamage=7;I.req=11;I.rarity=4;}}
if(N==="Jagged Star"){I.name="Cold Iron Morning Star";I.ias=.1;I.enhancedDamage=5;I.critDamage=6;I.wis=8;I.castingHaste=-50;I.resistCold=11;I.oneHandBlunt=3;I.wraith=3;I.coldDamage=10;I.proc="Effect: Boreal Blast";I.req=15;}
if(N==="Scepter"){if(M.random()>.5){I.name="Ebony Black Mace";I.ias=.1;I.enhancedDamage=5;I.allStats=5;I.mp=30;I.mpKill=4;I.castingHaste=-50;I.wraith=4;I.abjuration=3;I.physicalDamage=12;I.req=11;}else{I.name="Golem's Crag";I.damage=13;I.delay=3600;I.resistCold=30;I.wis=15;I.globalHaste=-60;I.phyMit=5;I.enhanceCold=4;I.req=22;I.rarity=4;}}
if(N==="Cudgel"){I.name="Orcish Warhammer";I.enhancedDamage=5;I.oneHandBlunt=3;I.enhancePhysical=4;I.critChance=5;I.fear=8;I.leech=3;I.globalHaste=-60;I.thorns=7;I.coldDamage=14;I.flavorText="Chief Grimden's preferred weapon when routing out invaders in Lanfeld Outpost.";I.req=21;}
if(N==="Caduceus"){I.name="Stormeye";I.enhancedDamage=3;I.allSkills=1;I.allStats=5;I.mpRegen=3;I.mpKill=6;I.castingHaste=-50;I.evocation=3;I.allResist=9;I.lightningDamage=11;I.proc="Effect: Thunderstruck";I.flavorText="A crackling aura of static electricity seems to grip its wielder's hand firmly in place.";I.req=23;}}
if(nt==="pierced"){if(N==="Dagger"){I.name="Whimsical Dagger";I.ias=.05+(2*.05);I.enhancedDamage=2;I.mp=16;I.mpKill=3;I.hpKill=6;I.expFind=5;I.goldFind=5;I.physicalDamage=7;}
if(N==="Dirk"){I.name="The Witch Doctor";I.ias=.05+(2*.05);I.enhancedDamage=2;I.resistCold=8;I.absorbPoison=3;I.enhancePoison=4;I.poisonDamage=9;I.resistPoison=11;I.proc="Effect: Rotting Flesh";}
if(N==="Kris"){I.name="Sacrificial Dagger";I.ias=.15+(2*.05);I.enhancedDamage=2;I.mp=21;I.intel=10;I.mpRegen=2;I.leech=3;I.wraith=3;I.hpKill=5;I.piercing=3;I.poisonDamage=11;I.proc="Effect: Brain Hew";I.flavorText="Carving out the heart of a newborn is grizzly business, but, in dark elf society, it is a requirement to ascend to High Priestess.";I.req=11;}
if(N==="Poignard"){I.name="Pugius";I.ias=M.round(.05+(2*.05));I.enhancedDamage=2;I.magMit=7;I.globalHaste=-50;I.critDamage=5;I.allSkills=1;I.allResist=5;I.magicDamage=10;I.req=13;}
if(N==="Rondel"){I.name="Shark Tooth";I.ias=.2+(2*.05);I.enhancedDamage=2;I.offense=3;I.globalHaste=-80;I.doubleAttack=3;I.leech=3;I.resistPoison=10;I.piercing=3;I.coldDamage=9;I.flavorText="Though lightweight and unorthodox, a serrated shark tooth attached to a hilt is a deadly weapon.";I.req=11;}
if(N==="Spear"){I.name="Trident of Edenburg";I.enhancedDamage=4;I.agi=8;I.sta=5;I.critChance=3;I.wraith=3;I.allResist=7;I.defense=3;I.coldDamage=14;I.proc="Effect: Stormy Seas";I.req=19;}
if(N==="Cinquedeas"){I.name="Serrated Bone Cinquedeas";I.ias=.1+(2*.05);I.enhancedDamage=2;I.agi=15;I.haste=-30;I.critDamage=6;I.piercing=4;I.physicalDamage=4;I.magicDamage=12;I.proc="Effect: Life Leech";I.flavorText="A weapon forged by the anuran necromancers of Kordata Ruins after some medical experiments on troll slaves.";I.req=22;}
if(N==="Stiletto"){if(M.random()>.5){I.name="Fanged Skull Carver";I.ias=.1;I.enhancedDamage=2;I.hpRegen=4;I.leech=4;I.fear=8;I.phyMit=6;I.critChance=6;I.critDamage=8;I.physicalDamage=11;I.flavorText="A lost treasure that was hidden deep in the nether chambers of Fahlnir Citadel. Long thought to be a mythical weapon, recent discoveries have proven otherwise.";I.req=31;}else{I.name="Martyr's Shiv";I.damage=7;I.delay=2200;I.leech=3;I.expFind=7;I.magMit=3;I.lightRadius=7;I.poisonDamage=12;I.req=24;I.rarity=4;}}}
if(nt==="cleaved"){if(N==="Giant Sword"){I.name="Obsidian Flamberge";I.ias=.05+(2*.05);I.enhancedDamage=4;I.expFind=5;I.allStats=5;I.leech=3;I.critChance=4;I.expFind=7;I.twoHandSlash=3;I.fireDamage=11;}
if(N==="Giant Axe"){I.name="Silvery Two-Handed Axe";I.ias=.05+(2*.05);I.enhancedDamage=4;I.mp=14;I.hp=11;I.allStats=5;I.allResist=9;I.allSkills=1;I.coldDamage=24;I.req=11;}
if(N==="Champion Sword"){I.name="Blackened Iron Bastard Sword";I.ias=.05+(2*.05);I.enhancedDamage=4;I.hp=21;I.defense=4;I.parry=4;I.twoHandSlash=4;I.physicalDamage=28;I.req=13;}
if(N==="Bastard Sword"){if(M.random()>.5){I.name="Gigantic Frostreaper";I.ias=.05+(2*.05);I.enhancedDamage=6;I.hp=25;I.leech=4;I.doubleAttack=3;I.allStats=9;I.absorbCold=4;I.resistCold=11;I.coldDamage=36;I.proc="Effect: Gust of Everfrost";I.flavorText="The weapon of choice for adventurous Barbarians seeking to lay waste to odious vermin in the frigid north.";I.req=16;}else{I.name="Bishop's Justice";I.damage=19;I.delay=4000;I.magicDamage=40;I.twoHandSlash=5;I.riposte=8;I.doubleAttack=6;I.allResist=7;I.req=11;I.rarity=4;}}
if(N==="Gothic Axe"){I.name="Executioner's Axe";I.enhancedDamage=9;I.mp=16;I.str=25;I.critDamage=13;I.fear=5;I.twoHandSlash=3;I.physicalDamage=42;I.leech=7;I.flavorText="The howls of terror can scarcely be heard from the anuran executioner's vestibule. The encrusted blood leaves few doubts about its deeds.";I.req=21;}
if(N==="Katana"){I.name="Mithril Two-Handed Sword";I.ias=.1+(2*.05);I.enhancedDamage=5;I.fireDamage=43;I.allResist=14;I.haste=-80;I.wraith=7;I.critChance=7;I.offense=4;I.doubleAttack=8;I.req=23;}
if(N==="Colossus Sword"){I.name="Lamentation Blade";I.ias=.05+(2*.05);I.enhancedDamage=5;I.absorbCold=5;I.str=23;I.leech=7;I.wraith=7;I.sta=23;I.allResist=14;I.attack=12;I.coldDamage=46;I.proc="Effect: Wailing Sorrow";I.flavorText="Vera Sintella knew that she would never be fully trusted. Revenant Viston entrusted his inner sanctum to the Blood Guardians.";I.req=25;}
if(N==="Mythical Sword"){I.name="Razing Sword of Carthenage";I.ias=.05+(2*.05);I.enhancedDamage=3;I.absorbFire=5;I.critDamage=10;I.critChance=9;I.allStats=13;I.allSkills=2;I.resistFire=28;I.resistMagic=28;I.physicalDamage=36;I.flavorText="Officers of the Fire Giants of Ashenflow Peak have been sighted wielding this blade in defense of Highlord Szarthax's Lair.";I.req=29;}}
if(nt==="staff"){if(N==="Staff"){I.name="Runed Totem Staff";I.mp=16;I.hp=16;I.wis=10;I.intel=10;I.castingHaste=(5)*(-10);I.magicDamage=11;I.resistMagic=9;I.expFind=9;}
if(N==="Runic Staff"){I.name="Bane Ash";I.mp=25;I.castingHaste=(5)*(-10);I.mpRegen=4;I.critChance=3;I.resistFire=11;I.fireDamage=25;I.silence=9;I.coldDamage=10;}
if(N==="Cedar Staff"){I.name="Serpent Lord";I.mp=16;I.allStats=10;I.enhancePoison=5;I.poisonDamage=23;I.leech=5;I.wraith=5;I.mpKill=15;I.resistPoison=40;I.req=14;}
if(N==="Quarterstaff"){I.name="Spire of Sentoth";I.mp=25;I.allSkills=1;I.enhanceLightning=5;I.mpRegen=7;I.intel=13;I.phyMit=5;I.lightningDamage=25;I.resistLightning=43;I.silence=12;I.req=17;}
if(N==="Cosmic Staff"){I.name="Staff of the Sentinel";I.mp=36;I.wis=11;I.intel=11;I.castingHaste=(9)*(-10);I.stun=9;I.magicDamage=42;I.silence=13;I.lightRadius=15;I.allSkills=1;I.alteration=3;I.flavorText="A knowing glance seemed to confirm her suspicions. Even in private it seemed to know her inner-most thoughts.";I.req=22;}
if(N==="Archon Staff"){I.name="The Salamander";I.mp=50;I.mpRegen=8;I.enhanceFire=5;I.evocation=3;I.channeling=3;I.conjuration=3;I.wraith=7;I.leech=7;I.castingHaste=(10)*(-10);I.fireDamage=48;I.allSkills=2;I.proc="Effect: Hydra Bolt";I.req=25;I.flavorText="Wrought from the netherworld and born once again with the blood of serpents, the reckoning is upon us and, this time, we came prepared.";}}
if(nt==="smashed"){if(N==="Giant Mace"){I.name="Crushflange";I.ias=.1+(2*.05);I.enhancedDamage=5;I.magicDamage=14;I.str=15;I.sta=6;I.lightRadius=8;I.stun=14;I.resistFire=11;I.critDamage=14;}
if(N==="Auric Maul"){I.name="Runic Warhammer";I.ias=.1+(2*.05);I.enhancedDamage=5;I.hpRegen=4;I.critChance=4;I.sta=8;I.wis=14;I.magMit=8;I.magicDamage=11;}
if(N==="Mallet"){I.name="Midnight Mallet";I.ias=.1+(2*.05);I.enhancedDamage=4;I.wraith=5;I.globalHaste=-50;I.phyMit=8;I.allSkills=1;I.defense=4;I.attack=4;I.coldDamage=23;I.flavorText="In darkness the werewolves and vampires swarmed about, yet they vanish like phantoms at dawn. Evil cannot withstand the holy fires of Yentus.";I.req=13;}
if(N==="Ogre Maul"){I.name="Ogre War Maul";I.ias=.15+(2*.05);I.enhancedDamage=3;I.leech=7;I.str=30;I.sta=30;I.stun=15;I.critDamage=14;I.physicalDamage=21;I.req=17;}
if(N==="Great Maul"){I.name="Bonesnap";I.ias=.2;I.enhancedDamage=4;I.defense=5;I.str=25;I.dex=15;I.leech=6;I.resistFire=25;I.resistCold=25;I.allSkills=3;I.physicalDamage=25;I.req=19;}
if(N==="Sledgehammer"){I.name="Blighthammer";I.ias=.1+(2*.05);I.enhancedDamage=5;I.critDamage=11;I.allStats=11;I.leech=7;I.wraith=9;I.fear=12;I.alteration=5;I.conjuration=8;I.poisonDamage=45;I.proc="Effect: Wretched Plague";I.req=22;}
if(N==="Umbral Hammer"){I.name="Steeldriver";I.ias=.1+(2*.05);I.enhancedDamage=3;I.critChance=9;I.critDamage=10;I.leech=7;I.twoHandBlunt=6;I.doubleAttack=7;I.riposte=5;I.physicalDamage=45;I.flavorText="Pain. Suffering. Despair. Crushing all in its path without mercy.";I.req=25;}
if(N==="Thunder Maul"){I.name="Gerke's Toy";I.enhancedDamage=5;I.allStats=13;I.wraith=9;I.hpRegen=5;I.haste=-60;I.critChance=10;I.twoHandBlunt=5;I.physicalDamage=55;I.proc="Effect: Thunderstorm";I.flavorText="Once in a while, Gerke is seen wandering the plains looking for lions to smash. His penchant for squishing hapless adventurers earned him an ignoble reputation.";I.req=28;}}}
if(ni==="shield"){if(nt==="shield"){if(N==="Buckler"){if(M.random()>.5){I.name="Bark Shield";I.enhancedArmor=24;I.mp=16;I.agi=15;I.lightningDamage=2;I.expFind=7;I.leech=4;I.alteration=2;I.thorns=4;}else{I.name="Vagrant's Slab";I.armor=25;I.resistCold=25;I.resistFire=25;I.resistLightning=25;I.allStats=10;I.allSkills=1;I.hpRegen=2;I.req=12;I.rarity=4;}}
if(N==="Small Shield"){I.name="Shiny Brass Shield";I.enhancedArmor=28;I.hp=11;I.phyMit=5;I.magMit=5;I.leech=5;I.hpKill=7;I.critDamage=5;I.resistMagic=11;}
if(N==="Kite Shield"){I.name="Singed Guardian Shield";I.enhancedArmor=30;I.mp=16;I.wis=15;I.castingHaste=-60;I.absorbFire=3;I.fireDamage=5;I.resistFire=14;I.hpKill=9;I.req=11;}
if(N==="Round Shield"){I.name="Scute Shield";I.enhancedArmor=40;I.sta=11;I.oneHandBlunt=3;I.sta=10;I.defense=3;I.cold=9;I.globalHaste=(9)*(-10);I.hpKill=5;I.req=14;}
if(N==="Gothic Shield"){I.name="Crested Viston Shield";I.enhancedArmor=35;I.hp=25;I.dex=12;I.hpKill=5;I.fear=8;I.leech=5;I.globalHaste=(10)*(-10);I.resistMagic=10;I.resistLightning=10;I.resistPoison=10;I.req=19;}
if(N==="Crown Shield"){I.name="Chitin Shell Shield";I.enhancedArmor=40;I.hp=16;I.mp=25;I.critChance=5;I.haste=(5)*(-10);I.resistPoison=9;I.cold=11;I.poisonDamage=9;I.req=21;}
if(N==="Aegis"){I.name="The Ward";I.enhancedArmor=45;I.defense=5;I.str=15;I.lightRadius=15;I.oneHandBlunt=4;I.leech=5;I.magMit=8;I.silence=13;I.allResist=14;I.req=23;}
if(N==="Monarch"){I.name="Steelclash";I.enhancedArmor=50;I.phyMit=9;I.parry=5;I.oneHandBlunt=5;I.castingHaste=-80;I.lightRadius=9;I.leech=5;I.wraith=5;I.allSkills=1;I.allResist=12;I.req=26;}}
if(nt==="offhand"){if(N==="Stein"){if(M.random()>.5){I.name="Stein of Gorgek";I.hp=21;I.mp=21;I.dex=10;I.intel=15;I.mpRegen=2;I.castingHaste=-40;I.expFind=5;I.alteration=3;}else{I.name="Drunkard's Stein";I.enhanceMagic=2;I.mpRegen=2;I.sta=14;I.cha=11;I.runSpeed=5;I.stun=7;I.goldFind=7;I.hpRegen=2;}}
if(N==="Dark Orb"){if(M.random()>.5){I.name="Shimmering Orb";I.armor=15;I.hp=23;I.conjuration=4;I.mpKill=9;I.mp=36;I.castingHaste=-70;I.resistPoison=10;I.req=10;}else{I.name="Chancellor's Bias";I.castingHaste=-120;I.mp=55;I.hp=40;I.silence=20;I.enhancePoison=3;I.mpKill=12;I.req=11;I.rarity=4;}}
if(N==="Ancient Tome"){I.name="Testament of Rinara";I.mp=28;I.mp=36;I.intel=12;I.cha=20;I.castingHaste=-60;I.allSkills=1;I.mpRegen=3;I.req=13;}
if(N==="Totem"){I.name="Paw of Rockgard";I.mp=40;I.wis=14;I.sta=10;I.agi=9;I.silence=12;I.castingHaste=-50;I.mpRegen=2;I.resistPoison=11;I.req=16;}
if(N==="Crystal Ball"){if(M.random()>.5){I.name="Manastone";I.fear=10;I.allStats=8;I.mp=55;I.channeling=6;I.lightRadius=12;I.mpRegen=7;I.mpKill=12;I.castingHaste=(9)*(-10);I.silence=9;I.stun=10;I.flavorText="A legendary stone known for its mana restoration properties. Some believe that an anuran wizard inverted the energy from an evil eye's soul inside.";I.req=22;}else{I.name="Wyvern's Eye";I.hp=60;I.mp=25;I.mpRegen=5;I.mpKill=5;I.castingHaste=-110;I.enhanceLightning=5;I.req=20;I.rarity=4;}}
if(N==="Skull"){I.name="Skull of Fintler";I.mp=45;I.critDamage=6;I.mpKill=4;I.hpKill=8;I.conjuration=4;I.castingHaste=(9)*(-10);I.silence=13;I.resistPoison=21;I.req=23;}
if(N==="Emblazoned Orb"){if(M.random()>.5){I.name="Glowing Black Stone";I.mp=45;I.intel=14;I.mpKill=9;I.mpRegen=4;I.critChance=3;I.silence=13;I.evocation=8;I.resistMagic=23;I.flavorText="A powerful stone possessed by a hapless, quirky gnome. Nobody knows for sure how she got her hands on it.";I.req=25;}else{I.name="Magnate's Sapphire";I.resistCold=15;I.mp=60;I.hp=35;I.mpRegen=4;I.critChance=5;I.castingHaste=-70;I.globalHaste=-120;I.req=21;I.rarity=4;}}
if(N==="Idol"){I.name="Pearl Fahlnir Totem";I.mp=50;I.str=-9;I.wis=11;I.allSkills=1;I.allResist=14;I.castingHaste=(9)*(-10);I.req=28;}}}
if(nt==="range"){if(N==="Short Bow"){I.name="Pluckstring";I.ias=.15;I.enhancedDamage=3;I.hp=14;I.agi=5;I.mpKill=2;I.lightRadius=5;I.attack=2;I.coldDamage=5;}
if(N==="Hunter's Bow"){I.name="Chirpstrike";I.ias=.15;I.enhancedDamage=3;I.attack=4;I.critDamage=3;I.hpKill=2;I.expFind=5;I.resistMagic=9;I.physicalDamage=4;}
if(N==="Composite Bow"){I.name="Runed Oak Bow";I.ias=.15;I.enhancedDamage=3;I.alteration=1;I.wis=5;I.resistCold=8;I.expFind=7;I.defense=2;I.coldDamage=5;I.req=13;}
if(N==="Siege Bow"){I.name="Raven Maw Bow";I.ias=.15;I.enhancedDamage=3;I.attack=2;I.str=6;I.dex=6;I.lightRadius=5;I.channeling=2;I.fireDamage=3;I.req=15;}
if(N==="Astral Bow"){I.name="Larktwitter Bow";I.ias=.15;I.enhancedDamage=3;I.mp=14;I.wis=7;I.magMit=3;I.resistMagic=9;I.absorbMagic=3;I.flavorText="The bow of a mischievous fairy known to flutter about Tendolin Meadows.";I.req=17;}
if(N==="Gothic Bow"){I.name="Stormstrike Bow";I.ias=.15;I.enhancedDamage=3;I.mp=16;I.parry=3;I.attack=3;I.str=12;I.lightningDamage=3;I.resistLightning=9;I.req=20;}
if(N==="Ward Bow"){I.name="Qalonscathe";I.ias=.15;I.enhancedDamage=3;I.critDamage=5;I.attack=5;I.dex=12;I.resistFire=9;I.fireDamage=3;I.req=22;}
if(N==="Hydra Bow"){I.name="Stormcaller Bow";I.ias=.15;I.enhancedDamage=2;I.critChance=3;I.absorbLightning=5;I.lightningDamage=5;I.hpKill=5;I.resistCold=9;I.flavorText="A bow imbued by Rinara to strike down on the Godless aberrations of Vandamor.";I.req=25;}}
if(nt==="trinket"){if(N==="Trinket"){if(M.random()>.5){I.name="Shyclasp's Fortune";I.goldFind=9;I.cha=10;I.sta=10;I.resistCold=4;I.resistLightning=3;I.resistPoison=7;I.resistFire=9;I.flavorText="A lucky charm used by an old drunkard while gambling in the desert.";I.req=13;}else{I.name="Emissary's Craft";I.allSkills=1;I.resistPoison=15;I.resistFire=10;I.dodge=3;I.evocation=5;I.req=12;I.rarity=4;}}
if(N==="Memento"){if(M.random()>.5){I.name="Omen of Will";I.mp=9;I.hpKill=7;I.mpKill=2;I.expFind=5;I.cold=9;I.defense=2;I.sta=5;I.req=19;}else{I.name="Magnate's Lamp";I.expFind=9;I.goldFind=12;I.lightRadius=12;I.hp=45;I.mp=25;I.resistFire=50;I.req=15;I.rarity=4;}}
if(N==="Charm"){I.name="Signet of the Scaled Order";I.mp=16;I.offense=2;I.evocation=3;I.fear=8;I.silence=9;I.absorbFire=2;I.absorbCold=2;I.resistFire=11;I.resistCold=11;I.flavorText="The signet used to identify fellow dragon luminaries.";I.req=30;}}}
if(newQuality===1){if(ni==="helmet"){if(N==="Hood"){I.name="Vampire Cowl";I.enhancedArmor=65
I.coldDamage=5;I.sta=19;I.leech=3;I.wraith=3;I.phyMit=2;I.magMit=2;I.flavorText="This vampiric relic is a favorite amongst the cold-blooded harbingers that wander the depths of Viston's Redoubt.";I.req=36;}
if(N==="Cap"){if(M.random()>.5){I.name="Peasant Crown";I.enhancedArmor=60;I.allSkills=1;I.runSpeed=10;I.hpRegen=4;I.intel=19;I.sta=19;I.req=38;}else{I.name="Willow's Flare";I.enhancedArmor=90;I.enhanceFire=5;I.allSkills=2;I.resistFire=24;I.resistLightning=14;I.thorns=25;I.allStats=10;I.mpKill=3;I.absorbFire=3;I.req=42;I.rarity=4;}}
if(N==="Bandana"){I.name="Ebony Headband";I.enhancedArmor=65
I.fear=6;I.handtohand=4;I.attack=6;I.expFind=5;I.hp=35;I.globalHaste=-30;I.req=40;}
if(N==="Diadem"){if(M.random()>.5){I.name="Crystal Chitin Circlet";I.enhancedArmor=75;I.phyMit=4;I.abjuration=5;I.defense=5;I.allSkills=1;I.dex=16;I.abjuration=4;I.req=42;}else{I.name="Venova's Halo";I.enhancedArmor=90;I.allSkills=5;I.enhanceMagic=5;I.allResist=14;I.hp=35;I.mp=65;I.resistLightning=55;I.req=42;I.rarity=4;}}
if(N==="Dark Hood"){I.name="Blood Harvester";I.enhancedArmor=75;I.conjuration=4;I.hpKill=7;I.hpRegen=3;I.hp=30;I.leech=3;I.resistCold=21;I.req=44;}
if(N==="Coronet"){I.name="Crown of Thieves";I.enhancedArmor=75;I.dodge=4;I.goldFind=15;I.dex=25;I.hp=35;I.resistFire=33;I.leech=4;I.req=46;}
if(N==="Miter"){if(M.random()>.5){I.name="Halo of the Enlightened";I.enhancedArmor=75;I.critChance=3;I.sta=15;I.alteration=4;I.mp=42;I.allResist=10;I.silence=6;I.lightRadius=10;I.req=48;}else{I.name="Satyr's Turban";I.enhancedArmor=90;I.allSkills=1;I.resistMagic=22;I.resistFire=25;setAllStatus(NI,12,12,12,12);I.defense=8;I.mp=55;I.intel=25;I.req=43;I.rarity=4;}}
if(N==="Astral Hood"){if(M.random()>.5){I.name="Acolyte's Sacrament Hood";I.allSkills=2;I.alteration=5;I.enhanceMagic=2;I.hpKill=8;I.hp=40;I.mp=25;I.lightRadius=6;I.resistMagic=40;I.req=50;}else{I.name="Malefactor's Terminal";I.enhancedArmor=90;I.allSkills=1;I.lightRadius=20;I.enhanceAll=3;I.absorbLightning=5;I.resistLightning=20;I.resistPoison=13;I.resistCold=13;I.allStats=5;I.req=46;I.rarity=4;}}
if(N==="Mail Hood"){I.name="Doomchains";I.enhancedArmor=65;I.allStats=11;I.allSkills=1;I.attack=7;I.allResist=9;I.critDamage=7;I.req=38;}
if(N==="Coif"){I.name="Gleaming Sundered Coif";I.enhancedArmor=75;I.critDamage=6;I.evocation=4;I.channeling=4;I.mpKill=4;I.hpKill=8;I.lightRadius=12;I.resistLightning=36;I.req=42;}
if(N==="Armet"){I.name="Hager's Sparring Helmet";I.enhancedArmor=75;I.critChance=3;I.oneHandSlash=4;I.wis=25;I.physicalDamage=5;I.allStats=12;I.allResist=8;I.req=46;}
if(N==="Sallet"){I.name="Indomitable Guise";I.enhancedArmor=75;I.thorns=12;I.weight=1;I.absorbCold=2;I.sta=24;I.hpRegen=4;I.allResist=14;I.req=50;}
if(N==="Burgonet"){if(M.random()>.5){I.name="Duke's Adoration";I.enhancedArmor=100;I.resistMagic=35;I.resistCold=20;I.resistPoison=15;I.wis=25;I.cold=21;I.hp=20;I.req=42;I.rarity=4;}else{I.name="Daimyo's Enso";I.enhancedArmor=90;I.enhancePhysical=5;I.enhanceFire=9;I.critChance=7;I.critDamage=15;I.runSpeed=15;I.cold=40;I.castingHaste=-100;I.allStats=13
I.req=44;I.rarity=4;}}
if(N==="Great Helm"){I.name="Stealskull";I.enhancedArmor=75;I.globalHaste=-80;I.defense=5;I.leech=4;I.wraith=4;I.hpKill=10;I.mpKill=5;I.hp=15;I.req=42;}
if(N==="Barbute"){if(M.random()>.5){I.name="Lustrous Brass Helm";I.enhancedArmor=75;I.allStats=10;I.silence=6;I.allResist=15;I.enhanceMagic=3;I.magMit=3;I.req=46;}else{I.name="Guardian's Merlon";I.enhancedArmor=90;I.allSkills=2;I.allResists=13;I.hp=66;I.globalHaste=-70;I.enhancePhysical=7;I.absorbMagic=5;I.critChance=9;I.str=45;I.magMit=5;I.req=46;I.rarity=4;}}
if(N==="Royal Helm"){I.name="Augur's Skull";I.enhancedArmor=90;I.allSkills=2;I.resistCold=21;I.resistPoison=35;setAllStatus(NI,9,9,9,9);I.intel=20;I.doubleAttack=6;I.enhanceAll=2;I.req=42;I.rarity=4;}}
if(ni==="neck"){if(nT<=58){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Bloodletter's Vial";I.allSkills=1;I.runSpeed=15;I.hpRegen=7;I.stun=16;I.cold=12;I.goldFind=24;I.critChance=5;I.doubleAttack=3;I.riposte=6;I.req=49;I.rarity=4;}
if(zoo===2){I.name="The Rising Sun";I.lightRadius=4;I.enhanceFire=3;I.hpRegen=5;I.fireDamage=8;I.absorbFire=3;I.req=38;}
if(zoo===3){I.name="Disciple's Symbol of Rinara";I.wis=35;I.hpRegen=5;I.resistLightning=50;I.thorns=15;I.enhanceLightning=5;I.req=40;}
if(zoo===4){if(M.random()>.5){I.name="Entariz's Talisman";I.resistMagic=35;I.runSpeed=10;I.critChance=3;I.intel=30;I.castingHaste=-60;I.req=40;}else{I.name="Satyr's Opulence";I.alteration=5;I.conjuration=5;I.resistMagic=43;I.resistCold=20;I.intel=46;I.mpRegen=4;I.enhanceMagic=4;I.req=45;I.rarity=4;}}
if(zoo===5){if(M.random()>.5){I.name="Necklace of Whispering Winds";I.lightningDamage=8;I.alteration=4;I.conjuration=4;I.silence=10;I.mpKill=5;I.expFind=3;I.req=40;}else{I.name="Baron's Cadenza";I.agi=22;I.cold=35;I.allSkills=2;I.cha=15;I.phyMit=5;I.hp=33;I.castingHaste=-120;I.wraith=4;I.req=47;I.rarity=4;}}}
if(nT>=59&&nT<=68){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Twinkling Fae Pendant";I.dex=25;I.agi=25;I.cha=25;I.lightRadius=9;I.oneHandSlash=4;I.resistLightning=35;I.req=42;}
if(zoo===2){I.name="Amulet of Bozrah";I.intel=33;I.resistMagic=40;I.conjuration=12;I.channeling=5;I.critDamage=5;I.flavorText="Rumors abound that this condemned item possesses a demonic power unknown to those outside the halls of necromancy.";I.req=42;}
if(zoo===3){I.name="Shadow Fang Necklace";I.attack=8;I.piercing=6;I.parry=5;I.hpKill=7;I.resistCold=32;I.agi=25;I.req=44;}
if(zoo===4){I.name="Amulet of the Storm";I.critChance=5;I.critDamage=10;I.castingHaste=-100;I.enhanceLightning=3;I.silence=12;I.absorbLightning=4;I.req=46;}
if(zoo===5){I.name="Mendicant's Agimat";I.alteration=7;I.abjuration=12;I.mpRegen=7;I.enhanceAll=3;I.resistCold=40;I.resistPoison=25;I.wis=25;I.castingHaste=-100;I.req=49;I.rarity=4;}}
if(nT>=69){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Kanthrixen's Talisman";I.piercing=7;I.haste=-50;I.poisonDamage=15;I.absorbPoison=5;I.str=35;I.req=46;}
if(zoo===2){I.name="Amulet of the Dreadgazer";I.defense=5;I.hp=45;I.allResist=13
I.offense=5;I.phyMit=3;I.stun=12;I.req=46;}
if(zoo===3){I.name="Kaedorn Badge of Honor";I.hp=55;I.mp=33;I.lightRadius=10;I.twoHandSlash=7;I.allResist=6;I.flavorText="Awarded by Miranda Crossheart to those that earn the Star Citizen award for each month. Typically awarded for cleansing the land of mischievous gnolls that terrorize the countryside.";I.req=48;}
if(zoo===4){I.name="Hematite Pentacle";I.mp=60;I.intel=20;I.evocation=8;I.conjuration=4;I.enhanceMagic=5;I.castingHaste=-80;I.lightRadius=-15;I.req=48;}
if(zoo===5){I.name="Duke's Laurel";I.allSkills=3;I.globalHaste=-100;I.castingHaste=-150;I.silence=15;I.stun=25;I.enhanceMagic=5;I.mpRegen=5;I.leech=3;I.req=43;I.rarity=4;}}}
if(ni==="ring"){if(nT<=58){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Gronk's Wedding Ring";I.str=15;I.attack=5;I.hp=20;I.stun=10;I.critDamage=10;I.flavorText='"Gronk make find of true love. Shiny make me strong. Broken Skull Clan no have ring like dis."';I.req=38;}
if(zoo===2){I.name="Augur's Pustule";I.allResist=10;I.absorbCold=5;I.leech=4;I.wraith=6;I.lightRadius=10;I.magMit=5;I.critChance=5;I.req=42;I.rarity=4;}
if(zoo===3){I.name="Willow's Seed";I.castingHaste=-60;I.absorbLightning=6;I.absorbCold=4;I.fear=20;I.mpRegen=3;I.hpRegen=3;I.allStats=7;I.req=42;I.rarity=4;}
if(zoo===4){I.name="Mendicant's Clover";I.haste=-80;I.mpRegen=7;I.leech=5;I.wis=15;I.intel=21;I.enhanceCold=5;I.critChance=3;I.req=42;I.rarity=4;}
if(zoo===5){I.name="Summoner's Gyre";I.castingHaste=-130;I.allSkills=3;I.hp=30;I.intel=15;I.critChance=5;I.conjuration=4;I.lightRadius=15;setAbsorbAll(NI,5);I.req=45;I.rarity=4;}}
if(nT>=59&&nT<=68){var zoo=~~(1+M.random()*(5));if(zoo===1){I.name="Daimyo's Miyabi";I.wraith=6;I.wis=20;I.agi=15;I.enhanceFire=3;I.str=12;I.doubleAttack=6;I.resistCold=20;I.resistLightning=20;I.req=46;I.rarity=4;}
if(zoo===2){I.name="Wraith's Lesion";I.hp=33;I.mp=20;I.castingHaste=-80;I.critDamage=12;I.magMit=4;I.intel=15;I.enhanceMagic=3;I.req=43;I.rarity=4;}
if(zoo===3){I.name="Venova's Eternity";I.haste=-50;I.castingHaste=-70;I.hpRegen=5;I.mpRegen=5;I.allStats=8;I.absorbMagic=4;I.enhanceMagic=2;I.req=42;I.rarity=4;}
if(zoo===4){I.name="Band of Screaming Winds";I.hp=25;I.mp=25;I.resistLightning=25;I.critDamage=10;I.critChance=3;I.req=46;}
if(zoo===5){I.name="Bloodletter's Clot";I.leech=12;I.agi=35;I.enhancePhysical=4;I.piercing=6;I.attack=15;I.dex=15;I.haste=-50;I.req=48;I.rarity=4;}}
if(nT>=69){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Ring of Rainbow Skies";I.offense=6;I.abjuration=6;I.allStats=7;I.allResist=11;I.req=48;}
if(zoo===2){I.name="Elusive Warping Ring";I.dodge=5;I.stun=5;I.runSpeed=8;I.dex=12;I.agi=15;I.haste=-40;I.req=48;}
if(zoo===3){I.name="Titan's Wrath";I.str=30;I.hp=25;I.critChance=3;I.stun=8;I.doubleAttack=8;I.req=50;}
if(zoo===4){I.name="Shirk's Wretched Ring";I.allStats=8;I.allResist=10;I.allSkills=1;I.haste=-30;I.req=50;}}}
if(ni==="shoulders"){if(N==="Cloth Drape"){I.name="Spectre's Drape";I.enhancedArmor=65
I.hp=35;I.dex=8;I.intel=15;I.silence=10;I.fear=10;I.resistMagic=20;I.req=36;}
if(N==="Woven Drape"){I.name="Gnome Prodigy's Mantle";I.enhancedArmor=65;I.evocation=3;I.intel=21;I.abjuration=3;I.resistLightning=24;I.mpRegen=2;I.mp=20;I.req=40;}
if(N==="Azure Shawl"){I.name="Summoner's Residue";I.enhancedArmor=90;I.allResist=13;I.alteration=3;I.abjuration=3;I.intel=30;I.silence=38;I.fear=25;I.hp=21;I.req=42;I.rarity=4;}
if(N==="Archon Shawl"){if(M.random()>.5){I.name="Shawl of the Siren";I.enhancedArmor=75;I.sta=25;I.cha=35;I.fear=8;I.resistCold=24;I.resistFire=24;I.channeling=5;I.req=48;}else{I.name="Willow's Frost";I.enhancedArmor=90;I.allResist=18;I.absorbCold=7;I.wis=36;I.enhanceCold=10;I.silence=33;I.magMit=5;I.stun=20;I.sta=11;I.req=46;I.rarity=4;}}
if(N==="Leather Shoulders"){I.name="Gaulite Pads";I.enhancedArmor=65
I.allStats=7
I.riposte=5;I.parry=5;I.physicalDamage=3;I.defense=5;I.phyMit=5;I.req=36;}
if(N==="Studded Shoulders"){I.name="Simmering Mantle";I.enhancedArmor=65;I.absorbFire=2;I.resistFire=30;I.enhanceFire=2;I.evocation=5;I.thorns=8;I.goldFind=15;I.req=40;}
if(N==="Spiked Shoulders"){I.name="Shang Zhou's Defiance";I.enhancedArmor=75;I.handtohand=10;I.agi=15;I.stun=16;I.resistMagic=35;I.critDamage=8;I.req=44;}
if(N==="Brigand Shoulders"){I.name="Everlasting Grace";I.enhancedArmor=75;I.allStats=10;I.alteration=6;I.channeling=6;I.silence=12;I.allResist=10;I.weight=1;I.req=48;}
if(N==="Scaled Mantle"){if(M.random()>.5){I.name="Doubtful Repent";I.enhancedArmor=65
I.mp=35;I.wis=12;I.dex=10;I.expFind=8;I.abjuration=8;I.resistPoison=40;I.req=36;}else{I.name="Mendicant's Albatross";I.enhancedArmor=90;I.allResist=14;I.enhanceCold=9;I.enhancePoison=5;I.castingHaste=-60;I.critChance=7;I.cold=30;I.silence=45;I.req=42;I.rarity=4;}}
if(N==="Chain Mantle"){I.name="Scavenger's Embrace";I.enhancedArmor=65;I.stun=10;I.critDamage=8;I.allResist=8;I.hpKill=5;I.leech=3;I.doubleAttack=6;I.attack=6;I.req=40;}
if(N==="Kusari Mantle"){I.name="Rowyl's Forged Mantle";I.enhancedArmor=75;I.hp=25;I.agi=10;I.dex=10;I.critChance=2;I.resistLightning=15;I.resistCold=25;I.req=44;}
if(N==="Laminar Mantle"){I.name="Blitzing Vambrace";I.enhancedArmor=75;I.hp=25;I.offense=5;I.attack=8;I.cold=12;I.expFind=7;I.resistCold=30;I.req=48;}
if(N==="Cobalt Spaulders"){I.name="Solitude's Penance";I.enhancedArmor=65
I.hp=20;I.defense=4;I.twoHandSlash=8;I.wis=15;I.thorns=12;I.req=36;}
if(N==="Mithril Pauldrons"){I.name="Herbignat's Evisceration";I.enhancedArmor=65;I.hp=25;I.str=15;I.conjuration=8;I.channeling=4;I.twoHandBlunt=8;I.resistCold=35;I.req=40;}
if(N==="Sode"){if(M.random()>.5){I.name="Beguiler's Sonnet";I.enhancedArmor=75;I.mp=20;I.dex=15;I.cha=15;I.goldFind=15;I.expFind=15;I.weight=1;I.req=44;}else{I.name="Duke's Proclamation";I.enhancedArmor=90;I.allResist=8;I.allStats=5;I.enhanceMagic=5;I.alteration=3;I.hpKill=8;I.absorbMagic=3;I.mpRegen=3;I.req=42;I.rarity=4;}}
if(N==="Monarch Pauldrons"){if(M.random()>.5){I.name="Wing of Victory";I.enhancedArmor=75;I.hpKill=10;I.str=15;I.dex=15;I.allSkills=2;I.allResist=12;I.req=48;}else{I.name="Guardian's Bastion";I.enhancedArmor=80;I.resistLightning=45;I.hp=35;I.absorbCold=5;I.req=42;I.rarity=4;}}}
if(ni==="back"){if(N==="Cape"){if(M.random()>.5){I.name="Hallowed Cloak";I.expFind=8;I.allStats=5;I.dex=5;I.hp=20;I.mp=20;I.allResist=5;I.silence=5;I.req=36;}else{I.name="Wraith's Pall";I.castingHaste=-200;I.intel=42;I.enhancePoison=7;I.enhanceFire=4;I.critChance=5;I.sta=17;I.lightRadius=15;I.allSkills=3;I.req=36;I.rarity=4;}}
if(N==="Cloak"){I.name="Cloak of Autumn";I.hpRegen=2;I.abjuration=4;I.alteration=4;I.thorns=15;I.resistFire=25;I.resistCold=25;I.req=37;}
if(N==="Woven Cloak"){if(M.random()>.5){I.name="Cloak of Penitence";I.intel=15;I.sta=12;I.cha=12;I.silence=12;I.enhanceMagic=2;I.magicDamage=5;I.req=38;}else{I.name="Duke's Ascension";I.haste=-60;I.globalHaste=-100;I.mp=50;I.dex=11;I.agi=12;I.str=11;I.evocation=5;I.req=42;I.rarity=4;}}
if(N==="Fur-Lined Cloak"){I.name="Cloak of Madness";I.fireDamage=5;I.hpKill=10;I.defense=4;I.offense=4;I.allResist=10;I.haste=-50;I.req=39;}
if(N==="Drake-hide Cloak"){I.name="Winter's Death";I.goldFind=12;I.piercing=7;I.absorbCold=3;I.coldDamage=10;I.resistCold=40;I.enhanceCold=3;I.req=40;}
if(N==="Brigand's Shroud"){I.name="Venova's Wings";I.castingHaste=-120;I.str=11;I.agi=9;I.allResist=10;I.hp=27;setAllStatus(NI,20,20,20,20);I.req=42;I.rarity=4;}
if(N==="Regal Shroud"){I.name="Monarch's Ceremonial Shroud";I.cha=20;I.sta=15;I.mp=20;I.parry=4;I.channeling=6;I.critDamage=7;I.lightRadius=12;I.req=41;}
if(N==="Orcish Cloak"){I.name="Brazen Rectifier's Cloak";I.hp=25;I.mp=25;I.mpKill=12;I.oneHandBlunt=8;I.fear=12;I.stun=8;I.req=42;}
if(N==="Elven Shroud"){I.name="Nature's Punishment";I.hpRegen=3;I.silence=12;I.allStats=12;I.enhanceLightning=5;I.absorbLightning=3;I.req=43;}
if(N==="Emerald Cloak"){if(M.random()>.5){I.name="Rinara's Loathing";I.wis=20;I.alteration=5;I.thorns=20;I.critChance=3;I.critDamage=8;I.resistLightning=50;I.req=43;}else{I.name="Daimyo's Wabi";I.haste=-80;I.castingHaste=-120;I.critDamage=8;I.dex=19;I.hp=16;I.mp=34;I.lightRadius=10;setAllStatus(NI,13,13,13,13);I.req=43;I.rarity=4;}}
if(N==="Aviak Cloak"){I.name="Cloak of the Underdark";I.attack=10;I.dodge=4;I.offense=4;I.dex=20;I.fear=10;I.poisonDamage=12;I.resistPoison=30;I.req=44;}
if(N==="Chlamys"){I.name="Molting Griffon Cloak";I.offense=5;I.hp=25;I.runSpeed=5;I.critChance=3;I.resistLightning=25;I.resistPoison=12;I.req=44;}
if(N==="Dragon Cape"){I.name="Rukishna Cloak";I.channeling=5;I.evocation=5;I.wis=15;I.intel=15;I.mpKill=5;I.resistFire=55;I.req=45;}
if(N==="Umbral Shroud"){I.name="Excrescent Cloak";I.allStats=5;I.allSkills=2;I.allResist=10;I.expFind=5;I.lightRadius=5;I.req=46;}
if(N==="Archon Cloak"){I.name="Nordic Sanctuary";I.abjuration=6;I.allStats=6;I.hp=30;I.resistCold=60;I.coldDamage=15;I.absorbCold=5;I.req=47;}
if(N==="Astral Cloak"){I.name="Solfeaux Berserker Cloak";I.str=9;I.dex=9;I.haste=-120;I.globalHaste=-60;I.sta=9;I.agi=9;I.hp=50;I.flavorText='A anuran relic imported from the far reaches of Vandamor. Rumored to be enchanted by a high-ranking anuran shaman.';I.req=47;}}
if(ni==="chest"){if(N==="Elven Robe"){I.name="Robe of the Blighted";I.enhancedArmor=65
I.sta=10;I.mp=100;I.intel=10;I.resistPoison=30;I.resistLightning=30;I.silence=15;I.flavorText='For a brief time this was the favored robe of Revenant Viston.';I.req=36;}
if(N==="Silk Robe"){if(M.random()>.5){I.name="The Spirit Shroud";I.enhancedArmor=65;I.magMit=12;I.allSkills=1;I.hpRegen=5;I.absorbCold=5;I.cold=20;I.req=40;}else{I.name="Satyr's Delusion";I.enhancedArmor=90;I.allSkills=3;I.allResist=13
I.allStats=13;setAllStatus(NI,10,10,10,10);I.enhanceAll=3;I.castingHaste=-100;I.lightRadius=10;I.req=47;I.rarity=4;}}
if(N==="Linen Robe"){if(M.random()>.5){I.name="Skin of the Serpent Lord";I.enhancedArmor=75;I.magMit=9;I.absorbPoison=2;I.poisonDamage=25;I.allSkills=1;I.castingHaste=-50;I.allResist=10;I.req=44;}else{I.name="Wraith's Husk";I.enhancedArmor=90;I.magMit=10;I.phyMit=24;I.hp=80;I.enhancePoison=12;I.critChance=8;I.critDamage=13;I.allResist=14;I.conjuration=20;I.req=44;I.rarity=4;}}
if(N==="Azure Robe"){if(M.random()>.5){I.name="Ambrosia Robe";I.enhancedArmor=75;I.intel=20;I.mpRegen=4;I.mpKill=10;I.resistMagic=45;I.resistCold=20;I.enhanceMagic=2;I.silence=8;I.req=48;}else{I.name="Summoner's Furnace";I.enhancedArmor=90;I.absorbFire=12;I.enhanceFire=8;I.enhanceLightning=5;I.enhanceCold=5;I.conjuration=13;I.evocation=5;I.phyMit=8;I.magMit=15;I.intel=22;I.req=48;I.rarity=4;}}
if(N==="Quilted Tunic"){I.name="Ghastly Vapors";I.enhancedArmor=65
I.handtohand=5;I.poisonDamage=15;I.hp=30;I.dodge=5;I.enhancePoison=6;I.allResist=9;I.absorbPoison=4;I.req=36;}
if(N==="Spiked Vestment"){I.name="Zealous Battle Wraps";I.enhancedArmor=65;I.attack=7;I.hpKill=15;I.handtohand=7;I.allStats=12;I.critDamage=7;I.req=40;}
if(N==="Leather Armor"){if(M.random()>.5){I.name="Skin of the Goblin Kin";I.enhancedArmor=75;I.leech=5;I.piercing=7;I.hpRegen=5;I.thorns=17;I.req=44;}else{I.name="Friar's Sacrifice";I.enhancedArmor=90;I.allResist=25;I.cha=24;I.str=45;I.phyMit=20;I.magMit=12;I.haste=-120;setAllStatus(NI,15,15,15,15);I.req=44;I.rarity=4;}}
if(N==="Studded Leather"){I.name="Bronze-Plated Pelt";I.enhancedArmor=75;I.defense=6;I.phyMit=12;I.magMit=12;I.hp=40;I.stun=13;I.req=48;}
if(N==="Chain Mail"){if(M.random()>.5){I.name="Raven Mail";I.enhancedArmor=65
I.haste=-40;I.dex=20;I.cold=8;I.stun=12;I.physicalDamage=13;I.req=36;}else{I.name="Bloodletter's Spleen";I.enhancedArmor=90;I.resistPoison=45;I.resistFire=38;I.fear=26;I.lightRadius=12;I.globalHaste=-80;I.enhancePhysical=5;I.critChance=4;I.hpKill=25;I.req=42;I.rarity=4;}}
if(N==="Ring Mail"){I.name="Soul Forge";I.enhancedArmor=65;I.hp=50;I.sta=23;I.oneHandSlash=5;I.lightRadius=5;I.fireDamage=24;I.resistFire=12;I.req=40;}
if(N==="Scale Mail"){I.name="Fanged Bulwark";I.enhancedArmor=75;I.str=10;I.defense=12;I.resistFire=15;I.thorns=30;I.req=44;}
if(N==="Kusari Mail"){I.name="Jin Tao's Wisdom";I.enhancedArmor=75;I.intel=11;I.magMit=10;I.stun=8;I.cold=8;I.castingHaste=-60;I.mpKill=7;I.allSkills=1;I.req=48;}
if(N==="Breast Plate"){I.name="Driela's Shell";I.enhancedArmor=65
I.hp=50;I.str=15;I.defense=4;I.resistPoison=20;I.resistLightning=20;I.resistFire=20;I.resistCold=50;I.cold=20;I.flavorText='A rare inter-dimensional treasure originally worn by the King of Maggots.';I.req=36;}
if(N==="Cuirass"){if(M.random()>.5){I.name="Bluntgarde";I.enhancedArmor=65;I.hp=60;I.phyMit=12;I.magMit=12;I.defense=5;I.req=40;}else{I.name="Guardian's Fortress";I.enhancedArmor=90;I.allSkills=3;I.hp=60;I.stun=15;I.fear=35;I.str=15;I.sta=25;I.enhancePhysical=5;I.lightRadius=12;I.req=40;I.rarity=4;}}
if(N==="Gothic Plate"){if(M.random()>.5){I.name="Morgann's Wrath";I.enhancedArmor=75;I.goldFind=15;I.hpKill=15;I.mpKill=8;I.allSkills=2;I.magMit=10;I.req=44;}else{I.name="Venova's Silks";I.enhancedArmor=90;I.enhanceMagic=8;I.enhancePhysical=3;setAbsorbAll(NI,5);I.silence=35;I.allResist=25;I.hp=75;I.mp=42;I.req=44;I.rarity=4;}}
if(N==="Archon Plate"){I.name="Raiment of Venova";I.enhancedArmor=75;I.magMit=12;I.abjuration=5;I.lightRadius=15;I.silence=15;I.cold=15;I.fear=15;I.stun=15;I.allSkills=1;I.weight=1;I.flavorText='"Doubt of divine providence must never infest your thoughts. An army full of doubt carries no angels on its shoulders." -Brek Stolrus, Cleric Guildmaster';I.req=48;}}
if(ni==="bracers"){if(N==="Jade Bracers"){I.name="Accursed Jade Bracer";I.enhancedArmor=65
I.conjuration=4;I.wis=12;I.sta=12;I.resistPoison=25;I.poisonDamage=6;I.expFind=5;I.req=36;}
if(N==="Bone Bracers"){I.name="Dragon Bone Bracelet";I.enhancedArmor=65;I.mp=25;I.str=15;I.agi=15;I.allSkills=2;I.hp=25;I.resistFire=15;I.resistCold=15;I.req=40;}
if(N==="Sapphire Bracers"){I.name="Summoner's Cinder";I.enhancedArmor=90;I.stun=20;I.enhanceFire=5;I.intel=20;I.critChance=5;I.critDamage=12;I.absorbFire=5;I.mp=15;I.req=45;I.rarity=4;}
if(N==="Opulent Bracers"){I.name="Ormir's Gift";I.enhancedArmor=75;I.expFind=8;I.hpKill=8;I.channeling=5;I.twoHandBlunt=12;I.lightningDamage=35;I.str=20;I.req=48;}
if(N==="Leather Bracers"){I.name="Staunch Battle Wraps";I.enhancedArmor=65
I.attack=5;I.oneHandBlunt=9;I.physicalDamage=6;I.resistMagic=20;I.parry=5;I.req=36;}
if(N==="Patent Bracers"){I.name="Soothing Smoked Bracer";I.enhancedArmor=65;I.channeling=10;I.mp=24;I.hpKill=8;I.alteration=7;I.fear=12;I.stun=12;I.req=40;}
if(N==="Bonded Bracers"){if(M.random()>.5){I.name="Burnt Treant Bracer";I.enhancedArmor=75;I.hp=20;I.wis=15;I.hpRegen=2;I.alteration=8;I.evocation=8;I.req=44;}else{I.name="Friar's Candor";I.enhancedArmor=90;I.globalHaste=-70;I.haste=-50;I.allSkills=1;I.critChance=3;I.critDamage=5;I.allStats=5;I.req=42;I.rarity=4;}}
if(N==="Elven Bracers"){I.name="Conqueror's Bracer";I.enhancedArmor=75;I.allStats=6;I.allSkills=2;I.critChance=4;I.globalHaste=-30;I.critDamage=8;I.req=48;}
if(N==="Scaled Bracers"){I.name="Bartender's Bracer";I.enhancedArmor=65
I.hp=15;I.str=12;I.handtohand=8;I.oneHandBlunt=8;I.weight=1;I.cold=8;I.allResist=5;I.req=36;}
if(N==="Laminar Bracers"){I.name="Daimyo's Honne";I.enhancedArmor=90;I.allResist=11;I.wis=20;I.absorbLightning=5;I.enhanceMagic=3;I.fear=12;I.stun=8;I.lightRadius=8;I.thorns=15;I.req=42;I.rarity=4;}
if(N==="Splinted Bracers"){I.name="Bloodletter's Serum";I.enhancedArmor=90;I.leech=4;I.resistCold=20;I.critDamage=7;I.magMit=5;I.agi=12;I.str=15;I.sta=20;I.req=42;I.rarity=4;}
if(N==="Kusari Bracers"){I.name="Marshall's Survival Bracer";I.enhancedArmor=75;I.runSpeed=8;I.hpKill=8;I.hpRegen=4;I.allResist=14;I.req=48;}
if(N==="Bronze Bracers"){if(M.random()>.5){I.name="Surestout's Bracer";I.enhancedArmor=65
I.hp=25;I.defense=4;I.parry=3;I.dodge=3;I.riposte=2;I.sta=15;I.req=36;}else{I.name="Baron's Coda";I.enhancedArmor=90;I.mp=45;I.cha=32;I.intel=15;I.allResist=12;I.allStats=12;I.stun=11;I.fear=25;I.req=42;I.rarity=4;}}
if(N==="Cobalt Bracers"){if(M.random()>.5){I.name="Feblizi's Bracer";I.enhancedArmor=65;I.cha=13;I.allResist=6;I.cold=6;I.stun=6;I.oneHandBlunt=6;I.req=40;}else{I.name="Guardian's Parapet";I.enhancedArmor=90;I.cold=45;I.allStats=9;I.critChance=7;I.critDamage=9;I.allResist=14;I.hp=35;I.req=38;I.rarity=4;}}
if(N==="Tetrarch Bracers"){I.name="Pindle's Valium Bracer";I.enhancedArmor=75;I.channeling=5;I.sta=14;I.thorns=15;I.weight=1;I.wis=14;I.magicDamage=7;I.req=44;}
if(N==="Gilded Bracers"){I.name="Desolate Binding";I.enhancedArmor=75;I.mpKill=5;I.agi=12;I.critChance=3;I.piercing=6;I.allResist=5;I.req=48;}}
if(ni==="gloves"){if(N==="Gloves"){I.name="Celestial Gloves";I.enhancedArmor=65
I.allStats=7;I.conjuration=4;I.allResist=7;I.agi=7;I.dex=7;I.intel=7;I.req=36;}
if(N==="Cloth Gloves"){if(M.random()>.5){I.name="Gloves of Wyrm Calling";I.enhancedArmor=65;I.fear=15;I.evocation=5;I.abjuration=3;I.resistCold=25;I.resistFire=25;I.req=40;}else{I.name="Malefactor's Ballast";I.enhancedArmor=90;I.castingHaste=-110;I.resistLightning=45;I.hp=25;I.mp=33;I.agi=19;I.intel=20;I.critChance=7;I.enhanceAll=3;I.req=43;I.rarity=4;}}
if(N==="Woven Gloves"){if(M.random()>.5){I.name="Hellish Gloves of Sadism";I.enhancedArmor=75;I.goldFind=15;I.intel=10;I.sta=12;I.enhanceFire=2;I.critChance=3;I.castingHaste=-50;I.resistFire=35;I.req=44;}else{I.name="Wraith's Flesh";I.enhancedArmor=90;I.castingHaste=-130;I.resistCold=50;I.resistFire=25;I.hpKill=12;I.mp=50;I.mpRegen=4;I.enhancePoison=5;I.enhanceMagic=3;I.req=42;I.rarity=4;}}
if(N==="Mesh Gloves"){I.name="Satyr's Satin";I.enhancedArmor=90;I.castingHaste=-100;I.enhanceMagic=4;I.hpRegen=3;I.mpRegen=5;I.critChance=5;I.sta=17;I.silence=25;I.req=42;I.rarity=4;}
if(N==="Rawhide Gloves"){if(M.random()>.5){I.name="Venom Grip";I.enhancedArmor=65
I.sta=12;I.handtohand=4;I.resistPoison=30;I.leech=4;I.poisonDamage=8;I.req=36;}else{I.name="Friar's Epiphany";I.enhancedArmor=90;I.haste=-130;I.globalHaste=-50;I.leech=10;I.resistMagic=50;I.resistFire=25;I.critDamage=15;I.critChance=6;I.riposte=4;I.req=46;I.rarity=4;}}
if(N==="Drakescale Gloves"){I.name="Gravepalm";I.enhancedArmor=65;I.hp=25;I.thorns=8;I.intel=12;I.str=19;I.fear=12;I.silence=8;I.stun=5;I.req=40;}
if(N==="Sharkskin Gloves"){I.name="Negated Grasp";I.enhancedArmor=75;I.mp=16;I.phyMit=2;I.magMit=3;I.dodge=5;I.defense=5;I.resistPoison=15;I.resistLightning=15;I.req=44;}
if(N==="Studded Gloves"){I.name="Ancestral Clutch";I.enhancedArmor=75;I.hp=30;I.hpRegen=2;I.globalHaste=-50;I.allStats=6;I.allSkills=1;I.fear=8;I.cold=5;I.req=48;}
if(N==="Lamellar Gauntlets"){I.name="Ghoulhide";I.enhancedArmor=65
I.coldDamage=15;I.resistCold=27;I.str=5;I.hp=20;I.wraith=4;I.goldFind=10;I.req=36;}
if(N==="Banded Gauntlets"){I.name="Flame Reckoning";I.enhancedArmor=65;I.absorbFire=7
I.castingHaste=-80;I.weight=1;I.enhanceFire=6;I.evocation=2;I.mpKill=4;I.fireDamage=15;I.thorns=15;I.silence=25;I.cold=75;I.flavorText='"Few mortals have hitherto dared to glimpse upon the countenance of Highlord Szarthax. Fewer still have lived to confirm his existence." -Brenthalion Aleslammer, Paladin Guildmaster';I.req=40;}
if(N==="Kusari Gauntlets"){I.name="Pyroclastic Grips";I.enhancedArmor=75;I.haste=-40;I.fireDamage=15;I.resistFire=32;I.attack=6;I.cold=12;I.req=44;}
if(N==="Brigandine Gauntlets"){I.name="Chameleon's Deception";I.enhancedArmor=75;I.cha=24;I.mp=30;I.weight=1;I.agi=15;I.alteration=5;I.allResist=12;I.req=48;}
if(N==="Cobalt Gauntlets"){I.name="Chaos Knight Gauntlets";I.enhancedArmor=65
I.hp=20;I.mp=20;I.intel=12;I.oneHandBlunt=4;I.abjuration=4;I.enhanceMagic=2;I.req=36;}
if(N==="Ornate Gauntlets"){if(M.random()>.5){I.name="Force Chain Gauntlets";I.enhancedArmor=65;I.hpKill=5;I.leech=4;I.wraith=3;I.doubleAttack=4;I.magMit=3;I.magicDamage=6;I.req=40;}else{I.name="Duke's Amity";I.enhancedArmor=90;I.castingHaste=-160;I.leech=5;I.wraith=12;I.enhanceMagic=3;I.allResist=11;I.agi=17;I.req=46;I.rarity=4;}}
if(N==="Tetrarch Gauntlets"){I.name="Qalon's Eruption";I.enhancedArmor=75;I.allSkills=1;I.sta=7;I.expFind=8;I.lightRadius=15;I.fireDamage=20;I.absorbFire=7;I.flavorText='A gaping maw of death bursts forth, scorching all in its wake.';I.req=44;}
if(N==="Gilded Gauntlets"){if(M.random()>.5){I.name="Gravedigger's Punishment";I.enhancedArmor=75;I.hp=20;I.str=28;I.twoHandBlunt=7;I.riposte=8;I.mpKill=3;I.hpKill=15;I.flavorText='The loathesome scent of death eminates like rotting flesh.';I.req=48;}else{I.name="Baron's Sonata";I.enhancedArmor=90;I.castingHaste=-80;I.leech=5;I.attack=20;I.mpRegen=3;I.resistPoison=22;I.resistFire=15;I.enhanceMagic=3;I.req=42;I.rarity=4;}}}
if(ni==="belt"){if(N==="Sash"){if(M.random()>.5){I.name="Clasp of Ears";I.enhancedArmor=65
I.defense=3;I.leech=5;I.magMit=4;I.phyMit=6;I.flavorText='A collection of battle trophies adorned upon your waist serve as a grisly warning to your foes.';I.req=36;}else{I.name="Loam Addled Sash";I.enhancedArmor=65
I.str=8;I.mana=15;I.resistFire=10;I.resistMagic=10;I.abjuration=3;I.conjuration=2;I.req=36;}}
if(N==="Azure Sash"){if(M.random()>.5){I.name="Malefactor's Fuse";I.enhancedArmor=90;I.castingHaste=-130;I.resistFire=33;I.resistCold=20;I.intel=15;I.wis=15;I.absorbLightning=5;I.critDamage=8;I.allSkills=1;I.req=42;I.rarity=4;}else{I.name="Wraith's Lust";I.enhancedArmor=90;I.castingHaste=-100;I.intel=15;I.sta=12;I.resistFire=20;I.resistMagic=20;I.evocation=3;I.alteration=3;I.req=42;I.rarity=4;}}
if(N==="Leather Belt"){if(M.random()>.5){I.name="Terrorwhip";I.enhancedArmor=65
I.defense=3;I.physicalDamage=5;I.dex=20;I.thorns=15;I.req=36;}else{I.name="Honeycomb Belt";I.enhancedArmor=65
I.cha=5;I.mana=50;I.haste=-90;I.wis=15;I.expFind=12;I.offense=3;I.req=36;}}
if(N==="Heavy Belt"){if(M.random()>.5){I.name="Fairy's Trap";I.enhancedArmor=75;I.mpRegen=3;I.mp=25;I.sta=15;I.wraith=3;I.lightRadius=12;I.weight=1;I.req=42;}else{I.name="Friar's Gift";I.enhancedArmor=110;I.resistLightning=15;I.resistMagic=30;I.globalHaste=-150;I.dex=19;I.critChance=5;I.offense=4;I.req=45;I.rarity=4;}}
if(N==="Mesh Belt"){if(M.random()>.5){I.name="Runed Frontier Belt";I.enhancedArmor=65
I.str=10;I.dex=10;I.sta=10;I.haste=-150;I.weight=1;I.req=36;}else{if(M.random()>.5){I.name="Girdle of Wurmslaying";I.enhancedArmor=65
I.str=10;I.wis=10;I.intel=10;I.allSkills=2;I.weight=1;I.allStats=5;I.req=36;}else{I.name="Bloodletter's Marrow";I.enhancedArmor=90;I.hp=63;I.fear=24;I.allResist=12;I.critDamage=15;I.globalHaste=-50;I.agi=24;I.resistMagic=21;I.resistLightning=25;I.req=45;I.rarity=4;}}}
if(N==="Splinted Belt"){if(M.random()>.5){I.name="Glacial Dust";I.enhancedArmor=75;I.absorbCold=5;I.resistCold=20;I.coldDamage=15;I.enhanceCold=5;I.weight=1;I.req=42;}else{I.name="Pegasus Belt";I.enhancedArmor=75;I.runSpeed=10;I.agi=12;I.intel=12;I.str=12;I.critChance=3;I.haste=-150;I.req=42;}}
if(N==="Monarch Girdle"){if(M.random()>.5){I.name="Bone-Clasped Girdle";I.enhancedArmor=65
I.hp=75;I.mp=75;I.str=7;I.dex=7;I.sta=7;I.weight=1;I.req=36;}else{I.name="Belt of Concordance";I.enhancedArmor=65
I.str=10;I.cha=10;I.resistPoison=15;I.haste=-50;I.castingHaste=-50;I.allSkills=1;I.req=36;}}
if(N==="Mithril Girdle"){if(M.random()>.5){I.name="Guardian's Moat";I.enhancedArmor=90;I.resistPoison=25;I.haste=-80;I.globalHaste=-120;I.hp=25;I.thorns=12;I.leech=5;I.fear=15;I.req=45;I.rarity=4;}else{I.name="Bile Etched Obsidian Choker";I.enhancedArmor=75;I.sta=10;I.str=10;I.dex=10;I.hp=50;I.mp=50;I.allResist=5;I.req=42;}}}
if(ni==="legs"){if(N==="Pants"){I.name="Imbued Viperskin";I.enhancedArmor=65
I.hp=30;I.agi=12;I.expFind=7;I.evocation=3;I.resistFire=15;I.resistPoison=25;I.req=38;}
if(N==="Cotton Pants"){I.name="Villainous Lordship Pants";I.enhancedArmor=65;I.mp=35;I.resistMagic=15;I.mpKill=6;I.critChance=4;I.goldFind=20;I.silence=20;I.req=42;}
if(N==="Linen Pants"){I.name="Mystical Vizier's Pants";I.enhancedArmor=75;I.critDamage=15;I.runSpeed=8;I.conjuration=3;I.evocation=5;I.channeling=7;I.req=46;}
if(N==="Silk Leggings"){I.name="Fantoam Pantaloons";I.enhancedArmor=75;I.hp=50;I.intel=11;I.allSkills=2;I.allResist=10;I.req=50;}
if(N==="Fur Pants"){if(M.random()>.5){I.name="Exalted Furs";I.enhancedArmor=65
I.allStats=8;I.phyMit=9;I.mpRegen=3;I.resistMagic=15;I.resistCold=15;I.req=38;}else{I.name="Willow's Gust";I.enhancedArmor=90;I.mpRegen=8;I.hpRegen=12;I.phyMit=20;I.hp=50;I.enhanceCold=9;I.enhanceLightning=12;I.castingHaste=-50;I.silence=35;I.req=45;I.rarity=4;}}
if(N==="Wolf-Hide Pants "){I.name="Abyssimal Pants";I.enhancedArmor=65;I.expFind=8;I.sta=13;I.wis=17;I.dodge=7;I.enhanceMagic=3;I.thorns=8;I.req=42;}
if(N==="Sharkskin Legs"){I.name="Ethereal Kraken Leggings";I.enhancedArmor=75;I.parry=5;I.defense=7;I.globalHaste=-80;I.dodge=5;I.cold=8;I.stun=10;I.req=46;}
if(N==="Studded Legs"){I.name="Friar's Penance";I.enhancedArmor=90;I.allResist=10;I.magMit=6;I.phyMit=10;I.hp=35;I.enhancePhysical=3;I.lightRadius=8;I.str=20;I.sta=16;I.agi=13;I.req=42;I.rarity=4;}
if(N==="Scaled Legs"){I.name="Accursed Serenity Leggings";I.enhancedArmor=65
I.agi=14;I.dex=25;I.goldFind=12;I.globalHaste=-60;I.magicDamage=8;I.silence=13;I.req=38;}
if(N==="Chausses"){I.name="Vorpal Leggings";I.enhancedArmor=65;I.hp=33;I.mp=22;I.wis=25;I.mpRegen=5;I.enhancePoison=4;I.req=42;}
if(N==="Kusazuri"){I.name="Honored Samurai Legplates";I.enhancedArmor=75;I.leech=5;I.dualWield=5;I.doubleAttack=8;I.riposte=8;I.dex=30;I.flavorText='The serpent-scaled order fears the samurai.';I.req=46;}
if(N==="Poleyn"){I.name="Haunted Wail";I.enhancedArmor=65
I.runSpeed=5;I.conjuration=9;I.allStats=8;I.fear=8;I.absorbMagic=3;I.req=50;}
if(N==="Cobalt Legplates"){if(M.random()>.5){I.name="Eternal Annihilator Legplates";I.enhancedArmor=65;I.hp=35;I.str=17;I.hpKill=20;I.globalHaste=-60;I.allResist=10;I.req=38;}else{I.name="Baron's Tenor";I.enhancedArmor=90;I.allResist=20;I.sta=25;I.absorbMagic=4;I.enhanceMagic=5;I.mpRegen=4;I.lightRadius=13;I.dualWield=11;I.intel=25;I.req=38;I.rarity=4;}}
if(N==="Iron Legplates"){if(M.random()>.5){I.name="Sinister Legplates";I.enhancedArmor=75;I.offense=6;I.attack=10;I.sta=11;I.allSkills=2;I.resistMagic=15;I.req=42;}else{I.name="Duke's Rule";I.enhancedArmor=90;I.resistCold=30;I.resistLightning=11;I.absorbFire=5;I.allStats=13
I.lightRadius=20;I.expFind=12;I.enhanceAll=3;I.req=42;I.rarity=4;}}
if(N==="Mithril Legplates"){if(M.random()>.5){I.name="Forlorn Lover's Legplates";I.enhancedArmor=75;I.castingHaste=-50;I.cha=15;I.enhanceMagic=2;I.channeling=4;I.mpKill=15;I.resistMagic=26;I.req=46;}else{I.name="Augur's Rancor";I.enhancedArmor=90;I.hp=95;I.resistFire=30;I.resistMagic=24;I.globalHaste=-50;I.defense=6;I.critDamage=5;I.enhanceMagic=5;I.allSkills=2;I.req=46;I.rarity=4;}}
if(N==="Royal Legplates"){I.name="Doomhaunch";I.enhancedArmor=65
I.hp=50;I.globalHaste=-80;I.critChance=5;I.critDamage=15;I.fireDamage=20;I.req=50;}}
if(ni==="boots"){if(N==="Boots"){if(M.random()>.5){I.name="Strideblazers";I.enhancedArmor=65
I.runSpeed=20;I.fireDamage=8;I.defense=3;I.goldFind=15;I.lightRadius=5;I.resistFire=30;I.req=36;}else{I.name="Apothic Boots";I.enhancedArmor=65
I.runSpeed=15;I.hp=25;I.agi=13;I.enhanceMagic=4;I.mpKill=3;I.critChance=2;I.resistPoison=25;I.req=36;}}
if(N==="Light Boots"){if(M.random()>.5){I.name="Sadist's Frostwalkers";I.enhancedArmor=75;I.thorns=7;I.critDamage=8;I.attack=6;I.runSpeed=25;I.resistCold=24;I.absorbCold=2;I.req=42;}else{I.name="Malefactor's Resistor";I.enhancedArmor=90;I.resistLightning=40;I.runSpeed=40;I.enhanceLightning=7;I.expFind=7;I.allResist=10;I.intel=33;I.req=43;I.rarity=4;}}
if(N==="Heavy Boots"){if(M.random()>.5){I.name="Miracle Workers";I.enhancedArmor=65
I.hp=55;I.dodge=5;I.dex=15;I.sta=10;I.runSpeed=20;I.channeling=4;I.req=36;}else{I.name="White Lotus Slippers";I.enhancedArmor=65
I.parry=4;I.riposte=6;I.offense=4;I.fireDamage=12;I.runSpeed=12;I.str=20;I.hp=30;I.allResist=3;I.req=36;}}
if(N==="Sharkskin Boots"){if(M.random()>.5){if(M.random()>.5){I.name="Trek of Glory";I.enhancedArmor=75;I.goldFind=15;I.expFind=15;I.mpKill=8;I.hpKill=12;I.cold=10;I.runSpeed=30;I.req=42;}else{I.name="Friar's Grace";I.enhancedArmor=150;I.resistAll=12;I.enhancePhysical=7;I.critChance=7;I.globalHaste=-70;I.critDamage=12;I.fear=30;I.stun=30;I.req=42;I.rarity=4;}}else{if(M.random()>.5){I.name="Peerless Dragonhorn Boots";I.enhancedArmor=75;I.magMit=3;setAbsorbAll(NI,3);I.defense=5;I.resistMagic=12;I.agi=10;I.critChance=5;I.req=42;}else{I.name="Willow's Mildew";I.enhancedArmor=90;I.runSpeed=33;I.sta=23;I.wis=19;I.enhanceCold=5;I.evocation=3;I.alteration=3;I.dex=15;I.req=43;I.rarity=4;}}}
if(N==="Chain Boots"){if(M.random()>.5){I.name="Silkweaver's Treads";I.enhancedArmor=65
I.hp=17;I.defense=4;I.mpKill=5;I.allStats=7;I.resistPoison=30;I.runSpeed=30;I.req=36;}else{I.name="Mendicant's Horseshoe";I.enhancedArmor=90;I.runSpeed=25;I.fear=25;I.stun=20;I.sta=13;I.dex=20;I.abjuration=5;I.evocation=3;I.channeling=8;I.conjuration=4;I.req=42;I.rarity=4;}}
if(N==="Sovereign Boots"){if(M.random()>.5){I.name="Battle Traveler";I.enhancedArmor=75;I.runSpeed=25;I.physicalDamage=15;I.sta=15;I.str=15;I.hpKill=15;I.thorns=7;I.goldFind=24;I.req=42;}else{I.name="Blazing Boots of Erasthule";I.enhancedArmor=75;I.runSpeed=13;I.absorbFire=5;I.piercing=6;I.dex=16;I.cha=10;I.agi=20;I.resistFire=20;I.castingHaste=-40;I.phyMit=2;I.req=42;}}
if(N==="Steel Boots"){if(M.random()>.66){I.name="Blood Rider";I.enhancedArmor=65
I.poisonDamage=6;I.critDamage=15;I.hp=25;I.weight=1;I.dex=40;I.req=36;}else{if(M.random()>.5){I.name="Augur's Sludge";I.enhancedArmor=90;I.runSpeed=25;I.resistLightning=25;I.resistPoison=40;I.resistMagic=12;I.hp=35;I.mp=15;I.fear=35;I.enhanceAll=2;I.conjuration=8;I.req=42;I.rarity=4;}else{I.name="Baron's Rhythm";I.enhancedArmor=90;I.runSpeed=30;I.cold=15;I.expFind=10;I.stun=20;I.cha=24;I.dex=19;I.resistCold=25;I.resistPoison=25;I.hp=15;I.req=42;I.rarity=4;}}}
if(N==="Sabatons"){if(M.random()>.5){I.name="Blessed Traveler";I.enhancedArmor=75;I.allStats=8;I.cold=15;I.allResist=13
I.runSpeed=40;I.alteration=5;I.req=42;}else{I.name="Boots of the Storm";I.enhancedArmor=75;I.str=10;I.hp=35;I.sta=10;I.resistCold=25;I.resistMagic=25;I.runSpeed=33;I.conjuration=4;I.evocation=2;I.req=42;}}}
if(ni==="weapons"){if(nt==="slashed"){if(N==="Sword"){I.name="Clastocaust's Flame";I.enhancedDamage=6;I.hp=50;I.sta=10;I.fireDamage=30;I.resistFire=20;I.req=36;I.proc="Effect: Flame of the Thalens";}
if(N==="Scimitar"){I.name="Scimitar of the Grovecaller";I.enhancedDamage=5;I.ias=.16666;I.hp=25;I.allSkills=2;I.thorns=12;I.wraith=5;I.lightningDamage=25;I.req=38;I.flavorText='Your lupine familiar can always be counted upon to tank a God for you.';I.proc="Effect: Grovecaller";}
if(N==="Axe"){I.name="Fluxbladed Axe";I.enhancedDamage=9;I.str=12;I.sta=10;I.oneHandSlash=4;I.fear=9;I.magicDamage=30;I.req=40;I.flavorText='This artifact appears to be a rusty old axe adorned in twirling strands of ether.';I.proc="Effect: Chaos Flux";}
if(N==="Claws"){I.name="Spined Dragon Claws";I.ias=.34;I.enhancedDamage=1;I.oneHandSlash=4;I.leech=6;I.critDamage=8;I.resistPoison=25;I.poisonDamage=15;I.flavorText='Falzitherin\'s oozing salivations appear to be encrusted upon the blades.';I.req=42;}
if(N==="Long Sword"){I.name="Hydraclash";I.enhancedDamage=8;I.fireDamage=21;I.allSkills=1;I.absorbFire=2;I.resistFire=30;I.enhanceFire=3;I.req=44;I.proc="Effect: Hydra Bolt";}
if(N==="Chokuto"){if(M.random()>.5){I.name="Bloodmoon";I.enhancedDamage=9;I.globalHaste=-60;I.hpKill=12;I.mpKill=5;I.leech=5;I.conjuration=12;I.str=15;I.req=46;}else{I.name="Daimyo's Giri";I.damage=20;I.delay=2600;I.globalHaste=-300;I.fireDamage=75;I.enhanceFire=12;I.enhancePhysical=7;I.resistFire=60;I.leech=9;I.critChance=13;I.proc="Effect: Combustion";I.req=46;I.rarity=4;}}
if(N==="War Axe"){I.name="Axe of Resistance";I.enhancedDamage=10;I.allResist=20;I.allSkills=2;I.allStats=6;I.req=48;}
if(N==="Kusanagi"){I.name="Fernzephyr";I.ias=.25;I.enhancedDamage=4;I.critChance=7;I.critDamage=7;I.allStats=5;I.leech=6;I.thorns=21;I.lightningDamage=24;I.req=50;}}
if(nt==="crushed"){if(N==="Mace"){I.name="Spiroc Warhammer";I.enhancedDamage=8;I.mp=16;I.wis=15;I.hp=50;I.abjuration=4;I.mp=50;I.resistLightning=15;I.mpRegen=4;I.req=36;}
if(N==="Club"){if(M.random()>.5){I.name="Fleshrender";I.enhancedDamage=8;I.globalHaste=-50;I.str=12;I.allSkills=1;I.critDamage=15;I.critChance=4;I.physicalDamage=11;I.req=38;}else{I.name="Willow's Calamity";I.damage=21;I.delay=2800;I.allResist=18;I.allSkills=3;I.hp=65;I.castingHaste=-130;I.enhanceFire=13;I.enhanceMagic=6;I.stun=26;I.wis=35;I.req=38;I.rarity=4;}}
if(N==="Morning Star"){I.name="Rathmonan's Vortex";I.ias=.45;I.mp=100;I.abjuration=4;I.alteration=8;I.castingHaste=-80;I.lightningDamage=32;I.req=40;I.proc="Effect: Shock Nova";}
if(N==="Spiked Club"){I.name="Moonfall";I.enhancedDamage=9;I.mpKill=4;I.physicalDamage=8;I.fireDamage=27;I.magMit=8;I.lightRadius=12;I.req=42;I.proc="Effect: Meteor Strike";}
if(N==="Jagged Star"){I.name="Sureshrill Frost";I.enhancedDamage=10;I.allStats=7;I.absorbCold=3;I.physicalDamage=10;I.coldDamage=21;I.cold=15;I.req=44;}
if(N==="Scepter"){I.name="Truesight Hammer";I.enhancedDamage=11;I.wis=25;I.hpKill=8;I.mpKill=8;I.enhanceMagic=2;I.channeling=6;I.evocation=6;I.req=46;I.proc="Effect: Banish Summoned";}
if(N==="Cudgel"){I.name="Earthshaker";I.enhancedDamage=13;I.critDamage=15;I.stun=12;I.mpRegen=3;I.castingHaste=-50;I.enhanceFire=2;I.enhancePhysical=4;I.evocation=8;I.req=48;I.proc="Effect: Tremor";}
if(N==="Caduceus"){I.name="Venova's Dawn";I.enhancedDamage=10;I.hp=30;I.silence=15;I.enhanceAll=3;I.allSkills=2;I.wis=15;I.resistMagic=15;I.resistPoison=40;I.req=50;I.flavorText='"The harbinger of light carries his torch at the darkest hour." -Alimaja Shanthun, Cleric Guildmaster';I.proc="Effect: Banish Undead";}}
if(nt==="pierced"){if(N==="Dagger"){if(M.random()>.5){I.name="Spineripper";I.enhancedDamage=4;I.mp=25;I.castingHaste=-50;I.allSkills=1;I.expFind=8;I.wraith=8;I.dex=16;I.req=36;}else{I.name="Malefactor's Coil";I.damage=15;I.delay=1900;I.castingHaste=-150;I.enhanceCold=12;I.allResist=12;I.evocation=5;I.critChance=5;I.silence=50;I.conjuration=5;I.alteration=9;I.lightRadius=7;setAbsorbAll(NI,4);I.req=36;I.rarity=4;}}
if(N==="Dirk"){if(M.random()>.5){I.name="Stormspike";I.enhancedDamage=6;I.castingHaste=-70;I.silence=15;I.mpRegen=3;I.enhanceLightning=3;I.thorns=15;I.resistLightning=35;I.req=38;}else{I.name="Baron's Glissando";I.damage=18;I.delay=2400;I.haste=-220;I.cha=35;setAbsorbAll(NI,4);setAllStatus(NI,8,8,8,8);I.dex=24;I.sta=24;I.lightRadius=10;I.proc="Effect: Crash Cymbal";I.req=38;I.rarity=4;}}
if(N==="Kris"){I.name="Blade of the Fahlnir";I.enhancedDamage=7;I.dex=16;I.sta=12;I.parry=4;I.leech=5;I.dodge=5;I.riposte=3;I.runSpeed=10;I.req=40;}
if(N==="Poignard"){if(M.random()>.5){I.name="Fleshripper";I.enhancedDamage=4;I.leech=5;I.attack=7;I.critDamage=8;I.critChance=5;I.enhancePhysical=4;I.req=42;}else{I.name="Bloodletter's Lancet";I.damage=22;I.delay=2900;I.allStats=16;I.allSkills=2;I.globalHaste=-160;I.allResist=11;I.expFind=9;I.hpKill=12;I.fear=15;I.absorbPoison=4;I.proc="Effect: Incision";I.req=42;I.rarity=4;}}
if(N==="Rondel"){I.name="Dawnrider";I.ias=.15;I.enhancedDamage=6;I.cha=15;I.wraith=6;I.doubleAttack=6;I.resistMagic=25;I.magicDamage=15;I.allSkills=2;I.req=44;}
if(N==="Spear"){I.name="Thicket Slime Harpoon";I.enhancedDamage=6;I.mp=30;I.wis=15;I.critChance=5;I.conjuration=6;I.abjuration=5;I.castingHaste=-60;I.resistPoison=15;I.req=46;}
if(N==="Cinquedeas"){if(M.random()>.5){I.name="Vexthorne";I.ias=.27;I.enhancedDamage=4;I.offense=5;I.allSkills=2;I.critChance=6;I.physicalDamage=24;I.enhancePhysical=5;I.fear=8;I.req=48;}else{I.name="Satyr's Artifice";I.damage=15;I.delay=2000;I.haste=-150;I.castingHaste=-100;I.enhanceAll=3;I.allResist=28;I.allSkills=2;I.lightRadius=15;I.proc="Effect: Elysian Litany";I.req=49;I.rarity=4;}}
if(N==="Stiletto"){I.name="Gold-Plated Stiletto";I.enhancedDamage=7;I.allStats=10;I.leech=6;I.wraith=6;I.goldFind=15;I.piercing=8;I.resistFire=25;I.req=50;I.proc="Effect: Dismiss Summoned";}}
if(nt==="cleaved"){if(N==="Giant Sword"){I.name="Steel Overcast";I.enhancedDamage=5;I.abjuration=8;I.evocation=6;I.defense=8;I.thorns=32;I.lightRadius=12;I.lightningDamage=44;I.req=36;}
if(N==="Giant Axe"){I.name="Crokyn Broad Axe";I.enhancedDamage=9;I.str=11;I.wis=25;I.intel=25;I.allResist=9;I.allSkills=2;I.magicDamage=50;I.proc="Effect: Crokyn";I.req=38;}
if(N==="Champion Sword"){if(M.random()>.5){I.name="Swordguard";I.enhancedDamage=10;I.leech=10;I.defense=8;I.parry=5;I.twoHandSlash=5;I.mpRegen=4;I.allResist=18;I.req=40;}else{I.name="Augur's Harvester";I.damage=50;I.delay=4400;I.globalHaste=-350;I.allResist=25;setAllResists(NI,5,5,5,5,5);I.hp=80;I.mp=55;I.conjuration=15;I.poisonDamage=135;I.critChance=10;I.hpKill=15;I.str=25;I.sta=15;I.proc="Effect: Burning Rupture";I.req=40;I.rarity=4;}}
if(N==="Bastard Sword"){I.name="Dark Sword of Tolloth";I.enhancedDamage=11;I.hp=50;I.intel=30;I.globalHaste=-60;I.dex=25;I.twoHandSlash=6;I.resistCold=40;I.leech=15;I.req=42;I.flavorText='"Eat your enemies alive-body, mind, and soul!" -Loveal S\'Nez, Shadow Knight Guildmaster';I.proc="Effect: Soul Leech";}
if(N==="Gothic Axe"){I.name="Polyburst Axe";I.enhancedDamage=12;I.allSkills=3;I.allStats=13
I.allResist=14;I.leech=10;I.wraith=10;I.req=44;}
if(N==="Katana"){I.name="Emperor's Katana of Resolve";I.enhancedDamage=11;I.attack=15;I.lightningDamage=55;I.leech=11;I.critChance=12;I.hpKill=15;I.globalHaste=-80;I.yPos=-448;I.req=46;I.proc="Effect: Rain of Swords";}
if(N==="Colossus Sword"){I.name="Monsoon";I.enhancedDamage=13;I.haste=-100;I.str=30;I.sta=25;I.cold=15;I.doubleAttack=7;I.resistLightning=25;I.yPos=-448;I.req=48;}
if(N==="Mythical Sword"){I.name="Beckon";I.enhancedDamage=14;I.intel=35;I.conjuration=15;I.channeling=8;I.critDamage=20;I.fear=20;I.leech=9;I.enhanceMagic=3;I.poisonDamage=60;I.req=50;}}
if(nt==="staff"){if(N==="Staff"){I.name="Ribcracker";I.enhancedDamage=21;I.globalHaste=-120;I.dex=35;I.critChance=12;I.critDamage=11;I.physicalDamage=75;I.flavorText='It\'s not abuse if it doesn\'t leave a mark.';I.req=36;}
if(N==="Runic Staff"){I.name="Chromatic Malice";I.enhancedDamage=5;I.mp=25;I.intel=20;I.enhanceCold=2;I.enhanceLightning=2;I.enhanceFire=2;I.hp=50;I.allSkills=3;I.castingHaste=-100;I.thorns=30;I.allResist=30;I.req=38;}
if(N==="Cedar Staff"){I.name="Staff of Undead Heretics";I.enhancedDamage=6;I.mp=75;I.allStats=13
I.resistPoison=50;I.resistMagic=30;I.conjuration=12;I.mpKill=8;I.intel=25;I.enhancePoison=7;I.req=40;}
if(N==="Quarterstaff"){I.name="Sin Collector";I.enhancedDamage=7;I.mp=50;I.mpKill=12;I.allSkills=4;I.silence=12;I.fear=12;I.castingHaste=-80;I.intel=32;I.expFind=25;I.req=42;}
if(N==="Cosmic Staff"){if(M.random()>.5){I.name="Staff of the Earthcrafter";I.enhancedDamage=8;I.mp=50;I.wis=40;I.hp=60;I.enhanceLightning=6;I.allSkills=3;I.allResist=18;I.req=44;}else{I.name="Summoner's Conduit";I.damage=42;I.delay=3700;I.hp=63;I.mp=137;I.allSkills=5;I.enhanceLightning=15;I.enhanceCold=9;I.enhanceFire=9;I.conjuration=15;I.mpRegen=10;I.castingHaste=-200;I.fireDamage=199;I.req=44;I.rarity=4;}}
if(N==="Archon Staff"){I.name="Withered Totem of Gorgek";I.enhancedDamage=9;I.wis=30;I.intel=30;I.dex=20;I.abjuration=8;I.conjuration=8;I.evocation=5;I.mpRegen=3;I.hpRegen=5;I.castingHaste=-80;I.enhanceAll=4;I.req=46;}}
if(nt==="smashed"){if(N==="Giant Mace"){I.name="Blight, Hammer of Vedria";I.enhancedDamage=10;I.poisonDamage=36;I.wis=25;I.sta=25;I.intel=25;I.conjuration=5;I.globalHaste=-80;I.absorbPoison=4;I.resistPoison=40;I.req=36;I.proc="Effect: Scourge";}
if(N==="Auric Maul"){if(M.random()>.5){I.name="Facesmasher";I.enhancedDamage=14;I.hp=60;I.armor=25;I.sta=15;I.allSkills=3;I.physicalDamage=40;I.req=38;}else{I.name="Venova's Martel";I.damage=55;I.delay=4800;I.critChance=20;I.enhanceAll=10;I.wis=50;I.sta=33;I.lightRadius=24;I.castingHaste=-250;I.haste=-100;I.leech=6;I.alteration=9;I.proc="Effect: Baptism";I.req=38;I.rarity=4;}}
if(N==="Mallet"){I.name="Shattermaul";I.enhancedDamage=14;I.leech=6;I.critChance=12;I.critDamage=20;I.twoHandBlunt=5;I.offense=8;I.physicalDamage=40;I.req=40;}
if(N==="Ogre Maul"){I.name="Bloodtree Stump";I.enhancedDamage=14;I.critChance=13;I.str=25;I.twoHandBlunt=7;I.globalHaste=-90;I.allResist=20;I.magicDamage=45;I.req=42;}
if(N==="Great Maul"){I.name="The Martel of Pain";I.enhancedDamage=13;I.wraith=9;I.leech=9;I.enhancePhysical=6;I.globalHaste=-120;I.thorns=26;I.physicalDamage=50;I.flavorText='My prediction is pain.';I.req=44;}
if(N==="Sledgehammer"){I.name="Gardash";I.enhancedDamage=14;I.haste=-60;I.allStats=13
I.leech=15;I.silence=15;I.alteration=10;I.conjuration=10;I.enhancePhysical=3;I.poisonDamage=50;I.req=46;}
if(N==="Umbral Hammer"){I.name="Barbarian Spiritist's Hammer";I.enhancedDamage=14;I.wis=28;I.intel=28;I.wraith=10;I.alteration=5;I.abjuration=9;I.enhanceCold=5;I.absorbCold=5;I.coldDamage=75;I.req=48;I.proc="Effect: Winter's Roar";}
if(N==="Thunder Maul"){I.name="Ashenbone Warhammer";I.enhancedDamage=13;I.critDamage=25;I.doubleAttack=12;I.attack=20;I.goldFind=12;I.leech=12;I.globalHaste=-100;I.fear=20;I.enhancePhysical=6;I.physicalDamage=60;I.req=50;}}}
if(ni==="shield"){if(nt==="shield"){if(N==="Buckler"){I.name="Arwen's Blessed Circle";I.enhancedArmor=65
I.defense=6;I.wraith=5;I.globalSkill=-60;I.alteration=4;I.oneHandBlunt=4;I.allResist=18;I.req=36;}
if(N==="Small Shield"){I.name="Runewood Shield";I.enhancedArmor=65
I.wis=21;I.mpRegen=3;I.alteration=6;I.abjuration=5;I.expFind=12;I.cold=15;I.fear=10;I.resistFire=40;I.req=38;}
if(N==="Kite Shield"){I.name="Wexxen's Rebuke";I.enhancedArmor=65;I.enhanceAll=2;I.coldDamage=35;I.fireDamage=45;I.lightningDamage=45;I.allResist=30;I.req=40;}
if(N==="Round Shield"){I.name="Shield of Prachen";I.enhancedArmor=65;I.attack=8;I.evocation=6;I.lightningDamage=25;I.runSpeed=12;I.cold=20;I.resistLightning=50;I.req=42;}
if(N==="Gothic Shield"){I.name="Destitute Wall";I.enhancedArmor=75;I.silence=10;I.mp=50;I.castingHaste=-80;I.mpKill=8;I.intel=25;I.allSkills=1;I.flavorText='A shield that inspires hopelessness in your foes.';I.req=44;}
if(N==="Crown Shield"){I.name="Shield of Prism Hues";I.enhancedArmor=75;I.cha=22;I.magMit=11;I.leech=9;I.globalHaste=-60;I.fear=12;I.allResist=35;I.req=46;}
if(N==="Aegis"){I.name="Ashenbone Shield";I.enhancedArmor=75;I.sta=15;I.hp=60;I.enhancePhysical=2;I.critChance=5;I.wraith=9;I.doubleAttack=6;I.resistPoison=45;I.req=48;}
if(N==="Monarch"){if(M.random()>.5){I.name="Shield of Conqueror";I.enhancedArmor=75;I.phyMit=6;I.absorbPoison=4;I.mpRegen=4;I.wraith=8;I.leech=10;I.str=30;I.resistMagic=35;I.resistPoison=50;I.flavorText='"With sword and shield in hand, we shall rout you out like a den of vipers." -Captain Tillin, Warrior Guildmaster';I.req=50;}else{I.name="Guardian's Wall";I.enhancedArmor=90;I.resistCold=45;I.resistMagic=30;I.hp=35;I.allSkills=1;setAllStatus(NI,15,15,15,15);setAbsorbAll(NI,4);I.req=42;I.rarity=4;}}}
if(nt==="offhand"){if(N==="Stein"){if(M.random()>.5){I.name="Silandra's Special Brew";I.hp=25;I.mp=60;I.channeling=6;I.evocation=4;I.conjuration=6;I.goldFind=20;I.castingHaste=-60;I.req=36;}else{I.name="Satyr's Chalice";I.req=36;I.mp=133;I.hp=70;I.castingHaste=-110;I.enhanceMagic=10;I.mpRegen=10;I.defense=5;I.dodge=5;I.mpKill=19;I.hpRegen=5;I.rarity=4;}}
if(N==="Dark Orb"){I.name="Orb of Tashonia";I.armor=15;I.str=19;I.sta=19;I.mp=35;I.allSkills=3;I.castingHaste=-80;I.enhanceAll=3;I.req=38;}
if(N==="Ancient Tome"){I.name="Encyclopedia Necronomicon";I.hp=40;I.mp=55;I.allStats=10;I.enhancePoison=2;I.enhanceMagic=2;I.castingHaste=-60;I.conjuration=10;I.mpRegen=6;I.req=40;}
if(N==="Totem"){if(M.random()>.5){I.name="Margyn's Deranged Totem";I.mp=77;I.hp=55;I.conjuration=13;I.mpKill=10;I.castingHaste=-100;I.mpRegen=7;I.resistLightning=11;I.resistCold=17;I.resistMagic=33;I.resistPoison=33;I.req=42;}else{I.name="Mendicant's Effigy";I.mp=124;I.hp=45;I.conjuration=9;I.abjuration=15;I.mpKill=23;I.castingHaste=-200;I.wis=77;I.req=42;I.enhancePoison=9;I.rarity=4;}}
if(N==="Crystal Ball"){I.name="Vermillion Orb of Torrefaction";I.goldFind=14;I.critChance=7;I.mp=60;I.evocation=9;I.lightRadius=9;I.mpRegen=6;I.absorbFire=5;I.castingHaste=-90;I.silence=12;I.enhanceFire=5;I.req=44;}
if(N==="Skull"){I.name="Sirran's Memento";I.mp=45;I.critDamage=20;I.hpKill=9;I.mpKill=15;I.abjuration=10;I.castingHaste=-150;I.stun=15;I.resistMagic=35;I.resistCold=20;I.req=46;}
if(N==="Emblazoned Orb"){if(M.random()>.5){I.name="Eye of Ghalentus";I.mp=75;I.intel=24;I.armor=25;I.allSkills=3;I.castingHaste=-70;I.enhanceMagic=5;I.evocation=7;I.resistLightning=20;I.resistMagic=55;I.flavorText='"Even if you succeed, in time you will realize that my cause was just and you, too, will solemnly ache for your kind\'s own extinction." -Sanctum Guardian Ghalentus';I.req=48;}else{I.name="Malefactor's Yttrium";I.mp=199;I.hp=99;I.enhanceLightning=9;I.enhanceCold=9;I.enhanceFire=9;setAllStatus(NI,9,9,9,9);I.allResist=9;I.mpRegen=9;I.critChance=9;I.critDamage=9;I.allStats=9;I.castingHaste=-90;I.req=48;I.rarity=4;}}
if(N==="Idol"){I.name="Camin's False Idol";I.mp=50;I.enhanceAll=3;I.mpRegen=5;I.allStats=13
I.allResist=25;I.allSkills=3;I.req=50;}}}
if(nt==="range"){if(N==="Short Bow"){I.name="Skystriker";I.enhancedDamage=5;I.allSkills=1;I.intel=15;I.attack=5;I.haste=-20;I.evocation=3;I.lightningDamage=10;I.req=36;}
if(N==="Hunter's Bow"){I.name="Adamant Volley";I.enhancedDamage=6;I.mp=25;I.mpKill=3;I.hpKill=3;I.defense=2;I.resistCold=35;I.coldDamage=12;I.req=38;}
if(N==="Composite Bow"){I.name="Juton's Venomburst";I.enhancedDamage=7;I.conjuration=3;I.intel=12;I.channeling=2;I.expFind=5;I.absorbPoison=2;I.poisonDamage=14;I.req=40;}
if(N==="Siege Bow"){I.name="Goldstrike Arch";I.enhancedDamage=9;I.hpRegen=2;I.attack=6;I.dex=15;I.lightRadius=9;I.resistLightning=20;I.magicDamage=15;I.req=42;}
if(N==="Astral Bow"){I.name="Panicstriker";I.ias=.26;I.riposte=4;I.globalHaste=-30;I.oneHandSlash=3;I.resistMagic=15;I.resistLightning=10;I.fear=12;I.req=44;}
if(N==="Gothic Bow"){I.name="Final Punishment";I.enhancedDamage=9;I.hp=20;I.dualWield=6;I.attack=5;I.dex=15;I.str=9;I.req=46;}
if(N==="Ward Bow"){if(M.random()>.5){I.name="Magewrath";I.enhancedDamage=10;I.mpRegen=1;I.alteration=3;I.mpKill=5;I.magMit=5;I.allSkills=1;I.req=48;}else{I.name="Daimyo's Yugen";I.damage=62;I.delay=5700;I.cold=25;I.silence=15;I.evocation=9;I.dualWield=9;I.leech=5;I.enhancePhysical=4;I.req=48;I.rarity=4;}}
if(N==="Hydra Bow"){I.name="Zidr's Crackling Thunder Bow";I.enhancedDamage=11;I.allStats=7;I.oneHandSlash=3;I.resistLightning=15;I.absorbLightning=2;I.lightningDamage=20;I.flavorText='"Even I get tired of shooting at the same target every day. Explore the world and conquer new frontiers." Zidr Shur, Ranger Guildmaster';I.req=50;}}
if(nt==="trinket"){var zz=M.random();if(N==="Trinket"){if(zz>.66){I.name="Tempered Spirits";I.sta=15;I.wis=12;I.lightRadius=20;I.resistMagic=20;I.silence=13;I.expFind=6;I.req=36;}else if(zz>.33){I.name="Augur's Enmity";I.resistFire=25;I.enhancePoison=2;I.enhanceFire=2;I.critDamage=8;I.thorns=15;I.hp=25;I.evocation=3;I.abjuration=2;I.req=47;I.rarity=4;}else{I.name="Summoner's Ember";I.resistFire=15;I.enhanceFire=7;I.mpRegen=10;I.conjuration=8;I.hp=35;I.req=44;I.rarity=4;}}
if(N==="Memento"){I.name="Clay of Everliving Golem";I.hp=15;I.mp=15;I.allResist=10;I.hpRegen=3;I.offense=5;I.goldFind=12;I.req=38;}
if(N==="Charm"){I.name="Azulite's Breath";I.mpRegen=4;I.globalHaste=-30;I.critChance=3;I.silence=15;I.allStats=10;I.req=40;}}}
if(newQuality===2){if(ni==="helmet"){if(N==="Hood"){I.name="Wenerva's Cowl of Destruction";I.enhancedArmor=80;I.allStats=13
I.mp=50;I.expFind=12;I.evocation=13;I.silence=20;I.resistCold=50;I.enhanceCold=3;I.req=52;}
if(N==="Cap"){if(M.random()>.5){I.name="Cap of the Insubstantial";I.enhancedArmor=80;I.dex=35;I.cha=25;I.allSkills=3;I.stun=15;I.enhanceMagic=4;I.resistMagic=35;I.resistPoison=15;I.req=54;}else{I.name="Harlequin Crest";I.enhancedArmor=80;I.hp=112;I.mp=112;I.hpRegen=6;I.mpRegen=4;I.magMit=10;I.phyMit=10;I.allSkills=2;I.req=54;}}
if(N==="Bandana"){if(M.random()>.32){I.name="Brother Xave's Headband";I.enhancedArmor=85;I.hp=75;I.str=15;I.dex=10;I.sta=10;I.agi=10;I.handtohand=6;I.allResist=14;I.globalHaste=-120;I.flavorText='"Followers of the True Path find no value in the short-lived trends that bend impressionable minds. Divine virtue is found in the longstanding practices of our order." -Brother Xave, Legendary Monk of Qiromir';I.req=56;}else{I.name="Grandmaster's Symmetry";I.enhancedArmor=120;I.offense=8;I.defense=8;I.attack=25;I.hp=111;I.enhancePhysical=8;I.runSpeed=11;I.lightRadius=11;I.expFind=11;I.critChance=11;setAllResists(NI,11,25,88,25,11);setAllStatus(NI,25,25,25,25);I.rarity=4;I.req=58;}}
if(N==="Diadem"){I.name="Phantasmist's Acumen";I.enhancedArmor=120;I.allSkills=3;I.cold=45;I.expFind=14;I.allStats=15;I.offense=25;I.defense=8;I.enhancePhysical=21;I.enhanceMagic=7;I.hpRegen=9;setAllResists(NI,59,15,46,25,33);I.rarity=4;I.req=60;}
if(N==="Dark Hood"){if(M.random()>.32){I.name="Tattered Death Shroud";I.enhancedArmor=90;I.str=15;I.sta=25;I.wis=15;I.mp=25;I.conjuration=12;I.mpRegen=4;I.enhancePoison=5;I.allResist=10;I.req=60;}else{I.name="Warlock's Doom";I.enhancedArmor=120;I.fear=90;I.enhanceAll=7;I.allResist=15;I.conjuration=15;I.evocation=9;I.intel=33;I.dex=20;I.lightRadius=16;I.magMit=10;I.rarity=4;I.req=62;}}
if(N==="Coronet"){I.name="Diadem of the Ages";I.enhancedArmor=90;I.defense=8;setAbsorbAll(NI,4);I.stun=25;I.allResist=25;I.allSkills=2;I.enhanceAll=5;I.flavorText='Your consciousness is brief candlelight, but this diadem shines eternally.';I.req=62;}
if(N==="Miter"){I.name="Griffon's Tower";I.enhancedArmor=95;I.defense=8;I.evocation=11;I.channeling=6;I.enhanceLightning=9;I.castingHaste=-120;I.resistLightning=35;I.allSkills=1;I.req=64;}
if(N==="Astral Hood"){I.name="Rorvalen's Guardian";I.enhancedArmor=95;I.abjuration=9;I.conjuration=7;I.mpRegen=3;I.stun=20;I.cold=35;I.allResist=45;I.req=66;}
if(N==="Mail Hood"){I.name="Shendoma's Velium Crown";I.enhancedArmor=80;I.lightRadius=15;I.mpRegen=3;I.evocation=10;setAllResists(NI,10,35,5,20,10);I.weight=1;I.enhanceCold=5;I.req=52;}
if(N==="Coif"){I.name="Xalgozian Coif";I.enhancedArmor=85;I.conjuration=8;I.alteration=7;I.hpKill=12;I.mpRegen=4;setAllStatus(NI,10,10,10,10);I.allResist=13
I.enhancePoison=5;I.req=56;}
if(N==="Armet"){I.name="Steel Shade";I.enhancedArmor=90;I.hpRegen=8;I.wraith=5;I.critChance=5;I.enhancePhysical=4;I.defense=7;I.absorbFire=7;I.req=60;}
if(N==="Sallet"){I.name="Valkyrie's Bane";I.enhancedArmor=95;I.weight=1;I.oneHandSlash=7;I.attack=8;I.critDamage=15;setAllResists(NI,12,0,20,35,15);I.enhanceAll=4;I.enhancePhysical=4;I.req=64;}
if(N==="Burgonet"){I.name="High Priest's Abstention";I.enhancedArmor=120;I.allSkills=5;I.enhanceMagic=5;I.lightRadius=25;I.magMit=10;I.mp=70;I.allResist=15;I.critChance=4;I.absorbMagic=10;setAllStatus(NI,25,25,25,25);I.rarity=4;I.req=58;}
if(N==="Great Helm"){if(M.random()>.32){I.name="Iron Veil";I.enhancedArmor=85;I.defense=7;I.allResist=50;I.str=30;I.sta=30;I.lightRadius=-4;I.req=58;}else{I.name="Grave Lord's Deceit";I.enhancedArmor=120;I.critDamage=18;I.allResist=15;I.allSkills=3;I.silence=44;I.stun=30;I.lightRadius=17;I.goldFind=30;I.mpRegen=6;I.intel=55;I.rarity=4;I.req=60;}}
if(N==="Barbute"){if(M.random()>.32){I.name="Viston's Veil";I.enhancedArmor=90;I.weight=1;I.absorbCold=5;I.cold=25;I.dex=25;I.enhanceCold=10;I.allSkills=3;I.req=62;}else{I.name="Warlord's Scowl";I.enhancedArmor=120;I.allSkills=3;I.hp=75;I.enhancePhysical=7;I.allResist=21;setAllStatus(NI,25,25,25,25);I.absorbFire=5;I.critDamage=15;I.sta=40;I.rarity=4;I.req=62;}}
if(N==="Royal Helm"){I.name="Messiah's Crown";I.enhancedArmor=95;I.allStats=13
I.hpRegen=5;I.mpKill=8;I.enhanceAll=3;I.enhancePhysical=3;I.allResist=13
setAllStatus(NI,12,12,12,12);I.req=66;}}
if(ni==="neck"){if(nT<=83){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Highlord's Avarice";I.globalHaste=-40;I.thorns=15;I.critChance=9;I.critDamage=12;I.resistLightning=35;I.lightningDamage=15;I.haste=-120;I.allSkills=1;I.req=52;}
if(zoo===2){if(M.random()>.32){I.name="Miranda's Kaleidoscope";I.allStats=13
I.wraith=5;I.leech=5;I.allResist=35;I.allSkills=3;I.flavorText='A chromatic sheen glimmers from this pendant';I.req=53;}else{I.name="Assassin's Guile";I.armor=50;I.resistPoison=100;I.allStats=20;I.piercing=10;I.dualWield=15;I.haste=-180;I.absorbMagic=7;I.hp=85;I.leech=13;setAllStatus(NI,21,21,21,21);I.rarity=4;I.req=56;}}
if(zoo===3){I.name="Seraph's Melody";I.abjuration=12;I.alteration=10;I.wraith=10;I.lightRadius=8;I.allSkills=3;I.req=55;}
if(zoo===4){I.name="Beholder's Eye";I.conjuration=10;I.alteration=7;I.magMit=9;I.enhanceFire=6;I.fear=25;I.mpRegen=5;I.req=57;}}
if(nT>=84&&nT<=91){var zoo=~~(1+M.random()*(4));if(zoo===1){if(M.random()>.32){I.name="Medal of Deep Thought";I.hp=75;I.mp=30;I.wis=11;I.intel=11;I.allResist=9;I.enhanceFire=6;I.req=61;}else{I.name="Warder's Zephyr";I.runSpeed=20;I.enhancePhysical=7;I.enhanceFire=7;I.enhanceMagic=7;I.allSkills=5;I.cold=45;I.leech=11;I.globalHaste=-120;setAllResists(NI,0,33,55,77,22);I.rarity=4;I.req=62;}}
if(zoo===2){if(M.random()>.32){I.name="Necklace of Nightstalking";I.hp=60;I.dex=21;I.agi=28;I.dodge=13;I.runSpeed=10;I.piercing=7;I.req=62;}else{I.name="Crusader's Cathexis";I.enhanceAll=5;I.leech=12;I.enhanceMagic=12;I.absorbMagic=8;I.allSkills=3;I.critChance=9;I.silence=60;I.goldFind=23;I.lightRadius=19;setAllResists(NI,32,85,40,0,0);I.rarity=4;I.req=62;}}
if(zoo===3){I.name="Amulet of the Void";I.armor=20;I.dex=20;I.cha=20;I.intel=20;I.agi=20;I.mp=50;I.enhanceMagic=7;I.req=63;}
if(zoo===4){if(M.random()>.32){I.name="Prime Lord's Torc";I.allStats=8;I.absorbMagic=7;I.resistFire=50;I.resistCold=35;I.castingHaste=-80;I.enhanceCold=3;I.enhanceFire=5;I.req=64;}else{I.name="Oracle's Sibyl";I.enhancePoison=11;I.enhanceCold=7;I.mp=77;I.hp=53;I.allSkills=3;I.mpKill=21;I.wis=42;I.intel=21;I.dex=33;I.cold=45;I.runSpeed=15;I.magMit=7;I.rarity=4;I.req=64;}}}
if(nT>=92){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Glamour of Rinara";I.cha=45;I.hpRegen=5;I.wraith=11;I.resistLightning=15;I.resistMagic=35;I.allSkills=3;I.enhanceMagic=6;I.req=64;}
if(zoo===2){if(M.random()>.32){I.name="Primal Grid";I.attack=25;I.allResist=30;I.hpKill=7;I.mpKill=5;I.magMit=5;I.enhancePhysical=6;I.req=65;}else{I.name="Sorcerer's Zodiac";I.allSkills=7;I.enhanceLightning=8;I.enhanceCold=6;I.allResist=42;I.intel=55;I.sta=40;I.fireDamage=66;I.lightningDamage=39;I.evocation=10;I.conjuration=10;I.silence=25;I.fear=25;I.critChance=9;I.rarity=4;I.req=64;}}
if(zoo===3){I.name="Stalker's Garrote";I.armor=30;I.str=35;I.dex=20;I.agi=35;I.hp=75;I.haste=-100;I.allResist=25;I.req=66;}
if(zoo===4){if(M.random()>.32){I.name="Lendiniara's Talisman";I.armor=16;I.allStats=14;I.hp=70;I.mp=70;I.leech=10;I.mpRegen=7;I.allResist=24;I.enhanceAll=4;I.enhancePhysical=4;I.req=66;}else{I.name="High Priest's Mastery";I.enhanceMagic=15;setAllResists(NI,44,105,25,0,0);I.castingHaste=-100;I.wis=60;I.intel=35;I.sta=20;I.hpKill=12;I.mpKill=12;I.expFind=8;I.critDamage=24;I.rarity=4;I.req=68;}}}}
if(ni==="ring"){if(nT<=83){var zoo=~~(1+M.random()*(3));if(zoo===1){I.name="Ring of the Sky";I.hp=45;I.sta=20;I.resistLightning=24;I.enhanceLightning=7;I.silence=15;I.allSkills=2;I.req=57;}
if(zoo===2){if(M.random()>.32){I.name="Carrion Zephyr";I.enhanceCold=5;I.enhancePoison=5;I.mpRegen=3;I.phyMit=5;I.leech=7;I.resistPoison=55;I.req=55;}else{I.name="High Priest's Piety";I.mp=35;I.hp=60;setAllStatus(NI,24,24,24,24);I.wis=30;I.intel=15;I.agi=24;I.critChance=5;I.allSkills=2;setAbsorbAll(NI,5);I.castingHaste=-60;I.rarity=4;I.req=55;}}
if(zoo===3){if(M.random()>.32){I.name="Ring of Winter";I.hp=55;I.mp=25;I.armor=15;I.wis=15;I.intel=15;I.resistMagic=20;I.resistCold=33;I.enhanceCold=6;I.req=55;}else{I.name="Warlock's Carnage";I.castingHaste=-100;I.enhanceAll=3;I.resistCold=50;I.resistLightning=35;I.physicalDamage=55;I.silence=25;I.stun=40;I.critChance=10;I.critDamage=16;I.allStats=10;I.attack=100;I.absorbLightning=25;I.rarity=4;I.req=55;}}}
if(nT>=84&&nT<=91){var zoo=~~(1+M.random()*(3));if(zoo===1){if(M.random()>.32){I.name="Reaper's Ring";I.sta=15;I.hp=40;I.mp=40;I.armor=12;I.enhanceAll=3;I.enhancePhysical=3;I.wraith=3;I.req=58;}else{I.name="Arch Mage's Periapt";I.intel=25;I.sta=25;I.mp=50;I.hp=35;I.enhanceAll=5;I.resistFire=32;I.resistCold=32;I.allSkills=4;I.critChance=5;I.critDamage=5;I.rarity=4;I.req=58;}}
if(zoo===2){if(M.random()>.32){I.name="Nature's Agony";I.str=12;I.armor=5;I.phyMit=9;I.thorns=23;I.resistPoison=25;I.absorbLightning=7;setAllStatus(NI,15,15,15,15);I.req=59;}else{I.name="Hierophant's Holocaust";I.enhanceFire=8;I.hpKill=10;I.mpKill=7;I.fear=30;I.absorbFire=15;I.resistFire=50;I.fireDamage=50;I.allSkills=2;I.critChance=5;I.rarity=4;I.req=59;}}
if(zoo===3){if(M.random()>.32){I.name="Signet of Desticor";I.castingHaste=-60;I.intel=29;I.mpKill=7;I.hpKill=12;I.enhancePoison=5;I.enhanceMagic=3;I.resistMagic=35;I.absorbPoison=9;I.flavorText='"Your corporeal forms are destined for decay. Resign yourself to your consummate death, for your kind are nothing more than a plague upon Vandamor." Desticor, the Pestilent';I.req=62;}else{I.name="Sorcerer's Pulsar";setAllResists(NI,20,12,0,48,31);setAllStatus(NI,10,10,10,10);I.critChance=10;I.critDamage=25;I.allSkills=3;I.allStats=9;I.absorbFire=7;I.absorbMagic=7;I.armor=90;I.lightRadius=21;I.goldFind=13;I.fear=15;I.rarity=4;I.req=62;}}}
if(nT>=92){var zoo=~~(1+M.random()*(4));if(zoo===1){I.name="Wisp's Cradle";I.sta=35;I.haste=-50;I.thorns=25;I.attack=15;I.enhanceLightning=5;I.goldFind=25;I.absorbLightning=9;I.req=63;}
if(zoo===2){if(M.random()>.32){I.name="Crystasia's Onyx Ring";I.hp=50;I.mp=50;I.armor=30;I.allResist=18;setAbsorbAll(NI,4);I.leech=4;I.req=63;}else{I.name="Grave Lord's Perfidy";I.leech=6;I.absorbMagic=6;I.wraith=6;I.castingHaste=-70;I.critDamage=12;I.sta=25;I.enhancePhysical=4;I.allSkills=2;I.resistLightning=49;I.resistCold=37;I.rarity=4;I.req=63;}}
if(zoo===3){if(M.random()>.32){I.name="Ring of Surlin";I.armor=10;I.str=30;I.sta=30;I.hp=60;I.resistMagic=50;I.attack=15;I.hpRegen=4;I.thorns=20;I.globalHaste=-60;I.enhancePhysical=5;I.flavorText='"Swear fealty to your King and a blood pact to your fellow dwarves. Your King and your race are the greatest gifts that the Gods ever gave you." Surlin Grimhelm';I.req=64;}else{I.name="Crusader's Allegiance";I.hpRegen=5;I.leech=7;I.wraith=4;I.resistLightning=24;I.resistCold=35;I.allSkills=2;I.mp=33;I.expFind=13;setAllStatus(NI,14,14,14,14);I.rarity=4;I.req=64;}}
if(zoo===4){if(M.random()>.32){I.name="Ormir's Cyclone";I.leech=6;I.wraith=6;I.allStats=9;I.allSkills=2;I.critChance=6;I.critDamage=15;I.enhanceLightning=6;I.absorbLightning=12;I.flavorText='"Only a fool denies the almighty forces of nature that regulate your very lives." Ormir';I.req=65;}else{I.name="Assassin's Helix";I.attack=30;I.offense=7;I.hpKill=20;I.allStats=15;I.lightRadius=12;I.goldFind=25;I.leech=5;I.stun=15;I.runSpeed=20;I.dodge=7;I.enhancePhysical=5;I.resistFire=50;I.resistLightning=50;I.rarity=4;I.req=66;}}}}
if(ni==="shoulders"){if(N==="Cloth Drape"){I.name="Glimmershard";I.enhancedArmor=80;I.intel=21;I.cha=15;I.allSkills=2;I.stun=12;I.enhanceMagic=3;I.goldFind=25;I.resistMagic=25;I.req=54;}
if(N==="Woven Drape"){I.name="Worn Cloth Mantle";I.enhancedArmor=85;I.str=12;I.cha=12;I.agi=15;I.allResist=7;I.absorbMagic=4;I.alteration=4;I.conjuration=6;I.req=58;}
if(N==="Azure Shawl"){I.name="Shawl of Perception";I.enhancedArmor=90;I.hp=30;I.mp=30;I.sta=18;I.wis=18;I.intel=18;I.allResist=9;I.silence=12;I.stun=8;I.req=62;}
if(N==="Archon Shawl"){I.name="Arch Mage's Debacle";I.enhancedArmor=120;I.enhanceFire=9;I.hp=80;setAllResists(NI,38,37,55,8,0);I.silence=34;I.stun=15;I.intel=41;I.dex=23;I.lightRadius=17;I.thorns=12;I.absorbFire=6;I.rarity=4;I.req=65;}
if(N==="Leather Shoulders"){I.name="Poisoned Mantle";I.enhancedArmor=80;I.str=14;I.dex=14;I.sta=14;I.agi=14;I.resistPoison=30;I.enhancePoison=4;I.weight=1;I.req=54;}
if(N==="Studded Shoulders"){I.name="Pioneer's Raiment";I.enhancedArmor=85;I.hpKill=12;I.handtohand=10;I.oneHandBlunt=7;I.leech=4;I.mpKill=5;I.resistCold=35;I.runSpeed=15;I.goldFind=25;I.expFind=15;I.req=58;}
if(N==="Spiked Shoulders"){if(M.random()>.32){I.name="Planewalker's Shoulders";I.enhancedArmor=90;I.hp=25;I.fear=15;setAbsorbAll(NI,4);I.weight=1;I.allStats=7;I.allResist=10;I.req=62;}else{I.name="Hierophant's Blizzard";I.enhancedArmor=120;I.resistCold=60;I.absorbCold=9;I.enhanceCold=5;I.enhanceMagic=3;I.allSkills=2;I.mpRegen=5;I.critDamage=16;I.cold=100;I.stun=33;I.silence=33;I.rarity=4;I.req=62;}}
if(N==="Brigand Shoulders"){I.name="Smuggler's Shoulders";I.enhancedArmor=95;I.dodge=9;I.leech=5;I.resistCold=32;I.resistMagic=15;I.enhancePhysical=5;I.critDamage=13;I.critChance=5;I.goldFind=15;I.req=66;}
if(N==="Scaled Mantle"){I.name="Obulus Mantle";I.enhancedArmor=80;I.str=15;I.sta=15;I.mp=30;I.twoHandSlash=8;I.enhanceAll=2;I.silence=15;I.resistMagic=45;I.wraith=5;I.weight=1;I.req=54;}
if(N==="Chain Mantle"){I.name="Flamecloud Mantle";I.enhancedArmor=85;I.leech=3;I.resistLightning=35;I.cold=12;I.allResist=10;I.enhancePhysical=5;I.enhanceFire=3;I.doubleAttack=9;I.attack=2;I.req=58;}
if(N==="Kusari Mantle"){if(M.random()>.32){I.name="Beldron's Vambraces of Impiety";I.enhancedArmor=90;I.leech=5;I.intel=35;I.conjuration=8;I.channeling=6;I.twoHandBlunt=5;I.offense=5;I.resistMagic=35;I.resistLightning=12;I.req=62;}else{I.name="Oracle's Ailment";I.enhancedArmor=120;setAllResists(NI,20,33,25,55,0);I.magMit=13;I.goldFind=23;I.hpKill=15;I.silence=45;I.stun=45;I.absorbPoison=10;I.allStats=20;I.enhanceAll=5;I.rarity=4;I.req=62;}}
if(N==="Laminar Mantle"){I.name="Onyx Chain Sleeves";I.enhancedArmor=95;I.allStats=13
I.hp=40;I.mp=40;I.allResist=18;I.enhancePoison=3;I.enhanceCold=5;I.weight=1;I.req=66;}
if(N==="Cobalt Spaulders"){I.name="Thunderous Spaulders";I.enhancedArmor=80;I.critChance=6;I.resistLightning=45;I.wraith=6;I.defense=5;I.silence=15;I.absorbLightning=6;I.lightningDamage=15;I.req=54;}
if(N==="Mithril Pauldrons"){if(M.random()>.32){I.name="Krelg's Pauldrons of Pain";I.enhancedArmor=85;I.doubleAttack=5;I.dualWield=4;I.offense=4;I.oneHandBlunt=5;I.str=30;I.critDamage=15;I.attack=15;I.leech=4;I.req=58;}else{I.name="Warlord's Disdain";I.enhancedArmor=135;I.offense=12;I.hpKill=15;I.str=25;I.dex=25;I.phyMit=5;I.thorns=20;I.critChance=5;I.resistPoison=75;I.resistFire=75;I.rarity=4;I.req=58;}}
if(N==="Sode"){if(M.random()>.32){I.name="Pauldrons of Blight";I.enhancedArmor=90;I.str=20;I.dex=15;I.hp=35;I.allResist=11;I.enhancePoison=5;I.absorbPoison=3;I.weight=1;I.poisonDamage=12;I.req=62;}else{I.name="Virtuoso's Orotund";I.enhancedArmor=120;I.allResist=25;I.channeling=12;I.abjuration=12;I.alteration=9;I.hp=35;I.enhancePhysical=12;I.allStats=12;I.fear=35;I.rarity=4;I.req=62;}}
if(N==="Monarch Pauldrons"){if(M.random()>.32){I.name="Wurm Claw Pauldrons";I.enhancedArmor=95;setAllStatus(NI,7,7,7,7);setAbsorbAll(NI,4);I.resistFire=25;I.resistCold=25;I.str=25;I.sta=15;I.intel=15;I.wis=15;I.hp=30;I.mp=30;I.req=66;}else{I.name="Crusader's Fervor";I.enhancedArmor=120;I.allStats=13;I.hp=39;I.critDamage=20;I.fear=35;I.hpKill=15;I.enhancePhysical=8;I.enhanceMagic=4;I.resistPoison=70;I.resistLightning=32;I.rarity=4;I.req=67;}}}
if(ni==="back"){if(N==="Cape"){I.name="Hierophant's Cloak";I.mpRegen=4;I.allStats=7;I.thorns=15;I.abjuration=6;I.enhanceCold=4;I.enhanceLightning=5;I.castingHaste=-80;I.req=54;}
if(N==="Cloak"){I.name="Wraithcloak";I.mpKill=9;I.intel=25;I.wraith=5;I.allSkills=2;I.globalHaste=-50;I.poisonDamage=15;I.enhanceMagic=5;I.enhancePoison=7;I.req=55;}
if(N==="Woven Cloak"){if(M.random()>.32){I.name="Fallen Ancients' Cloak";I.dodge=2;I.intel=8;I.wis=6;I.channeling=4;I.phyMit=4;I.resistLightning=8;I.resistPoison=8;I.silence=9;I.req=55;}else{I.name="Grandmaster's Peace";I.globalHaste=-240;I.resistPoison=45;I.resistMagic=77;I.hp=45;I.allSkills=3;I.agi=35;I.dex=54;I.thorns=15;I.critDamage=16;setAllStatus(NI,20,20,20,20);I.rarity=4;I.req=55;}}
if(N==="Fur-Lined Cloak"){I.name="Goldensilk Cloak";I.intel=25;I.goldKill=20;I.cha=17;I.wis=20;I.enhanceMagic=6;I.evocation=8;I.alteration=10;I.castingHaste=-80;I.req=56;}
if(N==="Drake-hide Cloak"){if(M.random()>.32){I.name="Spirit Caller's Cloak";I.mpRegen=3;I.enhanceAll=3;I.dodge=2;I.alteration=6;I.evocation=4;I.abjuration=11;setAllStatus(NI,8,8,8,8);I.req=57;}else{I.name="Phantasmist's Catharsis";I.enhancedArmor=120;I.allResist=14;I.alteration=13;I.conjuration=9;I.enhanceMagic=5;I.hpKill=13;I.intel=35;I.wis=26;I.cha=22;I.hp=35;I.fear=36;I.rarity=4;I.req=57;}}
if(N==="Brigand's Shroud"){I.name="Imperial Assassin Shroud";I.hp=30;I.poisonDamage=20;I.agi=35;I.offense=10;I.piercing=5;I.resistMagic=15;I.resistPoison=25;I.haste=-150;I.req=58;}
if(N==="Regal Shroud"){I.name="Dimensional Cloak";I.absorbMagic=5;I.evocation=6;setAllResists(NI,0,25,15,10,10);setAllStatus(NI,10,10,10,10);I.critChance=8;I.castingHaste=-120;I.req=58;}
if(N==="Orcish Cloak"){I.name="Illuminated Cloak";I.mp=35;I.wis=20;I.intel=25;I.silence=25;I.allSkills=3;setAbsorbAll(NI,4);I.expFind=20;I.req=59;}
if(N==="Elven Shroud"){I.name="Cloak of Thorns";I.absorbLightning=8;I.absorbCold=5;I.absorbFire=3;I.thorns=30;I.critChance=6;I.globalHaste=-80;I.haste=-50;I.allStats=8;I.req=60;}
if(N==="Emerald Cloak"){if(M.random()>.32){I.name="Cloak of Venom";I.poisonDamage=40;I.haste=-90;I.attack=8;I.absorbPoison=9;I.enhancePoison=5;I.leech=6;I.agi=20;I.allSkills=2;I.req=60;}else{I.name="Hierophant's Cyclone";I.allResist=18;I.enhancePhysical=10;I.phyMit=15;I.wis=40;I.sta=16;I.dex=23;I.hpRegen=6;I.mpRegen=6;I.castingHaste=-120;I.rarity=4;I.req=60;}}
if(N==="Aviak Cloak"){if(M.random()>.32){I.name="Fletcher's Cloak";I.attack=12;I.critDamage=6;I.critChance=6;I.hp=25;I.mp=25;I.resistLightning=20;I.enhanceAll=5;I.enhancePhysical=5;I.globalHaste=-120;I.req=61;}else{I.name="Warlock's Demise";I.castingHaste=-150;I.enhanceFire=7;I.enhanceMagic=4;setAllStatus(NI,20,20,20,20);I.allStats=12;I.expFind=12;I.allSkills=5;I.intel=42;I.wis=30;I.sta=15;I.rarity=4;I.req=61;}}
if(N==="Chlamys"){if(M.random()>.32){I.name="Cloak of Silver Eyes";I.mpKill=7;I.hpKill=11;I.leech=7;I.mpRegen=4;I.haste=-50;I.magMit=7;I.oneHandSlash=9;I.cold=16;I.req=61;}else{I.name="Assassin's Slander";I.allResist=19;I.allSkills=3;I.agi=25;I.sta=47;I.phyMit=15;I.critChance=7;I.goldFind=25;I.haste=-180;I.thorns=25;I.stun=35;I.fear=15;I.cold=27;I.rarity=4;I.req=62;}}
if(N==="Dragon Cape"){I.name="Cloak of Piety";I.wis=18;I.dex=18;I.hp=35;I.enhanceAll=2;I.enhancePhysical=2;I.handtohand=9;I.critDamage=15;I.haste=-50;I.globalHaste=-50;I.castingHaste=-50;I.flavorText='The worldly man leaves all treasures behind him. A pious man leaves all treasures in front of him.';I.req=62;}
if(N==="Umbral Shroud"){if(M.random()>.32){I.name="Demon Slayer's Shroud";I.hpKill=8;I.absorbFire=8;I.hpRegen=3;I.twoHandSlash=10;I.haste=-130;I.enhanceCold=6;I.enhanceFire=3;I.fear=24;I.req=63;}else{I.name="Grave Lord's Treachery";I.allResist=27;I.absorbLightning=7;I.absorbPoison=7;I.critChance=8;I.expFind=16;I.haste=-110;I.globalHaste=-150;I.magMit=13;I.str=33;I.stun=66;I.cold=52;I.rarity=4;I.req=64;}}
if(N==="Archon Cloak"){I.name="Dragoon's Glory";I.allStats=9;I.twoHandSlash=9;I.defense=6;I.globalHaste=-150;I.phyMit=3;I.attack=9;I.absorbCold=5;setAllResists(NI,10,25,0,15,15);setAllStatus(NI,8,8,8,8);I.flavorText='In search of glory one must first search for resolve.';I.req=64;}
if(N==="Astral Cloak"){I.name="Prism Seer's Cloak";I.allStats=10;I.allSkills=3;I.resistMagic=35;I.resistFire=25;setAbsorbAll(NI,4);I.castingHaste=-160;I.silence=25;I.req=65;}}
if(ni==="chest"){if(N==="Elven Robe"){I.name="Robe of Fungus Growth";I.enhancedArmor=80;I.resistFire=30;I.wis=12;I.sta=36;I.allSkills=3;I.hpRegen=15;I.cold=25;I.req=54;}
if(N==="Silk Robe"){I.name="Sorcerer's Nebula";I.enhancedArmor=120;I.hp=100;I.mp=100;I.allResist=25;I.enhanceAll=7;I.hpKill=25;I.mpRegen=9;I.lightRadius=25;I.phyMit=25;I.magMit=16;I.critChance=7;I.critDamage=17;I.rarity=4;I.req=62;}
if(N==="Linen Robe"){if(M.random()>.32){I.name="Robe of Adversity";I.enhancedArmor=90;I.mp=55;I.sta=20;I.cha=20;I.intel=33;I.resistPoison=55;I.conjuration=10;I.resistMagic=20;I.fear=15;I.critChance=5;I.req=62;}else{I.name="Warlock's Abomination";I.enhancedArmor=120;I.enhancePoison=15;I.enhanceFire=5;I.enhanceMagic=7;I.fear=32;I.silence=58;I.mp=110;I.hp=75;I.critChance=8;I.phyMit=10;I.critChance=12;I.critDamage=15;I.rarity=4;I.req=62;}}
if(N==="Azure Robe"){I.name="Robe of the Pale Moon Sky";I.enhancedArmor=95;I.intel=20;I.wis=20;I.hp=85;I.mp=100;I.allResist=15;I.allSkills=2;I.castingHaste=-80;I.req=66;}
if(N==="Quilted Tunic"){I.name="Wyvern Hide Tunic";I.enhancedArmor=80;I.sta=15;I.wis=24;I.intel=11;I.mp=25;I.resistFire=25;I.resistMagic=15;I.mpRegen=5;setAllStatus(NI,7,7,7,7);I.castingHaste=-100;I.req=54;}
if(N==="Spiked Vestment"){I.name="The Gladiator's Vestment";I.enhancedArmor=85;setAbsorbAll(NI,5);I.thorns=20;I.magMit=18;I.phyMit=18;I.resistPoison=40;I.stun=25;I.cold=35;I.req=58;}
if(N==="Leather Armor"){I.name="Fungus Covered Scale Tunic";I.enhancedArmor=90;I.abjuration=8;I.enhancePoison=4;I.globalHaste=-50;I.str=21;I.hpKill=5;I.expFind=12;setAllResists(NI,15,24,33,10,0);I.hpRegen=15;I.flavorText='A coveted artifact rumored to be hidden in the unknown depths of Kordata. Enchanted with the regenerative properties of fungus.';I.req=62;}
if(N==="Studded Leather"){I.name="Gelke's Valor";I.enhancedArmor=95;I.critChance=7;I.critDamage=12;I.enhancePhysical=3;I.enhanceFire=5;I.phyMit=13
I.sta=35;I.stun=25;I.allSkills=3;I.req=66;}
if(N==="Chain Mail"){if(M.random()>.32){I.name="Mithril Chains of the Underdark";I.enhancedArmor=80;I.hp=60;I.phyMit=15;I.critChance=7;I.conjuration=9;I.haste=-90;I.enhanceAll=5;I.enhancePhysical=5;setAllResists(NI,10,35,20,5,5);I.cold=15;I.weight=1;I.flavorText="Famously worn by an outcast dark elven ranger. He spent his days wandering the dungeons of Vandamor in search of friendship, adventure, and his identity.";I.req=54;}else{I.name="Assassin's Deception";I.enhancedArmor=120;I.hp=120;I.allResist=30;I.doubleAttack=13;I.hpKill=25;I.enhancePhysical=9;I.agi=75;I.phyMit=25;I.magMit=15;I.absorbLightning=7;I.absorbMagic=10;I.absorbPoison=7;setAllStatus(NI,18,18,18,18);I.rarity=4;I.req=55;}}
if(N==="Ring Mail"){I.name="Anuran Scale Chestplate";I.enhancedArmor=85;I.hp=25;I.mp=35;I.cha=15;I.intel=25;I.wis=25;I.mpRegen=5;I.enhancePoison=6;I.enhanceMagic=5;I.allResist=14;I.allSkills=4;I.req=58;}
if(N==="Scale Mail"){I.name="Leviathan";I.enhancedArmor=90;I.phyMit=25;I.str=50;setAbsorbAll(NI,5);I.allResist=18;I.defense=10;I.coldDamage=25;I.cold=20;I.req=62;}
if(N==="Kusari Mail"){I.name="Chains of Sovereignty";I.enhancedArmor=95;I.leech=8;I.hpRegen=6;I.str=20;I.phyMit=15;I.magMit=21;I.allSkills=2;I.allResist=28;I.expFind=15;I.mpKill=15;I.hpKill=9;I.req=66;}
if(N==="Breast Plate"){if(M.random()>.32){I.name="Breastplate of Honor";I.enhancedArmor=80;I.hp=50;I.mp=50;I.allStats=14;I.allResist=14;I.allSkills=3;setAllStatus(NI,15,15,15,15);I.weight=1;I.req=54;}else{I.name="High Priest's Reverence";I.hp=175;I.fear=30;I.stun=55;I.silence=20;I.enhanceAll=5;I.allResist=35;I.allSkills=5;I.castingHaste=-100;I.lightRadius=25;I.weight=1;I.rarity=4;I.req=56;}}
if(N==="Cuirass"){if(M.random()>.32){I.name="Steel Carapace";I.enhancedArmor=85;I.resistMagic=40;I.thorns=35;I.resistCold=55;I.phyMit=24;I.stun=25;I.mpRegen=9;I.castingHaste=-100;I.conjuration=11;I.globalHaste=-100;I.enhanceAll=3;I.req=58;}else{I.name="Warlord's Blitzkrieg";I.enhancedArmor=120;I.hp=125;I.allSkills=5;I.enhancePhysical=8;I.doubleAttack=24;setAllResists(NI,20,30,75,35,35);I.fear=40;I.str=55;I.magicDamage=14;I.lightningDamage=88;setAbsorbAll(NI,5);I.rarity=4;I.req=59;}}
if(N==="Gothic Plate"){if(M.random()>.32){I.name="Chestplate of Cremated Care";I.enhancedArmor=90;I.allStats=24;I.hp=30;I.mp=30;I.allResist=17;I.allSkills=1;I.enhanceFire=7;I.absorbFire=15;I.thorns=7;I.hpRegen=5;I.weight=1;I.flavorText='"The future is carved by men who fight in the arena. It costs nothing to mock a man who dares greatly; such people never dare enter the arena." -Tynkale, Paladin Guildmaster';I.req=62;}else{I.name="Grave Lord's Cozen";I.enhancedArmor=120;I.hp=100;I.mp=100;I.phyMit=35;I.enhanceAll=5;I.weight=1;I.allStats=20;I.mpKill=13;I.conjuration=10;I.doubleAttack=7;I.offense=7;I.resistPoison=79;I.resistLightning=37;I.rarity=4;I.req=62;}}
if(N==="Archon Plate"){if(M.random()>.32){I.name="Archon's Might";I.enhancedArmor=95;I.mpRegen=5;I.leech=5;I.castingHaste=-120;I.haste=-80;I.globalHaste=-120;I.absorbMagic=9;I.enhanceAll=6;I.enhancePhysical=6;I.str=30;I.runSpeed=15;I.allResist=25;I.cold=50;I.weight=1;I.flavorText='And those who cried, \"appease, appease\" are hung by those they tried to please. -Unknown';I.req=66;}else{I.name="Virtuoso's Bombast";I.enhancedArmor=120;I.allResist=35;setAllStatus(NI,32,32,32,32);I.enhanceMagic=9;I.enhancePhysical=4;I.hp=120;I.cha=48;I.hpRegen=4;I.mpRegen=4;I.dex=35;I.critChance=10;I.dex=35;I.allSkills=4;I.rarity=4;I.req=68;}}}
if(ni==="bracers"){if(N==="Jade Bracers"){I.name="Stoutwraps";I.enhancedArmor=80;I.hp=25;I.intel=15;I.abjuration=5;I.alteration=4;I.resistPoison=25;I.resistMagic=25;setAllStatus(NI,15,15,15,15);I.req=54;}
if(N==="Bone Bracers"){if(M.random()>.32){I.name="Bracelet of Frostbite";I.enhancedArmor=85;I.hp=30;I.wis=12;I.intel=12;I.critDamage=9;I.silence=12;I.mpKill=6;I.resistCold=35;I.enhanceCold=3;I.req=58;}else{I.name="Phantasmist's Sagacity";I.enhancedArmor=120;I.allResist=16;setAllStatus(NI,13,13,13,13);setAbsorbAll(NI,3);I.critDamage=12;I.cha=25;I.intel=38;I.enhanceAll=4;I.allSkills=1;I.phyMit=9;I.thorns=10;I.rarity=4;I.req=62;}}
if(N==="Sapphire Bracers"){if(M.random()>.32){I.name="Hardened Clay Bracelet";I.enhancedArmor=90;I.allStats=13
I.goldFind=15;I.expFind=12;I.phyMit=7;I.magMit=7;I.stun=12;I.abjuration=4;I.req=62;}else{I.name="Arch Mage's Squall";I.enhancedArmor=120;I.critDamage=13;I.critChance=5;I.allResist=20;I.evocation=8;I.conjuration=14;setAllStatus(NI,25,25,25,25);I.enhanceCold=15;I.absorbCold=15;I.rarity=4;I.req=62;}}
if(N==="Opulent Bracers"){I.name="Clawed Guardian Bracer";I.enhancedArmor=95;I.intel=12;I.str=20;I.hp=50;I.allResist=15;I.fear=15;I.enhanceCold=5;I.enhanceFire=5;I.req=66;}
if(N==="Leather Bracers"){I.name="Spectre's Bracers";I.enhancedArmor=80;I.attack=3;I.alteration=7;I.mpKill=6;I.hpKill=6;I.allStats=6;I.fear=35;I.resistMagic=33;I.resistCold=22;I.req=54;}
if(N==="Patent Bracers"){I.name="Caretaker's Wraps";I.enhancedArmor=85;I.mp=25;I.hp=20;I.mpRegen=4;I.alteration=7;I.sta=15;setAllStatus(NI,13,13,13,13);I.critDamage=5;setAbsorbAll(NI,3);I.silence=15;I.req=58;}
if(N==="Bonded Bracers"){I.name="Crazed Lunatic Bracers";I.enhancedArmor=90;I.critChance=5;I.handtohand=8;I.globalHaste=-70;I.haste=-40;I.enhancePhysical=5;I.doubleAttack=7;I.req=62;}
if(N==="Elven Bracers"){I.name="Camii's Bracer of Vigor";I.alteration=5;I.piercing=5;I.agi=25;I.enhanceAll=3;I.enhancePhysical=3;I.runSpeed=10;I.haste=-50;I.castingHaste=-80;I.req=66;}
if(N==="Scaled Bracers"){if(M.random()>.32){I.name="Dragon Skin Bracelet";I.enhancedArmor=80;I.hp=75;I.goldFind=15;I.cold=15;I.fear=15;setAllResists(NI,15,5,5,25,25);I.weight=1;I.req=54;}else{I.name="Warder's Reclaim";I.enhancedArmor=120;I.allResist=20;setAllStatus(NI,20,20,20,20);I.allStats=13;I.expFind=12;I.goldFind=20;I.lightRadius=15;I.enhancePhysical=5;I.weight=1;I.hpKill=15;I.rarity=4;I.req=55;}}
if(N==="Laminar Bracers"){I.name="Vampire Slayer's Bracer";I.enhancedArmor=85;I.allSkills=2;I.hpRegen=4;I.hpKill=12;I.mpKill=8;I.absorbMagic=5;I.fireDamage=12;I.enhanceFire=5;I.req=58;}
if(N==="Splinted Bracers"){I.name="Magmaburst Manacles";I.enhancedArmor=90;I.critDamage=9;I.resistFire=45;I.absorbFire=9;I.fireDamage=15;I.enhanceFire=6;I.weight=1;I.req=62;}
if(N==="Kusari Bracers"){I.name="Glimpsefade Bracers";I.enhancedArmor=95;I.dex=15;I.agi=25;I.runSpeed=5;I.dualWield=3;I.doubleAttack=3;I.resistMagic=10;setAbsorbAll(NI,3);I.cold=12;I.stun=8;I.enhancePhysical=2;I.phyMit=8;I.weight=1;I.req=66;}
if(N==="Bronze Bracers"){I.name="High Priest's Humility";I.enhancedArmor=120;setAllResists(NI,0,0,15,35,35);I.enhanceAll=5;I.enhancePhysical=5;I.str=50;I.wis=25;I.sta=20;I.defense=10;I.alteration=7;I.abjuration=7;I.absorbPoison=10;I.rarity=4;I.req=57;}
if(N==="Cobalt Bracers"){I.name="Crusader's Fealty";I.enhancedArmor=120;I.allResist=13;I.mp=55;I.mpRegen=7;I.magMit=7;I.enhancePhysical=12;I.critChance=7;I.wis=30;I.sta=22;I.cold=45;I.weight=1;I.allSkills=2;I.rarity=4;I.req=59;}
if(N==="Tetrarch Bracers"){if(M.random()>.32){I.name="Dragon Tribe Bracers";I.enhancedArmor=90;I.critChance=6;I.goldFind=12;I.resistPoison=15;I.resistCold=15;I.resistFire=15;I.allSkills=3;I.enhanceAll=4;I.enhancePhysical=4;I.req=62;}else{I.name="Warlord's Defiance";I.enhancedArmor=120;I.allResist=16;I.haste=-70;I.critDamage=12;I.allStats=21;I.hp=50;I.defense=10;I.lightRadius=15;I.enhancePhysical=4;I.weight=1;setAllStatus(NI,12,12,12,12);I.rarity=4;I.req=63;}}
if(N==="Gilded Bracers"){I.name="Waking Dawn Bracers";I.enhancedArmor=95;I.weight=1;I.castingHaste=-50;I.magicDamage=25;I.cha=20;I.allStats=13
setAbsorbAll(NI,5);setAllStatus(NI,18,18,18,18);I.req=66;}}
if(ni==="gloves"){if(N==="Gloves"){I.name="Dainty Gloves";I.enhancedArmor=80;I.mp=35;I.cha=16;I.intel=24;I.alteration=4;I.abjuration=7;I.silence=12;I.castingHaste=-50;I.absorbMagic=9;I.magicDamage=12;I.req=54;}
if(N==="Cloth Gloves"){I.name="Arch Mage's Calamity";I.enhancedArmor=120;I.castingHaste=-120;I.globalHaste=-250;I.enhanceLightning=12;I.enhanceCold=5;I.lightRadius=10;I.allSkills=2;I.mpKill=15;I.hpKill=15;I.allStats=10;I.rarity=4;I.req=58;}
if(N==="Woven Gloves"){I.name="Phantasmist's Serendipity";I.enhancedArmor=120;I.castingHaste=-250;I.expFind=17;I.goldFind=25;I.lightRadius=30;I.critChance=7;I.critDamage=10;I.resistCold=35;I.resistFire=35;I.allStats=20;I.leech=12;I.wraith=12;I.rarity=4;I.req=62;}
if(N==="Mesh Gloves"){I.name="Gloves of Bladecalling";I.enhancedArmor=95;I.mp=50;I.sta=15;I.intel=15;I.conjuration=10;I.abjuration=6;I.castingHaste=-50;I.expFind=12;I.thorns=15;I.absorbMagic=3;I.req=66;}
if(N==="Rawhide Gloves"){I.name="Assassin's Hoax";I.enhancedArmor=120;I.enhancePhysical=9;I.agi=65;I.allResist=24;I.globalHaste=-200;I.critChance=7;I.critDamage=15;I.fear=45;I.leech=15;I.rarity=4;I.req=62;}
if(N==="Drakescale Gloves"){I.name="Gladeclutch";I.enhancedArmor=85;I.hp=45;I.mpRegen=4;I.leech=9;I.wraith=9;I.critChance=7;I.dodge=7;I.thorns=13;I.lightRadius=15;I.globalHaste=-50;I.haste=-50;I.req=58;}
if(N==="Sharkskin Gloves"){I.name="Tyrant's Iron Will";I.enhancedArmor=90;I.hp=50;I.hpRegen=5;I.hpKill=12;I.allResist=12;I.allSkills=3;I.phyMit=5;setAllStatus(NI,9,9,9,9);I.req=62;}
if(N==="Studded Gloves"){I.name="Soul Drainer";I.enhancedArmor=95;I.mp=21;I.wis=12;I.leech=7;I.wraith=7;I.mpKill=14;I.mpKill=14;setAbsorbAll(NI,7);I.attack=15;I.enhancePhysical=6;I.req=66;}
if(N==="Lamellar Gauntlets"){I.name="Twisted Steel Gauntlets";I.enhancedArmor=80;I.str=32;I.critDamage=16;I.haste=-100;I.physicalDamage=44;I.resistLightning=25;I.resistPoison=25;I.stun=25;I.req=54;}
if(N==="Banded Gauntlets"){I.name="Do'Vassir's Gauntlets of Might";I.enhancedArmor=85;I.hp=50;I.mp=50;I.allStats=18;I.castingHaste=-60;I.weight=1;I.enhanceAll=5;I.enhancePhysical=5;I.allResist=14;I.silence=25;I.req=58;}
if(N==="Kusari Gauntlets"){I.name="Eternal Loyalty Gauntlets";I.enhancedArmor=90;I.critChance=5;I.hpRegen=4
I.agi=35;I.lightRadius=17;I.leech=10;I.attack=15;I.enhancePhysical=6;I.req=62;}
if(N==="Brigandine Gauntlets"){if(M.random()>.32){I.name="Unholy Caller's Gauntlets";I.enhancedArmor=95;I.allStats=10;I.mpRegen=5;I.mpRegen=3;I.conjuration=7;I.castingHaste=-120;I.enhanceCold=6;I.enhancePoison=6;I.silence=12;I.fear=24;I.req=66;}else{I.name="Oracle's Contagion";I.enhancedArmor=120;I.globalHaste=-100;I.castingHaste=-160;I.resistFire=55;I.resistPoison=90;I.mp=40;I.alteration=8;I.evocation=5;I.enhancePhysical=9;I.enhancePoison=6;I.rarity=4;I.req=67;}}
if(N==="Cobalt Gauntlets"){I.name="Gutrender";I.enhancedArmor=80;I.str=40;I.twoHandSlash=9;I.critChance=10;I.critDamage=20;I.defense=12;I.stun=25;I.fear=15;I.physicalDamage=20;I.enhancePhysical=6;I.req=54;}
if(N==="Ornate Gauntlets"){I.name="Virtuoso's Conceit";I.enhancedArmor=120;I.mpKill=21;I.dualWield=16;I.dex=28;I.agi=40;I.critDamage=33;I.goldFind=40;I.hp=50;I.mpRegen=4;I.castingHaste=-200;setAllResists(NI,37,39,25,15,0);I.rarity=4;I.req=62;}
if(N==="Tetrarch Gauntlets"){if(M.random()>.32){I.name="Queensguard Gauntlets";I.enhancedArmor=90;I.allSkills=4;I.allStats=10;setAbsorbAll(NI,4);I.enhanceMagic=6;I.silence=24;I.fireDamage=5;I.mpRegen=3;I.goldFind=40;I.req=62;}else{I.name="Warlord's Derision";I.enhancedArmor=120;I.haste=-200;I.enhancePhysical=7;I.leech=13;I.absorbFire=8;I.absorbPoison=8;I.resistCold=60;I.resistFire=60;I.hpKill=20;I.critChance=9;I.critDamage=15;I.rarity=4;I.req=62;}}
if(N==="Gilded Gauntlets"){I.name="Berserker's Vengeance Gauntlets";I.enhancedArmor=95;I.hpKill=15;I.leech=10;I.globalHaste=-150;I.haste=-150;I.allSkills=5;I.magMit=5;I.phyMit=7;I.req=66;}}
if(ni==="belt"){if(N==="Sash"){if(M.random()>.5){I.name="Girdle of Dark Power";I.enhancedArmor=80;I.hp=28;I.mp=28;I.castingHaste=-150;I.allResist=13
I.intel=15;I.str=15;I.conjuration=6;I.evocation=6;I.enhancePoison=6;I.req=54;}else{if(M.random()>.32){I.name="Silver Girdle of Stability";I.enhancedArmor=80;I.hp=50;I.mp=50;I.allResist=10;I.str=8;I.wis=5;I.intel=5;I.allSkills=2;I.enhanceMagic=5;I.req=54;}else{I.name="Phantasmist's Insight";I.enhancedArmor=120;I.allResist=35;I.mp=90;I.alteration=5;I.cha=45;I.channeling=11;I.abjuration=7;I.intel=30;I.wis=30;I.absorbMagic=9;I.enhanceAll=5;I.phyMit=12;I.runSpeed=15;I.rarity=4;I.req=58;}}}
if(N==="Azure Sash"){if(M.random()>.5){I.name="Arachnid Sash";I.enhancedArmor=90;I.mp=25;I.mpKill=15;I.mpRegen=7;I.fear=15;I.silence=25;I.castingHaste=-80;I.allSkills=5;I.req=62;}else{if(M.random()>.32){I.name="Crystalline Silk Belt";I.enhancedArmor=90;I.hp=35;I.mp=35;I.wis=15;I.intel=25;I.abjuration=5;I.silence=25;I.castingHaste=-130;I.enhanceLightning=7;I.req=62;}else{I.name="Sorcerer's Equinox";I.enhancedArmor=120;I.enhanceCold=6;I.enhanceFire=6;setAbsorbAll(NI,4);I.castingHaste=-200;I.globalHaste=-200;I.critDamage=24;I.thorns=15;I.stun=25;I.fear=33;I.rarity=4;I.req=62;}}}
if(N==="Leather Belt"){if(M.random()>.5){if(M.random()>.32){I.name="Belt of the Destroyer";I.enhancedArmor=80;I.wis=30;I.str=15;I.intel=30;I.hp=50;I.enhanceFire=10;I.evocation=8;I.resistFire=45;I.castingHaste=-120;I.req=54;}else{I.name="Grandmaster's Affinity";I.enhancedArmor=120;I.haste=-180;I.globalHaste=-60;I.allStats=15;I.enhancePhysical=15;I.parry=12;I.handtohand=20;I.riposte=7;I.absorbMagic=12;I.cold=50;I.rarity=4;I.req=58;}}else{I.name="Windraider's Belt";I.enhancedArmor=80;I.hpRegen=3;I.defense=5;I.enhanceFire=5;I.enhanceLightning=5;I.str=25;I.allResist=7;I.castingHaste=-120;I.globalHaste=-110;I.req=54;}}
if(N==="Heavy Belt"){if(M.random()>.5){I.name="Sarmina's Cord of Velocity";I.enhancedArmor=90;I.haste=-150;I.str=28;I.dex=28;I.sta=28;I.agi=28;I.enhanceAll=5;I.enhancePhysical=5;I.cold=30;I.absorbCold=12;I.absorbPoison=9;I.req=65;}else{if(M.random()>.32){I.name="Belt of Dwarf Slaying";I.enhancedArmor=90;I.stun=24;I.critChance=7;I.intel=15;I.wis=15;I.str=15;I.allResist=5;I.mp=50;I.hp=50;I.attack=12;I.weight=1;I.req=65;}else{I.name="Assassin's Subversion";I.enhancedArmor=120;I.haste=-200;I.cold=50;I.absorbCold=10;setAllResists(NI,15,25,10,75,0);I.lightRadius=21;I.hp=66;I.str=36;I.dex=50;I.allSkills=2;I.rarity=4;I.req=66;}}}
if(N==="Mesh Belt"){if(M.random()>.5){I.name="Viston's Coil";I.enhancedArmor=80;I.leech=9;I.mpKill=11;I.weight=1;I.str=32;I.haste=-80;I.globalHaste=-80;I.enhancePhysical=5;I.enhancePoison=6;I.req=54;}else{I.name="White Dragon Scale Sash";I.enhancedArmor=80;I.wis=9;I.mp=75;I.resistCold=30;I.mpRegen=3;I.castingHaste=-100;I.allSkills=2;I.enhanceMagic=8;I.req=54;}}
if(N==="Splinted Belt"){if(M.random()>.5){I.name="Runebranded Cord";I.enhancedArmor=90;I.weight=1;I.str=15;I.dex=15;I.sta=15;I.haste=-100;I.globalHaste=-100;I.castingHaste=-100;I.allResist=10;I.allSkills=3;I.req=65;}else{I.name="Spiked Siren Hide Belt";I.enhancedArmor=90;I.hp=25;I.mp=25;I.allStats=13
I.allResist=7;I.haste=-200;I.enhanceCold=10;I.req=65;}}
if(N==="Monarch Girdle"){if(M.random()>.5){I.name="White Wolf-hide Girdle";I.enhancedArmor=80;I.str=11;I.dex=26;I.cold=35;I.haste=-200;I.weight=1;I.lightRadius=25;I.mpKill=12;I.fear=15;I.stun=15;I.resistCold=40;I.absorbCold=8;I.req=54;}else{if(M.random()>.32){I.name="Belt of the Great Turtle";I.enhancedArmor=80;I.str=25;I.dex=25;I.hp=30;I.cold=50;I.stun=20;I.globalHaste=-160;I.haste=-120;I.abjuration=5;I.defense=5;I.req=54;}else{I.name="High Priest's Constraint";I.enhancedArmor=120;I.castingHaste=-120;I.haste=-150;I.globalHaste=-200;I.expFind=20;I.sta=30;I.dex=30;I.allSkills=3;I.phyMit=15;I.leech=7;I.weight=1;I.silence=33;I.enhanceMagic=4;I.enhancePhysical=7;I.rarity=4;I.req=59;}}}
if(N==="Mithril Girdle"){if(M.random()>.5){if(M.random()>.32){I.name="Grimden's Hearty Cord";I.enhancedArmor=90;I.stun=30;I.sta=35;I.hpRegen=4;I.mpRegen=6;I.castingHaste=-120;I.enhanceAll=5;setAbsorbAll(NI,7);I.req=64;}else{I.name="Virtuoso's Plangent";I.allResist=25;setAllResists(NI,0,15,25,50,50);setAllStatus(NI,26,26,26,26);I.absorbLightning=10;I.haste=-140;I.weight=1;I.allSkills=2;I.enhanceMagic=6;I.critDamage=15;I.hp=60;I.rarity=4;I.req=65;}}else{I.name="Grotesque Girdle";I.enhancedArmor=90;I.hp=75;I.mp=75;I.wis=25;I.intel=25;I.castingHaste=-80;I.mpRegen=5;I.leech=5;I.wraith=5;I.poisonDamage=25;I.weight=1;I.req=64;}}}
if(ni==="legs"){if(N==="Pants"){I.name="Spider Queen's Leggings";I.enhancedArmor=80;I.conjuration=8;I.channeling=7;I.alteration=8;I.hp=35;I.mp=55;I.magMit=15;I.resistPoison=35;I.enhancePoison=6;I.req=54;}
if(N==="Cotton Pants"){I.name="Arch Angel's Trousers";I.enhancedArmor=85;I.allStats=13
I.abjuration=9;I.alteration=9;I.mpRegen=6;I.lightRadius=15;I.expFind=11;I.silence=16;I.resistMagic=24;I.resistLightning=15;I.allSkills=4;I.req=58;}
if(N==="Linen Pants"){if(M.random()>.32){I.name="Martyr's Destiny";I.enhancedArmor=90;I.critChance=9;I.enhanceFire=9;I.hpKill=30;I.mpKill=18;I.evocation=10;I.silence=16;I.fear=30;setAllResists(NI,0,15,20,25,45);I.req=62;}else{I.name="Sorcerer's Quasar";I.enhancedArmor=120;setAllStatus(NI,20,20,20,20);I.enhanceLightning=8;I.enhanceMagic=5;I.sta=40;I.intel=45;I.mp=55;I.silence=44;I.stun=20;I.mpRegen=7;I.hpRegen=7;I.phyMit=10;I.rarity=4;I.req=62;}}
if(N==="Silk Leggings"){I.name="Sacred Striders";I.enhancedArmor=95;I.hp=80;I.mp=80;I.hpRegen=12;I.magMit=18;I.phyMit=13
I.allSkills=4;I.enhanceAll=6;I.resistMagic=65;I.req=66;}
if(N==="Fur Pants"){I.name="Hierophant's Cataclysm";I.enhancedArmor=120;I.allResist=24;I.hp=50;I.mp=50;I.alteration=9;I.abjuration=9;I.enhanceAll=4;setAllStatus(NI,15,15,15,15);I.thorns=30;I.runSpeed=15;I.critChance=5;I.critDamage=12;I.rarity=4;I.req=55;}
if(N==="Wolf-Hide Pants "){I.name="Tranquil Breeches";I.enhancedArmor=85;I.handtohand=15;I.riposte=9;I.parry=9;I.dodge=9;I.expFind=13;I.defense=6;I.physicalDamage=20;I.critChance=6;I.critDamage=12;setAbsorbAll(NI,5);setAllStatus(NI,12,12,12,12);I.req=58;}
if(N==="Sharkskin Legs"){I.name="Heavenly Gait";I.allStats=13
I.allSkills=3;setAllStatus(NI,13,13,13,13);I.globalHaste=-100;I.phyMit=12;I.magMit=21;I.weight=1;I.resistMagic=25;I.resistLightning=25;I.req=62;}
if(N==="Studded Legs"){if(M.random()>.32){I.name="Preacher's Disciple";I.enhancedArmor=95;I.mp=60;I.hp=40;I.alteration=3;I.hpRegen=5;I.mpRegen=7;setAbsorbAll(NI,4);I.enhanceLightning=7;I.enhanceMagic=7;I.req=66;}else{I.name="Grandmaster's Consonance";I.enhancedArmor=120;I.fear=35;I.stun=35;I.hp=80;I.critChance=9;I.globalHaste=-120;I.resistPoison=44;I.resistFire=60;I.hpKill=22;I.critDamage=17;I.str=40;I.rarity=4;I.req=67;}}
if(N==="Scaled Legs"){I.name="Coward's Redemption";I.fear=30;I.agi=35;I.runSpeed=15;I.hpRegen=4;I.allStats=14;I.enhancePhysical=6;I.req=54;}
if(N==="Chausses"){I.name="Cobrastrike Chausses";I.enhancedArmor=85;I.critChance=5;I.agi=35;I.hpKill=12;I.leech=5;I.wraith=3;I.piercing=10;I.resistFire=25;I.resistPoison=35;I.poisonDamage=24;I.req=58;}
if(N==="Kusazuri"){I.name="Dark Scale Greaves";I.enhancedArmor=90;I.hp=55;I.phyMit=21;I.magMit=15;I.dodge=7;I.cold=25;I.globalHaste=-80;I.enhancePhysical=6;I.req=62;}
if(N==="Poleyn"){if(M.random()>.32){I.name="Drunken Master's Shinguards";I.enhancedArmor=95;I.str=35;I.fear=8;I.stun=8;I.critDamage=14;I.absorbPoison=9;I.haste=-50;I.enhancePhysical=5;I.enhanceFire=6;I.weight=1;I.req=66;}else{I.name="Oracle's Malady";I.enhancedArmor=120;I.allResist=30;I.fear=40;I.hpRegen=7;I.allSkills=4;I.hpKill=25;I.critChance=10;I.critDamage=10;I.enhanceCold=5;I.enhancePoison=9;setAbsorbAll(NI,7);I.rarity=4;I.req=62;}}
if(N==="Cobalt Legplates"){I.name="Crackling Whisper";I.enhancedArmor=110;I.resistLightning=95;I.mp=75;I.hp=44;I.absorbLightning=7;I.enhanceLightning=12;I.allStats=12;I.critChance=7;I.silence=55;I.stun=25;I.mpRegen=9;I.weight=1;I.req=66;}
if(N==="Iron Legplates"){I.name="Tides of Dover";I.enhancedArmor=110;I.resistCold=80;I.resistMagic=55;I.resistLightning=33;I.allSkills=5;I.attack=20;I.lightRadius=25;I.globalHaste=-150;I.haste=-80;I.hpKill=25;I.leech=7;I.weight=1;I.absorbCold=10;setAllStatus(NI,25,25,25,25);I.req=62;}
if(N==="Mithril Legplates"){if(M.random()>.32){I.name="Call to Destiny";I.enhancedArmor=90;I.allSkills=2;I.enhanceAll=5;I.enhancePhysical=5;I.runSpeed=15;I.lightRadius=15;I.allResist=14;I.globalHaste=-150;I.cold=20;I.req=62;}else{I.name="Grave Lord's Chicane";I.enhancedArmor=120;I.hp=61;I.allResist=22;I.defense=120;I.parry=8;I.riposte=12;I.dodge=6;I.str=44;I.dex=31;I.intel=38;I.critChance=9;setAllStatus(NI,21,21,21,21);I.rarity=4;I.req=62;}}
if(N==="Royal Legplates"){if(M.random()>.32){I.name="Call to Providence";I.enhancedArmor=95;I.hp=65;I.mp=50;setAllStatus(NI,20,20,20,20);setAllResists(NI,15,35,15,5,5);I.absorbMagic=15;I.alteration=9;I.enhanceMagic=9;I.req=66;}else{I.name="Warlord's Ferocity";I.enhancedArmor=120;I.phyMit=20;I.attack=34;I.stun=60;I.enhancePhysical=5;I.allResist=25;I.sta=36;I.runSpeed=15;I.globalHaste=-170;I.critChance=7;I.rarity=4;I.req=68;}}}
if(ni==="boots"){if(N==="Boots"){if(M.random()>.5){I.name="Marrow Waders";I.enhancedArmor=80;I.leech=6;I.conjuration=9;I.runSpeed=20;I.str=15;I.dex=17;I.cold=20;I.hpRegen=3;I.mpRegen=3;I.resistCold=35;I.enhancePoison=3;I.req=54;}else{I.name="Blighted Boots";I.enhancedArmor=80;I.hp=20;I.runSpeed=25;I.agi=25;I.resistMagic=25;I.resistPoison=33;I.enhancePoison=7;I.enhanceMagic=5;I.mpRegen=3;I.critChance=3;I.req=54;}}
if(N==="Light Boots"){if(M.random()>.5){if(M.random()>.32){I.name="Sandstorm Slippers";I.enhancedArmor=90;I.str=15;I.sta=15;I.runSpeed=20;I.allSkills=2;I.absorbFire=5;I.enhanceFire=5;I.stun=20;I.resistPoison=57;I.req=64;}else{I.name="Warlock's Nightmare";I.enhancedArmor=120;setAllResists(NI,65,30,0,15,55);I.runSpeed=35;I.enhanceAll=3;I.stun=50;I.silence=25;I.critDamage=27;I.allStats=12;I.lightRadius=20;I.expFind=20;I.conjuration=12;I.rarity=4;I.req=65;}}else{I.name="Frozen Thalen Boots";I.enhancedArmor=90;I.wis=11;I.castingHaste=-70;I.runSpeed=15;I.evocation=4;I.resistCold=45;I.enhanceCold=9;I.cold=50;I.channeling=9;I.req=64;}}
if(N==="Heavy Boots"){if(M.random()>.5){I.name="Lizardman Hide Boots";I.enhancedArmor=80;I.hp=25;I.str=25;I.cha=15;I.agi=25;I.critChance=5;I.enhanceAll=3;I.runSpeed=25;I.resistFire=35;I.weight=1;I.req=54;}else{I.name="Sandals of Harmony";I.enhancedArmor=80;I.mp=20;I.cha=26;I.resistCold=25;I.resistFire=25;I.resistLightning=40;setAllStatus(NI,12,12,12,12);I.runSpeed=35;I.lightRadius=15;I.alteration=7;I.req=54;}}
if(N==="Sharkskin Boots"){if(M.random()>.5){if(M.random()>.32){I.name="Sirran's Boots of Insanity";I.enhancedArmor=90;I.runSpeed=35;I.intel=25;I.wis=25;I.sta=25;I.castingHaste=-50;I.hp=50;I.mp=50;I.weight=1;I.allResist=18;I.req=64;}else{I.name="Hierophant's Cascade";I.enhancedArmor=120;setAllResists(NI,54,35,12,0,35);setAllStatus(NI,20,20,20,20);I.runSpeed=55;I.lightRadius=30;I.critChance=4;I.allStats=9;I.thorns=45;I.mpRegen=5;I.hpRegen=7;I.enhanceAll=3;I.rarity=4;I.req=66;}}else{if(M.random()>.32){I.name="White Dragonscale Boots";I.enhancedArmor=90;I.wis=17;I.intel=17;I.hp=10;I.mp=35;setAllResists(NI,5,10,5,20,5);I.weight=1;I.mpRegen=5;I.req=64;}else{I.name="Grandmaster's Balance";I.enhancedArmor=200;I.runSpeed=50;I.allResist=22;I.enhancePhysical=8;I.allSkills=4;I.allStats=13;I.hpRegen=7;I.lightRadius=25;I.attack=30;I.fear=15;I.globalHaste=-100;I.rarity=4;I.req=67;}}}
if(N==="Chain Boots"){if(M.random()>.5){I.name="Shadow Dancers";I.enhancedArmor=120;I.leech=5;I.agi=20;I.dex=25;I.stun=30;I.haste=-40;I.runSpeed=30;I.attack=8;I.enhancePhysical=3;I.weight=1;I.req=54;}else{I.name="Scaled Hierophant Boots";I.enhancedArmor=95;I.str=20;I.agi=10;I.sta=10;I.stun=30;setAllResists(NI,12,0,12,12,12);I.runSpeed=25;I.enhanceLightning=7;I.weight=1;I.req=54;}}
if(N==="Sovereign Boots"){if(M.random()>.5){I.name="Maclaer's Boots of Silence";I.enhancedArmor=90;I.hp=17;I.allStats=9;setAllResists(NI,12,20,15,25,0);I.cold=25;I.silence=35;I.defense=7;I.enhanceCold=5;I.req=64;}else{if(M.random()>.32){I.name="Tortoise Shell Boots";I.enhancedArmor=90;I.hp=20;I.str=15;I.cold=45;I.stun=25;I.abjuration=7;I.defense=5;I.phyMit=3;I.magMit=3;I.enhanceCold=4;I.req=64;}else{I.name="Warder's Preserve";I.enhancedArmor=120;I.allResist=30;setAbsorbAll(NI,3);I.hpRegen=5;I.mpRegen=5;I.hp=33;I.mp=24;I.str=25;I.sta=25;I.agi=36;I.runSpeed=44;I.critChance=7;I.critDamage=17;I.rarity=4;I.req=66;}}}
if(N==="Steel Boots"){if(M.random()>.32){I.name="Boots of the Dead Dream";I.enhancedArmor=80;I.hp=25;I.mp=50;I.str=15;I.wis=15;I.intel=15;I.enhanceAll=3;I.weight=1;I.haste=-60;I.req=54;}else{I.name="Crusader's Vehemence";I.enhancedArmor=120;setAllResists(NI,15,24,0,33,50);I.runSpeed=25;I.str=33;I.lightRadius=35;I.hpKill=7;I.mpKill=10;I.enhancePhysical=6;I.enhanceMagic=6;I.stun=23;I.fear=15;I.alteration=12;I.rarity=4;I.req=59;}}
if(N==="Sabatons"){if(M.random()>.5){I.name="Reviled March";I.enhancedArmor=90;I.twoHandBlunt=7;I.abjuration=6;I.globalHaste=-50;I.cha=27;I.enhanceAll=3;I.enhancePhysical=3;I.runSpeed=40;I.allSkills=3;I.allResist=9;I.req=64;}else{I.name="Boots of the Vindicator";I.enhancedArmor=90;I.str=25;I.sta=25;I.wis=25;I.intel=25;I.runSpeed=25;I.hp=50;I.resistLightning=25;I.resistPoison=15;I.req=64;}}}
if(ni==="weapons"){if(nt==="slashed"){if(N==="Sword"){I.name="Gallantine's Gleaming Bastard Sword";I.enhancedDamage=13;I.hp=45;I.alteration=6;I.abjuration=6;I.magicDamage=18;I.fear=15;I.wraith=9;I.haste=-80;I.enhancePhysical=6;I.enhanceMagic=5;I.req=54;I.proc="Effect: Holy Burst";}
if(N==="Scimitar"){I.name="Nature Covenant's Scimitar";I.enhancedDamage=7;I.hp=10;I.mp=90;I.str=15;I.sta=15;I.wis=20;I.mpRegen=5;I.mpRegen=5;I.allSkills=3;I.globalHaste=-100;I.castingHaste=-150;I.enhanceAll=6;I.enhancePhysical=6;I.req=56;I.flavorText='"Be neither here nor there, left or right, up or down. Adapting to your surroundings is the key to survival." -Sana Treewind';I.proc="Effect: Wrath of Nature";}
if(N==="Axe"){I.name="Green Jade Axe";I.enhancedDamage=15;I.str=10;I.hp=25;I.leech=6;I.hpKill=8;I.attack=12;I.globalHaste=-80;I.resistPoison=45;I.poisonDamage=35;I.enhancePoison=7;I.enhancePhysical=6;I.req=58;}
if(N==="Claws"){I.name="Claw of Darafar";I.ias=.35;I.enhancedDamage=5;I.oneHandSlash=4;I.leech=9;I.haste=-120;I.enhancePhysical=6;I.globalHaste=-80;I.allSkills=3;I.critChance=7;I.critDamage=11;I.req=60;I.flavorText='In a fit of rage, all obstacles in his path were reduced to dust.';I.proc="Effect: Frenzy";}
if(N==="Long Sword"){I.name="Harmonic Short Sword";I.enhancedDamage=16;I.sta=5;I.str=15;I.dex=10;I.cha=20;I.hp=60;I.castingHaste=-140;I.wraith=10;I.runSpeed=15;setAbsorbAll(NI,4);I.enhanceMagic=9;I.req=62;I.proc="Effect: Dance of the Blade";}
if(N==="Chokuto"){if(M.random()>.32){I.name="Azure Zephyr";I.enhancedDamage=3;I.ias=.42;I.hp=50;I.globalHaste=-150;I.haste=-100;I.str=15;I.dex=5;I.sta=10;I.leech=7;I.wraith=7;I.critChance=9;I.enhancePhysical=6;I.req=64;}else{I.name="Warder's Hailrend";I.damage=25;I.delay=2400;I.coldDamage=49;I.enhancePhysical=13;I.enhanceFire=5;I.wraith=9;I.leech=5;I.fear=43;I.haste=-120;I.critDamage=20;I.critChance=7;I.hpKill=9;I.mp=30;I.rarity=4;I.proc="Effect: Hail Storm";I.req=67;}}
if(N==="War Axe"){I.name="Axe of the Phased Dragon";I.enhancedDamage=19;I.fear=12;I.thorns=33;I.haste=-200;I.expFind=12;I.allStats=13
I.leech=8;I.wraith=3;I.magicDamage=35;I.allSkills=4;I.enhancePhysical=9;I.req=66;}
if(N==="Kusanagi"){if(M.random()>.32){I.name="Artremian Blade";I.ias=.25;I.enhancedDamage=7;I.haste=-150;I.resistLightning=33;I.mpRegen=9;I.silence=25;I.str=15;I.dex=10;I.sta=5;I.hp=50;I.enhancePhysical=6;I.enhanceLightning=10;I.allSkills=1;I.lightningDamage=55;I.req=68;I.proc="Effect: Earthcall";}else{I.name="Warder's Magmahew";I.damage=29;I.delay=2700;I.fireDamage=58;I.enhancePhysical=11;I.enhanceMagic=7;I.leech=7;I.stun=50;I.globalHaste=-150;I.castingHaste=-100;I.critChance=13;I.hp=40;I.mpKill=7;I.rarity=4;I.proc="Effect: Magma Eruption";I.req=62;}}}
if(nt==="crushed"){if(N==="Mace"){I.name="Stone Crusher";I.enhancedDamage=15;I.mp=25;I.str=30;I.globalHaste=-100;I.castingHaste=-120;I.mpRegen=5;I.critDamage=14;I.critChance=9;I.enhancePhysical=5;I.enhanceMagic=6;I.resistLightning=14;I.physicalDamage=28;I.req=54;}
if(N==="Club"){I.name="Cane of Harmony";I.enhancedDamage=15;I.globalHaste=-130;I.str=15;I.dex=15;I.cha=24;I.intel=24;I.magMit=8;I.dodge=6;I.parry=5;I.lightRadius=21;I.critDamage=15;I.expFind=12;I.hpRegen=5;setAbsorbAll(NI,5);I.enhancePhysical=7;I.req=56;}
if(N==="Morning Star"){I.name="Water Sprinkler of Yentus";I.enhancedDamage=19;I.sta=10;I.cha=15;I.wis=25;I.mp=100;I.castingHaste=-150;I.haste=-70;I.mp=100;I.enhanceMagic=10;I.enhancePhysical=6;I.alteration=6;I.abjuration=6;I.lightRadius=15;I.magicDamage=25;I.expFind=20;I.flavorText='Redeem your soul in a codified lifestyle free from degeneracy.';I.req=58;}
if(N==="Spiked Club"){I.name="Singed Cudgel";I.enhancedDamage=17;I.mp=50;I.wis=24;I.leech=6;I.mpRegen=6;I.castingHaste=-90;I.globalHaste=-120;I.evocation=12;I.resistFire=30;I.fireDamage=30;I.allSkills=4;I.enhanceAll=5;I.enhancePhysical=5;I.req=60;I.proc="Effect: Blaze";}
if(N==="Jagged Star"){I.name="Star of the Guardian";I.enhancedDamage=11;I.armor=25;I.phyMit=9;I.magMit=5;I.leech=7;I.thorns=15;I.wis=25;I.castingHaste=-70;I.skillHaste=-70;I.lightRadius=25;I.defense=5;I.abjuration=9;setAbsorbAll(NI,4);setAllStatus(NI,10,10,10,10);I.allResist=10;I.enhancePhysical=5;I.req=62;I.proc="Effect: Angel's Blessing";}
if(N==="Scepter"){I.name="Ebony Mace";I.enhancedDamage=19;I.critChance=7;I.globalHaste=-150;I.castingHaste=-120;I.wraith=9;I.leech=9;I.alteration=4;I.absorbCold=8;I.conjuration=6;I.coldDamage=35;I.enhancePhysical=7;I.enhanceFire=6;I.enhanceMagic=6;I.req=64;}
if(N==="Cudgel"){I.name="Fists of Qiromir";I.ias=.35;I.armor=12;I.attack=12;I.enhancedDamage=7;I.str=20;I.dex=10;I.sta=10;I.hp=60;I.enhancePhysical=9;I.critChance=9;I.critChance=13
I.globalHaste=-200;I.leech=10;I.xPos=-384;I.yPos=-576;I.req=66;I.flavorText='Honor your ancestors with your actions.';I.proc="Effect: Celestial Tranquility";}
if(N==="Caduceus"){I.name="Waking Nightmare";I.enhancedDamage=16;I.str=5;I.sta=10;I.cha=5;I.intel=20;I.hp=20;I.mp=80;I.haste=-90;I.castingHaste=-160;I.allSkills=4;I.enhancePoison=10;I.enhanceFire=7;I.enhanceMagic=7;setAllResists(NI,15,10,15,5,5);I.req=68;I.flavorText='Conquer the naive among you with deception and lies. Infiltrate them and spread disease in their minds and actions.';I.proc="Effect: Torment of Shadows";}}
if(nt==="pierced"){if(N==="Dagger"){I.name="Dragon Claw Main Gauche";I.enhancedDamage=5;I.armor=15;I.hp=22;I.mp=35;I.mpKill=5;I.mpRegen=5;I.castingHaste=-150;I.haste=-70;I.evocation=6;I.silence=16;setAllResists(NI,10,0,12,15,15);I.enhanceAll=5;I.enhancePhysical=5;I.req=54;}
if(N==="Dirk"){I.name="Bone Razor";I.ias=.2;I.enhancedDamage=7;I.hpKill=12;I.haste=-170;I.leech=13;I.critDamage=8;I.agi=30;I.enhancePoison=10;I.enhancePhysical=7;I.resistPoison=35;I.absorbPoison=6;I.poisonDamage=54;I.req=56;}
if(N==="Kris"){I.name="Razor Fang of Sartuz";I.ias=.11;I.enhancedDamage=8;I.hp=20;I.dex=20;I.leech=16;I.wraith=7;I.hpKill=9;I.mpKill=9;I.allSkills=3;I.enhanceMagic=10;I.enhancePhysical=6;I.magicDamage=30;I.req=58;I.proc="Effect: Blessing of Nature";}
if(N==="Poignard"){I.name="Chromaspike";I.enhancedDamage=12;I.intel=25;I.castingHaste=-200;I.enhanceAll=6;I.allSkills=3;I.allResist=24;I.mpRegen=5;I.silence=30;I.mpKill=10;I.req=60;}
if(N==="Rondel"){I.name="Ragestriker";I.ias=.15;I.enhancedDamage=11;I.armor=9;I.attack=20;I.haste=-110;I.globalHaste=-120;I.str=20;I.dex=20;I.sta=10;I.agi=10;I.hp=60;I.leech=9;I.resistPoison=20;I.resistLightning=20;I.resistMagic=10;I.enhancePhysical=6;I.fireDamage=35;I.flavorText='Seeds of chaos are potent creators of opportunity.';I.req=62;}
if(N==="Spear"){I.name="Spear of the Ancients";I.enhancedDamage=10;I.str=10;I.dex=10;I.sta=10;I.wis=25;I.hp=30;I.mp=60;I.mpRegen=4;I.hpRegen=4;I.castingHaste=-160;I.enhanceCold=7;I.enhancePoison=7;I.allSkills=3;I.coldDamage=35;I.req=64;I.flavorText='Act as though your every action were designed by God himself. Addled Scholars are crippled by their doubt.';I.proc="Effect: Curse of the Spirits";}
if(N==="Cinquedeas"){I.name="Orcish Croaking Dirk";I.enhancedDamage=12;I.armor=9;I.cha=15;I.agi=25;I.resistPoison=25;I.resistMagic=25;I.piercing=9;I.expFind=12;I.haste=-120;I.leech=7;I.magicDamage=28;I.enhancePhysical=7;I.cold=15;I.stun=15;I.req=66;}
if(N==="Stiletto"){if(M.random()>.32){I.name="Nightfall";I.enhancedDamage=11;I.str=28;I.dex=28;I.agi=15;I.leech=4;I.hp=25;I.offense=9;I.attack=15;I.critChance=9;I.critDamage=13
I.enhanceMagic=14;I.enhancePhysical=9;I.magicDamage=45;I.req=68;I.proc="Effect: Loathing Darkness";}else{I.name="Warlock's Nemesis";I.damage=26;I.delay=2200;I.allResist=50;I.castingHaste=-250;I.magMit=21;I.phyMit=15;setAbsorbAll(NI,7);I.lightRadius=12;I.intel=75;I.enhancePoison=13;I.enhanceMagic=8;I.rarity=4;I.req=68;}}}
if(nt==="cleaved"){if(N==="Giant Sword"){I.name="Kordata Battle Sword";I.enhancedDamage=16;I.expFind=12;I.allStats=18;I.leech=10;I.wraith=10;I.critChance=4;I.haste=-100;I.globalHaste=-200;I.enhancePhysical=7;I.expFind=7;I.offense=13
I.physicalDamage=65;I.req=54;}
if(N==="Giant Axe"){I.name="Wenerva's Axe of Slaughter";I.enhancedDamage=20;I.armor=25;I.hp=75;I.mp=40;I.haste=-200;I.globalHaste=-240;I.enhancePhysical=10;I.str=25;I.dex=25;I.sta=25;I.agi=25;I.leech=15;I.wraith=10;I.physicalDamage=72;I.req=56;I.proc="Effect: Shatter";}
if(N==="Champion Sword"){I.name="Curse of Ghalentus";I.enhancedDamage=22;I.str=40;I.dex=30;I.intel=30;I.hp=50;I.mp=35;I.haste=-300;I.globalHaste=-150;I.castingHaste=-200;I.enhancePhysical=14;I.enhanceMagic=6;I.enhanceFire=6;I.leech=24;I.conjuration=14;setAllResists(NI,15,45,15,30,30);I.poisonDamage=85;I.req=58;I.flavorText='"Death is a blessing upon the weak who lead wretched, ill-conceived lives." -Dragoon Zornin';I.proc="Effect: Soul Consumption";}
if(N==="Bastard Sword"){I.name="Fiery Defender";I.enhancedDamage=22;I.str=40;I.sta=20;I.wis=30;I.hp=66;I.mp=25;I.haste=-150;I.globalHaste=-150;I.castingHaste=-300;I.enhancePhysical=12;I.enhanceMagic=14;I.wraith=20;I.alteration=10;I.abjuration=10;I.magicDamage=85;I.req=60;I.flavorText='"Rouse your comrades to battle when justice demands it." -Reklon Gnallen, Paladin Guildmaster';I.proc="Effect: Holy Shock";}
if(N==="Gothic Axe"){if(M.random()>.32){I.name="Executioner's Blade";I.enhancedDamage=21;I.str=60;I.haste=-150;I.globalHaste=-250;I.enhancePhysical=14;I.critChance=13
I.critDamage=18;I.fear=20;I.parry=7;I.resistCold=100;I.resistPoison=60;I.twoHandSlash=13
I.physicalDamage=75;I.leech=16;I.req=62;}else{I.name="Grave Lord's Crescent";I.damage=89;I.delay=5900;I.coldDamage=101;I.attack=33;I.offense=15;I.absorbCold=17;I.enhancePhysical=12;I.fear=75;I.leech=16;I.wraith=25;I.critChance=15;I.haste=-250;I.rarity=4;I.req=67;}}
if(N==="Katana"){I.name="Serrated Blade of War";I.enhancedDamage=20;I.str=40;I.dex=30;I.sta=30;I.hp=90;I.haste=-200;I.globalHaste=-250;I.enhancePhysical=19;I.critChance=13
I.critDamage=18;I.defense=13
I.parry=13
I.riposte=13
I.twoHandSlash=13
I.physicalDamage=85;I.leech=15;I.req=64;I.flavorText='"There are no nations without men willing to bleed for them." -Manik Compolten';I.proc="Effect: Rage of Carthak";}
if(N==="Colossus Sword"){I.name="Flamebelcher";I.enhancedDamage=21;I.str=40;I.sta=20;I.cold=50;I.haste=-150;I.globalHaste=-150;I.enhancePhysical=19;I.enhanceFire=13
I.critDamage=18;I.attack=25;I.parry=13
I.riposte=13
I.resistFire=120;I.absorbFire=25;I.fireDamage=222;I.leech=10;I.req=66;I.proc="Effect: Flame Nova";}
if(N==="Mythical Sword"){I.name="The Grandfather";I.enhancedDamage=21;I.allStats=20;I.allSkills=6;I.haste=-250;I.globalHaste=-250;I.enhancePhysical=24;I.hp=80;I.attack=20;I.doubleAttack=24;I.lightRadius=30;I.resistLightning=75;I.resistPoison=75;I.physicalDamage=96;setAllStatus(NI,40,40,40,40);I.flavorText='A grandfather\'s illegible inscription is carved into the hilt.';I.req=68;}}
if(nt==="staff"){if(N==="Staff"){I.name="Arwen's Wisdom";I.enhancedDamage=11;I.intel=56;I.armor=115;I.magMit=8;I.defense=13
I.allSkills=4;I.castingHaste=-300;I.expFind=30;I.enhanceAll=10;I.req=54;}
if(N==="Runic Staff"){I.name="Prentian Apothic Staff";I.enhancedDamage=15;I.sta=25;I.wis=36;I.castingHaste=-200;I.critChance=3;I.alteration=14;I.resistMagic=50;I.resistPoison=75;I.enhanceMagic=12;I.fear=45;I.silence=30;I.req=56;}
if(N==="Cedar Staff"){I.name="Ornate Prism Staff";I.enhancedDamage=15;I.str=20;I.dex=10;I.sta=20;I.intel=50;I.mp=125;I.castingHaste=-330;I.mpRegen=13;I.alteration=15;I.enhanceMagic=15;I.enhanceFire=15;I.enhanceCold=15;I.enhanceLightning=10;I.critChance=13;I.silence=50;setAllResists(NI,10,20,10,20,20);I.req=58;I.flavorText='The three elements and holy magic empower the Ornate Prism Staff.';I.proc="Effect: Barrier of Force";}
if(N==="Quarterstaff"){I.name="Staff of Occult Rites";I.enhancedDamage=17;I.hp=50;I.mp=50;I.sta=25;I.wis=27;I.castingHaste=-150;I.critChance=15;I.hpKill=20;I.mpKill=30;I.hpRegen=12;I.allSkills=5;I.resistCold=77;I.resistMagic=55;I.enhanceCold=24;I.cold=75;I.silence=20;I.flavorText='"You cannot count on others to perform important tasks. If you want it done right, do it yourself." -Mate Basterson';I.req=60;}
if(N==="Cosmic Staff"){if(M.random()>.32){I.name="Staff of Sentoth";I.enhancedDamage=24;I.armor=35;I.str=10;I.sta=20;I.agi=25;I.cha=30;I.intel=40;I.hp=40;I.mp=60;I.castingHaste=-250;I.haste=-400;I.alteration=10;I.abjuration=7;I.enhanceMagic=24;I.silence=35;I.stun=35;I.req=63;I.flavorText='A slithering serpent quietly percolates your destruction.';I.proc="Effect: Speed of the Shissar";}else{I.name="Arch Mage's Catastrophe";I.damage=102;I.delay=6000;I.enhanceFire=15;I.enhanceCold=15;I.enhanceLightning=25;I.allSkills=10;I.allResist=30;I.mp=330;I.hp=136;I.mpKill=45;I.critChance=20;I.mpRegen=15;I.lightRadius=40;I.rarity=4;I.req=66;}}
if(N==="Archon Staff"){I.name="Hierophant's Crook";I.str=30;I.dex=30;I.wis=30;I.castingHaste=-300;I.allSkills=4;setAbsorbAll(NI,9);I.enhancePhysical=28;I.enhanceFire=13
I.enhanceCold=10;I.enhanceLightning=14;I.stun=60;I.silence=25;I.fireDamage=150;I.coldDamage=66;I.lightningDamage=255;I.goldFind=50;I.req=66;I.proc="Effect: Earthquake";}}
if(nt==="smashed"){if(N==="Giant Mace"){I.name="Blackstone Maul";I.enhancedDamage=16;I.str=30;I.wis=40;I.intel=30;I.castingHaste=-200;I.enhancePoison=10;I.enhanceCold=10;I.allSkills=4;I.resistLightning=44;I.resistCold=28;I.resistFire=120;I.mp=56;I.mpKill=7;I.physicalDamage=61;I.leech=10;I.req=54;}
if(N==="Auric Maul"){I.name="Shatterfrost";I.enhancedDamage=11;I.haste=-120;I.globalHaste=-150;I.castingHaste=-120;I.enhancePhysical=10;I.enhanceCold=18;I.critDamage=24;I.cold=45;I.evocation=12;I.resistCold=80;I.absorbCold=16;I.coldDamage=115;I.wraith=12;I.req=56;I.proc="Effect: Cone of Frost";}
if(N==="Mallet"){I.name="Earth Shifter";I.enhancedDamage=20;I.hp=45;I.mp=45;I.allSkills=9;I.castingHaste=-120;I.enhanceLightning=9;I.enhanceCold=9;I.enhanceFire=9;I.hpRegen=8;I.mpRegen=5;I.absorbLightning=12;I.absorbFire=8;I.lightningDamage=173;I.req=58;I.proc="Effect: Fissure";}
if(N==="Ogre Maul"){I.name="The Cranium Basher";I.enhancedDamage=11;I.str=50;I.sta=20;I.stun=30;I.haste=-250;I.globalHaste=-100;I.enhancePhysical=14;I.critChance=24;I.offense=10;I.riposte=18;I.twoHandBlunt=13
I.physicalDamage=85;I.leech=13;I.req=60;I.proc="Effect: Amplify Damage";}
if(N==="Great Maul"){I.name="Granite Face Smasher";I.enhancedDamage=17;I.str=40;I.wis=40;I.intel=40;I.haste=-200;I.castingHaste=-250;I.enhanceAll=9;I.allSkills=5;setAllStatus(NI,15,15,15,15);setAbsorbAll(NI,6);I.poisonDamage=90;I.magicDamage=90;I.coldDamage=90;I.mpRegen=10;I.flavorText='"Ha, ha! Me never find weapon that smash as gud as this." -Gronk, Warrior Guildmaster.';I.req=62;}
if(N==="Sledgehammer"){I.name="Runestone Maul";I.enhancedDamage=19;I.allStats=24;I.enhanceAll=18;I.critChance=14;I.defense=15;I.dodge=12;I.alteration=10;I.abjuration=18;I.channeling=24;I.lightRadius=35;I.magicDamage=75;I.physicalDamage=311;I.req=64;}
if(N==="Umbral Hammer"){I.name="Blackstar Mace of Slagnon";I.enhancedDamage=22;I.str=30;I.sta=40;I.wis=40;I.hp=112;I.mp=100;I.castingHaste=-250;I.globalHaste=-150;I.enhancePhysical=15;I.enhanceMagic=15;I.critDamage=25;I.allSkills=6;I.resistPoison=90;I.magicDamage=85;I.leech=8;I.mpRegen=15;I.req=66;I.proc="Effect: Blessing of the Blackstar";}
if(N==="Thunder Maul"){if(M.random()>.5){I.name="Hammer of the Dragonborn";I.enhancedDamage=23;I.allStats=28;I.allSkills=7;setAllStatus(NI,25,25,25,25);I.haste=-250;I.globalHaste=-250;I.castingHaste=-250;I.enhanceAll=10;I.critChance=18;setAbsorbAll(NI,9);I.physicalDamage=90;I.leech=15;I.mpRegen=9;I.req=68;I.proc="Effect: Primal Corruption";}else{I.name="Hallowed Gavel of Pharmakos";I.damage=83;I.delay=5500;I.critChance=24;I.enhanceAll=8;I.enhancePhysical=16;I.str=45;I.sta=70;I.dex=33;I.expFind=20;I.allSkills=9;setAllStatus(NI,40,40,40,40);I.globalHaste=-180;I.haste=-300;I.magicDamage=172;I.absorbMagic=20;I.leech=15;I.mpRegen=9;I.req=68;I.proc="Effect: Kelpie Snare";}}}}
if(ni==="shield"){if(nt==="shield"){if(N==="Buckler"){I.name="Blackoak Shield";I.enhancedArmor=80;I.hp=55;I.dex=50;I.lightningDamage=35;I.enhancePhysical=6;I.leech=12;I.stun=35;I.cold=50;I.resistLightning=55;I.resistCold=35;I.resistFire=35;I.absorbLightning=15;I.req=54;}
if(N==="Small Shield"){I.name="Spirit Ward";I.enhancedArmor=80;I.hp=35;I.mp=50;I.castingHaste=-90;I.phyMit=10;I.magMit=20;I.leech=9;I.wraith=12;I.stun=25;I.absorbCold=8;I.allResist=35;I.req=56;}
if(N==="Kite Shield"){I.name="Stormshield";I.enhancedArmor=85;I.defense=10;I.str=30;I.thorns=15;I.resistCold=60;I.resistLightning=25;I.phyMit=35;I.globalHaste=-70;I.stun=60;I.req=58;}
if(N==="Round Shield"){if(M.random()>.5){I.name="Gnoll Commander's Battle Shield";I.enhancedArmor=85;I.sta=15;I.str=15;I.hp=35;setAllResists(NI,0,40,0,40,40);setAbsorbAll(NI,9);I.globalHaste=-100;I.haste=-50;I.leech=15;I.req=60;}else{I.name="March of Vithe";I.enhancedArmor=100;I.cha=45;I.dex=35;I.intel=25;I.allSkills=5;I.hp=70;setAllResists(NI,25,75,30,60,45);I.enhanceAll=4;I.castingHaste=-90;I.haste=-90;I.leech=9;I.wraith=9;I.mpKill=12;I.proc="Effect: Ostinato";I.req=60;}}
if(N==="Gothic Shield"){I.name="Head Hunter's Pride";I.enhancedArmor=90;I.defense=6;I.resistFire=30;I.resistPoison=55;I.hpKill=30;I.fear=25;I.stun=25;I.leech=10;I.wraith=15;I.castingHaste=-120;I.globalHaste=-70;I.poisonDamage=24;I.req=62;}
if(N==="Crown Shield"){I.name="Bladestopper";I.enhancedArmor=90;I.hp=50;I.sta=30;I.phyMit=18;I.parry=9;I.riposte=9;I.allResist=28;I.absorbFire=15;I.fireDamage=40;I.stun=25;I.req=64;}
if(N==="Aegis"){if(M.random()>.32){I.name="Shield of Elders";I.enhancedArmor=95;I.allStats=24;I.allResists=28;I.lightRadius=25;I.allSkills=3;I.leech=15;I.mpRegen=8;I.stun=40;I.req=66;}else{I.name="Crusader's Aegis";I.enhancedArmor=120;I.hp=69;I.mp=56;I.allResist=32;setAllStatus(NI,50,50,50,50);I.thorns=30;I.leech=20;I.castingHaste=-120;I.phyMit=16;I.magMit=22;setAbsorbAll(NI,12);I.rarity=4;I.req=68;}}
if(N==="Monarch"){I.name="Shield of the Clawed Guardian";I.enhancedArmor=95;I.str=20;I.sta=20;I.wis=15;I.intel=15;I.hp=50;I.mp=50;I.castingHaste=-90;I.globalHaste=-90;I.haste=-90;I.leech=16;I.critChance=9;setAllResists(NI,15,50,15,25,25);setAllStatus(NI,35,35,35,35);I.req=68;}}
if(nt==="offhand"){if(N==="Stein"){I.name="The Holy Grail";I.allResist=35;I.intel=55;I.wis=35;I.cha=40;I.stun=35;I.fear=24;I.mp=215;I.hp=125;I.allSkills=3;I.critChance=12;I.castingHaste=-180;I.enhanceMagic=15;I.enhanceLightning=9;I.enhancePoison=9;I.hpRegen=13;I.mpRegen=9;I.req=56;}
if(N==="Dark Orb"){if(M.random()>.32){I.name="Cone of the Mystics";I.wis=35;I.intel=35;I.mp=72;I.alteration=7;I.conjuration=10;I.channeling=13
I.mpKill=16;I.castingHaste=-130;I.enhanceCold=12;I.enhancePoison=7;I.mpRegen=7;I.req=56;}else{I.name="Virtuoso's Resonance";I.mp=155;I.hp=114;I.castingHaste=-150;I.critChance=10;I.critDamage=20;I.enhanceMagic=8;I.leech=20;I.wraith=20;I.magMit=35;I.stun=30;I.cha=68;I.rarity=4;I.req=62;}}
if(N==="Ancient Tome"){I.name="Book of Obulus";I.mp=77;I.hp=37;I.intel=40;I.wis=40;I.fear=35;I.castingHaste=-150;I.conjuration=13
I.enhanceMagic=7;I.enhancePoison=12;I.resistFire=25;I.resistMagic=25;I.mpRegen=6;I.hpRegen=6;I.req=58;}
if(N==="Totem"){if(M.random()>.32){I.name="Death's Fathom";I.mp=90;I.mpKill=15;I.silence=20;I.enhanceCold=13
I.enhanceLightning=18;I.castingHaste=-100;I.allSkills=3;I.resistFire=35;I.yPos=-576;I.req=60;}else{I.name="Hierophant's Cloudburst";I.mp=200;I.enhanceCold=12;I.enhanceLightning=8;I.castingHaste=-180;I.hp=55;I.mpRegen=12;I.hpRegen=5;I.evocation=12;I.alteration=7;I.lightRadius=15;I.wis=44;setAllResists(NI,15,15,52,99,0);I.rarity=4;I.req=65;}}
if(N==="Crystal Ball"){if(M.random()>.32){I.name="Silver Disk";I.armor=20;I.dex=50;I.sta=40;I.agi=20;I.hp=50;I.resistMagic=30;I.mp=35;I.defense=7;I.mpRegen=13;I.hpRegen=7;I.mpKill=12;I.castingHaste=-200;I.req=62;}else{I.name="Phantasmist's Kismet";I.castingHaste=-200;I.hp=210;I.thorns=35;I.critChance=10;I.resistMagic=120;I.enhanceMagic=12;I.magMit=15;I.allSkills=3;I.silence=100;I.stun=40;I.cha=90;I.rarity=4;I.req=66;}}
if(N==="Skull"){if(M.random()>.32){I.name="Fatesealer";I.str=25;I.dex=25;I.wis=50;I.intel=50;I.hp=75;I.mp=75;I.evocation=14;I.castingHaste=-120;I.critChance=10;I.critDamage=12;I.yPos=-576;I.req=64;}else{I.name="Oracle's Fetish";I.mp=155;I.castingHaste=-170;I.hpRegen=10;I.mpRegen=15;I.expFind=15;I.lightRadius=22;I.allResist=55;I.conjuration=10;I.abjuration=15;I.enhancePoison=10;I.silence=33;I.rarity=4;I.req=62;}}
if(N==="Emblazoned Orb"){if(M.random()>.32){I.name="Orb of the Dark Magus";I.mp=100;I.str=25;I.dex=15;I.sta=20;I.intel=40;I.castingHaste=-150;I.mpKill=11;I.mpRegen=8;I.enhanceFire=14;I.enhanceLightning=9;I.enhanceCold=10;I.critChance=5;I.evocation=9;I.conjuration=12;I.resistFire=50;I.resistCold=50;I.resistMagic=50;I.flavorText='The key to elemental mastery lies in knowledge of oneself.';I.req=66;}else{I.name="Sorcerer's Pleiades";I.castingHaste=-120;I.enhanceAll=6;setAllStatus(NI,30,30,30,30);I.allSkills=6;I.expFind=10;I.lightRadius=15;I.magMit=30;I.mpRegen=12;I.resistLightning=99;I.resistMagic=53;I.intel=77;I.hp=55;I.rarity=4;I.req=68;}}
if(N==="Idol"){I.name="Clastocaust's Temper";I.allStats=18;I.enhanceAll=10;I.allSkills=5;I.allResist=19;I.silence=33;I.critChance=10;setAbsorbAll(NI,6,3);I.yPos=-576;I.req=68;}}}
if(nt==="range"){if(N==="Short Bow"){I.name="Eaglecaller";I.enhancedDamage=13;I.hp=24;I.resistLightning=20;I.parry=5;I.evocation=3;I.dex=25;I.allSkills=1;I.physicalDamage=20;I.enhancePhysical=2;I.req=54;}
if(N==="Hunter's Bow"){I.name="Hail of Death";I.enhancedDamage=16;I.critDamage=7;I.haste=-40;I.hpKill=8;I.offense=4;I.resistPoison=35;I.poisonDamage=35;I.enhanceCold=2;I.req=56;}
if(N==="Composite Bow"){I.name="Widowmaker";I.enhancedDamage=15;I.evocation=5;I.critChance=3;I.oneHandSlash=6;I.fear=15;I.absorbPoison=5;I.fireDamage=20;I.enhanceFire=2;I.req=58;}
if(N==="Siege Bow"){I.name="Treant Bow";I.enhancedDamage=17;I.hpRegen=2;I.wis=12;I.sta=20;I.alteration=5;I.evocation=5;I.enhanceLightning=3;I.lightningDamage=30;I.req=60;}
if(N==="Astral Bow"){I.name="Demoncaller's Wrath";I.enhancedDamage=16;I.mp=25;I.conjuration=5;I.magMit=5;I.channeling=7;I.enhancePoison=2;I.enhanceMagic=2;I.req=62;}
if(N==="Gothic Bow"){I.name="Wind Saber";I.enhancedDamage=15;I.dex=15;I.wis=15;I.agi=15;I.enhancePhysical=2;I.resistCold=24;I.absorbLightning=3;I.req=64;}
if(N==="Ward Bow"){if(M.random()>.32){I.name="Bow of the Destroyer";I.enhancedDamage=11;I.mp=50;I.str=15;I.dex=15;I.agi=15;I.allResist=13
I.req=66;}else{I.name="Warder's Tempest";I.damage=81;I.delay=5500;I.attack=16;I.resistLightning=58;I.riposte=7;I.evocation=13;I.enhanceMagic=7;I.enhanceFire=11;I.dex=29;I.silence=33;I.chill=20;setAbsorbAll(NI,7);I.rarity=4;I.req=62;}}
if(N==="Hydra Bow"){I.name="Windforce";I.enhancedDamage=20;I.str=20;I.dex=10;I.enhanceAll=3;I.enhancePhysical=3;I.haste=-50;I.wraith=6;I.flavorText='The mountains trembled and the heavens let loose the hail of death.';I.req=68;}}
if(nt==="trinket"){if(N==="Trinket"){var r1=M.random();if(r1>.67){I.name="Left Eye of Kurnst";I.wis=15;I.intel=15;I.mp=50;I.castingHaste=-50;I.resistMagic=25;I.resistPoison=15;I.mpRegen=3;I.enhanceMagic=2;I.req=54;}else if(r1>.33){I.name="Oracle's Presage";I.mpRegen=5;I.hpRegen=5;I.defense=5;I.allSkills=1;I.hp=45;I.lightRadius=15;I.expFind=12;I.enhanceCold=6;I.allResist=10;setAllStatus(NI,23,23,23,23);I.rarity=4;I.req=62;}else{I.name="Arch Mage's Mojo";I.mpRegen=5;I.hpRegen=5;I.enhanceAll=3;setAbsorbAll(NI,3);I.allSkills=5;I.allStats=10;I.allResist=10;setAllStatus(NI,15,15,15,15);I.rarity=4;I.req=65;}}
if(N==="Memento"){if(M.random()>.32){I.name="Pulsating Gem";I.armor=7;I.allStats=10;I.allSkills=2;I.globalHaste=-50;I.cold=10;I.fireDamage=9;I.offense=3;I.enhancePhysical=2;I.req=58;}else{I.name="Virtuoso's Fanfare";I.enhancedArmor=120;I.hp=90;I.lightRadius=22;I.expFind=12;I.runSpeed=20;I.fear=20;I.stun=35;I.mpKill=8;I.hpKill=12;setAbsorbAll(NI,6);I.rarity=4;I.req=64;}}
if(N==="Charm"){if(M.random()>.32){I.name="Blue Resistance Stone";I.armor=10;I.hp=20;I.allStats=7;setAllResists(NI,5,5,10,35,15);setAbsorbAll(NI,4);setAllStatus(NI,9,9,9,9);I.enhanceCold=3;I.req=62;}else{I.name="Grandmaster's Comity";I.leech=15;I.allResist=13;I.allSkills=5;I.phyMit=9;I.magMit=12;I.str=35;I.agi=55;I.lightRadius=33;I.expFind=12;I.enhancePhysical=8;I.thorns=8;I.rarity=4;I.req=68;}}}}}
function magicFind(foo){var bar=0;var qux=0;if(foo>0){qux=foo;if(qux>5){qux=5;}}
bar+=qux*4;qux=0;if(foo>5){qux=foo-5;if(qux>5){qux=5;}}
bar+=qux*3;qux=0;if(foo>10){qux=foo-10;if(qux>5){qux=5;}}
bar+=qux*2;qux=0;if(foo>15){qux=foo-15;}
bar+=qux;if(bar>100){bar=100;}
return bar;}
function dimRet(x){var foo=0;var rem=0;if(x<=20){foo=x;}else if(x>20&&x<=40){foo=20;rem=x-20;rem=rem*.8;foo=foo+rem;}else if(x>40&&x<=60){foo=36;rem=x-40;rem=rem*.6;foo=foo+rem;}else if(x>60&&x<=80){foo=48;rem=x-60;rem=rem*.4;foo=foo+rem;}else if(x>80){foo=56;rem=x-80;rem=rem*.2;foo=foo+rem;}
if(foo>100){foo=100;}
return foo;}
function getLoot(Slot,Qitem,weaponType,rarity,armorType){var newItem=getItemSlot(mob[Slot].level);if(Qitem){newItem=Qitem;}
var newTier=getItemTier(Slot);var foo=getArmor(Slot,newItem,newTier);var newArmor=foo[0];var newX=foo[1];var newY=foo[2];var newName=foo[3];var newDamage=foo[4];var newDelay=foo[5];var newType=foo[6];var newQuality=foo[7];if(Qitem==="shield"){if(my.job==="Necromancer"||my.job==="Enchanter"||my.job==="Magician"||my.job==="Wizard"){if(newType!=="offhand"){getLoot(Slot,Qitem,weaponType,rarity);return;}}else{if(newType!=="shield"){getLoot(Slot,Qitem,weaponType,rarity);return;}}}
if(Qitem==="range"&&newType!=="trinket"){getLoot(Slot,Qitem,weaponType,rarity,armorType);return;}
if(armorType){if(newType!==armorType){getLoot(Slot,Qitem,weaponType,rarity,armorType);return;}}
if(weaponType){if(newType!==weaponType){getLoot(Slot,Qitem,weaponType,rarity);return;}}
var newRarity=0;var champBuff=0;if(mob[Slot].rare===2){champBuff=25;}
if(mob[Slot].rare===0){champBuff=70;}
if(mob[Slot].rare===3){var goy=g.difficulty-1;champBuff=200;if(mob[Slot].rare===3){if(myZone()==="Lanfeld Outpost"){if(P.Q[goy].Crushbone===3){champBuff=700;}}
if(myZone()==="Arcturin's Crypt"){if(P.Q[goy].EstateofUnrest===3){champBuff=700;}}
if(myZone()==="Temple of Prenssor"){if(P.Q[goy].CazicThule===3){champBuff=700;}}
if(myZone()==="Ashenflow Peak"){if(P.Q[goy].NagafensLair===4){champBuff=700;}}
if(myZone()==="Galeblast Fortress"){if(P.Q[goy].PermafrostKeep===4){champBuff=700;}}
if(myZone()==="Viston's Redoubt"){if(P.Q[goy].KedgeKeep===4){champBuff=700;}}
if(myZone()==="Nimgaul"){if(P.Q[goy].PlaneofFear===1){champBuff=700;}}
if(myZone()==="Dire Sanctum"){if(P.Q[goy].PlaneofHate===1){champBuff=700;}}}}
var mfBonus=dimRet(g.lightRadiusEquip);if(my.race==="Halfling"){mfBonus+=10;}
var mobHordeBonus=0;var count=countMobs();if(count>1){mobHordeBonus=10;if(count===3){mobHordeBonus=25;}else if(count===4){mobHordeBonus=50;}else if(count===5){mobHordeBonus=80;}}
if(mob[Slot].rare===3){mobHordeBonus=0;}
champBuff+=(mfBonus+mobHordeBonus);var cC=chainCounter;if(M.random()*100<(3+(champBuff / 10)+(magicFind(cC)/ 9))){newRarity=3;}else if(M.random()*100<(12+champBuff / 2+(magicFind(cC)/ 4))){newRarity=2;}else if(M.random()*100<(75+champBuff+magicFind(cC))){newRarity=1;}
if(mob[Slot].rare===0){newRarity+=1;if(newRarity<2){newRarity=2;}
if(newRarity>3){newRarity=3;}}
if(newItem==="ring"||newItem==="neck"||newType==="offhand"||newType==="trinket"){if(newRarity===1||newRarity===2){newQuality=0;}else if(newRarity===0){getLoot(Slot,Qitem,weaponType,rarity);return;}}
if(rarity){newRarity=rarity;}
if(newItem==="helmet"&&newRarity===3&&mob[Slot]<20){getLoot(Slot,Qitem,weaponType,rarity,armorType);return;}
var NI=findFirstInvSlot();if(NI===false){Error("There is no room in your inventory to collect new items.");return;}
function initSlot(){for(var x=0,len=g.key.length;x<len;x++){P.item[NI][g.key[x]]=g.val[x];}}
initSlot();function convertFilter(x){var v=0;if(x==="Normal"){v=1;}else if(x==="Exceptional"){v=2;}else if(x==="All"){v=3;}
return v;}
P.item[NI].rarity=newRarity;P.item[NI].itemSlot=newItem;P.item[NI].xPos=newX;P.item[NI].yPos=newY;P.item[NI].name=newName;P.item[NI].armor=newArmor;P.item[NI].damage=newDamage;P.item[NI].delay=newDelay;P.item[NI].type=newType;P.item[NI].quality=newQuality;if(newRarity===3){getUniqueItem(NI,newItem,newTier,newType,newName,Slot,newQuality);}else if(newRarity===2){var nmBonus=0;var hellBonus=0;if(diff()>0){nmBonus=1;}
if(diff()>1){hellBonus=2;}
var prefCount=~~(1+M.random()*(3)+nmBonus);var sufCount=~~(1+M.random()*(3)+hellBonus);if((prefCount+sufCount)<4){prefCount=2;sufCount=2;}
for(var i=1;i<=prefCount;i++){getItemPrefix(NI,newItem,newType,Slot,newName);}
for(var i=1;i<=sufCount;i++){getItemSuffix(NI,newItem,newType,Slot,newName);}
P.item[NI].name=getRareName(newItem,newType,newName);}else if(newRarity===1){if(M.random()<=.5){getItemPrefix(NI,newItem,newType,Slot,newName);if(M.random()>.5){getItemSuffix(NI,newItem,newType,Slot,newName);}}else{getItemSuffix(NI,newItem,newType,Slot,newName);if(M.random()<=.5){getItemPrefix(NI,newItem,newType,Slot,newName);}}}
if(P.item[NI].rarity===4){newRarity=4;}
var zub=false;if(newRarity===0){var filter=convertFilter(Lmy.normalFilter);if(filter>newQuality){zub=true;}}else if(newRarity===1){var filter=convertFilter(Lmy.magicFilter);if(filter>newQuality){zub=true;}}else if(newRarity===2){var filter=convertFilter(Lmy.rareFilter);if(filter>newQuality){zub=true;}}else if(newRarity===3){var filter=convertFilter(Lmy.uniqueFilter);if(filter>newQuality){zub=true;}}else if(newRarity===4){var filter=convertFilter(Lmy.setFilter);if(filter>newQuality){zub=true;}}
if(zub===true){if(newQuality===0){Chat("You found an item and immediately discarded it: "+logItemName(newName,newRarity));}
if(newQuality===1){"<span class='exceptionalItem'>Exceptional </span>"
Chat("You found an <span class='exceptionalItem'>Exceptional </span>item and immediately discarded it: "+logItemName(newName,newRarity));}
if(newQuality===2){"<span class='eliteItem'>Exceptional </span>"
Chat("You found an <span class='eliteItem'>Elite </span>item and immediately discarded it: "+logItemName(newName,newRarity));}
initSlot();return;}
if(newItem==="ring"||newItem==="neck"||newType==="offhand"||newType==="trinket"){if(P.item[NI].rarity<3){P.item[NI].quality=0;}}
if(P.item[NI].enhancedDamage){P.item[NI].damage+=P.item[NI].enhancedDamage;}
if(P.item[NI].enhancedArmor){P.item[NI].armor=P.item[NI].armor+M.round(P.item[NI].armor*(P.item[NI].enhancedArmor / 100));}
if(P.item[NI].ias){P.item[NI].delay=P.item[NI].delay*(1-P.item[NI].ias);P.item[NI].delay=M.round(P.item[NI].delay / 100);P.item[NI].delay*=100;P.item[NI].ias=M.round(P.item[NI].ias*100);}
var foo=logItemName(P.item[NI].name,P.item[NI].rarity);var s1=" an ";var s2=" a ";if(newQuality===1){var goy="<span class='exceptionalItem'>Exceptional </span>";s1=" an "+goy;s2=" an "+goy;}
if(newQuality===2){var goy="<span class='eliteItem'>Elite </span>";s1=" an "+goy;s2=" a "+goy;}
var x="You found "+s1+"item: "+foo;if(newRarity===1){x="You found"+s2+"magic item: "+foo;my.magicFound+=1;}else if(newRarity===2){x="You found"+s2+"rare item: "+foo;my.raresFound+=1;}else if(newRarity===3){x="You found"+s2+"unique item: "+foo;my.uniquesFound+=1;}else if(newRarity===4){x="You found"+s2+"set item: "+foo;my.setFound+=1;}
Chat(x);if(newRarity>=3){g.lastDrop=P.item[NI].name;if(location.pathname!=='/ng/'&&location.protocol==="https:"){$.ajax({data:{run:"addLoot",itemName:P.item[NI].name,rarity:P.item[NI].rarity,name:my.name}});}}
var mobX=MOB[Slot].offsetLeft+(mob[Slot].imageWidth / 2)-32+M.random()*(100)-50;var mobY=MOB[Slot].offsetTop+(mob[Slot].imageHeight / 2)-32+M.random()*(100)-50;var e1=DIV(mobX,mobY,64,64);e1.style.background="url('//"+itemSprite+"') "+P.item[NI].xPos+"px "+P.item[NI].yPos+"px";NG.eWin.appendChild(e1);var m1=200;var mX=~~M.random()*(m1);m1-=mX;var mY=m1;if(M.random()>.5){mX=mX*-1;}
if(M.random()>.5){mY=mY*-1;}
T.set(e1,{scale:0});T.to(e1,1,{left:"+="+mX,top:"+="+mY,scale:1,ease:ez.Bout});T.to(e1,1,{rotation:720});T.to(e1,2,{delay:1,top:-14,left:1066,scale:.625,ease:ez.qout,onComplete:function(){remove(this);}});if(Qitem){QMsg("Quest Reward: ");}
itemNotify();if(GLB.hideMenu==="On"){T.to(D.getElementById('window5Id'),.5,{startAt:{opacity:1},delay:6,opacity:0});}
cancelDragging();updateInvDrag(NI);save.item(NI);}
function talentNotify(){talentNotifyStatus=true;if(GLB.hideMenu==="On"){T.to(D.getElementById('window5Id'),0,{startAt:{opacity:1},delay:8,opacity:0});}
var zig=D.getElementById('talentNotify');T.set(zig,{opacity:1});}
function itemNotify(){if(GLB.hideMenu==="On"){T.to(D.getElementById('window5Id'),0,{startAt:{opacity:1},delay:8,opacity:0});}
T.to(D.getElementById('itemNotify'),.5,{startAt:{opacity:1},opacity:.5,ease:ez.lin,repeat:-1,yoyo:true});}
function getItemPrefix(NI,newItem,newType,Slot,newName){var foo=~~(1+M.random()*(39));if(foo===1){attackAdd(NI,newItem,newType,Slot,newName);}
if(foo===2){physicalDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===3){poisonDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===4){magicDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===5){lightningDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===6){coldDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===7){fireDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===8){enhancedDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===9){enhancePhysicalAdd(NI,newItem,newType,Slot,newName);}
if(foo===10){mpAdd(NI,newItem,newType,Slot,newName);}
if(foo===11){lightRadiusAdd(NI,newItem,newType,Slot,newName);}
if(foo===12){resistPoisonAdd(NI,newItem,newType,Slot,newName);}
if(foo===13){resistMagicAdd(NI,newItem,newType,Slot,newName);}
if(foo===14){resistLightningAdd(NI,newItem,newType,Slot,newName);}
if(foo===15){resistColdAdd(NI,newItem,newType,Slot,newName);}
if(foo===16){resistFireAdd(NI,newItem,newType,Slot,newName);}
if(foo===17){allResistAdd(NI,newItem,newType,Slot,newName);}
if(foo===18){oneHandSlashAdd(NI,newItem,newType,Slot,newName);}
if(foo===19){twoHandSlashAdd(NI,newItem,newType,Slot,newName);}
if(foo===20){oneHandBluntAdd(NI,newItem,newType,Slot,newName);}
if(foo===21){twoHandBluntAdd(NI,newItem,newType,Slot,newName);}
if(foo===22){piercingAdd(NI,newItem,newType,Slot,newName);}
if(foo===23){handtohandAdd(NI,newItem,newType,Slot,newName);}
if(foo===24){offenseAdd(NI,newItem,newType,Slot,newName);}
if(foo===25){dualWieldAdd(NI,newItem,newType,Slot,newName);}
if(foo===26){doubleAttackAdd(NI,newItem,newType,Slot,newName);}
if(foo===27){defenseAdd(NI,newItem,newType,Slot,newName);}
if(foo===28){dodgeAdd(NI,newItem,newType,Slot,newName);}
if(foo===29){parryAdd(NI,newItem,newType,Slot,newName);}
if(foo===30){riposteAdd(NI,newItem,newType,Slot,newName);}
if(foo===31){alterationAdd(NI,newItem,newType,Slot,newName);}
if(foo===32){evocationAdd(NI,newItem,newType,Slot,newName);}
if(foo===33){conjurationAdd(NI,newItem,newType,Slot,newName);}
if(foo===34){abjurationAdd(NI,newItem,newType,Slot,newName);}
if(foo===35){channelingAdd(NI,newItem,newType,Slot,newName);}
if(foo===36){allSkillsAdd(NI,newItem,newType,Slot,newName);}
if(foo===37){hpKillAdd(NI,newItem,newType,Slot,newName);}
if(foo===38){mpKillAdd(NI,newItem,newType,Slot,newName);}
if(foo===39){enhancedArmorAdd(NI,newItem,newType,Slot,newName);}}
function getItemSuffix(NI,newItem,newType,Slot,newName){var foo=~~(1+M.random()*(30));if(foo===1){strAdd(NI,newItem,newType,Slot,newName);}
if(foo===2){staAdd(NI,newItem,newType,Slot,newName);}
if(foo===3){agiAdd(NI,newItem,newType,Slot,newName);}
if(foo===4){dexAdd(NI,newItem,newType,Slot,newName);}
if(foo===5){intelAdd(NI,newItem,newType,Slot,newName);}
if(foo===6){wisAdd(NI,newItem,newType,Slot,newName);}
if(foo===7){chaAdd(NI,newItem,newType,Slot,newName);}
if(foo===8){allStatsAdd(NI,newItem,newType,Slot,newName);}
if(foo===9){hpAdd(NI,newItem,newType,Slot,newName);}
if(foo===10){hpRegenAdd(NI,newItem,newType,Slot,newName);}
if(foo===11){mpRegenAdd(NI,newItem,newType,Slot,newName);}
if(foo===12){critChanceAdd(NI,newItem,newType,Slot,newName);}
if(foo===13){critDamageAdd(NI,newItem,newType,Slot,newName);}
if(foo===14){wraithAdd(NI,newItem,newType,Slot,newName);}
if(foo===15){phyMitAdd(NI,newItem,newType,Slot,newName);}
if(foo===16){magMitAdd(NI,newItem,newType,Slot,newName);}
if(foo===17){goldFindAdd(NI,newItem,newType,Slot,newName);}
if(foo===18){expFindAdd(NI,newItem,newType,Slot,newName);}
if(foo===19){hasteAdd(NI,newItem,newType,Slot,newName);}
if(foo===20){globalHasteAdd(NI,newItem,newType,Slot,newName);}
if(foo===21){castingHasteAdd(NI,newItem,newType,Slot,newName);}
if(foo===22){thornsAdd(NI,newItem,newType,Slot,newName);}
if(foo===23){weightAdd(NI,newItem,newType,Slot,newName);}
if(foo===24){runSpeedAdd(NI,newItem,newType,Slot,newName);}
if(foo===25){stunAdd(NI,newItem,newType,Slot,newName);}
if(foo===26){fearAdd(NI,newItem,newType,Slot,newName);}
if(foo===27){coldAdd(NI,newItem,newType,Slot,newName);}
if(foo===28){silenceAdd(NI,newItem,newType,Slot,newName);}
if(foo===29){leechAdd(NI,newItem,newType,Slot,newName);}
if(foo===30){iasAdd(NI,newItem,newType,Slot,newName);}}
function itemValueAdjust(foo,Slot){foo=foo*(mob[Slot].level / 99);return M.ceil(foo);}
function attackAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.attack||newType==="offhand"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(6)+4;if(newItem==="ring"||newItem==="shoulders"||newItem==="back"||newItem==="bracers"||newItem==="gloves"||newItem==="boots"){foo=M.random()*(3)+2;}
if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(12)+8;}
foo=itemValueAdjust(foo,Slot);I.name="Platinum "+I.name;I.attack=foo;}
function physicalDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name="Deadly "+I.name;I.physicalDamage=foo;}
function poisonDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(54)+36;}
foo=itemValueAdjust(foo,Slot);I.name="Toxic "+I.name;I.poisonDamage=foo;}
function magicDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(54)+36;}
foo=itemValueAdjust(foo,Slot);I.name="Sacred "+I.name;I.magicDamage=foo;}
function lightningDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(54)+36;}
foo=itemValueAdjust(foo,Slot);I.name="Shocking "+I.name;I.lightningDamage=foo;}
function coldDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(54)+36;}
foo=itemValueAdjust(foo,Slot);I.name="Boreal "+I.name;I.coldDamage=foo;}
function fireDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.physicalDamage||I.poisonDamage||I.magicDamage||I.lightningDamage||I.coldDamage||I.fireDamage||newItem!=="weapons"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newType==="smashed"||newType==="staff"||newType==="cleaved"){foo=M.random()*(54)+36;}
foo=itemValueAdjust(foo,Slot);I.name="Flaming "+I.name;I.fireDamage=foo;}
function enhancedDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.enhancedDamage&&(newItem==="weapons"||newType==="range")){qux=true;}
if(newType==="staff"){qux=false;}
if(qux===false){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 33));if(newType==="smashed"||newType==="staff"||newType==="cleaved"||newType==="range"){foo=~~(1+M.random()*(z / 16.5));}
I.enhancedDamage=foo;I.name="Savage "+I.name;I.damage+=foo;}
function enhancedArmorAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.enhancedArmor&&(newItem==="helmet"||newType==="cloth"||newType==="leather"||newType==="chain"||newType==="plate")){qux=true;}
if(qux===false){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(60)+40;foo=itemValueAdjust(foo,Slot);if(foo<5){foo=5;}
if(foo>100){foo=100;}
I.enhancedArmor=foo;I.name="Godly "+I.name;}
function mpAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.mp){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(30)+20;if(newType==="offhand"){foo=M.random()*(60)+40;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name="Dragon's "+I.name;I.mp=foo;}
function lightRadiusAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.lightRadius){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(10));if(foo<2){foo=2;}
I.name="Lucky "+I.name;I.lightRadius=foo;}
function resistPoisonAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.resistPoison||I.allResist){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Emerald "+I.name;I.resistPoison=foo;}
function resistMagicAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.resistMagic||I.allResist){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Divine "+I.name;I.resistMagic=foo;}
function resistLightningAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.resistLightning||I.allResist){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Ocher "+I.name;I.resistLightning=foo;}
function resistColdAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.resistCold||I.allResist){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Sapphire "+I.name;I.resistCold=foo;}
function resistFireAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.resistFire||I.allResist){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Ruby "+I.name;I.resistFire=foo;}
function allResistAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.resistPoison||I.resistMagic||I.resistLightning||I.resistCold||I.resistFire||I.allResist||z<24){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(9)+6;if(newItem==="neck"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"||newType==="offhand"){foo=M.random()*(11)+12;}
foo=itemValueAdjust(foo,Slot);I.name="Chromatic "+I.name;I.allResist=foo;}
function oneHandSlashAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.oneHandSlash||newType==="offhand"||newType==="crushed"||newType==="pierced"||newType==="cleaved"||newType==="smashed"||newType==="staff"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Soldier's "+I.name;I.oneHandSlash=foo;itemHasSkill=true;}
function twoHandSlashAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.twoHandSlash||newType==="shield"||newType==="offhand"||newType==="crushed"||newType==="pierced"||newType==="slashed"||newType==="smashed"||newType==="staff"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Knight's "+I.name;I.twoHandSlash=foo;}
function oneHandBluntAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.oneHandBlunt||newType==="offhand"||newType==="slashed"||newType==="pierced"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Keeper's "+I.name;I.oneHandBlunt=foo;}
function twoHandBluntAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.twoHandBlunt||newType==="shield"||newType==="offhand"||newType==="crushed"||newType==="pierced"||newType==="cleaved"||newType==="slashed"||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Warden's "+I.name;I.twoHandBlunt=foo;}
function piercingAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.piercing||newType==="offhand"||newType==="crushed"||newType==="slashed"||newType==="cleaved"||newType==="smashed"||newType==="staff"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Assassin's "+I.name;I.piercing=foo;}
function handtohandAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var x=newType;var i=newItem;if(I.handtohand||x==="offhand"||x==="range"||x==="cleaved"||x==="slashed"||x==="pierced"||x==="smashed"||x==="staff"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(i==="helmet"||i==="neck"||i==="chest"||i==="legs"||i==="shield"||i==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
I.name="Pugilist's "+I.name;I.handtohand=foo;}
function offenseAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.offense||newType==="offhand"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Master's "+I.name;I.offense=foo;}
function dualWieldAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.dualWield||newType==="offhand"||newType==="shield"||newType==="cleaved"||newType==="smashed"||newType==="staff"||z<12){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
I.name="Hunter's "+I.name;I.dualWield=foo;}
function doubleAttackAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.doubleAttack||newType==="offhand"||z<15){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Slayer's "+I.name;I.doubleAttack=foo;}
function defenseAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.defense){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Guardian's "+I.name;I.defense=foo;}
function dodgeAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.dodge||z<4){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Acrobat's "+I.name;I.dodge=foo;}
function parryAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.parry||newType==="offhand"||z<10){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Athletic "+I.name;I.parry=foo;}
function riposteAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.riposte||newType==="offhand"||z<28){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Fencer's "+I.name;I.riposte=foo;}
function alterationAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.alteration||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Spiritual "+I.name;I.alteration=foo;}
function evocationAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.evocation||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Evoker's "+I.name;I.evocation=foo;}
function conjurationAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.conjuration||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Summoner's "+I.name;I.conjuration=foo;}
function abjurationAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.abjuration||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Caretaker's "+I.name;I.abjuration=foo;}
function channelingAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.channeling||newType==="shield"){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 12.375));}
I.name="Focused "+I.name;I.channeling=foo;}
function allSkillsAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.allSkills||z<24){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=~~(1+M.random()*(z / 49.5));if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"){foo=~~(1+M.random()*(z / 33));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 24.75));}
I.name="Empyrean "+I.name;I.allSkills=foo;}
function hpKillAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.hpKill){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(6)+4;if(newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"){foo=M.random()*(12)+8;}
foo=itemValueAdjust(foo,Slot);I.name="Triumphant "+I.name;I.hpKill=foo;}
function mpKillAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.mpKill){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(3)+2;if(newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield"){foo=M.random()*(6)+4;}
if(newType==="offhand"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name="Vulpine "+I.name;I.mpKill=foo;}
function enhancePhysicalAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.enhancePhysical&&(newType==="slashed"||newType==="crushed"||newType==="piercing"||newType==="cleaved"||newType==="smashed"||newType==="staff"||newType==="shield")){qux=true;}
if(newType==="staff"){qux=false;}
if(qux===false){getItemPrefix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;foo=itemValueAdjust(foo,Slot);if(foo<5){foo=5;}
I.name="King's "+I.name;I.enhancePhysical=foo;}
function strAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.str){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name+=" of the Titans";I.str=foo;}
function staAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.sta){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name+=" of the Colossus";I.sta=foo;}
function agiAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.agi){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
foo=itemValueAdjust(foo,Slot);I.name+=" of Deflection";I.agi=foo;}
function dexAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.dex){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
if(newType==="offhand"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name+=" of Perfection";I.dex=foo;}
function wisAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.wis){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
if(newType==="offhand"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name+=" of Preservation";I.wis=foo;}
function intelAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.intel){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
if(newType==="offhand"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name+=" of Sorcery";I.intel=foo;}
function chaAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.cha){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(12)+8;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"){foo=M.random()*(11)+12;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(24)+16;}
if(newType==="offhand"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name+=" of Grace";I.cha=foo;}
function allStatsAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var z=mob[Slot].level;if(I.allStats||z<24){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(6)+4;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=M.random()*(9)+6;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(12)+8;}
foo=itemValueAdjust(foo,Slot);I.name+=" of the Angels";I.allStats=foo;}
function hpAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.hp){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(11)+12;if(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand"){foo=M.random()*(30)+20;}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.random()*(36)+24;}
foo=itemValueAdjust(foo,Slot);I.name+=" of the Whale";I.hp=foo;}
function hpRegenAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.hpRegen&&(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 16.5));I.name+=" of Regrowth";I.hpRegen=foo;}
function mpRegenAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.mpRegen&&(newItem==="helmet"||newItem==="neck"||newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 16.5));I.name+=" of the Wraith";I.mpRegen=foo;}
function critChanceAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.critChance&&newItem!=="range"){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=~~(1+M.random()*(z / 24.75));if(newItem==="neck"||newItem==="chest"||newItem==="legs"){foo=~~(1+M.random()*(z / 16.5));}
if(newType==="slashed"||newType==="crushed"||newType==="pierced"||newType==="shield"||newType==="offhand"){foo=~~(1+M.random()*(z / 12.375));}
if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=~~(1+M.random()*(z / 6.1175));}
I.name+=" of Slaughter";I.critChance=foo;}
function critDamageAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.critDamage&&newItem!=="range"){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.round(M.random()*(6)+4);if(newType==="cleaved"||newType==="smashed"||newType==="staff"){foo=M.round(M.random()*(12)+8);}
I.name+=" of Maiming";I.critDamage=foo;}
function iasAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.ias&&(newType==="slashed"||newType==="crushed"||newType==="pierced"||newType==="smashed"||newType==="staff"||newType==="cleaved")){qux=true;}
if(newType==="staff"){qux=false;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.random()*(z / 330);if(foo<.075){foo=.05;}
if(foo>=.075&&foo<.125){foo=.1;}
if(foo>=.125&&foo<.175){foo=.15;}
if(foo>=.175&&foo<.225){foo=.2;}
if(foo>=.225&&foo<.275){foo=.25;}
if(foo>=.275){foo=.3;}
I.ias=foo;}
function phyMitAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.phyMit&&(newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(10)+6;foo=itemValueAdjust(foo,Slot);I.name+=" of Protection";I.phyMit=foo;}
function magMitAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.magMit&&(newItem==="chest"||newItem==="legs"||newType==="shield"||newType==="offhand")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(10)+6;foo=itemValueAdjust(foo,Slot);I.name+=" of Negation";I.magMit=foo;}
function goldFindAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.goldFind){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 4.95));if(foo<3){foo=3;}
I.name+=" of Wealth";I.goldFind=foo;}
function expFindAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.expFind){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 9.9));if(foo<2){foo=2;}
I.name+=" of the Scholar";I.expFind=foo;}
function hasteAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.haste&&(newItem==="gloves"||newItem==="amulet"||newType==="shield")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=(~~(1+M.random()*(z /.99)))*-1;if(newType==="shield"){foo=(~~(1+M.random()*(z /.61175)))*-1;}
foo /=10;foo=M.round(foo);foo*=10;if(foo>-20){foo=-20;}
I.name+=" of Alacrity";I.haste=foo;}
function globalHasteAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.globalHaste&&(newItem==="legs"||newItem==="amulet"||newType==="shield")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=(~~(1+M.random()*(z /.99)))*-1;if(newType==="shield"){foo=(~~(1+M.random()*(z /.61175)))*-1;}
foo /=10;foo=M.round(foo);foo*=10;if(foo>-20){foo=-20;}
I.name+=" of Swiftness";I.globalHaste=foo;}
function castingHasteAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.castingHaste&&(newItem==="ring"||newType==="offhand"||newType==="shield")){qux=true;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=(~~(1+M.random()*(z /.99)))*-1;if(newType==="offhand"){foo=(~~(1+M.random()*(z /.495)))*-1;}
foo /=10;foo=M.round(foo);foo*=10;if(foo>-20){foo=-20;}
I.name+=" of the Magus";I.castingHaste=foo;}
function thornsAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.thorns){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=M.random()*(6)+4;foo=itemValueAdjust(foo,Slot);I.name+=" of Razors";I.thorns=foo;}
function weightAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(!I.weight&&(newItem==="helmet"||newItem==="shoulders"||newItem==="chest"||newItem==="bracers"||newItem==="gloves"||newItem==="belt"||newItem==="legs"||newItem==="boots")){qux=true;}
if(newType==="cloth"){qux=false;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var foo=1;I.name+=" of Ease";I.weight=foo;}
function runSpeedAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.runSpeed||newItem!=="boots"){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 2.475));if(foo<5){foo=5;}
I.name+=" of Speed";I.runSpeed=foo;}
function stunAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.stun||newItem==="weapons"){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 9.9));if(newType==="shield"||newType==="offhand"){var foo=M.round(M.random()*(z / 4.95));}
if(foo<2){foo=2;}
I.name+=" of Stability";I.stun=foo;}
function fearAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.fear||newItem==="weapons"){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 9.9));if(newType==="shield"||newType==="offhand"){var foo=M.round(M.random()*(z / 4.95));}
if(foo<2){foo=2;}
I.name+=" of Courage";I.fear=foo;}
function coldAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.cold||newItem==="weapons"){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 9.9));if(newType==="shield"||newType==="offhand"){var foo=M.round(M.random()*(z / 4.95));}
if(foo<2){foo=2;}
I.name+=" of Thawing";I.cold=foo;}
function silenceAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];if(I.silence||newItem==="weapons"){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 9.9));if(newType==="shield"||newType==="offhand"){var foo=M.round(M.random()*(z / 4.95));}
if(foo<2){foo=2;}
I.name+=" of Resolve";I.silence=foo;}
function leechAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(newItem==="weapons"||newType==="shield"||newItem==="ring"||newItem==="neck"||newItem==="gloves"){qux=true;}
if(I.leech){qux=false;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 11.25));if(foo>8){foo=8;}
if(newType==="offhand"||newType==="shield"||newType==="cleaved"||newType==="smashed"||newType==="staff"){var foo=M.round(M.random()*(z / 5.9375));if(foo>16){foo=16;}}
if(foo<2){foo=2;}
I.name+=" of the Leech";I.leech=foo;}
function wraithAdd(NI,newItem,newType,Slot,newName){var I=P.item[NI];var qux=false;if(newItem==="weapons"||newType==="shield"||newItem==="ring"||newItem==="neck"||newItem==="gloves"){qux=true;}
if(I.wraith){qux=false;}
if(qux===false){getItemSuffix(NI,newItem,newType,Slot,newName);return;}
var z=mob[Slot].level;var foo=M.round(M.random()*(z / 11.25));if(foo>8){foo=8;}
if(newType==="offhand"||newType==="shield"||newType==="cleaved"||newType==="smashed"||newType==="staff"){var foo=M.round(M.random()*(z / 5.9375));if(foo>16){foo=16;}}
if(foo<2){foo=2;}
I.name+=" of the Wraith";I.wraith=foo;}
$(function(){$("#worldMap").on('click','.zoneSelectButton',function(){if(my.hp<=0||paused===true){return;}
var text=$(this).text();var selectedZone='';var selectedSubzone=0;if(text.indexOf("1")!==-1){selectedZone=text.replace(' 1','');selectedSubzone=1;}else if(text.indexOf("2")!==-1){selectedZone=text.replace(' 2','');selectedSubzone=2;}else if(text.indexOf("3")!==-1){selectedZone=text.replace(' 3','');selectedSubzone=3;}else if(text.indexOf("4")!==-1){selectedZone=text.replace(' 4','');selectedSubzone=4;}else{selectedSubzone=0;selectedZone=text;}
var zig=myZone()+" "+mySubzone();if(selectedZone===myZone()&&selectedSubzone===mySubzone()){if(selectedSubzone!==0){Error(("You are already located in "+myZone()+" "+mySubzone()+"!"));}else{Error(("You are already located in "+myZone()+"!"));}
return;}
if(selectedZone===""){Error("Select a zone first!");return;}
travelZone(selectedZone,selectedSubzone);$NG.zoneSelectButton.css({"background-position":"-5px -85px"});}).on('mouseenter','.zoneSelectButton',function(){var foo=this.textContent;foo=foo.replace(' 1','');foo=foo.replace(' 2','');foo=foo.replace(' 3','');foo=foo.replace(' 4','');positionMap(foo);});});$('#window1').on('mousedown','.talentButton',function(){activeTalent=$(this).attr('id');setTimeout(function(){save.my();},1000);}).on('mouseenter','.talentButton',function(){activeTalent=$(this).attr('id');reportTalent();}).on('click','#talent1',function(){if(my.job==="Warrior"){if(my.level<3){return;}}
if(talentsRemaining()>0&&my.talent1<20){my.talent1++;if(my.job==="Paladin"&&my.talent1>=20){setEquipValues();}
if(my.job==="Bard"){setEquipValues();highestElement=setHighestElement();}
CStat();updateTalentNotify();}
if(my.job==="Wizard"){updateIcebolt();}}).on('click','#talent2',function(){if(my.talent1>0&&my.level>11){if(talentsRemaining()>0&&my.talent2<20){my.talent2++;if(my.job==="Bard"||my.job==="Ranger"){g.drawMyHp();}
if(my.job==="Cleric"){g.drawMyHp();setEquipValues();}
CStat();updateTalentNotify();}}}).on('click','#talent3',function(){if(my.talent1>0&&my.talent2>0&&my.level>23){if(talentsRemaining()>0&&my.talent3<20){my.talent3++;if(my.job==="Paladin"){setEquipValues();highestElement=setHighestElement();}
CStat();updateTalentNotify();}}}).on('click','#talent4',function(){if(my.talent1>0&&my.talent2>0&&my.talent3>0&&my.level>35){if(talentsRemaining()>0&&my.talent4<20){my.talent4++;CStat();updateTalentNotify();}}}).on('click','#talent5',function(){if(talentsRemaining()>0&&my.talent5<20){my.talent5++;CStat();updateTalentNotify();}}).on('click','#talent6',function(){if(my.talent5>0&&my.level>11){if(talentsRemaining()>0&&my.talent6<20){my.talent6++;CStat();updateTalentNotify();}}}).on('click','#talent7',function(){if(my.talent5>0&&my.talent6>0&&my.level>23){if(talentsRemaining()>0&&my.talent7<20){my.talent7++;CStat();updateTalentNotify();}}}).on('click','#talent8',function(){if(my.talent5>0&&my.talent6>0&&my.talent7>0&&my.level>35){if(talentsRemaining()>0&&my.talent8<20){my.talent8++;if(my.job==="Paladin"){setEquipValues();}
CStat();updateTalentNotify();}}}).on('click','#talent9',function(){if(talentsRemaining()>0&&my.talent9<20){my.talent9++;CStat();updateTalentNotify();}}).on('click','#talent10',function(){if(my.talent9>0&&my.level>11){if(talentsRemaining()>0&&my.talent10<20){my.talent10++;CStat();updateTalentNotify();}}
if(my.job==="Wizard"){updateIcebolt();}}).on('click','#talent11',function(){if(my.talent9>0&&my.talent10>0&&my.level>23){if(talentsRemaining()>0&&my.talent11<20){my.talent11++;CStat();updateTalentNotify();}}
if(my.job==="Rogue"){setEquipValues();highestElement=setHighestElement();}}).on('click','#talent12',function(){if(my.talent9>0&&my.talent10>0&&my.talent11>0&&my.level>35){if(talentsRemaining()>0&&my.talent12<20){my.talent12++;CStat();updateTalentNotify();}}});function talentsRemaining(){var x=my.level-1-(my.talent1+my.talent2+my.talent3+my.talent4+my.talent5+my.talent6+my.talent7+my.talent8+my.talent9+my.talent10+my.talent11+my.talent12);for(var i=0;i<=2;i++){if(P.Q[i].Crushbone>=4){x++;}
if(P.Q[i].EstateofUnrest>=4){x++;}
if(P.Q[i].CazicThule>=4){x++;}
if(P.Q[i].NagafensLair>=5){x++;}}
return x;}
function maxTalents(){for(var i=1;i<=12;i++){my['talent'+i]=20;}
CStat();if(my.job==="Wizard"){updateIcebolt();}}
var war={},mnk={},rog={};war.tn=['',"Kick","Pummel","Bulwark","Shockwave","Slam","Hemorrhage","Absorb Spell","Intrepid Might","Avenging Strike","Enrage","Subjugate","Decisive Blow"];war.tal=['',"Improve Kick's damage and its interrupt rate","Improve Pummel by using a shield to increase its damage","Improve Bulwark's damage reduction","Improve Shockwave's damage using a special technique with your shield","Convert Slam to hit 3 targets","Improve Hemorrhage's damage","Convert Absorb Spell to Reflect. Reflect causes spell damage on all enemies based on monster spell damage.","Improve Intrepid Might's damage","Improve Avenging Strike's damage","After Using Enrage, your next physical attack's damage is amplified","Improve Subjugate's damage","Improve Decisive Blow's damage"];mnk.tn=['',"Eagle Strike","Stone Fist Reversal","Inner Peace","Chakra Blast","Windmill Kick","Cheetah Strike","Flying Kick","Dragon Strike","Tiger Strike","Crane Kick","Ancestral Flurry","Intimidation"];mnk.tal=['',"Improve Eagle Strike's damage","Improve Stone Fist Reversal's damage","Reduce damage taken while Inner Peace is active","Improve Chakra Blast's damage","Improve Windmill Kick's damage","Improve Cheetah Strike's damage","Improve Flying Kick's damage and all elemental damage","Improve Dragon Strike's damage","Improve Tiger Strike's damage","Improve Crane Kick's damage","Improve Ancestral Flurry's damage","Feared targets received amplified physical damage"];rog.tn=['',"Lacerate","Evade","Sonic Strike","Mirage Strike","Shadow Strike","Backstab","Cold Blood","Stagger Shot","Hyper Strike","Illusive Mist","Widow Strike","Prowling Gash"];rog.tal=['',"Improve Lacerate's damage","Improve all damage while Evade is active","Improve Sonic Strike's damage","Improve Mirage Strike's damage","Improve Shadow Strike's damage","Improve Backstab's damage","Reduce Cold Blood's Cooldown","Improve Stagger Shot's damage","Improve Hyper Strike's skill haste bonus","Increase all damage while in illusive form","Improve Widow Strike's damage","Improve Prowling Gash's damage",];pal.tn=['',"Slam","Lay Hands","Greater Healing","Valor","Rebuke","Vengeance","Ardent Judgment","Divine Providence","Purge","Holy Might","Yaulp","Flash of Light"];pal.tal=['',"Improve Slam's damage","Reduce Lay Hands's cooldown","Improve Greater Healing's healing power","Improve Valor's armor and health bonuses","Improve Rebuke's damage","Improve Vengeance's damage","Improve Ardent Judgment's damage","Improve Divine Providence's power","Improve Purge's damage","Improve Holy Might's damage","Improve Yaulp's damage","Flash of light strikes your target with arcane damage"];sk.tn=['',"Crescent Cleave","Death Strike","Resist Cold","Shadow Vortex","Slam","Life Tap","Harm Touch","Dooming Darkness","Gasping Frenzy","Summon Dead","Fear","Heat Blood"];sk.tal=['',"Improve Crescent Cleave's damage","Improve Death Strike's damage","Add a banshee aura to Resist Cold, causing damage to anyone that strikes you.","Improve Shadow Vortex's damage reduction","Improve Slam's damage","Improve Life Tap's damage","Improve Harm Touch's damage","Improve Dooming Darkness's damage","Improve Gasping Frenzy's damage","Improve your minion's damage","Improve damage on feared targets","Improve Heat Blood's damage"];rng.tn=['',"Kick","Thistlecoat","Snare","Warder\'s Rift","Counter Shot","Trueshot Arrow","Faerie Flame","Ignite","Rapid Shot","Feet Like Cat","Spirit of the Wolf","Volley Shot"];rng.tal=['',"Improve Kick's damage and its interrupt rate","Adds a Health Bonus to Thistlecoat","Converts auto attack into a rapid flurry of hits","Reduce the damage mitigation of Warder's Rift for your own attacks.","Improve Counter Shot damage","Improve Trueshot Arrow's damage","Improve Faerie Flame's Damage","Improve Ignite's damage","Improve Rapid Shot's damage","Feet Like Cat will also add skill haste","Improve Spirit of the Wolf by adding a lightning strike chance to your arrows","Improve Volley Shot's damage"];brd.tn=['',"Chant of Battle","Hymn of Restoration","Anthem De Arms","Euphonic Hymn","Chords of Dissonance","Elemental Rhythms","Chords of Clarity","Desperate Dirge","Song of the Sirens","Boastful Bellow","Consonant Chain","Shield of Songs",];brd.tal=['',"Chant of Battle adds physical damage","Improve Hymn of Restoration's healing power and your maximum health","Improve Anthem De Arms's haste and add attack power","Improve Euphonic Hymn's physical damage enhancement","Improve Chords of Dissonance's damage","Improve Elemental Rhythms's resistances","Improve Chords of Clarity's mana regeneration","Improve Desperate Dirge's damage","Improve Song of the Sirens's charmed pet damage","Improve Boastful Bellow's damage","Improve Consonant Chain's slow power","Improve Shield of Songs's shield health"];dru.tn=['',"Drones of Doom","Greater Healing","Engulfing Roots","Skin Like Nature","Tornado","Earthquake","Hurricane","Sylvan Creep","Starfire","Drifting Death","Lightning Blast","Volcano"];dru.tal=['',"Improve Drones of Doom's damage","Improve Greater Healing","Add Poison Effect To Rooted Mobs","Improve Skin Like Nature's Health Bonus","Improve Tornado's damage","Improve Earthquake's damage","Improve Hurricane's damage","Improve Sylvan Creep's damage","Improve Starfire's damage","Improve Drifting Death's damage","Improve Lightning Blast's damage","Improve Volcano's damage"];clr.tn=['',"Smite","Resolution","Binding Earth","Holy Wrath","Sound of Force","Martyr\'s Blessing","Armor of Faith","Guardian Angel","Expel Corruption","Searing Revelation","Mark of Judgement","Benediction"];clr.tal=['',"Improve Smite's damage","Improve Resolution by adding casting haste and health","Add holy damage over time to Binding Earth","Improve Holy Wrath's damage","Improve Sound of Force's damage. Converts auto attack into a rapid flurry of hits","Martyr's Blessing enhances all damage inflicted and received while the skill is active","Improve Armor of Faith's armor bonus and add an attack haste effect.","Improve Guardian Angel's shield strength","Improve Expel Corruption's damage","Add damage component to Searing Revelation","Add Holy Nova explosion to Mark of Judgement","Improve Benediction by adding explosive holy damage"];shm.tn=['',"Frost Strike","Togor\'s Insects","Enstill","Glacial Impact","Scourge","Poison Nova","Affliction","Devouring Plague","Call of the Ancients","Guardian Spirit","Spirit of the Wolf","Reclaim Blood"];shm.tal=['',"Improve Frost Strike's damage","Improve Togor's Insects by adding poison damage while the effect is active","Improve Enstill by adding arcane damage while the effect is active","Improve Glacial Impact's damage","Improve Scourge's damage","Improve Poison Nova's damage","Improve Affliction's damage","Improve Devouring Plague's damage","Improve Call of the Ancients's buff power","Improve Guardian Spirit's health and damage","Improve Spirit of the Wolf's attack bonus","Improve Reclaim Blood's healing power"];nec.tn=['',"Drain Soul","Ignite Blood","Bond of Death","Howling Terror","Invoke Death","Augment Death","Corpse Explosion","Detonate Soul","Bone Spirit","Cascading Darkness","Invoke Fear","Asystole"];nec.tal=['',"Improve Drain Soul's damage","Improve Ignite Blood's damage","Improve Bond of Death's damage","Improve Howling Terror by adding cold damage over time to all feared targets","Improve Invoke Death by adding health and damage to your pet","Improve Augment Death's damage and healing","Improve Corpse Explosion's damage","Improve Detonate Soul's damage","Improve Bone Spirit's damage","Improve Cascading Darkness's damage","Improve Invoke Fear by enhancing all damage on feared targets","Improve Asystole's damage"];enc.tn=['',"Chaos Flux","Color Shift","Discordant Barrier","Mystic Rune","Cajoling Whispers","Shiftless Deeds","Enchant Weapon","Alacrity","Gasping Embrace","Mesmerize","Gravity Flux","Tashania"];enc.tal=['',"Improve Chaos Flux's damage","Improve Color Shift by adding arcane damage","Improve Discordant Barrier's armor and health","Improve Mystic Rune's shield power","Improve charmed mob's damage","Improve Shiftless Deeds by adding cold damage over time","Improve Enchant Weapon's damage","Improve Alacrity by adding additional hits to auto attack","Improve Gasping Embrace's damage","Convert Mesmerize into Jubilee, a dazzling explosion that inflicts arcane damage. Jubilee does not mesmerize.","Improve Gravity Flux's damage","Improve Tashania by adding arcane damage over time"];mag.tn=['',"Lava Bolt","Shield of Lava","Firestorm","Armageddon","Summon Elemental","Burnout","Reclaim Elements","Elemental Fury","Phantom Plate","Frozen Orb","Elemental Armor","Psionic Storm"];mag.tal=['',"Improve Lava Bolt's damage","Improve Shield of Lava's damage","Improve Firestorm's damage","Improve Armageddon's damage","Improve summoned elementals' health and damage","Improve Burnout's damage and healing","Improve Reclaim Elements's healing","Improve Elemental Fury's damage","Improve Phantom Plate's armor and health bonus","Improve Frozen Orb's damage","Improve Elemental Armor's resistances","Improve Psionic Storm's damage"];wiz.tn=['',"Charged Bolts","Arcane Missiles","Chain Lightning","Mirror Images","Ice Bolt","Deep Freeze","Glacial Spike","Ice Comet","Vizier\'s Shielding","Fireball","Harness Ether","Meteor"];wiz.tal=['',"Improve Charged Bolts' damage","Improve Arcane Missiles' damage","Improve Chain Lightning's damage","Improve Mirror Images' damage","Improve Ice Bolt's damage","Improve Deep Freeze's damage","Improve Glacial Spike's damage","Improve Ice Comet's damage","Improve Vizier\'s Shielding's armor and health","Improve Fireball's damage","Improve Harness Ether's damage amplification","Improve Meteor's damage"];var lvlReq12="<p class='red'>Required Level: 12</p>",lvlReq24="<p class='red'>Required Level: 24</p>",lvlReq36="<p class='red'>Required Level: 36</p>";g.warriorTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+war.tn[1]+'</p>';var m=war.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';if(my.job==="Warrior"&&my.level<3){a+='<p class="red">Level 3 Required</p>';}}else{var t=talent1();var chance=t*3;if(chance>60){chance=60;}
a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent'+'<br>Interrupt Chance: +'+chance+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Drain Mana<br><br>'+'+1 Pummel Talent<br>'+'+1 Bulwark Talent<br>'+'+1 Shockwave Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+war.tn[2]+'</p>';var m=war.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.6)+' percent of shield\'s armor value</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Riposte While Invincible<br><br>'+'+1 Kick Talent<br>'+'+1 Bulwark Talent<br>'+'+1 Shockwave Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+war.tn[3]+'</p>';var m=war.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage Reduction: +'+t+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 to Bulwark Duration<br><br>'+'+1 Kick Talent<br>'+'+1 Pummel Talent<br>'+'+2 Shockwave Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+war.tn[4]+'</p>';var m=war.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.75)+' percent of shield\'s armor value</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Shockwave Double Hits<br><br>'+'+2 Kick Talent<br>'+'+2 Pummel Talent<br>'+'+2 Bulwark Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+war.tn[5]+'</p>';var m=war.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.25)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'A Small Shockwave Hits All Targets<br><br>'+'+1 Hemorrhage Talent<br>'+'+1 Absorb Spell Talent<br>'+'+1 Intrepid Might Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+war.tn[6]+'</p>';var m=war.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.1)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hemorrhage Hits 3 Targets<br><br>'+'+1 Slam Talent<br>'+'+1 Absorb Spell Talent<br>'+'+1 Intrepid Might Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+war.tn[7]+'</p>';var m=war.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*20+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Half Absorb Spell Cooldown<br><br>'+'+1 Slam Talent<br>'+'+1 Hemorrhage Talent<br>'+'+2 Intrepid Might Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+war.tn[8]+'</p>';var m=war.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.7)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Auto Attacks<br><br>'+'+2 Slam Talent<br>'+'+2 Hemorrhage Talent<br>'+'+2 Absorb Spell Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+war.tn[9]+'</p>';var m=war.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage Bonus<br><br>'+'+1 Enrage Talent<br>'+'+1 Subjugate Talent<br>'+'+1 Decisive Blow Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+war.tn[10]+'</p>';var m=war.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage Amplification: +'+t*10+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enrage Triggers Frenzy<br><br>'+'+1 Avenging Strike Talent<br>'+'+1 Subjugate Talent<br>'+'+1 Decisive Blow Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+war.tn[11]+'</p>';var m=war.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.4)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'8% Chance Hemorrhage Damage Activates Subjugate<br><br>'+'+1 Avenging Strike Talent<br>'+'+1 Enrage Talent<br>'+'+2 Decisive Blow Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+war.tn[12]+'</p>';var m=war.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.8)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Decisive Blow Double-Hits With Arcane Damage<br><br>'+'+2 Avenging Strike Talent<br>'+'+2 Enrage Talent<br>'+'+2 Subjugate Talent';}
return a;}
g.monkTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+mnk.tn[1]+'</p>';var m=mnk.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*5+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Stun Target For 3 Seconds<br><br>'+'+1 Stone Fist Reversal Talent<br>'+'+1 Inner Peace Talent<br>'+'+1 Chakra Blast Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+mnk.tn[2]+'</p>';var m=mnk.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.6)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Magical Attacks Also Countered<br><br>'+'+1 Eagle Strike Talent<br>'+'+1 Inner Peace Talent<br>'+'+1 Chakra Blast Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+mnk.tn[3]+'</p>';var m=mnk.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage Reduction: +'+fix(t*1.6)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Fear Duration Doubled<br>'+'Cooldown Reduced 15 Seconds<br><br>'+'+1 Eagle Strike Talent<br>'+'+1 Stone Fist Reversal Talent<br>'+'+2 Chakra Blast Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+mnk.tn[4]+'</p>';var m=mnk.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.9)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Arcane Chi Blast On All Targets<br><br>'+'+2 Eagle Strike Talent<br>'+'+2 Stone Fist Reversal Talent<br>'+'+2 Inner Peace Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+mnk.tn[5]+'</p>';var m=mnk.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.25)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Wave of Frost Strikes All Targets<br><br>'+'+1 Cheetah Strike Talent<br>'+'+1 Flying Kick Talent<br>'+'+1 Dragon Strike Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+mnk.tn[6]+'</p>';var m=mnk.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Cone of Lightning Attack<br><br>'+'+1 Windmill Kick Talent<br>'+'+1 Flying Kick Talent<br>'+'+1 Dragon Strike Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+mnk.tn[7]+'</p>';var m=mnk.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.8)+' percent'+'<br>Elemental Damage: +'+fix(t*1.5)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Fire, Cold, and Lightning Strikes Hit Your Target<br><br>'+'+1 Windmill Kick Talent<br>'+'+1 Cheetah Strike Talent<br>'+'+2 Dragon Strike Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+mnk.tn[8]+'</p>';var m=mnk.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*7.3)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+30 All Resists<br><br>'+'+2 Windmill Kick Talent<br>'+'+2 Cheetah Strike Talent<br>'+'+2 Flying Kick Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+mnk.tn[9]+'</p>';var m=mnk.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage<br><br>'+'+1 Crane Kick Talent<br>'+'+1 Ancestral Flurry Talent<br>'+'+1 Intimidation Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+mnk.tn[10]+'</p>';var m=mnk.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.5)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Kick Target Twice<br><br>'+'+1 Tiger Strike Talent<br>'+'+1 Ancestral Flurry Talent<br>'+'+1 Intimidation Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+mnk.tn[11]+'</p>';var m=mnk.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.8)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Immune to Iron Maiden and Thorns<br><br>'+'+1 Tiger Strike Talent<br>'+'+1 Crane Kick Talent<br>'+'+2 Intimidation Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+mnk.tn[12]+'</p>';var m=mnk.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage Amplified: +'+fix(t*1.2)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Immune to Fear<br><br>'+'+2 Tiger Strike Talent<br>'+'+2 Crane Kick Talent<br>'+'+2 Ancestral Flurry Talent';}
return a;}
g.rogueTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+rog.tn[1]+'</p>';var m=rog.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.3)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Leech 20% of Lacerate Damage, But Add a 12-Second Cooldown<br><br>'+'+1 Evade Talent<br>'+'+1 Sonic Strike Talent<br>'+'+1 Mirage Strike Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+rog.tn[2]+'</p>';var m=rog.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.25)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Evade Lasts Full Duration<br><br>'+'+1 Lacerate Talent<br>'+'+1 Sonic Strike Talent<br>'+'+1 Mirage Strike Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+rog.tn[3]+'</p>';var m=rog.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.8)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Chaos Flux<br><br>'+'+1 Lacerate Talent<br>'+'+1 Evade Talent<br>'+'+2 Mirage Strike Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+rog.tn[4]+'</p>';var m=rog.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.3)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Cooldown By 2 Seconds<br><br>'+'+2 Lacerate Talent<br>'+'+2 Evade Talent<br>'+'+2 Sonic Strike Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+rog.tn[5]+'</p>';var m=rog.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage Bonus<br><br>'+'+1 Backstab Talent<br>'+'+1 Cold Blood Talent<br>'+'+1 Stagger Shot Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+rog.tn[6]+'</p>';var m=rog.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.75)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Backstab Double Hits<br><br>'+'+1 Shadow Strike Talent<br>'+'+1 Cold Blood Talent<br>'+'+1 Stagger Shot Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+rog.tn[7]+'</p>';var m=rog.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Cooldown Reduced: +'+fix(t*.75)+' seconds</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'5% Chance to Assassinate<br><br>'+'+1 Shadow Strike Talent<br>'+'+1 Backstab Talent<br>'+'+2 Stagger Shot Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+rog.tn[8]+'</p>';var m=rog.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.3)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Causes Snare Effect<br><br>'+'+2 Shadow Strike Talent<br>'+'+2 Backstab Talent<br>'+'+2 Cold Blood Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+rog.tn[9]+'</p>';var m=rog.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Skill Haste Bonus: +'+fix(t*.666)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+"Increase Dodge Chance By 8%<br><br>"+'+1 Illusive Mist Talent<br>'+'+1 Widow Strike Talent<br>'+'+1 Prowling Gash Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+rog.tn[10]+'</p>';var m=rog.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.2)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Flash Powder Ignites, Striking 3 Targets With Fire Damage<br><br>'+'+1 Hyper Strike Talent<br>'+'+1 Widow Strike Talent<br>'+'+1 Prowling Gash Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+rog.tn[11]+'</p>';var m=rog.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*7.25)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enchant Weapons With Poison Damage<br><br>'+'+1 Hyper Strike Talent<br>'+'+1 Illusive Mist Talent<br>'+'+2 Prowling Gash Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+rog.tn[12]+'</p>';var m=rog.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.3)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Cooldown to 12 Seconds<br>'+'Double The Number Of Hits<br><br>'+'+2 Hyper Strike Talent<br>'+'+2 Illusive Mist Talent<br>'+'+2 Widow Strike Talent';}
return a;}
g.paladinTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+pal.tn[1]+'</p>';var m=pal.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.3)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+50 Fear Resistance<br><br>'+'+1 Lay Hands Talent<br>'+'+1 Greater Healing Talent<br>'+'+1 Valor Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+pal.tn[2]+'</p>';var m=pal.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Cooldown: -'+fix(t*5)+' seconds</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Counter-Attack Physical Damage For 20 Seconds<br><br>'+'+1 Slam Talent<br>'+'+1 Greater Healing Talent<br>'+'+1 Valor Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+pal.tn[3]+'</p>';var m=pal.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Healing: +'+fix(t*1.35)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enchant Weapons With Arcane Damage<br><br>'+'+1 Slam Talent<br>'+'+1 Lay Hands Talent<br>'+'+2 Valor Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+pal.tn[4]+'</p>';var m=pal.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*10.75)+' percent<br>'+'<br>Armor: +'+fix(t*5.1)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Parry, Dodge, and Riposte Trigger Repudiation<br><br>'+'+2 Slam Talent<br>'+'+2 Lay Hands Talent<br>'+'+2 Greater Healing Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+pal.tn[5]+'</p>';var m=pal.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.75)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Lightning Strikes 5 Targets<br><br>'+'+1 Vengeance Talent<br>'+'+1 Ardent Judgment Talent<br>'+'+1 Divine Providence Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+pal.tn[6]+'</p>';var m=pal.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.2)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'A Beam of Holy Light Strikes All Targets<br><br>'+'+1 Rebuke Talent<br>'+'+1 Ardent Judgment Talent<br>'+'+1 Divine Providence Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+pal.tn[7]+'</p>';var m=pal.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.5)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Blind Targets Take Additional 30% damage<br><br>'+'+1 Rebuke Talent<br>'+'+1 Vengeance Talent<br>'+'+2 Divine Providence Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+pal.tn[8]+'</p>';var m=pal.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Poison Resist: +'+fix(t*2.6)+' percent'+'<br>Lightning Resist: +'+fix(t*2.6)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+20% Skill Haste<br><br>'+'+2 Rebuke Talent<br>'+'+2 Vengeance Talent<br>'+'+2 Ardent Judgment Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+pal.tn[9]+'</p>';var m=pal.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*1+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage Bonus<br><br>'+'+1 Holy Might Talent<br>'+'+1 Yaulp Talent<br>'+'+1 Flash of Light Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+pal.tn[10]+'</p>';var m=pal.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.5)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+40 Percent Damage Bonus On Stunned Targets<br><br>'+'+1 Purge Talent<br>'+'+1 Yaulp Talent<br>'+'+1 Flash of Light Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+pal.tn[11]+'</p>';var m=pal.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Yaulp Creates a Magical Shield That Absorbs Health<br><br>'+'+1 Purge Talent<br>'+'+1 Holy Might Talent<br>'+'+2 Flash of Light Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+pal.tn[12]+'</p>';var m=pal.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: '+fix(t*6.9)+' percent of attack power</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br>'+'Cooldown Reduced 30 Seconds<br><br>'+'+2 Purge Talent<br>'+'+2 Holy Might Talent<br>'+'+2 Yaulp Talent';}
return a;}
g.shadowKnightTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+sk.tn[1]+'</p>';var m=sk.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage<br><br>'+'+1 Death Strike Talent<br>'+'+1 Resist Cold Talent<br>'+'+1 Shadow Vortex Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+sk.tn[2]+'</p>';var m=sk.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.8)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Causes Bleed Effect<br><br>'+'+1 Crescent Cleave Talent<br>'+'+1 Resist Cold Talent<br>'+'+1 Shadow Vortex Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+sk.tn[3]+'</p>';var m=sk.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Thorns: +'+fix(t*1.7)+' damage</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'All Physical Damage Slows Target<br>'+'Resistant to Cold Effects<br><br>'+'+1 Crescent Cleave Talent<br>'+'+1 Death Strike Talent<br>'+'+2 Shadow Vortex Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+sk.tn[4]+'</p>';var m=sk.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage Reduction: +'+fix(t*.4)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'8% Chance Physical Damage Negated<br><br>'+'+2 Crescent Cleave Talent<br>'+'+2 Death Strike Talent<br>'+'+2 Resist Cold Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+sk.tn[5]+'</p>';var m=sk.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.5)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+ 50 Stun Reduction<br><br>'+'+1 Life Tap Talent<br>'+'+1 Harm Touch Talent<br>'+'+1 Dooming Darkness Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+sk.tn[6]+'</p>';var m=sk.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.75)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Cooldown By 10 Seconds<br><br>'+'+1 Slam Talent<br>'+'+1 Harm Touch Talent<br>'+'+1 Dooming Darkness Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+sk.tn[7]+'</p>';var m=sk.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Cooldown Reduced By 40 Seconds<br>'+'Hits 3 Targets<br><br>'+'+1 Slam Talent<br>'+'+1 Life Tap Talent<br>'+'+2 Dooming Darkness Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+sk.tn[8]+'</p>';var m=sk.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.6)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits All Targets<br><br>'+'+2 Slam Talent<br>'+'+2 Life Tap Talent<br>'+'+2 Harm Touch Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+sk.tn[9]+'</p>';var m=sk.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.6)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Doubles Pet Health<br><br>'+'+1 Summon Dead Talent<br>'+'+1 Fear Talent<br>'+'+1 Heat Blood Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+sk.tn[10]+'</p>';var m=sk.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Pet Damage: +'+fix(t*6.6)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'35% Chance Pet Mimes Your Physical Attacks<br><br>'+'+1 Gasping Frenzy Talent<br>'+'+1 Fear Talent<br>'+'+1 Heat Blood Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+sk.tn[11]+'</p>';var m=sk.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*.85)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Strengthen Dead Cooldown By 45 Seconds<br><br>'+'+1 Gasping Frenzy Talent<br>'+'+1 Summon Dead Talent<br>'+'+2 Heat Blood Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+sk.tn[12]+'</p>';var m=sk.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.7)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Boiling Mobs Take 15% More Damage<br><br>'+'+2 Gasping Frenzy Talent<br>'+'+2 Summon Dead Talent<br>'+'+2 Fear Talent';}
return a;}
g.rangerTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+rng.tn[1]+'</p>';var m=rng.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();var chance=t*3;if(chance>60){chance=60;}
a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.4)+' percent'+'<br>Interrupt Chance: +'+chance+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'50% Chance To Disarm Target, Reducing Next Attack By 75%<br><br>'+'+1 Thistlecoat Talent<br>'+'+1 Snare Talent<br>'+'+1 Warder\'s Rift Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+rng.tn[2]+'</p>';var m=rng.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*1.42)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'75% Chance To Reflect Damage<br><br>'+'+1 Kick Talent<br>'+'+1 Snare Talent<br>'+'+1 Warder\'s Rift Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+rng.tn[3]+'</p>';var m=rng.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Auto Attack: +'+M.ceil(t/5.8)+' hits</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+12 Percent Parry and Riposte<br><br>'+'+1 Kick Talent<br>'+'+1 Thistlecoat Talent<br>'+'+2 Warder\'s Rift Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+rng.tn[4]+'</p>';var m=rng.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Reduce Mitigation: +'+fix(t*1.25)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Successful Parry Triggers Regen<br><br>'+'+2 Kick Talent<br>'+'+2 Thistlecoat Talent<br>'+'+2 Snare Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+rng.tn[5]+'</p>';var m=rng.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.5)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Stuns Target For 1.5 Seconds<br><br>'+'+1 Trueshot Arrow Talent<br>'+'+1 Faerie Flame Talent<br>'+'+1 Ignite Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+rng.tn[6]+'</p>';var m=rng.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.1)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Ignore Target Defenses<br><br>'+'+1 Counter Shot Talent<br>'+'+1 Faerie Flame Talent<br>'+'+1 Ignite Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+rng.tn[7]+'</p>';var m=rng.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.1)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Trueshot Arrow Fires Third Arrow That Hits 3 Targets<br><br>'+'+1 Counter Shot Talent<br>'+'+1 Trueshot Arrow Talent<br>'+'+2 Ignite Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+rng.tn[8]+'</p>';var m=rng.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.2)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'30% Chance Arrows Cause Explosive Damage<br><br>'+'+2 Counter Shot Talent<br>'+'+2 Trueshot Arrow Talent<br>'+'+2 Faerie Flame Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+rng.tn[9]+'</p>';var m=rng.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+5 Percent Damage Bonus<br><br>'+'+1 Feet Like Cat Talent<br>'+'+1 Spirit of the Wolf Talent<br>'+'+1 Volley Shot Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+rng.tn[10]+'</p>';var m=rng.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Skill Haste: +'+fix(t*.75)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Increase Number Of Volley Shot Arrows By 50%<br><br>'+'+1 Rapid Shot Talent<br>'+'+1 Spirit of the Wolf Talent<br>'+'+1 Volley Shot Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+rng.tn[11]+'</p>';var m=rng.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Lightning Chance: +'+fix(t*1.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+12 Percent To Dual Wield And Double Attack<br><br>'+'+1 Rapid Shot Talent<br>'+'+1 Feet Like Cat Talent<br>'+'+2 Volley Shot Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+rng.tn[12]+'</p>';var m=rng.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.33)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Rapid Shot Fires Extra Shot<br><br>'+'+2 Rapid Shot Talent<br>'+'+2 Feet Like Cat Talent<br>'+'+2 Spirit of the Wolf Talent';}
return a;}
g.bardTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+brd.tn[1]+'</p>';var m=brd.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.5)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enchant Your Weapons With An Arcane Melody<br><br>'+'+1 Hymn of Restoration Talent<br>'+'+1 Anthem De Arms Talent<br>'+'+1 Euphonic Hymn Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+brd.tn[2]+'</p>';var m=brd.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Healing: +'+fix(t*1.35)+' percent'+'<br>Maximum Health: +'+fix(t*1.55)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'15% Chance Weapons Channel Arcane Energy<br><br>'+'+1 Chant of Battle Talent<br>'+'+1 Anthem De Arms Talent<br>'+'+1 Euphonic Hymn Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+brd.tn[3]+'</p>';var m=brd.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Haste: +'+fix(t*1.15)+' percent'+'<br>Attack Power: +'+fix(t*1.68)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'15% chance to Frenzy when you take damage<br><br>'+'+1 Chant of Battle Talent<br>'+'+1 Hymn of Restoration Talent<br>'+'+2 Euphonic Hymn Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+brd.tn[4]+'</p>';var m=brd.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.75)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'8% Chance Weapons Cast Sonic Disruption<br><br>'+'+2 Chant of Battle Talent<br>'+'+2 Hymn of Restoration Talent<br>'+'+2 Anthem De Arms Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+brd.tn[5]+'</p>';var m=brd.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.7)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Double Song Duration<br><br>'+'+1 Elemental Rhythms Talent<br>'+'+1 Chords of Clarity Talent<br>'+'+1 Desperate Dirge Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+brd.tn[6]+'</p>';var m=brd.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Resistances: +'+fix(t*2.3)+'</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Boost Max Resistances to 340<br><br>'+'+1 Chords of Dissonance Talent<br>'+'+1 Chords of Clarity Talent<br>'+'+1 Desperate Dirge Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+brd.tn[7]+'</p>';var m=brd.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Mana regeneration: +'+fix(t*5.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Song Damage Has A 15% Chance To Stun<br><br>'+'+1 Chords of Dissonance Talent<br>'+'+1 Elemental Rhythms Talent<br>'+'+2 Desperate Dirge Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+brd.tn[8]+'</p>';var m=brd.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.6)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Song Damage Has A 8% Chance To Restore Health<br><br>'+'+2 Chords of Dissonance Talent<br>'+'+2 Elemental Rhythms Talent<br>'+'+2 Chords of Clarity Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+brd.tn[9]+'</p>';var m=brd.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Pet Damage: +'+fix(t*12.8)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Charmed Minions Cause Bleed Damage<br><br>'+'+1 Boastful Bellow Talent<br>'+'+1 Consonant Chain Talent<br>'+'+1 Shield of Songs Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+brd.tn[10]+'</p>';var m=brd.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.75)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Charmed Pets Use Frenzy<br><br>'+'+1 Song of the Sirens Talent<br>'+'+1 Consonant Chain Talent<br>'+'+1 Shield of Songs Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+brd.tn[11]+'</p>';var m=brd.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Slow: +'+fix(t*1.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Consonant Chain Poisons Target While Active<br><br>'+'+1 Song of the Sirens Talent<br>'+'+1 Boastful Bellow Talent<br>'+'+2 Shield of Songs Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+brd.tn[12]+'</p>';var m=brd.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Shield Health: +'+fix(t*3.15)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10% Chance Pet Covers Damage<br><br>'+'+2 Song of the Sirens Talent<br>'+'+2 Boastful Bellow Talent<br>'+'+2 Consonant Chain Talent';}
return a;}
g.druidTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+dru.tn[1]+'</p>';var m=dru.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Affected Mobs\' Damage By 10%<br><br>'+'+1 Greater Healing Talent<br>'+'+1 Engulfing Roots Talent<br>'+'+1 Skin Like Nature Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+dru.tn[2]+'</p>';var m=dru.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Healing: +'+fix(t*1.25)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Add Regen Effect<br><br>'+'+1 Drones of Doom Talent<br>'+'+1 Engulfing Roots Talent<br>'+'+1 Skin Like Nature Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+dru.tn[3]+'</p>';var m=dru.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.5)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Roots Affect Flying Mobs<br><br>'+'+1 Drones of Doom Talent<br>'+'+1 Greater Healing Talent<br>'+'+2 Skin Like Nature Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+dru.tn[4]+'</p>';var m=dru.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*9.5)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+Lightning, Cold, and Fire Absorb Bonus<br><br>'+'+2 Drones of Doom Talent<br>'+'+2 Greater Healing Talent<br>'+'+2 Engulfing Roots Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+dru.tn[5]+'</p>';var m=dru.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Remove Tornado\'s Cooldown<br><br>'+'+1 Earthquake Talent<br>'+'+1 Hurricane Talent<br>'+'+1 Sylvan Creep Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+dru.tn[6]+'</p>';var m=dru.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.75)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'8% Chance to Stun Targets<br>'+'Cooldown Reduced 12 Seconds<br><br>'+'+1 Tornado Talent<br>'+'+1 Hurricane Talent<br>'+'+1 Sylvan Creep Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+dru.tn[7]+'</p>';var m=dru.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.15)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'12% Chance To Freeze Targets<br><br>'+'+1 Tornado Talent<br>'+'+1 Earthquake Talent<br>'+'+2 Sylvan Creep Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+dru.tn[8]+'</p>';var m=dru.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.7)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Cooldown Reduced to 30<br><br>'+'+2 Tornado Talent<br>'+'+2 Earthquake Talent<br>'+'+2 Hurricane Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+dru.tn[9]+'</p>';var m=dru.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Drifting Death Talent<br>'+'+1 Lightning Blast Talent<br>'+'+1 Volcano Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+dru.tn[10]+'</p>';var m=dru.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.5)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Ignore Resists Of Affected Mobs<br><br>'+'+1 Starfire Talent<br>'+'+1 Lightning Blast Talent<br>'+'+1 Volcano Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+dru.tn[11]+'</p>';var m=dru.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.8)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Stuns All Targets<br><br>'+'+1 Starfire Talent<br>'+'+1 Drifting Death Talent<br>'+'+2 Volcano Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+dru.tn[12]+'</p>';var m=dru.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Volcano Summons Thunderstorm<br>'+'Reduce Cooldown to 30<br><br>'+'+2 Starfire Talent<br>'+'+2 Drifting Death Talent<br>'+'+2 Lightning Blast Talent';}
return a;}
g.clericTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+clr.tn[1]+'</p>';var m=clr.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Resolution Talent<br>'+'+1 Binding Earth Talent<br>'+'+1 Holy Wrath Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+clr.tn[2]+'</p>';var m=clr.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*12.5)+' percent'+'<br>Casting Haste: +'+fix(t*1.4)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Miracle Saves You From Death. Cannot Happen More Than Once Every 5 Minutes.<br><br>'+'+1 Smite Talent<br>'+'+1 Binding Earth Talent<br>'+'+1 Holy Wrath Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+clr.tn[3]+'</p>';var m=clr.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.85)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Holy Wrath Cooldown Reduced to 24 Seconds<br><br>'+'+1 Smite Talent<br>'+'+1 Resolution Talent<br>'+'+2 Holy Wrath Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+clr.tn[4]+'</p>';var m=clr.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*9.5)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+2 Smite Talent<br>'+'+2 Resolution Talent<br>'+'+2 Binding Earth Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+clr.tn[5]+'</p>';var m=clr.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*8.4)+' percent'+'<br>Auto Attack: +'+M.ceil(t/4)+' hits</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'15% Chance Auto Attack Triggers Divine Justice<br><br>'+'+1 Martyr\'s Blessing Talent<br>'+'+1 Armor of Faith Talent<br>'+'+1 Guardian Angel Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+clr.tn[6]+'</p>';var m=clr.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*12.5)+' percent'+'<br>Damage Received: +'+fix(t*6.3)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Ignore Barrier and Sanctuary Effects<br><br>'+'+1 Sound of Force Talent<br>'+'+1 Armor of Faith Talent<br>'+'+1 Guardian Angel Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+clr.tn[7]+'</p>';var m=clr.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Haste: +'+fix(t*1.6)+' percent'+'<br>Armor: +'+fix(t*11.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'8% Chance Auto Attack Triggers Fist of the Heavens<br><br>'+'+1 Sound of Force Talent<br>'+'+1 Martyr\'s Blessing Talent<br>'+'+2 Guardian Angel Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+clr.tn[8]+'</p>';var m=clr.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Absorbs: +'+fix(t*2.25)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'22% Chance Auto Attack Triggers Vicar\'s Wrath While Shield Is Active<br><br>'+'+2 Sound of Force Talent<br>'+'+2 Martyr\'s Blessing Talent<br>'+'+2 Armor of Faith Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+clr.tn[9]+'</p>';var m=clr.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Searing Revelation Talent<br>'+'+1 Mark of Judgement Talent<br>'+'+1 Benediction Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+clr.tn[10]+'</p>';var m=clr.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*7.78)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'24% Chance Mobs Act Confused<br><br>'+'+1 Expel Corruption Talent<br>'+'+1 Mark of Judgement Talent<br>'+'+1 Benediction Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+clr.tn[11]+'</p>';var m=clr.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Cooldown Reduced to 20<br><br>'+'+1 Expel Corruption Talent<br>'+'+1 Searing Revelation Talent<br>'+'+2 Benediction Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+clr.tn[12]+'</p>';var m=clr.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*9.5)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Spells Always Benefit From Mark of Judgement Status Effects<br><br>'+'+2 Expel Corruption Talent<br>'+'+2 Searing Revelation Talent<br>'+'+2 Mark of Judgement Talent';}
return a;}
g.shamanTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+shm.tn[1]+'</p>';var m=shm.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Togor\'s Insects Talent<br>'+'+1 Enstill Talent<br>'+'+1 Glacial Impact Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+shm.tn[2]+'</p>';var m=shm.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.3)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits All Targets<br><br>'+'+1 Frost Strike Talent<br>'+'+1 Enstill Talent<br>'+'+1 Glacial Impact Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+shm.tn[3]+'</p>';var m=shm.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.7)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Root Recovers Health and Mana From Slain Targets<br><br>'+'+1 Frost Strike Talent<br>'+'+1 Togor\'s Insects Talent<br>'+'+2 Glacial Impact Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+shm.tn[4]+'</p>';var m=shm.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.5)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+2 Frost Strike Talent<br>'+'+2 Togor\'s Insects Talent<br>'+'+2 Enstill Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+shm.tn[5]+'</p>';var m=shm.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.5)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Counter Fear With Glacial Impact<br><br>'+'+1 Poison Nova Talent<br>'+'+1 Affliction Talent<br>'+'+1 Devouring Plague Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+shm.tn[6]+'</p>';var m=shm.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Adds Additional Poison Damage Over Time<br><br>'+'+1 Scourge Talent<br>'+'+1 Affliction Talent<br>'+'+1 Devouring Plague Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+shm.tn[7]+'</p>';var m=shm.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Scourge Talent<br>'+'+1 Poison Nova Talent<br>'+'+2 Devouring Plague Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+shm.tn[8]+'</p>';var m=shm.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.8)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Devouring Plague Steals Mana<br><br>'+'+2 Scourge Talent<br>'+'+2 Poison Nova Talent<br>'+'+2 Affliction Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+shm.tn[9]+'</p>';var m=shm.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Buff Enhancement: +'+fix(t*2.6)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+42 Percent Attack Haste<br><br>'+'+1 Guardian Spirit Talent<br>'+'+1 Spirit of the Wolf Talent<br>'+'+1 Reclaim Blood Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+shm.tn[10]+'</p>';var m=shm.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*14.7)+' percent'+'<br>Damage: +'+fix(t*8.6)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'7% Chance To Maul Victims<br><br>'+'+1 Call of the Ancients Talent<br>'+'+1 Spirit of the Wolf Talent<br>'+'+1 Reclaim Blood Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+shm.tn[11]+'</p>';var m=shm.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Attack Power Bonus: +'+fix(t*5.8)+' percent'+'<br>Auto Attack: +'+M.ceil(t/5.8)+' hits</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Pet Attacks Hit Twice<br><br>'+'+1 Call of the Ancients Talent<br>'+'+1 Guardian Spirit Talent<br>'+'+2 Reclaim Blood Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+shm.tn[12]+'</p>';var m=shm.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Healing Power: +'+fix(t*2.4)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Bloodlust Effect<br><br>'+'+2 Call of the Ancients Talent<br>'+'+2 Guardian Spirit Talent<br>'+'+2 Spirit of the Wolf Talent';}
return a;}
g.necromancerTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+nec.tn[1]+'</p>';var m=nec.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*2.8)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'45-Second Bleed Effect<br><br>'+'+1 Ignite Blood Talent<br>'+'+1 Bond of Death Talent<br>'+'+1 Howling Terror Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+nec.tn[2]+'</p>';var m=nec.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.7)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hit All Targets<br><br>'+'+1 Drain Soul Talent<br>'+'+1 Bond of Death Talent<br>'+'+1 Howling Terror Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+nec.tn[3]+'</p>';var m=nec.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*3.6)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Drain Soul Talent<br>'+'+1 Ignite Blood Talent<br>'+'+2 Howling Terror Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+nec.tn[4]+'</p>';var m=nec.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.4)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Bone Spirit Converted To Explosive Fireball Attack<br>'+'Immune to Fear<br><br>'+'+2 Drain Soul Talent<br>'+'+2 Ignite Blood Talent<br>'+'+2 Bond of Death Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+nec.tn[5]+'</p>';var m=nec.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*16.3)+' percent'+'<br>Damage: +'+fix(t*4.7)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Bone Spirit Revives Your Pet<br>'+'Pet Learns Bash<br><br>'+'+1 Augment Death Talent<br>'+'+1 Corpse Explosion Talent<br>'+'+1 Detonate Soul Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+nec.tn[6]+'</p>';var m=nec.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.5)+' percent'+'<br>Healing: +'+fix(t*2.25)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Pet Cleaves Targets<br><br>'+'+1 Invoke Death Talent<br>'+'+1 Corpse Explosion Talent<br>'+'+1 Detonate Soul Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+nec.tn[7]+'</p>';var m=nec.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.7)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Poison Damage Has 24% Chance To Activate Corpse Explosion<br><br>'+'+1 Invoke Death Talent<br>'+'+1 Augment Death Talent<br>'+'+2 Detonate Soul Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+nec.tn[8]+'</p>';var m=nec.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*7.8)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+7 Percent Pet Taunt Rate<br>'+'Explosion Chills All Targets<br><br>'+'+2 Invoke Death Talent<br>'+'+2 Augment Death Talent<br>'+'+2 Corpse Explosion Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+nec.tn[9]+'</p>';var m=nec.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Cascading Darkness Talent<br>'+'+1 Invoke Fear Talent<br>'+'+1 Asystole Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+nec.tn[10]+'</p>';var m=nec.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.8)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Boost Mana Regeneration By 60%<br><br>'+'+1 Bone Spirit Talent<br>'+'+1 Invoke Fear Talent<br>'+'+1 Asystole Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+nec.tn[11]+'</p>';var m=nec.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*1.33)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'20% Chance To Counter Physical Damage With Bone Spirit<br><br>'+'+1 Bone Spirit Talent<br>'+'+1 Cascading Darkness Talent<br>'+'+2 Asystole Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+nec.tn[12]+'</p>';var m=nec.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.2)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'15% Bonus To All Magic Damage While Shields Are Active<br>'+'Diamond Skin Does Not Expire<br>'+'Diamond Skin Cooldown Reduced to 60 Seconds<br><br>'+'+2 Bone Spirit Talent<br>'+'+2 Cascading Darkness Talent<br>'+'+2 Invoke Fear Talent';}
return a;}
g.enchanterTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+enc.tn[1]+'</p>';var m=enc.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Color Shift Talent<br>'+'+1 Discordant Barrier Talent<br>'+'+1 Mystic Rune Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+enc.tn[2]+'</p>';var m=enc.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*8.7)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'35% Chance Of Whirl Till You Hurl, Increasing Stun Duration by 60%<br><br>'+'+1 Chaos Flux Talent<br>'+'+1 Discordant Barrier Talent<br>'+'+1 Mystic Rune Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+enc.tn[3]+'</p>';var m=enc.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Armor: +'+fix(t*6.8)+' percent'+'<br>Health: +'+fix(t*8.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+15 Percent Damage Reduction<br><br>'+'+1 Chaos Flux Talent<br>'+'+1 Color Shift Talent<br>'+'+2 Mystic Rune Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+enc.tn[4]+'</p>';var m=enc.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Shield Health: +'+fix(t*2.1)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'While Shields Are Active Damage Is Increased By 20%<br><br>'+'+2 Chaos Flux Talent<br>'+'+2 Color Shift Talent<br>'+'+2 Discordant Barrier Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+enc.tn[5]+'</p>';var m=enc.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Pet Damage: +'+fix(t*13.5)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+16 Percent Pet Taunt Rate<br><br>'+'+1 Shiftless Deeds Talent<br>'+'+1 Enchant Weapon Talent<br>'+'+1 Alacrity Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+enc.tn[6]+'</p>';var m=enc.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.6)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Cajoling Whispers Talent<br>'+'+1 Enchant Weapon Talent<br>'+'+1 Alacrity Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+enc.tn[7]+'</p>';var m=enc.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enchant Weapon Double Hits With Random Elemental Type<br><br>'+'+1 Cajoling Whispers Talent<br>'+'+1 Shiftless Deeds Talent<br>'+'+2 Alacrity Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+enc.tn[8]+'</p>';var m=enc.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Auto Attack: +'+M.ceil(t/4)+' hits</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Charmed Pets Rapidly Regenerate<br>'+'Charm Never Breaks<br><br>'+'+2 Cajoling Whispers Talent<br>'+'+2 Shiftless Deeds Talent<br>'+'+2 Enchant Weapon Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+enc.tn[9]+'</p>';var m=enc.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.9)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Mesmerize Talent<br>'+'+1 Gravity Flux Talent<br>'+'+1 Tashania Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+enc.tn[10]+'</p>';var m=enc.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*18.5)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+35 Percent Casting Haste<br><br>'+'+1 Gasping Embrace Talent<br>'+'+1 Gravity Flux Talent<br>'+'+1 Tashania Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+enc.tn[11]+'</p>';var m=enc.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Psychic Beam Melts Target Upon Spell Completion<br>'+'Cooldown Reduced to 12 Seconds<br><br>'+'+1 Gasping Embrace Talent<br>'+'+1 Mesmerize Talent<br>'+'+2 Tashania Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+enc.tn[12]+'</p>';var m=enc.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.8)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Magic Ignores Sanctuary<br><br>'+'+2 Gasping Embrace Talent<br>'+'+2 Mesmerize Talent<br>'+'+2 Gravity Flux Talent';}
return a;}
g.magicianTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+mag.tn[1]+'</p>';var m=mag.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10 Percent Damage Bonus<br><br>'+'+1 Shield of Lava Talent<br>'+'+1 Firestorm Talent<br>'+'+1 Armageddon Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+mag.tn[2]+'</p>';var m=mag.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*12.8)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Burning Aura<br><br>'+'+1 Lava Bolt Talent<br>'+'+1 Firestorm Talent<br>'+'+1 Armageddon Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+mag.tn[3]+'</p>';var m=mag.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Double The Number of Hits<br><br>'+'+1 Lava Bolt Talent<br>'+'+1 Shield of Lava Talent<br>'+'+2 Armageddon Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+mag.tn[4]+'</p>';var m=mag.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.4)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'All Fire Damage Penetrates Resistances<br><br>'+'+2 Lava Bolt Talent<br>'+'+2 Shield of Lava Talent<br>'+'+2 Firestorm Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+mag.tn[5]+'</p>';var m=mag.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Health: +'+fix(t*13.1)+' percent'+'<br>Damage: +'+fix(t*6.2)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Lava Bolt Revives Your Pet<br><br>'+'+1 Burnout Talent<br>'+'+1 Reclaim Elements Talent<br>'+'+1 Elemental Fury Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+mag.tn[6]+'</p>';var m=mag.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.8)+' percent'+'<br>Healing: +'+fix(t*2.65)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Pet Hits 3 Targets<br><br>'+'+1 Summon Elemental Talent<br>'+'+1 Reclaim Elements Talent<br>'+'+1 Elemental Fury Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+mag.tn[7]+'</p>';var m=mag.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Healing: +'+fix(t*2.2)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enhance All Healing By 12%<br><br>'+'+1 Summon Elemental Talent<br>'+'+1 Burnout Talent<br>'+'+2 Elemental Fury Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+mag.tn[8]+'</p>';var m=mag.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*7.3)+' damage</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Elemental Fury\'s Cooldown to 20 Seconds<br><br>'+'+2 Summon Elemental Talent<br>'+'+2 Burnout Talent<br>'+'+2 Reclaim Elements Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+mag.tn[9]+'</p>';var m=mag.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Armor: +'+fix(t*11.1)+' percent'+'<br>Health: +'+fix(t*9.7)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+65 Percent Mana Regeneration<br><br>'+'+1 Frozen Orb Talent<br>'+'+1 Elemental Armor Talent<br>'+'+1 Psionic Storm Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+mag.tn[10]+'</p>';var m=mag.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.8)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Freezes Targets<br><br>'+'+1 Phantom Plate Talent<br>'+'+1 Elemental Armor Talent<br>'+'+1 Psionic Storm Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+mag.tn[11]+'</p>';var m=mag.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Resistances: +'+fix(t*3.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+35 Percent Casting Haste<br><br>'+'+1 Phantom Plate Talent<br>'+'+1 Frozen Orb Talent<br>'+'+2 Psionic Storm Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+mag.tn[12]+'</p>';var m=mag.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.1)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+2 Phantom Plate Talent<br>'+'+2 Frozen Orb Talent<br>'+'+2 Elemental Armor Talent';}
return a;}
g.wizardTalentTooltips=function(){var a='';if(activeTalent==="talent1"){a='<p class="green">'+wiz.tn[1]+'</p>';var m=wiz.tal[1];if(my.talent1===0){a+='<p class="red">'+m+'</p>';}else{var t=talent1();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.2)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Convert Ice Bolt To Static Bolt<br><br>'+'+1 Arcane Missiles Talent<br>'+'+1 Chain Lightning Talent<br>'+'+1 Mirror Images Talent';}else if(activeTalent==="talent2"){a='<p class="green">'+wiz.tn[2]+'</p>';var m=wiz.tal[2];if(my.talent2===0){a+='<p class="red">'+m+'</p>';}else{var t=talent2();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.9)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Perfect Channeling<br><br>'+'+1 Charged Bolts Talent<br>'+'+1 Chain Lightning Talent<br>'+'+1 Mirror Images Talent';}else if(activeTalent==="talent3"){a='<p class="green">'+wiz.tn[3]+'</p>';var m=wiz.tal[3];if(my.talent3===0){a+='<p class="red">'+m+'</p>';}else{var t=talent3();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Mirror Images and Lightning Spells\' Cooldowns By 50%<br><br>'+'+1 Charged Bolts Talent<br>'+'+1 Arcane Missiles Talent<br>'+'+2 Mirror Images Talent';}else if(activeTalent==="talent4"){a='<p class="green">'+wiz.tn[4]+'</p>';var m=wiz.tal[4];if(my.talent4===0){a+='<p class="red">'+m+'</p>';}else{var t=talent4();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*.8)+' percent of damage</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enhance Lightning Damage By 15%<br><br>'+'+2 Charged Bolts Talent<br>'+'+2 Arcane Missiles Talent<br>'+'+2 Chain Lightning Talent';}else if(activeTalent==="talent5"){a='<p class="green">'+wiz.tn[5]+'</p>';var m=wiz.tal[5];if(my.talent5===0){a+='<p class="red">'+m+'</p>';}else{var t=talent5();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+t*2+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+10% Damage Bonus to Ice Bolt<br><br>'+'+1 Deep Freeze Talent<br>'+'+1 Glacial Spike Talent<br>'+'+1 Ice Comet Talent';}else if(activeTalent==="talent6"){a='<p class="green">'+wiz.tn[6]+'</p>';var m=wiz.tal[6];if(my.talent6===0){a+='<p class="red">'+m+'</p>';}else{var t=talent6();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.5)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Hits 3 Targets<br><br>'+'+1 Ice Bolt Talent<br>'+'+1 Glacial Spike Talent<br>'+'+1 Ice Comet Talent';}else if(activeTalent==="talent7"){a='<p class="green">'+wiz.tn[7]+'</p>';var m=wiz.tal[7];if(my.talent7===0){a+='<p class="red">'+m+'</p>';}else{var t=talent7();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.3)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Reduce Damage-Based Cold Spells\' Cooldowns By 50%<br><br>'+'+1 Ice Bolt Talent<br>'+'+1 Deep Freeze Talent<br>'+'+2 Ice Comet Talent';}else if(activeTalent==="talent8"){a='<p class="green">'+wiz.tn[8]+'</p>';var m=wiz.tal[8];if(my.talent8===0){a+='<p class="red">'+m+'</p>';}else{var t=talent8();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.5)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enhance Cold Damage By 15%<br><br>'+'+2 Ice Bolt Talent<br>'+'+2 Deep Freeze Talent<br>'+'+2 Glacial Spike Talent';}else if(activeTalent==="talent9"){a='<p class="green">'+wiz.tn[9]+'</p>';var m=wiz.tal[9];if(my.talent9===0){a+='<p class="red">'+m+'</p>';}else{var t=talent9();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Armor: +'+fix(t*6.1)+' percent'+'<br>Health: +'+fix(t*11.3)+' percent</p>';}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'+35 Percent Casting Haste<br><br>'+'+1 Fireball Talent<br>'+'+1 Harness Ether Talent<br>'+'+1 Meteor Talent';}else if(activeTalent==="talent10"){a='<p class="green">'+wiz.tn[10]+'</p>';var m=wiz.tal[10];if(my.talent10===0){a+='<p class="red">'+m+'</p>';}else{var t=talent10();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*5.9)+' percent</p>';}
if(my.level<12){a+=lvlReq12;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Convert Ice Bolt To Fire Bolt<br>'+'Reduce Counterspell and Fire Spells\' Cooldowns By 50%<br><br>'+'+1 Vizier\'s Shielding Talent<br>'+'+1 Harness Ether Talent<br>'+'+1 Meteor Talent';}else if(activeTalent==="talent11"){a='<p class="green">'+wiz.tn[11]+'</p>';var m=wiz.tal[11];if(my.talent11===0){a+='<p class="red">'+m+'</p>';}else{var t=talent11();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*4.1)+' percent</p>';}
if(my.level<24){a+=lvlReq24;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'While Effect Is Active, All Mana Gained Is Doubled<br><br>'+'+1 Vizier\'s Shielding Talent<br>'+'+1 Fireball Talent<br>'+'+2 Meteor Talent';}else if(activeTalent==="talent12"){a='<p class="green">'+wiz.tn[12]+'</p>';var m=wiz.tal[12];if(my.talent12===0){a+='<p class="red">'+m+'</p>';}else{var t=talent12();a+='<p>'+m+'</p>'+'<p>Current Skill Level: '+t+'<br>Damage: +'+fix(t*6.7)+' percent</p>';}
if(my.level<36){a+=lvlReq36;}
a+='<p class="green">Skill Level 20 Bonus:</p>'+'Enhance Fire Damage By 15%<br><br>'+'+2 Vizier\'s Shielding Talent<br>'+'+2 Fireball Talent<br>'+'+2 Harness Ether Talent';}
return a;}
function reportTalent(){var a='';var z=noSpaceClass.charAt(0).toLowerCase()+noSpaceClass.slice(1);a=g[z+"TalentTooltips"]();D.getElementById('LPtalents').innerHTML=a;if(my.job==="Warrior"){if(my.talent1>0){bgp("talent2","-512px 0");}
if(my.talent2>0){bgp("talent3","-1024px 0");}
if(my.talent3>0){bgp("talent4","-448px 0");}
if(my.talent5>0){bgp("talent6","-384px 0");}
if(my.talent6>0){bgp("talent7","-704px 0");}
if(my.talent7>0){bgp("talent8","-1088px 0");}
if(my.talent9>0){bgp("talent10","-832px 0");}
if(my.talent10>0){bgp("talent11","-576px 0");}
if(my.talent11>0){bgp("talent12","-640px 0");}}
if(my.job==="Monk"){if(my.talent1>0){bgp("talent2","-960px 0");}
if(my.talent2>0){bgp("talent3","-1088px 0");}
if(my.talent3>0){bgp("talent4","-768px 0");}
if(my.talent5>0){bgp("talent6","-320px 0");}
if(my.talent6>0){bgp("talent7","-704px 0");}
if(my.talent7>0){bgp("talent8","-448px 0");}
if(my.talent9>0){bgp("talent10","-512px 0");}
if(my.talent10>0){bgp("talent11","-640px 0");}
if(my.talent11>0){bgp("talent12","-1024px 0");}}else if(my.job==="Rogue"){if(my.talent1>0){bgp("talent2","-832px 0");}
if(my.talent2>0){bgp("talent3","-256px 0");}
if(my.talent3>0){bgp("talent4","-448px 0");}
if(my.talent5>0){bgp("talent6","-576px 0");}
if(my.talent6>0){bgp("talent7","-896px 0");}
if(my.talent7>0){bgp("talent8","-640px 0");}
if(my.talent9>0){bgp("talent10","-1024px 0");}
if(my.talent10>0){bgp("talent11","-384px 0");}
if(my.talent11>0){bgp("talent12","-768px 0");}}else if(my.job==="Paladin"){if(my.talent1>0){bgp("talent2","-448px 0");}
if(my.talent2>0){bgp("talent3","-512px 0");}
if(my.talent3>0){bgp("talent4","-960px 0");}
if(my.talent5>0){bgp("talent6","-384px 0");}
if(my.talent6>0){bgp("talent7","-704px 0");}
if(my.talent7>0){bgp("talent8","-1088px 0");}
if(my.talent9>0){bgp("talent10","-576px 0");}
if(my.talent10>0){bgp("talent11","-768px 0");}
if(my.talent11>0){bgp("talent12","-896px 0");}}else if(my.job==="Shadow Knight"){if(my.talent1>0){bgp("talent2","-320px 0");}
if(my.talent2>0){bgp("talent3","-128px -64px");}
if(my.talent3>0){bgp("talent4","-960px 0");}
if(my.talent5>0){bgp("talent6","-512px 0");}
if(my.talent6>0){bgp("talent7","-448px 0");}
if(my.talent7>0){bgp("talent8","-576px 0");}
if(my.talent9>0){bgp("talent10","-1024px 0");}
if(my.talent10>0){bgp("talent11","-768px 0");}
if(my.talent11>0){bgp("talent12","-640px 0");}}else if(my.job==="Ranger"){if(my.talent1>0){bgp("talent2","-896px 0");}
if(my.talent2>0){bgp("talent3","-704px 0");}
if(my.talent3>0){bgp("talent4","-768px 0");}
if(my.talent5>0){bgp("talent6","-384px 0");}
if(my.talent6>0){bgp("talent7","-576px 0");}
if(my.talent7>0){bgp("talent8","-640px 0");}
if(my.talent9>0){bgp("talent10","-960px 0");}
if(my.talent10>0){bgp("talent11","-1088px 0");}
if(my.talent11>0){bgp("talent12","-448px 0");}}else if(my.job==="Bard"){if(my.talent1>0){bgp("talent2","-384px 0");}
if(my.talent2>0){bgp("talent3","-896px 0");}
if(my.talent3>0){bgp("talent4","-960px 0");}
if(my.talent5>0){bgp("talent6","-576px 0");}
if(my.talent6>0){bgp("talent7","-832px 0");}
if(my.talent7>0){bgp("talent8","-1088px 0");}
if(my.talent9>0){bgp("talent10","-512px 0");}
if(my.talent10>0){bgp("talent11","-704px 0");}
if(my.talent11>0){bgp("talent12","-1024px 0");}}else if(my.job==="Druid"){if(my.talent1>0){bgp("talent2","-320px 0");}
if(my.talent2>0){bgp("talent3","-448px 0");}
if(my.talent3>0){bgp("talent4","-896px 0");}
if(my.talent5>0){bgp("talent6","-640px 0");}
if(my.talent6>0){bgp("talent7","-704px 0");}
if(my.talent7>0){bgp("talent8","-768px 0");}
if(my.talent9>0){bgp("talent10","-512px 0");}
if(my.talent10>0){bgp("talent11","-576px 0");}
if(my.talent11>0){bgp("talent12","-832px 0");}}else if(my.job==="Cleric"){if(my.talent1>0){bgp("talent2","-896px 0");}
if(my.talent2>0){bgp("talent3","-384px 0");}
if(my.talent3>0){bgp("talent4","-704px 0");}
if(my.talent5>0){bgp("talent6","-576px 0");}
if(my.talent6>0){bgp("talent7","-960px 0");}
if(my.talent7>0){bgp("talent8","-640px 0");}
if(my.talent9>0){bgp("talent10","-512px 0");}
if(my.talent10>0){bgp("talent11","-768px 0");}
if(my.talent11>0){bgp("talent12","-832px 0");}}else if(my.job==="Shaman"){if(my.talent1>0){bgp("talent2","-384px 0");}
if(my.talent2>0){bgp("talent3","-512px 0");}
if(my.talent3>0){bgp("talent4","-768px 0");}
if(my.talent5>0){bgp("talent6","-576px 0");}
if(my.talent6>0){bgp("talent7","-640px 0");}
if(my.talent7>0){bgp("talent8","-832px 0");}
if(my.talent9>0){bgp("talent10","-960px 0");}
if(my.talent10>0){bgp("talent11","-1024px 0");}
if(my.talent11>0){bgp("talent12","-704px 0");}}else if(my.job==="Necromancer"){if(my.talent1>0){bgp("talent2","-576px 0");}
if(my.talent2>0){bgp("talent3","-704px 0");}
if(my.talent3>0){bgp("talent4","-960px 0");}
if(my.talent5>0){bgp("talent6","-512px 0");}
if(my.talent6>0){bgp("talent7","-640px 0");}
if(my.talent7>0){bgp("talent8","-896px 0");}
if(my.talent9>0){bgp("talent10","-256px 0");}
if(my.talent10>0){bgp("talent11","-320px 0");}
if(my.talent11>0){bgp("talent12","-832px 0");}}else if(my.job==="Enchanter"){if(my.talent1>0){bgp("talent2","-384px 0");}
if(my.talent2>0){bgp("talent3","-896px 0");}
if(my.talent3>0){bgp("talent4","-704px 0");}
if(my.talent5>0){bgp("talent6","-512px 0");}
if(my.talent6>0){bgp("talent7","-960px 0");}
if(my.talent7>0){bgp("talent8","-576px 0");}
if(my.talent9>0){bgp("talent10","-448px 0");}
if(my.talent10>0){bgp("talent11","-640px 0");}
if(my.talent11>0){bgp("talent12","-768px 0");}}else if(my.job==="Magician"){if(my.talent1>0){bgp("talent2","-896px 0");}
if(my.talent2>0){bgp("talent3","-256px 0");}
if(my.talent3>0){bgp("talent4","-704px 0");}
if(my.talent5>0){bgp("talent6","-384px 0");}
if(my.talent6>0){bgp("talent7","-576px 0");}
if(my.talent7>0){bgp("talent8","-640px 0");}
if(my.talent9>0){bgp("talent10","-320px 0");}
if(my.talent10>0){bgp("talent11","-1024px 0");}
if(my.talent11>0){bgp("talent12","-512px 0");}}else if(my.job==="Wizard"){if(my.talent1>0){bgp("talent2","-384px 0");}
if(my.talent2>0){bgp("talent3","-576px 0");}
if(my.talent3>0){bgp("talent4","-1024px 0");}
if(my.talent5>0){bgp("talent6","-512px 0");}
if(my.talent6>0){bgp("talent7","-640px 0");}
if(my.talent7>0){bgp("talent8","-768px 0");}
if(my.talent9>0){bgp("talent10","-448px 0");}
if(my.talent10>0){bgp("talent11","-896px 0");}
if(my.talent11>0){bgp("talent12","-960px 0");}}}
function updateTalentNotify(){if(talentsRemaining()<=0){T.set(D.getElementById('talentNotify'),{opacity:0});}
talentNotifyStatus=false;}
function CStat(){if(talentNotifyStatus===true){showTalents();updateTalentNotify();}
var _m=my;if(statTab==="Main"){function altTip(){if(_m.job==="Bard"){return"singing-based songs";}else{return"alteration-based spells";}}
function evoTip(){if(_m.job==="Bard"){return"percussion-based songs";}else{return"evocation-based spells";}}
function conTip(){if(_m.job==="Bard"){return"wind-based songs";}else{return"conjuration-based spells";}}
function abjTip(){if(_m.job==="Bard"){return"string-based songs";}else{return"abjuration-based spells";}}
function chaTip(){if(_m.job==="Bard"){return"Improves the damage/effects of brass-based songs";}else{return"Increases your ability to channel spells without suffering knockback";}}
function nextLevelValue(){if(_m.level===99){return 0;}else{return(nextLevel()-_m.exp)}}
var a="<table id='charStats1'>"+"<tr><td width='180px'>"+_m.title+" "+_m.name+" "+_m.lastName+"</td><td width='95px'> </td></tr>"+"<tr><td>"+_m.gender+" "+_m.race+" "+_m.job+"</td><td> </td></tr>"+"<tr><td>Level:</td><td>"+_m.level+"</td></tr>"+"<tr><td>Next Level:</td><td>"+nextLevelValue()+"</td></tr>"+"<tr><td>Total Experience:</td><td>"+_m.exp+"</td></tr>"+"<tr><td>Attack:</td><td>"+attackFunct()+"</td></tr>"+"<tr><td>Armor:</td><td>"+armorFunct()+"</td></tr>"+"<tr><td>Armor vs Target:</td><td>"+zArmorPerc()+"</td></tr>"+"<tr><td>Gold:</td><td>"+_m.gold+"</td></tr>"+"<tr><td>Health:</td><td><span id='myhp'>"+_m.hp+"</span> / <span>"+_m.maxHp+"</span></td></tr>"+"<tr><td>"+zManaType()+"</td><td><span id='mymp'>"+_m.mp+"</span> / <span>"+g.maxMpFunct()+"</span></td></tr>"+"<tr><td> </td><td> </td></tr>"+"<tr><td style='color:#ffd700'>Attributes</td><td> </td></tr>"+"<tr><td title='Makes melee attacks stronger'>Strength:</td><td>"+strTotal()+"</td></tr>"+"<tr><td title='Increases your maximum health'>Stamina:</td><td>"+staTotal()+"</td></tr>"+"<tr><td title='Increases physical mitigation, dodge, parry, and riposte'>Agility:</td><td>"+agiTotal()+"</td></tr>"+"<tr><td title='Increases crit chance, crit damage, weapon proc chance, and hit chance'>Dexterity:</td><td>"+dexTotal()+"</td></tr>"+"<tr><td title='Increases maximum mana for wisdom-based casters, magic mitigation, and healing power'>Wisdom:</td><td>"+wisTotal()+"</td></tr>"+"<tr><td title='Increases maximum mana for intelligence-based casters, spell damage, and makes you learn skills faster'>Intelligence:</td><td>"+intTotal()+"</td></tr>"+"<tr><td title='Increases item sale value, bard song damage, and affects various enchanter/bard skills'>Charisma:</td><td>"+chaTotal()+"</td></tr>"+"</table><table id='charStats2'>"+"<tr><td width='180px' style='color:#ffd700'>Skills</td><td width='63px'> </td></tr>"+"<tr><td title='Improves damage from one-hand slashing weapons'>One-hand Slashing:</td><td>"+oneHandSlashTotal()+"</td></tr>"+"<tr><td title='Improves damage from two-hand slashing weapons'>Two-hand Slashing:</td><td>"+twoHandSlashTotal()+"</td></tr>"+"<tr><td title='Improves damage from one-hand blunt weapons'>One-hand Blunt:</td><td>"+oneHandBluntTotal()+"</td></tr>"+"<tr><td title='Improves damage from two-hand blunt weapons'>Two-hand Blunt:</td><td>"+twoHandBluntTotal()+"</td></tr>"+"<tr><td title='Improves damage from piercing weapons'>Piercing:</td><td>"+piercingTotal()+"</td></tr>"+"<tr><td title='Improves damage from hand-to-hand combat'>Hand to Hand:</td><td>"+handToHandTotal()+"</td></tr>"+"<tr><td title='Improves all melee damage'>Offense:</td><td>"+offenseTotal()+"</td></tr>"+"<tr><td title='Increases the chance of auto attacking with your off-hand'>Dual Wield:</td><td>"+dualWieldTotal()+"</td></tr>"+"<tr><td title='Increases the chance of double attacking with your auto attack'>Double Attack:</td><td>"+doubleAttackTotal()+"</td></tr>"+"<tr><td title='Improves your armor against melee attacks'>Defense:</td><td>"+defenseTotal()+"</td></tr>"+"<tr><td title='Improves your chance of dodging physical attacks'>Dodge:</td><td>"+dodgeTotal()+"</td></tr>"+"<tr><td title='Improves your chance of parrying physical attacks'>"+zParryType()+"</td><td>"+parryTotal()+"</td></tr>"+"<tr><td title='Improves your chance of riposting physical attacks'>Riposte:</td><td>"+riposteTotal()+"</td></tr>"+"<tr><td title='Improves the damage/effects of "+altTip()+"'>"+zAltType()+"</td><td>"+alterationTotal()+"</td></tr>"+"<tr><td title='Improves the damage/effects of "+evoTip()+"'>"+zEvoType()+"</td><td>"+evocationTotal()+"</td></tr>"+"<tr><td title='Improves the damage/effects of "+conTip()+"'>"+zConjType()+"</td><td>"+conjurationTotal()+"</td></tr>"+"<tr><td title='Improves the damage/effects of "+abjTip()+"'>"+zAbjType()+"</td><td>"+abjurationTotal()+"</td></tr>"+"<tr><td title='"+chaTip()+"'>"+zChanType()+"</td><td>"+channelingTotal()+"</td></tr></table>";}else if(statTab==="Offensive"){var a="<table id='charStats1'>"+"<tr><td width='180px' style='color:#ffd700'>Offensive Stats</td><td width='95px'> </td></tr>"+"<tr><td title='Chance that your melee attacks will hit your target'>Hit Chance:</td><td>"+(100-g.mobDodgeChance(TGT))+"%</td></tr>"+"<tr><td title='Increases your auto attack speed and reduces your weapon delay values'>Attack Haste:</td><td>"+zAttackHaste(true)+" | "+zAttackHaste(false)+"%</td></tr>"+"<tr><td title='Reduces your global skill cooldown time'>Skill Haste:</td><td>"+zSkillHaste(true)+" | "+zSkillHaste(false)+"%</td></tr>"+"<tr><td title='Reduces the casting time of your spells'>Casting Haste:</td><td>"+zCastHaste(true)+" | "+zCastHaste(false)+"%</td></tr>"+"<tr><td title='Increases your critical hit chance'>Critical Chance:</td><td>"+(criticalChance(true).toFixed(1))+" | "+((criticalChance()*100).toFixed(1))+"%</td></tr>"+"<tr><td title='Increases your critical hit damage'>Critical Damage:</td><td>"+fix(g.criticalDamage()*100)+"%</td></tr>"+"<tr><td title='Increases your reflected damage against melee attacks'>Thorns:</td><td>"+g.thornsEquip+"</td></tr>"+"<tr><td> </td><td> </td></tr>"+"<tr><td style='color:#ffd700'>Enhanced Damage</td><td> </td></tr>"+"<tr><td title='Increases all melee damage'>Physical:</td><td>"+g.enhancePhysicalEquip+"</td></tr>"+"<tr><td title='Increases all poison damage'>Poison:</td><td>"+(g.enhancePoisonEquip+g.enhanceAllEquip)+"</td></tr>"+"<tr><td title='Increases all arcane damage'>Arcane:</td><td>"+(g.enhanceMagicEquip+g.enhanceAllEquip)+"</td></tr>"+"<tr><td title='Increases all lightning damage'>Lightning:</td><td>"+(g.enhanceLightningEquip+g.enhanceAllEquip)+"</td></tr>"+"<tr><td title='Increases all cold damage'>Cold:</td><td>"+(g.enhanceColdEquip+g.enhanceAllEquip)+"</td></tr>"+"<tr><td title='Increases all fire damage'>Fire:</td><td>"+(g.enhanceFireEquip+g.enhanceAllEquip)+"</td></tr>"+"</table><table id='charStats2'>"+"<tr><td width='180px' style='color:#ffd700'>Swordsmanship</td><td width='63px'> </td></tr>"+"<tr><td title='The chance of attacking with your off-hand weapon'>Dual Wield Chance:</td><td>"+dualWieldChance().toFixed(1)+"%</td></tr>"+"<tr><td title='The chance of double attacking with your auto attack'>Double Attack Chance:</td><td>"+doubleAttackChance().toFixed(1)+"%</td></tr>"+"<tr><td title='The chance of parrying a physical attack. Parry restarts your auto attack'>Parry Chance:</td><td>"+parryChance().toFixed(1)+"%</td></tr>"+"<tr><td title='The chance of riposting a physical attack'>Riposte Chance:</td><td>"+riposteChance().toFixed(1)+"%</td></tr>"+"<tr><td> </td><td> </td></tr>"+"<tr><td width='180px' style='color:#ffd700'>Added Melee Damage</td><td width='63px'> </td></tr>"+"<tr><td title='Physical damage added to each melee attack'>Physical Damage:</td><td>"+g.physicalDamageEquip+"</td></tr>"+"<tr><td title='Poison damage added to each melee attack'>Poison Damage:</td><td>"+g.poisonDamageEquip+"</td></tr>"+"<tr><td title='Arcane damage added to each melee attack'>Arcane Damage:</td><td>"+g.magicDamageEquip+"</td></tr>"+"<tr><td title='Lightning damage added to each melee attack'>Lightning Damage:</td><td>"+g.lightningDamageEquip+"</td></tr>"+"<tr><td title='Cold damage added to each melee attack'>Cold Damage:</td><td>"+g.coldDamageEquip+"</td></tr>"+"<tr><td title='Fire damage added to each melee attack'>Fire Damage:</td><td>"+g.fireDamageEquip+"</td></tr></table>";}else if(statTab==="Defensive"){var pr=poisonTotal();var mr=magicTotal();var lr=lightningTotal();var cr=coldTotal();var fr=fireTotal();var a="<table id='charStats1'>"+"<tr><td width='180px' style='color:#ffd700'>Resistances</td><td width='95px'> </td></tr>"+"<tr><td title='Resistance against poison attacks'>Resist Poison:</td><td>"+pr+" | "+M.round((pr/400)*100)+"%</td></tr>"+"<tr><td title='Resistance against arcane attacks'>Resist Arcane:</td><td>"+mr+" | "+M.round((mr/400)*100)+"%</td></tr>"+"<tr><td title='Resistance against lightning attacks'>Resist Lightning:</td><td>"+lr+" | "+M.round((lr/400)*100)+"%</td></tr>"+"<tr><td title='Resistance against cold attacks'>Resist Cold:</td><td>"+cr+" | "+M.round((cr/400)*100)+"%</td></tr>"+"<tr><td title='Resistance against fire attacks'>Resist Fire:</td><td>"+fr+" | "+M.round((fr/400)*100)+"%</td></tr>"+"<tr><td> </td><td> </td></tr>"+"<tr><td style='color:#ffd700'>Absorption</td><td> </td></tr>"+"<tr><td title='Health absorbed from each poison attack'>Poison:</td><td>"+g.absorbPoisonEquip+"%</td></tr>"+"<tr><td title='Health absorbed from each arcane attack'>Arcane:</td><td>"+g.absorbMagicEquip+"%</td></tr>"+"<tr><td title='Health absorbed from each lightning attack'>Lightning:</td><td>"+g.absorbLightningEquip+"%</td></tr>"+"<tr><td title='Health absorbed from each cold attack'>Cold:</td><td>"+g.absorbColdEquip+"%</td></tr>"+"<tr><td title='Health absorbed from each fire attack'>Fire:</td><td>"+g.absorbFireEquip+"%</td></tr>"+"</table><table id='charStats2'>"+"<tr><td width='180px' style='color:#ffd700'>Defensive Stats</td><td width='63px'> </td></tr>"+"<tr><td title='The chance of using your shield to block a physical or magical attack'>Shield Block Chance:</td><td>"+~~(shieldBlockChance*100)+"%</td></tr>"+"<tr><td title='The chance of dodging a physical attack'>Dodge Chance:</td><td>"+dodgeChance().toFixed(1)+"%</td></tr>"+"<tr><td title='The maximum amount that is randomly subtracted from physical attacks'>Physical Reduction:</td><td>"+physicalMitigation()+"</td></tr>"+"<tr><td title='The maximum amount that is randomly subtracted from magical attacks'>Magical Reduction:</td><td>"+magicMitigation()+"</td></tr>"+"<tr><td title='Your life leech rating'>Life Leech Rating:</td><td>"+~~(g.leechEquip*100)+"</td></tr>"+"<tr><td title='Your mana leech rating'>Mana Leech Rating:</td><td>"+~~(g.wraithEquip)+"</td></tr>"+"<tr><td title='Health absorbed from each slain mob'>Health Per Kill:</td><td>"+g.hpKillEquip+"</td></tr>"+"<tr><td title='Mana absorbed from each slain mob'>Mana Per Kill:</td><td>"+g.mpKillEquip+"</td></tr>"+"<tr><td title='Health regeneration per tick'>Health Regeneration:</td><td>"+g.hpRegenEquip+"</td></tr>"+"<tr><td title='Mana regeneration per tick'>Mana Regeneration:</td><td>"+g.mpRegenEquip+"</td></tr>"+"<tr><td title='Your run speed affects your chance to successfully run from battle'>Run Speed:</td><td>"+g.runSpeedEquip+"%</td></tr>"+"<tr><td title='Reduces the duration of fear'>Fear Reduction:</td><td>"+g.fearEquip+"%</td></tr>"+"<tr><td title='Reduces the duration of stun'>Stun Reduction:</td><td>"+g.stunEquip+"%</td></tr>"+"<tr><td title='Reduces the duration of chill'>Chill Reduction:</td><td>"+g.chillEquip+"%</td></tr>"+"<tr><td title='Reduces the duration of silence'>Silence Reduction:</td><td>"+g.silenceEquip+"%</td></tr></table>";}else if(statTab==="Talents"){var a='<div id="LPtalents"></div>'+'<div id="RPtalents">'+'<div id="talentsLeft">Talent Points Remaining: '+talentsRemaining()+'</div>'+'<div id="talentTree1"></div>'+'<div id="talentTree2"></div>'+'<div id="talentTree3"></div>'+'<div id="talent1" class="talentButton strongShadow">'+
_m.talent1+'</div>'+'<div id="talent2" class="talentButton strongShadow">'+
_m.talent2+'</div>'+'<div id="talent3" class="talentButton strongShadow">'+
_m.talent3+'</div>'+'<div id="talent4" class="talentButton strongShadow">'+
_m.talent4+'</div>'+'<div id="talent5" class="talentButton strongShadow">'+
_m.talent5+'</div>'+'<div id="talent6" class="talentButton strongShadow">'+
_m.talent6+'</div>'+'<div id="talent7" class="talentButton strongShadow">'+
_m.talent7+'</div>'+'<div id="talent8" class="talentButton strongShadow">'+
_m.talent8+'</div>'+'<div id="talent9" class="talentButton strongShadow">'+
_m.talent9+'</div>'+'<div id="talent10" class="talentButton strongShadow">'+
_m.talent10+'</div>'+'<div id="talent11" class="talentButton strongShadow">'+
_m.talent11+'</div>'+'<div id="talent12" class="talentButton strongShadow">'+
_m.talent12+'</div>'+'</div>';}else if(statTab==="Conquests"){var a="<table id='charStats1'>"+"<tr><td width='180px' style='color:#ffd700'>History</td><td width='95px'> </td></tr>"+"<tr><td>Days Played:</td><td>"+daysPlayed()+"</td></tr>"+"<tr><td>Hours Played:</td><td>"+hoursPlayed()+"</td></tr>"+"<tr><td>Minutes Played:</td><td>"+minutesPlayed()+"</td></tr>"+"<tr><td title='Total mobs slain'>Kills:</td><td>"+_m.mobsSlain+"</td></tr>"+"<tr><td title='Your total deaths'>Deaths:</td><td>"+_m.deaths+"</td></tr>"+"<tr><td title='Total champion mobs slain'>Champion Kills:</td><td>"+_m.championsSlain+"</td></tr>"+"<tr><td title='Total rare mobs slain'>Rare Kills:</td><td>"+_m.raresSlain+"</td></tr>"+"<tr><td title='Total bosses slain'>Bosses Kills:</td><td>"+_m.epicQuests+"</td></tr>"+"<tr><td title='Total successful escapes from battle'>Escapes:</td><td>"+_m.escapes+"</td></tr>"+"<tr><td>Total Gold Found:</td><td>"+_m.totalGold+"</td></tr>"+"<tr><td>Magic Items Found:</td><td>"+_m.magicFound+"</td></tr>"+"<tr><td>Rare Items Found:</td><td>"+_m.raresFound+"</td></tr>"+"<tr><td>Unique Items Found:</td><td>"+_m.uniquesFound+"</td></tr>"+"<tr><td>Set Items Found:</td><td>"+_m.setFound+"</td></tr>"+"<tr><td>Equipment Upgrades:</td><td>"+_m.upgrades+"</td></tr>"+"<tr><td>Quests Completed:</td><td>"+_m.quests+"</td></tr>"+"</table><table id='charStats2'>"+"<tr><td width='180px' style='color:#ffd700'>Combo Ratings</td><td width='63px'> </td></tr>"+"<tr><td title='Highest rated combo in any zone'>Highest Rated Combo:</td><td>"+_m.comboOverall+"</td></tr>";if(_m.comboMistmoore>0){a+="<tr><td title='Highest rated combo in Fahlnir Citadel'>Fahlnir Citadel:</td><td>"+_m.comboMistmoore+"</td></tr>";}
if(_m.comboLowerGuk>0){a+="<tr><td title='Highest rated combo in Kordata Ruins'>Kordata Ruins:</td><td>"+_m.comboLowerGuk+"</td></tr>";}
if(_m.comboCazicThule>0){a+="<tr><td title='Highest rated combo in Temple of Prenssor'>Temple of Prenssor:</td><td>"+_m.comboCazicThule+"</td></tr>";}
if(_m.comboKedgeKeep>0){a+='<tr><td title="Highest rated combo in Viston\'s Redoubt">Viston\'s Redoubt:</td><td>'+_m.comboKedgeKeep+'</td></tr>';}
if(_m.comboPermafrost>0){a+="<tr><td title='Highest rated combo in Galeblast Fortress'>Galeblast Fortress:</td><td>"+_m.comboPermafrost+"</td></tr>";}
if(_m.comboSolB>0){a+="<tr><td title='Highest rated combo in Ashenflow Peak'>Ashenflow Peak:</td><td>"+_m.comboSolB+"</td></tr>";}
if(_m.comboPlaneofHate>0){a+="<tr><td title='Highest rated combo in Dire Sanctum'>Dire Sanctum:</td><td>"+_m.comboPlaneofHate+"</td></tr>";}
if(_m.comboPlaneofFear>0){a+="<tr><td title='Highest rated combo in Nimgaul'>Nimgaul:</td><td>"+_m.comboPlaneofFear+"</td></tr>";}
a+="<tr><td> </td><td> </td></tr>"+"<tr><td style='color:#ffd700'>Providence</td><td> </td></tr>"+"<tr><td title='Increases the amount of gold found'>Gold Gain:</td><td>"+g.goldFindEquip+"%</td></tr>"+"<tr><td title='Increases the amount of experience gained from mobs'>Exp Gain:</td><td>"+g.expFindEquip+"%</td></tr>"+"<tr><td title='Increases your chance of finding rare treasure'>Magic Find:</td><td>"+g.lightRadiusEquip+"</td></tr>"+"</table>";}
NG.statContent.innerHTML=a;if(statTab==="Talents"){reportTalent();}
function zArmorPerc(){var z;if(mobsFound()===false){if(Mstr>0){var foo=((armorFunct()*2)/Mstr).toFixed(1);if(foo>80){foo=80;}
z=foo+"%";}else{z="---";}}else{if(!mob[TGT].name){z="---";}else{var foo=((armorFunct()*2)/mobStrength(TGT)).toFixed(1);if(foo>80){foo=80;}
z=foo+"%";}}
return z;}
function zManaType(){var z="Mana:";if(_m.job==="Rogue"){z="Technique Points:";}
if(_m.job==="Monk"){z="Spirit:";}
if(_m.job==="Warrior"){z="Fury Points:";}
return z;}
function zAttackHaste(display){var foo=M.round(attackHaste(display)*-100);return foo;}
function zSkillHaste(display){var foo=M.round(100-((phyGlobalTotal(display)/1500)*100));return foo;}
function zCastHaste(display){var foo=M.round(100-((castSpeedTotal(1500,display)/1500)*100));return foo;}
function zParryType(){var z;if(_m.job!=="Monk"){z="Parry:";}else{z="Block:";}
return z;}
function zAltType(){var z;if(_m.job!=="Bard"){z="Alteration:";}else{z="Singing:";}
return z;}
function zEvoType(){var z;if(_m.job!=="Bard"){z="Evocation:";}else{z="Percussion:";}
return z;}
function zConjType(){var z;if(_m.job!=="Bard"){z="Conjuration:";}else{z="Wind:";}
return z;}
function zAbjType(){var z;if(_m.job!=="Bard"){z="Abjuration:";}else{z="String:";}
return z;}
function zChanType(){var z;if(_m.job!=="Bard"){z="Channeling:";}else{z="Brass:";}
return z;}}
$("#gameView").on('click','#inventoryGold, #bankGold',function(){if(cityStatus===true||GLB.ks>=6){var e=D.getElementById('goldInputWrap');var e2=D.getElementById('goldInput');if(e.style.display==="none"){var def,e3,e4;if($(this).attr('id')==="inventoryGold"){if(my.gold<=0){return;}
def=$("#inventoryGoldAmount").text()*1;goldTransferMode="deposit";e3=$("#inventoryWindow");e4=$("#inventoryGold");}else{if(GLB.gold<=0){return;}
def=0;goldTransferMode="withdrawal";e3=$("#bank");e4=$("#bankGold");}
var x1=parseInt(e3.css('left'),10);var x2=parseInt(e4.css('left'),10);var y1=parseInt(e3.css('top'),10);var y2=parseInt(e4.css('top'),10);var mouseGoldX=x1+x2+50;var mouseGoldY=y1+y2-27;if(mouseGoldY<0){mouseGoldY=0;}
e2.value=0;e.style.display="block";e.style.left=mouseGoldX+"px";e.style.top=mouseGoldY+"px";$("#goldInput").val(def).focus().select();}else{e.style.display="none";goldTransferMode='';}}else{QMsg("You can only deposit gold in town.");}});function writeAllGold(amount){if(location.protocol==='http:'){$("#inventoryGoldAmount").text(my.gold);$("#cityGold").html("<div id='goldIcon' class='goldIcon'></div> "+my.gold);$("#bankGoldAmount").text(GLB.gold);}else{var a=amount.split("|");my.gold=a[0]*1;GLB.gold=a[1]*1;$("#inventoryGoldAmount").text(my.gold);$("#cityGold").html("<div id='goldIcon' class='goldIcon'></div> "+my.gold);$("#bankGoldAmount").text(GLB.gold);}}
$("#goldInput").on('change keyup keydown blur',function(){var e=D.getElementById('goldInput');var amount=parseInt(e.value,10);if(goldTransferMode==="deposit"){if(amount>my.gold){e.value=my.gold;}}else{if(amount>GLB.gold){e.value=GLB.gold;}}});$("#goldInput").on('keypress',function(evt){var theEvent=evt;var key=theEvent.keyCode||theEvent.which;key=String.fromCharCode(key);var regex=/[0-9]|\./;if(!regex.test(key)){theEvent.returnValue=false;if(theEvent.preventDefault)theEvent.preventDefault();}});$("#gameView").on('click','.transferGold',function(){D.getElementById('goldInputWrap').style.display="none";var amount=parseInt(D.getElementById('goldInput').value,10);if(amount>0){if(goldTransferMode==="deposit"){if(location.protocol==="http:"){if(amount<=my.gold){my.gold-=amount;GLB.gold+=amount;writeAllGold();playAudio('buyitem');}}else{if(amount<=my.gold){g.lockScreen(true);$.ajax({url:'php/town1.php',data:{run:"depositGold",amount:amount,name:my.name}}).done(function(data){if(data!='no'){writeAllGold(data);playAudio('buyitem');}
g.unlockScreen();}).fail(function(){failToCommunicate();});}}}else{if(location.protocol==="http:"){if(amount<=GLB.gold){my.gold+=amount;GLB.gold-=amount;writeAllGold();playAudio('buyitem');}}else{if(amount<=GLB.gold){g.lockScreen(true);$.ajax({url:'php/town1.php',data:{run:"withdrawGold",amount:amount,name:my.name}}).done(function(data){if(data!='no'){writeAllGold(data);playAudio('buyitem');}
g.unlockScreen();}).fail(function(){failToCommunicate();});}}}}
goldTransferMode='';});function setCrystals(){if(location.protocol==="https:"){$.ajax({url:'php/town1.php',data:{run:"setCrystals"}}).done(function(data){$("#cityCrystalAmount").text(data);});}}
var chatMode=false,chatTimer=0,maxChat=0,spamMeter=0,spamBan=false,spamDuration=60000;function cRem(target,e){stage[target].removeChild(e);}
function cacheAdd(s2,target,x,y,scaleX,scaleY,regCenter,first){var e=new C.Bitmap(s2)
if(scaleX===undefined){scaleX=1;}
if(scaleY===undefined){scaleY=1;}
if(regCenter===true){var halfW=e.image.width/2;var halfH=e.image.height/2;e.set({x:x+halfW,y:y+halfH,scaleX:scaleX,scaleY:scaleY,regX:halfW,regY:halfH});}else{e.set({x:x,y:y,scaleX:scaleX,scaleY:scaleY});}
if(first===true){stage[target].addChildAt(e,0);}else{stage[target].addChild(e);}
return e;}
function img(img,w,h){if(w===undefined){w=25;}
if(h===undefined){h=25;}
s1=new C.Bitmap("images1/"+img+".png");s1.cache(0,0,w,h);return s1.cacheCanvas;}
function can(img,target,x,y,w,h,regCenter,first){var e=new C.Bitmap("images1/"+img+".png");var imgW=e.image.width;var imgH=e.image.height;var scaleX=w/imgW;var scaleY=h/imgH;if(regCenter===undefined){e.setTransform(x,y,scaleX,scaleY,0,0,0,0,0);}else{var halfW=imgW/2;var halfH=imgH/2;e.setTransform(x+halfW,y+halfH,scaleX,scaleY,0,0,0,halfW,halfH);}
if(!first){stage[target].addChild(e);}else{stage[target].addChildAt(e,0);}
return e;}
function equipSound(){if(dragged[0].itemSlot==="ring"||dragged[0].itemSlot==="neck"||dragged[0].type==="trinket"){playAudio('equipRing');}else if(dragged[0].itemSlot==="weapons"){playAudio('equipWeapon');}else if(dragged[0].itemSlot==="shield"){playAudio('equipShield');}else if(dragged[0].type==="plate"){playAudio('equipPlate');}else if(dragged[0].type==="chain"){playAudio('equipChain');}else{playAudio('equipLeather');}}
var btn={d:{chaosflux:false,toggleattackId:false,gaspingembrace:false,cajolingwhispers:false,colorshift:false,mesmerize:false,discordantbarrier:false,shiftlessdeeds:false,enchantweapon:false,adorninggrace:false,alacrity:false,gravityflux:false,mysticrune:false,tashania:false,clarity:false,enthrall:false,chargedbolts:false,frostnova:false,magicmissiles:false,fireball:false,deepfreeze:false,chainlightning:false,glacialspike:false,iceblock:false,icecomet:false,counterspell:false,harnessEther:false,meteor:false,mirrorimages:false,icebolt:false,viziersshielding:false,firestorm:false,frozenorb:false,burnout:false,manashield:false,psionicstorm:false,reclaimelements:false,elementalfury:false,armageddon:false,stasisfield:false,alteredstate:false,lavabolt:false,earthelemental:false,airelemental:false,fireelemental:false,frostelemental:false,shieldoflava:false,phantomplate:false,elementalarmor:false,cascadingdarkness:false,invokefear:false,drainsoul:false,feigndeath:false,augmentdeath:false,igniteblood:false,corpseexplosion:false,bondofdeath:false,diamondskin:false,asystole:false,detonatesoul:false,howlingterror:false,bonespirit:false,archshielding:false,feigndeath:false,invokedeath:false,scourge:false,shmhealing:false,togorsinsects:false,cannibalize:false,enstill:false,poisonnova:false,affliction:false,reclaimblood:false,glacialimpact:false,devouringplague:false,froststrike:false,calloftheancients:false,guardianspirit:false,shmsow:false,talismanofaltuna:false,smite:false,soundofforce:false,superiorhealing:false,bindingearth:false,expelcorruption:false,searingrevelation:false,martyrsblessing:false,guardianangel:false,holywrath:false,markofjudgement:false,benediction:false,resolution:false,armoroffaith:false,divinesanctuary:false,symbolofnaltron:false,dronesofdoom:false,druhealing:false,engulfingroots:false,driftingdeath:false,lightningblast:false,earthquake:false,hurricane:false,sylvangrasp:false,volcano:false,tornado:false,starfire:false,skinlikenature:false,shieldofspikes:false,chloroplast:false,drusow:false,chordsofdissonance:false,chantofbattle:false,accelerando:false,hymnofrestoration:false,songofthesirens:false,elementalrhythms:false,lucidlullaby:false,consonantchain:false,dissension:false,chorusofclarity:false,anthemdearms:false,euphonichymn:false,shieldofsongs:false,desperatedirge:false,boastfulbellow:false,rangerkickId:false,rapidshotId:false,countershotId:false,trueshotarrowId:false,volleyshotId:false,lighthealingId:false,faerieflameId:false,igniteId:false,snareId:false,wardersrift:false,weaponshieldId:false,shieldofbramblesId:false,thistlecoatId:false,feetlikecatId:false,rangersowId:false,rangertrackId:false,shdslamId:false,crescentcleaveId:false,deathstrikeId:false,gaspingfrenzyId:false,harmtouchId:false,resistcoldId:false,addmonsterId:false,shdlifetapId:false,doomingdarknessId:false,heatbloodId:false,strengthendeadId:false,shdfearId:false,siphonstrengthId:false,shdfeigndeathId:false,shadowvortexId:false,shdfeigndeathId:false,vampiricembraceId:false,summondeadId:false,palslamId:false,rebukeId:false,purgeId:false,vengeanceId:false,layhandsId:false,greaterhealingId:false,holymightId:false,palrootId:false,ardentjudgment:false,yaulpId:false,cleanseId:false,flashoflightId:false,valorId:false,spiritarmorId:false,divineprovidenceId:false,symbolofryltanId:false,tigerstrikeId:false,eaglestrikeId:false,cheetahstrikeId:false,cobrastrikeId:false,dragonstrikeId:false,cranekickId:false,windmillkickId:false,ancestralflurryId:false,flyingkickId:false,chakrablastId:false,feigndeathId:false,mendId:false,stonefistsId:false,intimidationId:false,innerpeaceId:false,shadowstrikeId:false,sonicstrikeId:false,hyperstrikeId:false,widowstrikeId:false,miragestrikeId:false,lacerateId:false,backstabId:false,staggershotId:false,lobotomizeId:false,prowlinggashId:false,evadeId:false,coldbloodId:false,flashpowderId:false,illusivemistId:false,ancientwillId:false,warriorkickId:false,slamId:false,avengingstrikeId:false,hemorrhageId:false,shockwaveId:false,pummelId:false,subjugateId:false,decisiveblowId:false,absorbspellId:false,frenziedrampageId:false,enrageId:false,furiousscornId:false,triageId:false,bulwarkId:false,intrepidmightId:false,secondwindId:false,divineaegisId:false,ancestralrampageId:false,tunaresglowId:false,karanasinfusionId:false,sanguinetormentId:false,granitevisageId:false,shortcircuitId:false,runId:false,toggleattackId:false,addmonsterId:false},cd:{chaosflux:false,toggleattackId:false,gaspingembrace:false,cajolingwhispers:false,colorshift:false,mesmerize:false,discordantbarrier:false,shiftlessdeeds:false,enchantweapon:false,adorninggrace:false,alacrity:false,gravityflux:false,mysticrune:false,tashania:false,clarity:false,enthrall:false,chargedbolts:false,frostnova:false,magicmissiles:false,fireball:false,deepfreeze:false,chainlightning:false,glacialspike:false,iceblock:false,icecomet:false,counterspell:false,harnessEther:false,meteor:false,mirrorimages:false,icebolt:false,viziersshielding:false,firestorm:false,frozenorb:false,burnout:false,manashield:false,psionicstorm:false,reclaimelements:false,elementalfury:false,armageddon:false,stasisfield:false,alteredstate:false,lavabolt:false,earthelemental:false,airelemental:false,fireelemental:false,frostelemental:false,shieldoflava:false,phantomplate:false,elementalarmor:false,cascadingdarkness:false,invokefear:false,drainsoul:false,feigndeath:false,augmentdeath:false,igniteblood:false,corpseexplosion:false,bondofdeath:false,diamondskin:false,asystole:false,detonatesoul:false,howlingterror:false,bonespirit:false,archshielding:false,feigndeath:false,invokedeath:false,scourge:false,shmhealing:false,togorsinsects:false,cannibalize:false,enstill:false,poisonnova:false,affliction:false,reclaimblood:false,glacialimpact:false,devouringplague:false,froststrike:false,calloftheancients:false,guardianspirit:false,shmsow:false,talismanofaltuna:false,smite:false,soundofforce:false,superiorhealing:false,bindingearth:false,expelcorruption:false,searingrevelation:false,martyrsblessing:false,guardianangel:false,holywrath:false,markofjudgement:false,benediction:false,resolution:false,armoroffaith:false,divinesanctuary:false,symbolofnaltron:false,dronesofdoom:false,druhealing:false,engulfingroots:false,driftingdeath:false,lightningblast:false,earthquake:false,hurricane:false,sylvangrasp:false,volcano:false,tornado:false,starfire:false,skinlikenature:false,shieldofspikes:false,chloroplast:false,drusow:false,chordsofdissonance:false,chantofbattle:false,accelerando:false,hymnofrestoration:false,songofthesirens:false,elementalrhythms:false,lucidlullaby:false,consonantchain:false,dissension:false,chorusofclarity:false,anthemdearms:false,euphonichymn:false,shieldofsongs:false,desperatedirge:false,boastfulbellow:false,rangerkickId:false,rapidshotId:false,countershotId:false,trueshotarrowId:false,volleyshotId:false,lighthealingId:false,faerieflameId:false,igniteId:false,snareId:false,wardersrift:false,weaponshieldId:false,shieldofbramblesId:false,thistlecoatId:false,feetlikecatId:false,rangersowId:false,rangertrackId:false,shdslamId:false,crescentcleaveId:false,deathstrikeId:false,gaspingfrenzyId:false,harmtouchId:false,resistcoldId:false,addmonsterId:false,shdlifetapId:false,doomingdarknessId:false,heatbloodId:false,strengthendeadId:false,shdfearId:false,siphonstrengthId:false,shdfeigndeathId:false,shadowvortexId:false,shdfeigndeathId:false,vampiricembraceId:false,summondeadId:false,palslamId:false,rebukeId:false,purgeId:false,vengeanceId:false,layhandsId:false,greaterhealingId:false,holymightId:false,palrootId:false,ardentjudgment:false,yaulpId:false,cleanseId:false,flashoflightId:false,valorId:false,spiritarmorId:false,divineprovidenceId:false,symbolofryltanId:false,tigerstrikeId:false,eaglestrikeId:false,cheetahstrikeId:false,cobrastrikeId:false,dragonstrikeId:false,cranekickId:false,windmillkickId:false,ancestralflurryId:false,flyingkickId:false,chakrablastId:false,feigndeathId:false,mendId:false,stonefistsId:false,intimidationId:false,innerpeaceId:false,shadowstrikeId:false,sonicstrikeId:false,hyperstrikeId:false,widowstrikeId:false,miragestrikeId:false,lacerateId:false,backstabId:false,staggershotId:false,lobotomizeId:false,prowlinggashId:false,evadeId:false,coldbloodId:false,flashpowderId:false,illusivemistId:false,ancientwillId:false,warriorkickId:false,slamId:false,avengingstrikeId:false,hemorrhageId:false,shockwaveId:false,pummelId:false,subjugateId:false,decisiveblowId:false,absorbspellId:false,frenziedrampageId:false,enrageId:false,furiousscornId:false,triageId:false,bulwarkId:false,intrepidmightId:false},o:{chordsofdissonance:false,chantofbattle:false,accelerando:false,hymnofrestoration:false,songofthesirens:false,elementalrhythms:false,lucidlullaby:false,consonantchain:false,dissension:false,chorusofclarity:false,anthemdearms:false,euphonichymn:false,shieldofsongs:false,desperatedirge:false,boastfulbellow:false}}
$(document).ready(function(){$("#window3").on('click','#roguehideId',function(){hideRogue();}).on('click','#rangertrackId',function(){rangerTrack();}).on('click','#thistlecoatId',function(){thistlecoat();}).on('click','#feetlikecatId',function(){feetLikeCat();}).on('click','#shieldofbramblesId',function(){shieldOfBrambles();}).on('click','#rangersowId',function(){spiritOfTheWolf();}).on('click','#valorId',function(){valor();}).on('click','#spiritarmorId',function(){spiritArmor();}).on('click','#divineprovidenceId',function(){divineProvidence();}).on('click','#symbolofryltanId',function(){symbolOfRyltan();}).on('click','#summondeadId',function(){summonDead();}).on('click','#vampiricembraceId',function(){vampiricEmbrace();}).on('click','#resistcoldId',function(){resistCold();}).on('click','#resolution',function(){resolution();}).on('click','#armoroffaith',function(){armorOfFaith();}).on('click','#divinesanctuary',function(){divineSanctuary();}).on('click','#symbolofnaltron',function(){symbolOfNaltron();}).on('click','#skinlikenature',function(){skinLikeNature();}).on('click','#shieldofspikes',function(){shieldOfSpikes();}).on('click','#drusow',function(){druSow();}).on('click','#chloroplast',function(){chloroplast();}).on('click','#calloftheancients',function(){callOfTheAncients();}).on('click','#shmsow',function(){shmSow();}).on('click','#guardianspirit',function(){guardianSpirit();}).on('click','#talismanofaltuna',function(){talismanOfAltuna();}).on('click','#invokedeath',function(){invokeDeath();}).on('click','#archshielding',function(){archShielding();}).on('click','#discordantbarrier',function(){discordantBarrier();}).on('click','#enchantweapon',function(){enchantWeapon();}).on('click','#adorninggrace',function(){adorningGrace();}).on('click','#clarity',function(){clarity();}).on('click','#earthelemental',function(){earthElemental();}).on('click','#airelemental',function(){airElemental();}).on('click','#fireelemental',function(){fireElemental();}).on('click','#frostelemental',function(){frostElemental();}).on('click','#shieldoflava',function(){shieldOfLava();}).on('click','#phantomplate',function(){phantomPlate();}).on('click','#elementalarmor',function(){elementalArmor();}).on('click','#viziersshielding',function(){viziersShielding();}).on('click','#warriorkickId',function(){warriorKick();}).on('click','#slamId',function(){slam();}).on('click','#avengingstrikeId',function(){avengingStrike();}).on('click','#hemorrhageId',function(){hemorrhage();}).on('click','#shockwaveId',function(){shockwave();}).on('click','#pummelId',function(){pummel();}).on('click','#subjugateId',function(){subjugate();}).on('click','#decisiveblowId',function(){decisiveBlow();}).on('click','#absorbspellId',function(){absorbSpell();}).on('click','#frenziedrampageId',function(){frenziedRampage();}).on('click','#enrageId',function(){enrage();}).on('click','#furiousscornId',function(){furiousScorn();}).on('click','#triageId',function(){triage();}).on('click','#bulwarkId',function(){bulwark();}).on('click','#intrepidmightId',function(){intrepidMight();}).on('click','#tigerstrikeId',function(){tigerStrike();}).on('click','#eaglestrikeId',function(){eagleStrike();}).on('click','#cheetahstrikeId',function(){cheetahStrike();}).on('click','#cobrastrikeId',function(){cobraStrike();}).on('click','#dragonstrikeId',function(){dragonStrike();}).on('click','#cranekickId',function(){craneKick();}).on('click','#windmillkickId',function(){windmillKick();}).on('click','#ancestralflurryId',function(){ancestralFlurry();}).on('click','#flyingkickId',function(){flyingKick();}).on('click','#chakrablastId',function(){chakraBlast();}).on('click','#feigndeathId',function(){feignDeath();}).on('click','#mendId',function(){mend();}).on('click','#stonefistsId',function(){stoneFists();}).on('click','#intimidationId',function(){intimidation();}).on('click','#innerpeaceId',function(){innerPeace();}).on('click','#shadowstrikeId',function(){shadowStrike();}).on('click','#sonicstrikeId',function(){sonicStrike();}).on('click','#hyperstrikeId',function(){hyperStrike();}).on('click','#widowstrikeId',function(){widowStrike();}).on('click','#miragestrikeId',function(){mirageStrike();}).on('click','#lacerateId',function(){lacerate();}).on('click','#backstabId',function(){backstab();}).on('click','#staggershotId',function(){staggerShot();}).on('click','#lobotomizeId',function(){lobotomize();}).on('click','#prowlinggashId',function(){prowlingGash();}).on('click','#evadeId',function(){evade();}).on('click','#coldbloodId',function(){coldBlood();}).on('click','#flashpowderId',function(){flashPowder();}).on('click','#illusivemistId',function(){illusiveMist();}).on('click','#ancientwillId',function(){ancientWill();}).on('click','#palslamId',function(){palSlam();}).on('click','#rebukeId',function(){rebuke();}).on('click','#purgeId',function(){purge();}).on('click','#vengeanceId',function(){vengeance();}).on('click','#layhandsId',function(){layHands();}).on('click','#greaterhealingId',function(){greaterHealing();}).on('click','#holymightId',function(){holyMight();}).on('click','#palrootId',function(){palRoot();}).on('click','#ardentjudgment',function(){ardentJudgment();}).on('click','#yaulpId',function(){yaulp();}).on('click','#flashoflightId',function(){flashOfLight();}).on('click','#cleanseId',function(){cleanse();}).on('click','#rangerkickId',function(){rangerKick();}).on('click','#rapidshotId',function(){rapidShot();}).on('click','#countershotId',function(){counterShot();}).on('click','#trueshotarrowId',function(){trueshotArrow();}).on('click','#volleyshotId',function(){volleyShot();}).on('click','#lighthealingId',function(){lightHealing();}).on('click','#wardersrift',function(){wardersRift();}).on('click','#igniteId',function(){ignite();}).on('click','#snareId',function(){snare();}).on('click','#faerieflameId',function(){faerieFlame();}).on('click','#weaponshieldId',function(){weaponShield();}).on('click','#shdslamId',function(){shdSlam();}).on('click','#crescentcleaveId',function(){crescentCleave();}).on('click','#deathstrikeId',function(){deathStrike();}).on('click','#gaspingfrenzyId',function(){gaspingFrenzy();}).on('click','#harmtouchId',function(){harmTouch();}).on('click','#shdlifetapId',function(){shdLifeTap();}).on('click','#doomingdarknessId',function(){doomingDarkness();}).on('click','#heatbloodId',function(){heatBlood();}).on('click','#strengthendeadId',function(){strengthenDead();}).on('click','#shdfearId',function(){shdFear();}).on('click','#siphonstrengthId',function(){siphonStrength();}).on('click','#shdfeigndeathId',function(){shdFeignDeath();}).on('click','#shadowvortexId',function(){shadowVortex();}).on('click','#chordsofdissonance',function(){chordsOfDissonance();}).on('click','#chantofbattle',function(){chantOfBattle();}).on('click','#accelerando',function(){accelerando();}).on('click','#hymnofrestoration',function(){hymnOfRestoration();}).on('click','#anthemdearms',function(){anthemDeArms();}).on('click','#boastfulbellow',function(){boastfulBellow();}).on('click','#elementalrhythms',function(){elementalRhythms();}).on('click','#lucidlullaby',function(){lucidLullaby();}).on('click','#consonantchain',function(){consonantChain();}).on('click','#innerpeaceId',function(){innerPeace();}).on('click','#dissension',function(){dissension();}).on('click','#chorusofclarity',function(){chorusOfClarity();}).on('click','#songofthesirens',function(){songOfTheSirens();}).on('click','#euphonichymn',function(){euphonicHymn();}).on('click','#shieldofsongs',function(){shieldOfSongs();}).on('click','#desperatedirge',function(){desperateDirge();}).on('click','#smite',function(){smite();}).on('click','#soundofforce',function(){soundOfForce();}).on('click','#superiorhealing',function(){superiorHealing();}).on('click','#bindingearth',function(){bindingEarth();}).on('click','#expelcorruption',function(){expelCorruption();}).on('click','#searingrevelation',function(){searingRevelation();}).on('click','#martyrsblessing',function(){martyrsBlessing();}).on('click','#guardianangel',function(){guardianAngel();}).on('click','#holywrath',function(){holyWrath();}).on('click','#markofjudgement',function(){markOfJudgement();}).on('click','#benediction',function(){benediction();}).on('click','#starfire',function(){starfire();}).on('click','#dronesofdoom',function(){dronesOfDoom();}).on('click','#druhealing',function(){druHealing();}).on('click','#tornado',function(){tornado();}).on('click','#engulfingroots',function(){engulfingRoots();}).on('click','#driftingdeath',function(){driftingDeath();}).on('click','#lightningblast',function(){lightningBlast();}).on('click','#earthquake',function(){earthquake();}).on('click','#hurricane',function(){hurricane();}).on('click','#sylvangrasp',function(){sylvanGrasp();}).on('click','#volcano',function(){volcano();}).on('click','#froststrike',function(){frostStrike();}).on('click','#scourge',function(){scourge();}).on('click','#shmhealing',function(){shmHealing();}).on('click','#togorsinsects',function(){togorsInsects();}).on('click','#cannibalize',function(){cannibalize();}).on('click','#enstill',function(){enstill();}).on('click','#poisonnova',function(){poisonNova();}).on('click','#affliction',function(){affliction();}).on('click','#reclaimblood',function(){reclaimBlood();}).on('click','#glacialimpact',function(){glacialImpact();}).on('click','#devouringplague',function(){devouringPlague();}).on('click','#bonespirit',function(){boneSpirit();}).on('click','#cascadingdarkness',function(){cascadingDarkness();}).on('click','#invokefear',function(){invokeFear();}).on('click','#drainsoul',function(){drainSoul();}).on('click','#feigndeath',function(){necFeignDeath();}).on('click','#augmentdeath',function(){augmentDeath();}).on('click','#igniteblood',function(){igniteBlood();}).on('click','#corpseexplosion',function(){corpseExplosion();}).on('click','#bondofdeath',function(){bondOfDeath();}).on('click','#diamondskin',function(){diamondSkin();}).on('click','#asystole',function(){asystole();}).on('click','#detonatesoul',function(){detonateSoul();}).on('click','#howlingterror',function(){howlingTerror();}).on('click','#chaosflux',function(){chaosFlux();}).on('click','#gaspingembrace',function(){gaspingEmbrace();}).on('click','#cajolingwhispers',function(){cajolingWhispers();}).on('click','#colorshift',function(){colorShift();}).on('click','#mesmerize',function(){mesmerize();}).on('click','#shiftlessdeeds',function(){shiftlessDeeds();}).on('click','#alacrity',function(){alacrity();}).on('click','#gravityflux',function(){gravityFlux();}).on('click','#mysticrune',function(){mysticRune();}).on('click','#tashania',function(){tashania();}).on('click','#enthrall',function(){enthrall();}).on('click','#lavabolt',function(){lavaBolt();}).on('click','#firestorm',function(){firestorm();}).on('click','#frozenorb',function(){frozenOrb();}).on('click','#burnout',function(){burnout();}).on('click','#manashield',function(){manaShield();}).on('click','#psionicstorm',function(){psionicStorm();}).on('click','#reclaimelements',function(){reclaimElements();}).on('click','#elementalfury',function(){elementalFury();}).on('click','#armageddon',function(){armageddon();}).on('click','#stasisfield',function(){stasisField();}).on('click','#alteredstate',function(){alteredState();}).on('click','#icebolt',function(){iceBolt();}).on('click','#chargedbolts',function(){chargedBolts();}).on('click','#frostnova',function(){frostNova();}).on('click','#magicmissiles',function(){magicMissiles();}).on('click','#fireball',function(){fireball();}).on('click','#deepfreeze',function(){deepFreeze();}).on('click','#chainlightning',function(){chainLightning();}).on('click','#glacialspike',function(){glacialSpike();}).on('click','#iceblock',function(){iceBlock();}).on('click','#icecomet',function(){iceComet();}).on('click','#counterspell',function(){counterspell();}).on('click','#harnessEther',function(){harnessEther();}).on('click','#meteor',function(){meteor();}).on('click','#mirrorimages',function(){mirrorImages();});$("#gameView").on('click','#addmonsterId',function(){addMonster();}).on('click','#runId',function(){run();}).on('click','#toggleattackId',function(){toggleAutoAttackStatus();}).on('click','#secondwindId',function(){secondWind();}).on('click','#divineaegisId',function(){divineAegis();}).on('click','#ancestralrampageId',function(){ancestralRampage();}).on('click','#tunaresglowId',function(){tunaresGlow();}).on('click','#karanasinfusionId',function(){karanasInfusion();}).on('click','#sanguinetormentId',function(){sanguineTorment();}).on('click','#granitevisageId',function(){graniteVisage();}).on('click','#shortcircuitId',function(){shortCircuit();}).on('click','#togglepetattackId',function(){togglePetAutoAttackStatus();}).on('click','#halflinghideId',function(){hideRacial();});});function zoneAmbushOdds(){var foo=300;var x=myZone();if(x==="Kordata Marshlands"||x==="Greenthorn Cavern"||x==="Riven Grotto"||x==="Lanfeld Outpost"){foo=225;if(my.level<4){foo=100;}}
if(x==="Braxxen's Bastille"||x==="Arcturin's Crypt"||x==="Galeblast Fortress"){foo=190;if(my.level<8){foo=40;}}
if(x==="Fahlnir Citadel"||x==="Temple of Prenssor"){foo=165;if(my.level<20){foo=20;}}
if(x==="Viston's Redoubt"||x==="Ashenflow Peak"||x==="Kordata Ruins"||x==="Dire Sanctum"||x==="Nimgaul"){foo=140;if(my.level<35){foo=10;}}
return foo;}
function charToggle(){var e=D.getElementById("charsheetId");if(charSheetToggle===1){charSheetToggle=0;CStat();e.className="buttonsManageOff";e.style.backgroundPosition="0 -40px";$("#window1").css("display","block");if(travelStatus===0){travelToggle();}
if(parseInt($("#options").css("top"),10)>=0){optionsToggle();}
return;}else{e.className="buttonsManage";e.style.backgroundPosition="0 0";$("#window1").css("display","none");charSheetToggle=1;}}
function bankToggle(){if(cityStatus===true||GLB.ks>=6){cityMenuClick();if(!merchantMode){if($("#bank").css("display")==="none"){if(location.protocol==="https:"){$("#bankContainer").empty();$.ajax({url:'php/loadData1.php',data:{run:"loadBank"}}).done(function(data){var a=data.split("|");a.pop();var gold=a.shift()*1;$('#bankGoldAmount').text(gold);GLB.gold=gold;maxBankSlots=a.shift()*1;if(maxBankSlots<1080&&location.protocol==="https:"){$("#addBankSlots").css('display','block');}
parseItem('bank',maxBankSlots,a);renderBank(maxBankSlots);}).fail(function(){QMsg("Server Error. Cannot load bank.");});}else{renderBank(1080);}
$("#bank").css("display","block");goldTransferMode='';}else{$("#bank,#goldInputWrap").css("display","none");$("#bankContainer").empty();cancelDragging();}}else{Error("You must exit the Merchant before visiting the bank!");}}}
function optionsToggle(){var x=$("#options");var y=D.getElementById("optionsId");if(x.css("top")==="-900px"){writeOptionsHtml();y.className="buttonsManageOff";y.style.backgroundPosition="-120px -40px";x.css("top",10);if(travelStatus===0){travelToggle();}
if(charSheetToggle===0){charToggle();}
if(inventoryToggle===0){inventory();}
if($("#bank").css("display")==="block"){bankToggle();}}else{y.className="buttonsManage";y.style.backgroundPosition="-120px 0";x.css("top",-900);$("#options").empty();}}
function questToggle(){var x=D.getElementById("questId");if(questJournalBlock===1){questJournalBlock=0;x.className="buttonsManageOff";x.style.backgroundPosition="-240px -40px";QupdateJournal();$("#questJournal").css("display","block");if(parseInt($("#options").css("top"),10)>=0){optionsToggle();}
T.set('#questNotify',{opacity:0});}else{x.className="buttonsManage";x.style.backgroundPosition="-240px 0";$("#questJournal").css("display","none");questJournalBlock=1;}}
function DA(x){var adj=0;if(g.difficulty===2){x+=25;if(x<75){adj=~~((75-x)/2);}
x+=adj;}
if(g.difficulty===3){x+=40;if(x<94){adj=~~((94-x)/2);}
x+=adj;}
return x;}
function writeMapHtml(){var x=g.difficulty-1;var z='<div id="zoneSelect" class="strongShadow staggeredGrey">'+'<div id="mapActWrap">'+'<div id="act1" class="zoneSelectHeader">I</div>';if(P.Q[x].Crushbone>=4){z+='<div id="act2" class="zoneSelectHeader">II</div>';}
if(P.Q[x].EstateofUnrest>=4){z+='<div id="act3" class="zoneSelectHeader">III</div>';}
if(P.Q[x].CazicThule>=4){z+='<div id="act4" class="zoneSelectHeader">IV</div>';}
z+='</div>';if(viewingAct===1){z+='<div id="edenburg" class="zoneSelectButton">Edenburg</div>'+'<div id="greaterFaydark" class="zoneSelectButton">Salubrin Forest</div>';if(P.Q[x].GreaterFaydark>=4){z+='<div id="lesserFaydark" class="zoneSelectButton">Tendolin Meadows</div>';if(P.Q[x].LesserFaydark>=2){z+='<div id="blackburrow1" class="zoneSelectButton">Greenthorn Cavern 1</div>';if(P.Q[x].Blackburrow>=2){z+='<div id="blackburrow2" class="zoneSelectButton">Greenthorn Cavern 2</div>';}
if(P.Q[x].Blackburrow>=3){z+='<div id="blackburrow3" class="zoneSelectButton">Greenthorn Cavern 3</div>';}
if(P.Q[x].Blackburrow>=4){z+='<div id="befallen1" class="zoneSelectButton">Riven Grotto 1</div>';if(P.Q[x].Befallen>=2){z+='<div id="befallen2" class="zoneSelectButton">Riven Grotto 2</div>';}
if(P.Q[x].Befallen>=3){z+='<div id="befallen3" class="zoneSelectButton">Riven Grotto 3</div>';}
if(P.Q[x].Befallen>=4){z+='<div id="crushbone1" class="zoneSelectButton">Lanfeld Outpost 1</div>';if(P.Q[x].Crushbone>=2){z+='<div id="crushbone2" class="zoneSelectButton">Lanfeld Outpost 2</div>';}
if(P.Q[x].Crushbone>=3){z+='<div id="crushbone3" class="zoneSelectButton">Lanfeld Outpost 3</div>';}}}}}}
if(viewingAct===2){if(P.Q[x].Crushbone>=4){z+='<div id="surefallGlade" class="zoneSelectButton">Aspen Grove</div>';if(P.Q[x].Najena>=1){z+='<div id="najena1" class="zoneSelectButton">Braxxen\'s Bastille 1</div>';}
if(P.Q[x].Najena>=2){z+='<div id="najena2" class="zoneSelectButton">Braxxen\'s Bastille 2</div>';}
if(P.Q[x].Najena>=3){z+='<div id="najena3" class="zoneSelectButton">Braxxen\'s Bastille 3</div>';}
if(P.Q[x].Najena>=4){z+='<div id="upperGuk1" class="zoneSelectButton">Kordata Marshlands 1</div>';if(P.Q[x].UpperGuk>=2){z+='<div id="upperGuk2" class="zoneSelectButton">Kordata Marshlands 2</div>';}
if(P.Q[x].UpperGuk>=3){z+='<div id="upperGuk3" class="zoneSelectButton">Kordata Marshlands 3</div>';}
if(P.Q[x].UpperGuk>=4){z+='<div id="unrest1" class="zoneSelectButton">Arcturin\'s Crypt 1</div>';if(P.Q[x].EstateofUnrest>=2){z+='<div id="unrest2" class="zoneSelectButton">Arcturin\'s Crypt 2</div>';}
if(P.Q[x].EstateofUnrest>=3){z+='<div id="unrest3" class="zoneSelectButton">Arcturin\'s Crypt 3</div>';}}}}}
if(viewingAct===3){if(P.Q[x].EstateofUnrest>=4){z+='<div id="artremia" class="zoneSelectButton">Artremia</div>';if(P.Q[x].CastleMistmoore>=1){z+='<div id="castleMistmoore1" class="zoneSelectButton">Fahlnir Citadel 1</div>';}
if(P.Q[x].CastleMistmoore>=2){z+='<div id="castleMistmoore2" class="zoneSelectButton">Fahlnir Citadel 2</div>';}
if(P.Q[x].CastleMistmoore>=3){z+='<div id="castleMistmoore3" class="zoneSelectButton">Fahlnir Citadel 3</div>';}
if(P.Q[x].CastleMistmoore>=4){z+='<div id="lowerGuk1" class="zoneSelectButton">Kordata Ruins 1</div>';if(P.Q[x].LowerGuk>=2){z+='<div id="lowerGuk2" class="zoneSelectButton">Kordata Ruins 2</div>';}
if(P.Q[x].LowerGuk>=3){z+='<div id="lowerGuk3" class="zoneSelectButton">Kordata Ruins 3</div>';}
if(P.Q[x].LowerGuk>=4){z+='<div id="cazic1" class="zoneSelectButton">Temple of Prenssor 1</div>';if(P.Q[x].CazicThule>=2){z+='<div id="cazic2" class="zoneSelectButton">Temple of Prenssor 2</div>';}
if(P.Q[x].CazicThule>=3){z+='<div id="cazic3" class="zoneSelectButton">Temple of Prenssor 3</div>';}}}}}
if(viewingAct===4){if(P.Q[x].CazicThule>=4){z+='<div id="fenwoven" class="zoneSelectButton">Fenwoven</div>';if(P.Q[x].KedgeKeep>=1){z+='<div id="kedge1" class="zoneSelectButton">Viston\'s Redoubt 1</div>';}
if(P.Q[x].KedgeKeep>=2){z+='<div id="kedge2" class="zoneSelectButton">Viston\'s Redoubt 2</div>';}
if(P.Q[x].KedgeKeep>=3){z+='<div id="kedge3" class="zoneSelectButton">Viston\'s Redoubt 3</div>';}
if(P.Q[x].KedgeKeep>=4){z+='<div id="kedge4" class="zoneSelectButton">Viston\'s Redoubt 4</div>';}
if(P.Q[x].KedgeKeep>=5){z+='<div id="permafrost1" class="zoneSelectButton">Galeblast Fortress 1</div>';if(P.Q[x].PermafrostKeep>=2){z+='<div id="permafrost2" class="zoneSelectButton">Galeblast Fortress 2</div>';}
if(P.Q[x].PermafrostKeep>=3){z+='<div id="permafrost3" class="zoneSelectButton">Galeblast Fortress 3</div>';}
if(P.Q[x].PermafrostKeep>=4){z+='<div id="permafrost4" class="zoneSelectButton">Galeblast Fortress 4</div>';}
if(P.Q[x].PermafrostKeep>=5){z+='<div id="solb1" class="zoneSelectButton">Ashenflow Peak 1</div>';if(P.Q[x].NagafensLair>=2){z+='<div id="solb2" class="zoneSelectButton">Ashenflow Peak 2</div>';}
if(P.Q[x].NagafensLair>=3){z+='<div id="solb3" class="zoneSelectButton">Ashenflow Peak 3</div>';}
if(P.Q[x].NagafensLair>=4){z+='<div id="solb4" class="zoneSelectButton">Ashenflow Peak 4</div>';}
if(P.Q[x].NagafensLair>=5){z+='<div id="planeofhate" class="zoneSelectButton">Dire Sanctum</div>';}
if(P.Q[x].PlaneofHate>=2){z+='<div id="planeoffear" class="zoneSelectButton">Nimgaul</div>';}}}}}
z+='</div>';D.getElementById('zoneSelectWrap').innerHTML=z;$("#act"+viewingAct).addClass('viewingAct');if($("#NGmap").length===0){var map=D.createElement('div');map.style.position='absolute';map.style.top='0px';map.style.left='-5px';map.style.width='1280px';map.style.height='720px';map.id='NGmap';map.style.background="url('//i.imgur.com/d1iYz2W.jpg')";$("#travelMap").prepend(map);var marker=D.createElement('div');marker.style.top='0px';marker.id="zoneMarker";$("#NGmap").append(marker);}}
function travelToggle(){if(g.view==="Game"){if(my.hp<=0){return;}
if(mobsFound()===true){QMsg("This menu is disabled during combat.");return;}
var e=D.getElementById("travelId");if(travelStatus===1){e.className="buttonsManageOff";e.style.backgroundPosition="-80px -40px";$("#worldMap").css("top",0);travelStatus=0;writeMapHtml();initNG();initNG2();positionMap();T.set('#mapNotify',{opacity:0});}else{e.className="buttonsManage";e.style.backgroundPosition="-80px 0";$("#worldMap").css("top",-900);travelStatus=1;}}}
function writeGearHtml(){var z="";z+='<li id="helmetBG" class="equipmentBG helmet">HELMET'+'<img id="helmet" src="" class="equipment">'+'</li>'+'<li id="neckBG" class="equipmentBG neck">NECK'+'<img id="neck" src="" class="equipment">'+'</li>'+'<li id="ring1BG" class="equipmentBG ring1">RING1'+'<img id="ring1" src="" class="equipment">'+'</li>'+'<li id="ring2BG" class="equipmentBG ring2">RING2'+'<img id="ring2" src="" class="equipment">'+'</li>'+'<li id="shouldersBG" class="equipmentBG shoulders">SHOULDERS'+'<img id="shoulders" src="" class="equipment">'+'</li>'+'<li id="backBG" class="equipmentBG back">BACK'+'<img id="back" src="" class="equipment">'+'</li>'+'<li id="chestBG" class="equipmentBG chest">CHEST'+'<img id="chest" src="" class="equipment">'+'</li>'+'<li id="bracersBG" class="equipmentBG bracers">BRACERS'+'<img id="bracers" src="" class="equipment">'+'</li>'+'<li id="glovesBG" class="equipmentBG gloves">GLOVES'+'<img id="gloves" src="" class="equipment">'+'</li>'+'<li id="beltBG" class="equipmentBG belt">BELT'+'<img id="belt" src="" class="equipment">'+'</li>'+'<li id="legsBG" class="equipmentBG legs">LEGS'+'<img id="legs" src="" class="equipment">'+'</li>'+'<li id="bootsBG" class="equipmentBG boots">BOOTS'+'<img id="boots" src="" class="equipment">'+'</li>'+'<li id="weapon1BG" class="equipmentBG weapon1">PRIMARY'+'<img id="weapon1" src="" class="equipment">'+'</li>'+'<li id="weapon2BG" class="equipmentBG weapon2">SECONDARY'+'<img id="weapon2" src="" class="equipment">'+'</li>'+'<li id="rangeBG" class="equipmentBG range">RANGE'+'<img id="range" src="" class="equipment">'+'</li>';D.getElementById('gearContainer').innerHTML=z;D.getElementById('inventoryGoldAmount').textContent=my.gold;var foo="";for(var i=0;i<=23;i++){foo+="<li class='inventoryBG' id='inv"+i+"BG'>ITEM"+"<img src='images1/blank.png' id='inv"+i+"' class='inventory'>"+"</li>";}
D.getElementById('inventoryContainer').innerHTML=foo;initNG2();updateEquipment();updateInventory();}
function inventory(){var e=$("#destroyItem");if(GLB.ks>=7){e.text("Sell");}else{e.text("Destroy");}
var e=D.getElementById("inventoryId");if(inventoryToggle===1){writeGearHtml();e.className="buttonsManageOff";e.style.backgroundPosition="-40px -40px";$("#inventoryWindow").css("display","block");inventoryToggle=0;if(travelStatus===0){travelToggle();}
if(parseInt($("#options").css("top"),10)>=0){optionsToggle();}
T.set('#itemNotify',{opacity:0});}else{e.className="buttonsManage";e.style.backgroundPosition="-40px 0";$("#inventoryWindow,#goldInputWrap").css("display","none");cancelDragging();inventoryToggle=1;D.getElementById('gearContainer').innerHTML='';D.getElementById('inventoryContainer').innerHTML='';goldTransferMode='';}}
function writeOptionsHtml(){var z="";z+='<div id="optionsTable">'+'<div id="optionHeader" class="strongShadow winHeader">Options</div>'+'<table id="optionSettingWrap" class="strongShadow" width="100%">'+'<tr>'+'<td class="optionLeft">'+'<div id="tooltipStatus" class="optionButtonWrap">'+GLB.tooltipMode+'</div>'+'</td>'+'<td class="optionRight">'+'Tooltip Status: Choose between Long, Short, and Off. Long tooltips show full explanations of each skill.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="normalFilter" class="optionButtonWrap lootFilter">'+Lmy.normalFilter+'</div>'+'</td>'+'<td class="optionRight">'+'Normal Item Filter : Set your <b>normal item</b> filter by quality.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="magicFilter" class="optionButtonWrap lootFilter">'+Lmy.magicFilter+'</div>'+'</td>'+'<td class="optionRight">'+'Magic Item Filter : Set your <b>'+magical("magic item")+'</b> filter by quality.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="rareFilter" class="optionButtonWrap lootFilter">'+Lmy.rareFilter+'</div>'+'</td>'+'<td class="optionRight">'+'Rare Item Filter : Set your <b>'+rare("rare item")+'</b> filter by quality.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="uniqueFilter" class="optionButtonWrap lootFilter">'+Lmy.uniqueFilter+'</div>'+'</td>'+'<td class="optionRight">'+'Unique Item Filter : Set your <b>'+unique("unique item")+'</b> filter by quality.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="setFilter" class="optionButtonWrap lootFilter">'+Lmy.setFilter+'</div>'+'</td>'+'<td class="optionRight">'+'Set Item Filter : Set your <b>'+set("set item")+'</b> filter by quality.'+'</td>'+'</tr>';if(isMobile===false){z+='<tr>'+'<td class="optionLeft">'+'<div id="showCombatLog" class="optionButtonWrap">'+GLB.showCombatLog+'</div>'+'</td>'+'<td class="optionRight">'+'Show Combat Log: Show or hide the combat log. Performance will improve while off.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="spamFilter" class="optionButtonWrap">'+GLB.chatMyHit+'</div>'+'</td>'+'<td class="optionRight">'+'Combat Spam: Enable or Disable your own damage messages.'+'</td>'+'</tr>';}
z+='<tr>'+'<td class="optionLeft">'+'<div id="weatherStatus" class="optionButtonWrap">'+GLB.videoSetting+'</div>'+'</td>'+'<td class="optionRight">'+'Video Settings: Use video settings that work best on your device.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="autoAttackOption" class="optionButtonWrap">'+Lmy.autoAttackOption+'</div>'+'</td>'+'<td class="optionRight">'+'Auto Attack: Automatically begin your auto attack when entering battle or when using melee skills.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="hideMenu" class="optionButtonWrap">'+GLB.hideMenu+'</div>'+'</td>'+'<td class="optionRight">'+'Auto Hide Menu: Set whether the menu automatically fades out.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft">'+'<div id="fastDestroy" class="optionButtonWrap">'+GLB.fastDestroy+'</div>'+'</td>'+'<td class="optionRight">'+'Fast Destroy: Destroys items in one click. If turned off it takes two clicks.'+'</td>'+'</tr>';if(isMobile===false){z+='<tr>'+'<td class="optionLeft">'+'<div id="debugMode" class="optionButtonWrap">'+GLB.debugMode+'</div>'+'</td>'+'<td class="optionRight">'+'Debug Mode: Enable debug messages to help report bugs in the game.'+'</td>'+'</tr>'+'<tr>'+'<td class="optionLeft2">'+'<div id="audioUp" class="audioAdjust">▲</div>'+'<div id="audioDown" class="audioAdjust">▼</div>'+'</td>'+'<td class="optionRight">Audio Volume: <span id="soundStatus">'+GLB.soundStatus+'</span></td>'+'</tr>'+'<tr>'+'<td class="optionLeft2">'+'<div id="audioUp2" class="audioAdjust">▲</div>'+'<div id="audioDown2" class="audioAdjust">▼</div>'+'</td>'+'<td class="optionRight">Music Volume: <span id="musicStatus">'+GLB.musicStatus+'</span></td>'+'</tr>';}
z+='</table>'+'<div id="hotkeys" class="strongShadow">Hotkeys</div>'+'<table id="hotkeyTable" width="100%" style="padding:10px">'+'<tr>'+'<td class="controlLeft">'+'1-0'+'</td>'+'<td class="controlRight">'+'Row 1 Buttons'+'</td>'+'<td class="controlLeft">'+'SHIFT+1-0'+'</td>'+'<td class="controlRight">'+'Row 2 Buttons'+'</td>'+'<td class="controlLeft">'+'ESC'+'</td>'+'<td width="18%" class="controlRight">'+'Pause'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'SPACE BAR'+'</td>'+'<td class="controlRight">'+'Cancel Spell / Close Windows'+'</td>'+'<td class="controlLeft">'+'SPACE BAR'+'</td>'+'<td class="controlRight">'+'Clear All Windows'+'</td>'+'<td class="controlLeft">'+'B'+'</td>'+'<td class="controlRight">'+'Bank'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'G'+'</td>'+'<td class="controlRight">'+'Inventory'+'</td>'+'<td class="controlLeft">'+'C'+'</td>'+'<td class="controlRight">'+'Character Sheet'+'</td>'+'<td class="controlLeft">'+'X'+'</td>'+'<td class="controlRight">'+'Options'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'TAB'+'</td>'+'<td class="controlRight">'+'Next Target'+'</td>'+'<td class="controlLeft">'+'SHIFT+TAB'+'</td>'+'<td class="controlRight">'+'Previous Target'+'</td>'+'<td class="controlLeft">'+'SHIFT+R'+'</td>'+'<td class="controlRight">'+'Run'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'A'+'</td>'+'<td class="controlRight">'+'Toggle Attack'+'</td>'+'<td class="controlLeft">'+'SHIFT+A'+'</td>'+'<td class="controlRight">'+'Set Pet Target'+'</td>'+'<td class="controlLeft">'+'D'+'</td>'+'<td class="controlRight">'+'Pull Next Monster'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'S'+'</td>'+'<td width="18%" class="controlRight">'+'Use Racial Skill'+'</td>'+'<td class="controlLeft">'+'M or Z'+'</td>'+'<td class="controlRight">'+'Show Map'+'</td>'+'<td class="controlLeft">'+'T'+'</td>'+'<td class="controlRight">'+'Show Talents'+'</td>'+'</tr>'+'<tr>'+'<td class="controlLeft">'+'CTRL+Left Click'+'</td>'+'<td width="18%" class="controlRight">'+'Fast Sell at Merchant'+'</td>'+'<td class="controlLeft">'+'Q'+'</td>'+'<td class="controlRight">'+'Quest Journal'+'</td>'+'<td class="controlLeft">'+'Hold SHIFT'+'</td>'+'<td class="controlRight">'+'Compare Equipped Item'+'</td>'+'</tr>'+'</table>'+'</div>';D.getElementById('options').innerHTML=z;}
function camp(){if(g.view==="Game"){if(my.hardcoreMode==='true'&&my.hp<=0){}else{if(mobsFound()===true){Error(("You cannot camp during a battle!"));return;}}
window.onbeforeunload=null;campStatus=true;QMsg("Saving Game... Please Wait");saveButtonPositions();saveGame();if(location.protocol==="http:"){T.delayedCall(1,function(){location.reload();});}}}
$(document).ready(function(){$("#mobPic0,#mobPic1,#mobPic2,#mobPic3,#mobPic4").on('click',function(){if(paused===true){return;}
if(confuseStatus===true){Chat("You cannot change targets while confused.");return;}
if(g.blindStatus===0){Chat("You cannot change targets while lost in a Globe of Darkness.");return;}
var drawHp=false;var oldTGT=TGT;var foo=this.id;var kek=parseInt(foo.slice(-1));TGT=kek;if(mobsFound()===false){if(kek===2){myAttack.kill();myAttack2.kill();myAttack=T.delayedCall(0,getDamage);myAttack2=T.delayedCall(0,getDamage2);autoAttackTimer(0);attackOn(true);return;}}
if(TGT===oldTGT){drawHp=true;if(my.job==="Warrior"){avengingStrike();}else if(my.job==="Monk"){tigerStrike();}else if(my.job==="Rogue"){shadowStrike();}else if(my.job==="Paladin"){purge();}else if(my.job==="Shadow Knight"){crescentCleave();}else if(my.job==="Ranger"){rapidShot();}else if(my.job==="Bard"){chordsOfDissonance();}else if(my.job==="Druid"){starfire();}else if(my.job==="Cleric"){smite();}else if(my.job==="Shaman"){frostStrike();}else if(my.job==="Necromancer"){boneSpirit();}else if(my.job==="Enchanter"){chaosFlux();}else if(my.job==="Magician"){lavaBolt();}else if(my.job==="Wizard"){iceBolt();}}
if(mob[TGT].name===""){TGT=oldTGT;return;}
updateTargetedMob(drawHp);});});function tabTarget(){var x=countMobs();if(x===0){return;}
if(g.blindStatus===0){Chat("You cannot change targets while lost in a Globe of Darkness.");return;}
if(confuseStatus===true){return;}
TGT++;if(TGT>4){TGT=0;}
if(mob[TGT].name){updateTargetedMob();}else{targetNextMob();}}
function targetNextMob(){var x=countMobs();if(x===0){return;}
TGT++;if(TGT>4){TGT=0;}
if(x===1){if(mob[TGT].name){updateTargetedMob();}else{targetNextMob();}}else{if(mob[TGT].name&&!mob[TGT].charmStatus){updateTargetedMob();}else{targetNextMob();}}}
function targetLastMob(){var x=countMobs();if(x<1){return;}
TGT--;if(TGT<0){TGT=4;}
if(x===1){if(mob[TGT].name){updateTargetedMob();}else{targetLastMob();}}else{if(mob[TGT].name&&!mob[TGT].charmStatus){updateTargetedMob();}else{targetLastMob();}}}
function updateTargetedMob(drawHp){CStat();for(var i=0;i<=4;i++){if(i!==TGT){MOBNAME[i].style.color='#00FA9A';MOBSHADOW[i].src="//i.imgur.com/7bn79bN.png";}}
if(g.autoAttackStatus===0){MOBNAME[TGT].style.color="#f33";MOBSHADOW[TGT].src="//i.imgur.com/fnHtalN.png";}else{MOBNAME[TGT].style.color="#ff0";}
NG.mobName.textContent=mob[TGT].name;NG.mobLevel.textContent=mob[TGT].level;hideMobIcons();D.getElementById("mobIcons"+TGT).style.display="block";var c1="ui-draggable";if(mob[TGT].rare===0){NG.mobBar.className=c1;NG.mobPlate.src="images1/rarePlate.png";NG.mobPlate.className="nameplateGold";}else if(mob[TGT].rare===2){NG.mobBar.className=c1;NG.mobPlate.src="images1/championPlate.png";NG.mobPlate.className="nameplateBlue";}else if(mob[TGT].rare===3){NG.mobBar.className=c1;NG.mobPlate.src="images1/bossPlate.png";NG.mobPlate.className="nameplateRed";}else if(mob[TGT].rare===1){NG.mobBar.className=c1;NG.mobPlate.src="images1/normalPlate.png";NG.mobPlate.className="nameplateBlack";}
NG.mobTraits.innerHTML=mob[TGT].traits;if(!drawHp){g.drawMonsterHp(TGT,true);}
if(my.job==="Warrior"){checkDecisiveBlow();}}
function updateCitySlot(Slot){$("#inv"+Slot).attr("src","//"+itemSprite);if(P.item[Slot]!==undefined){if(P.item[Slot].name){$("#inv"+Slot).css({"left":P.item[Slot].xPos,"top":P.item[Slot].yPos});}else{$("#inv"+Slot).attr("src","images1/blank.png");}}}
$(window).on('blur',function(){if(enteredWorld===true&&location.protocol==="http:"&&mobsFound()===false){saveGame();}
ttTimer.kill();NG.tooltip.style.visibility="hidden";});$(window).on('focus',function(){if(location.protocol==='http:'){if(my.hardcoreMode==="true"){var zig=localStorage.getItem("HCbank4");if(zig){P.bank=JSON.parse(zig);if(enteredWorldOnce===true){updateBank();}}}else{var zig=localStorage.getItem("bank4");if(zig){P.bank=JSON.parse(zig);if(enteredWorldOnce===true){updateBank();}}}
setEquipValues();if(cityStatus===true){for(var i=24;i<=43;i++){updateCitySlot(i);}}}else{checkSessionActive();}});function setDragFlash(that){function flashThis(that,toggleStatus){if(toggleStatus===true){that.style.border="2px solid #f00";toggleStatus=false;flashingBorderTimer=T.delayedCall(.15,function(){flashThis(that,toggleStatus);});}else{that.style.border="2px solid #900";toggleStatus=true;flashingBorderTimer=T.delayedCall(.15,function(){flashThis(that,toggleStatus);});}}
var toggleStatus=true;flashingBorderTimer.kill();flashThis(that,toggleStatus);}
function dropOk(){if(itemSwapCount>0){return false;}
var _drID=dragID;var _dpID=dropID;var x=$("#"+_drID);var y=$("#"+_dpID);var swap=false;var eqD=P.eq[dragSlot];var eqd=P.eq[dropSlot];var itD=P.item[dragSlot];var itd=P.item[dropSlot];if(y.hasClass("bank")){swap=false;if(x.hasClass("inventory")||dragID.indexOf("bank")===0){swap=true;}}else if(y.hasClass("inventory")){if(x.hasClass("equipment")){if(_drID==="helmet"){if(itd.itemSlot==="helmet"){swap=true;}}
if(_drID==="neck"){if(itd.itemSlot==="neck"){swap=true;}}
if(_drID==="ring1"||_drID==="ring2"){if(itd.itemSlot==="ring"){swap=true;}}
if(_drID==="shoulders"){if(itd.itemSlot==="shoulders"){swap=true;}}
if(_drID==="back"){if(itd.itemSlot==="back"){swap=true;}}
if(_drID==="chest"){if(itd.itemSlot==="chest"){swap=true;}}
if(_drID==="bracers"){if(itd.itemSlot==="bracers"){swap=true;}}
if(_drID==="gloves"){if(itd.itemSlot==="gloves"){swap=true;}}
if(_drID==="belt"){if(itd.itemSlot==="belt"){swap=true;}}
if(_drID==="legs"){if(itd.itemSlot==="legs"){swap=true;}}
if(_drID==="boots"){if(itd.itemSlot==="boots"){swap=true;}}
if(eqD.itemSlot==="shield"&&(itd.type==="slashed"||itd.type==="crushed"||itd.type==="pierced")){swap=true;}
if(eqD.itemSlot==="weapons"&&itd.itemSlot===""){swap=true;}
if(eqD.itemSlot==="shield"&&itd.itemSlot==="shield"){swap=true;}
if(eqD.itemSlot==="shield"&&itd.itemSlot===""){swap=true;}
if(eqD.itemSlot==="range"&&itd.itemSlot===""){swap=true;}
if((eqD.type==="smashed"||eqD.type==="staff"||eqD.type==="cleaved")&&(itd.type==="smashed"||itd.type==="staff"||itd.type==="cleaved")){swap=true;}
if((eqD.type==="crushed"||eqD.type==="pierced"||eqD.type==="slashed")&&itd.itemSlot==="shield"&&_drID==="weapon2"){swap=true;}
if(eqD.type==="range"&&itd.type==="range"){swap=true;}
if(_drID==="weapon1"&&(itd.type==="slashed"||itd.type==="crushed"||itd.type==="pierced")){swap=true;}
if(_drID==="weapon1"&&!P.eq[13].name&&itd.itemSlot==="weapons"){swap=true;}
if(_drID==="weapon2"&&(eqD.type==="slashed"||eqD.type==="crushed"||eqD.type==="pierced")&&(itd.type==="slashed"||itd.type==="crushed"||itd.type==="pierced")){swap=true;}
if((eqD.type==="crushed"||eqD.type==="pierced"||eqD.type==="slashed")&&itd.type==="shield"&&_drID==="weapon1"){swap=false;}
if(my.dualWield<1&&eqD.itemSlot==="shield"&&itd.itemSlot!=="shield"){swap=false;}}
if(!itd.name){swap=true;}
if(x.hasClass("inventory")){swap=true;}
if(x.hasClass("bank")){swap=true;}}else if(y.hasClass("equipment")){if(_dpID==="helmet"){if(x.hasClass("inventory")&&itD.itemSlot==="helmet"){swap=true;}}
if(_dpID==="neck"){if(x.hasClass("inventory")&&itD.itemSlot==="neck"){swap=true;}}
if(_dpID==="ring1"||_dpID==="ring2"){if(x.hasClass("inventory")&&itD.itemSlot==="ring"){swap=true;}
if(x.hasClass("equipment")&&eqD.itemSlot==="ring"){swap=true;}}
if(_dpID==="shoulders"){if(x.hasClass("inventory")&&itD.itemSlot==="shoulders"){swap=true;}}
if(_dpID==="back"){if(x.hasClass("inventory")&&itD.itemSlot==="back"){swap=true;}}
if(_dpID==="chest"){if(x.hasClass("inventory")&&itD.itemSlot==="chest"){swap=true;}}
if(_dpID==="bracers"){if(x.hasClass("inventory")&&itD.itemSlot==="bracers"){swap=true;}}
if(_dpID==="gloves"){if(x.hasClass("inventory")&&itD.itemSlot==="gloves"){swap=true;}}
if(_dpID==="belt"){if(x.hasClass("inventory")&&itD.itemSlot==="belt"){swap=true;}}
if(_dpID==="legs"){if(x.hasClass("inventory")&&itD.itemSlot==="legs"){swap=true;}}
if(_dpID==="boots"){if(x.hasClass("inventory")&&itD.itemSlot==="boots"){swap=true;}}
if(_dpID==="weapon1"){if(x.hasClass("inventory")&&itD.itemSlot==="weapons"){swap=true;}
if(x.hasClass("equipment")&&eqD.itemSlot==="weapons"){swap=true;if(eqD.itemSlot==="shield"){swap=false;}}
if(x.hasClass("inventory")){if((itD.type==="cleaved"||itD.type==="smashed"||itD.type==="staff")&&!P.eq[13].name){swap=true;}
if((itD.type==="cleaved"||itD.type==="smashed"||itD.type==="staff")&&P.eq[13].name){swap=false;}}}
if(_dpID==="weapon2"){if(x.hasClass("inventory")&&itD.itemSlot==="weapons"&&my.dualWield>=1){swap=true;}
if(x.hasClass("inventory")&&itD.itemSlot==="shield"){swap=true;}
if(x.hasClass("equipment")&&eqD.itemSlot==="weapons"&&my.dualWield>=1){swap=true;}
if(eqd.itemSlot==="shield"){swap=false;}
if(eqd.itemSlot==="shield"&&itD.itemSlot==="shield"){swap=true;}
if((itD.type==="slashed"||itD.type==="crushed"||itD.type==="pierced")&&eqd.itemSlot==="shield"){swap=true;}
if(x.hasClass("equipment")&&(eqD.type==="smashed"||eqD.type==="staff"||eqD.type==="cleaved")){swap=false;}
if(itD.type==="smashed"||itD.type==="staff"||itD.type==="cleaved"){swap=false;}
if(itD.itemSlot==="shield"&&(P.eq[12].type==="smashed"||"staff"===P.eq[12].type||P.eq[12].type==="cleaved")){swap=false;}
if(itD.itemSlot==="weapons"){if(P.eq[12].type==="smashed"||"staff"===P.eq[12].type||P.eq[12].type==="cleaved"){swap=false;}
if(itD.type==="smashed"||itD.type==="staff"||itD.type==="cleaved"){swap=false;}}
if(my.dualWield<1&&P.eq[13].itemSlot==="shield"&&itD.itemSlot!=="shield"){swap=false;}}
if(_dpID==="range"){if(x.hasClass("inventory")&&itD.itemSlot==="range"){swap=true;}}
if(itD.req>my.level){return"level";}}
return swap;}
function swapItems(){if(buyMode===true||merchantMode===true||(classDrag==="inventory"&&dragSlot>23)){cancelDragging();cityMenuClick();QMsg("You cannot sort items while shopping at the merchant.");return;}
cacheClassDrag=classDrag;cacheClassDrop=classDrop;cacheDragSlot=dragSlot;cacheDropSlot=dropSlot;cacheDragID=dragID;cacheDropID=dropID;if(classDrop==="inventory"){for(var x in dragged[0]){dragged[1][x]=P.item[dropSlot][x];}
for(var x in dragged[0]){P.item[dropSlot][x]=dragged[0][x];}}
if(classDrop==="equipment"){for(var x in dragged[0]){dragged[1][x]=P.eq[dropSlot][x]}
for(var x in dragged[0]){P.eq[dropSlot][x]=dragged[0][x];}}
if(classDrop==="bank"){for(var x in dragged[0]){dragged[1][x]=P.bank[dropSlot][x]}
for(var x in dragged[0]){P.bank[dropSlot][x]=dragged[0][x];}}
if(classDrag==="inventory"){for(var x in dragged[0]){P.item[dragSlot][x]=dragged[1][x];}}
if(classDrag==="equipment"){for(var x in dragged[0]){P.eq[dragSlot][x]=dragged[1][x];}}
if(classDrag==="bank"){for(var x in dragged[0]){P.bank[dragSlot][x]=dragged[1][x];}}
if(P.eq[12].type===""){P.eq[12].type="punched";updatePunchDamage();}
if(P.eq[13].type===""&&dualWieldTotal()>=1){P.eq[13].type="punched";updatePunchDamage();}
if(P.eq[14].damage<1){P.eq[14].damage=1;}
if(P.eq[14].delay<1||P.eq[14].delay>30000){P.eq[14].delay=30000;}
function convertType(x){if(x==='equipment'){x='eq';}else if(x==='inventory'){x='item';}
return x;}
var itemDragType=convertType(classDrag);var itemDropType=convertType(classDrop);if(location.protocol==='https:'){NG.ttItem.style.display='none';save.itemSwap(itemDragType,dragSlot,itemDropType,dropSlot);}else{if(classDrag==="equipment"||classDrop==="equipment"){save.eq();}
if(classDrag==="inventory"||classDrop==="inventory"){save.item();}
if(classDrag==="bank"||classDrop==="bank"){save.bank();}
finishItemSwap();}}
function updateInvDrag(Slot){var e=document.getElementById('inv'+Slot);if(e!==null){if(P.item[Slot].name){e.src="//"+itemSprite;e.style.left=P.item[Slot].xPos+'px';e.style.top=P.item[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function updateInvDrop(Slot){var e=document.getElementById('inv'+Slot);if(e!==null){if(P.item[Slot].name){e.src="//"+itemSprite;e.style.left=P.item[Slot].xPos+'px';e.style.top=P.item[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function updateEqDrag(id,Slot){var e=document.getElementById(id);if(e!==null){if(P.eq[Slot].name){e.src="//"+itemSprite;e.style.left=P.eq[Slot].xPos+'px';e.style.top=P.eq[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function updateEqDrop(id,Slot){var e=document.getElementById(id);if(e!==null){if(P.eq[Slot].name){e.src="//"+itemSprite;e.style.left=P.eq[Slot].xPos+'px';e.style.top=P.eq[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function updateBankDrag(Slot){var e=document.getElementById("bank"+Slot);if(e!==null){if(P.bank[Slot].name){e.src="//"+itemSprite;e.style.left=P.bank[Slot].xPos+'px';e.style.top=P.bank[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function updateBankDrop(Slot){var e=document.getElementById("bank"+Slot);if(e!==null){if(P.bank[Slot].name){e.src="//"+itemSprite;e.style.left=P.bank[Slot].xPos+'px';e.style.top=P.bank[Slot].yPos+'px';}else{e.src="images1/blank.png";}}}
function finishItemSwap(){if(cacheClassDrag==="equipment"){updateEqDrag(cacheDragID,cacheDragSlot);}
if(cacheClassDrag==="inventory"){updateInvDrag(cacheDragSlot);}
if(cacheClassDrag==="bank"){updateBankDrag(cacheDragSlot);}
if(cacheClassDrop==="equipment"){updateEqDrop(cacheDropID,cacheDropSlot);}
if(cacheClassDrop==="inventory"){updateInvDrop(cacheDropSlot);}
if(cacheClassDrop==="bank"){updateBankDrop(cacheDropSlot);}
if(cacheClassDrag==='equipment'||cacheClassDrop==='equipment'){setEquipValues();g.maxHpFunct();g.maxMpFunct();g.drawMyHp();g.drawMyMp();loadWeaponSlashes();loadProcImage();highestElement=setHighestElement();setMinimumWeaponSpeed();normalizedDamage();dualWieldBonus=setDualWieldBonus();shieldBlockChance=setShieldBlockChance();CStat();}
refreshTooltipDrop($("#"+cacheDragID));}
function upgradeMsgUpdate(){function upgradeCost(){var x=P.item[dragSlot].upgrade+1;var type="armor";if(P.item[dragSlot].itemSlot==="weapons"||P.item[dragSlot].type==="offhand"){type="weapon";}
var G=25;if(x===2){G=50;}else if(x===3){G=100;}else if(x===4){G=200;}else if(x===5){G=400;}else if(x===6){G=750;}else if(x===7){G=1250;}else if(x===8){G=2000;}else if(x===9){G=3000;}else if(x===10){G=5000;}
if(type==="weapon"){G*=2;}
return G;}
cost=upgradeCost();itemUpgradeMode=true;var x=P.item[dragSlot].upgrade;var risk="Success is guaranteed!"
if(x===10){risk="This item is fully upgraded! Congratulations!";}
$("#upgradeConfirm2").html("Attempt to upgrade "+logItemName(P.item[dragSlot].name,P.item[dragSlot].rarity)+" for "+cost+" gold?<br><br>"+risk);}
$(function(){$("#gameView").on('click','#destroyItem',function(){playAudio('button_2');if(dragID===""){Error("You must select an item to destroy.");return;}
if(GLB.ks<=6){if(GLB.fastDestroy==="Off"){if(this.textContent==="Destroy"){this.textContent="CONFIRM?";return;}}}
if($("#"+dragID).hasClass("inventory")===true){destroyItem();if(GLB.ks>=7){this.textContent="Sell";}else{this.textContent="Destroy";}}else{Error("You can only destroy items in your inventory.");cancelDragging();}});});function destroyItem(){cancelDragging();if(GLB.ks>=7){function writeGold(){my.gold+=kek;if(my.gold>999999999){my.gold=999999999;}
$('#cityGold').html("<div id='goldIcon' class='goldIcon'></div> "+my.gold);$('#inventoryGoldAmount').text(my.gold);CStat();}
var kek=itemSellValue(dragSlot);playAudio("buyitem");var baz=logItemName(P.item[dragSlot].name,P.item[dragSlot].rarity);Chat(('You sold '+baz+' for '+kek+' gold.'),5);if(location.protocol==='https:'){$.ajax({url:'php/town1.php',data:{run:"sellItem",cost:kek,name:my.name}}).done(function(data){writeGold();});}else{writeGold();}}
Chat("You destroyed "+logItemName(P.item[dragSlot].name,P.item[dragSlot].rarity)+".");for(var x=0,len=g.key.length;x<len;x++){P.item[dragSlot][g.key[x]]=g.val[x];}
updateInvDrag(dragSlot);save.item(dragSlot);NG.ttItem.style.display='none';}
function destroyAllItems(){Chat("You destroyed everything! You monster!");for(var i=0;i<=23;i++){for(var x=0,len=g.key.length;x<len;x++){P.item[i][g.key[x]]=g.val[x];if(location.protocol==="https:"){save.item(i);}}}
updateInventory();if(location.protocol==="http:"){save.item();}}
function resurrectMe(){$("#deathScreen").css("display","none");setCurtainColor('#ffff99');spellCurtain.alpha=.7;T.to(spellCurtain,3,{alpha:0,ease:ez.Qin});$("#mobBar").css("visibility","hidden");if(my.job==="Warrior"||my.job==="Monk"||my.job==="Rogue"){my.mp=0;}
g.maxHpFunct();g.maxMpFunct();my.hp=~~(my.maxHp/2);my.mp=0;g.drawMyHp();g.drawMyMp();Mname="";NG.mobTraits.innerHTML="";for(var i=0;i<=4;i++){mob[i].name="";mob[i].ID=0;mob[i].attackStatus=1;hideMob(i);MOBNAME[i].innerHTML='';}
drawExpBar();QMsg("You have been resurrected!");QMsg("You lost "+g.lostGold+" gold.");Chat("You lost "+g.lostGold+" gold.",2);if(g.lostExp>0){QMsg("You lost "+g.lostExp+" experience!");Chat("You lost "+g.lostExp+" experience!",2);}
CStat();myHpTick.restart();myMpTick.restart();resetBosses();stopMusic();if(g.showPortal){makePortal();}}
function checkZoneCombo(){var Z=myZone();var cr=comboRating;if(Z==="Galeblast Fortress"){if(cr>my.comboPermafrost){my.comboPermafrost=cr;}}
if(Z==="Viston's Redoubt"){if(cr>my.comboKedgeKeep){my.comboKedgeKeep=cr;}}
if(Z==="Ashenflow Peak"){if(cr>my.comboSolB){my.comboSolB=cr;}}
if(Z==="Fahlnir Citadel"){if(cr>my.comboMistmoore){my.comboMistmoore=cr;}}
if(Z==="Kordata Ruins"){if(cr>my.comboLowerGuk){my.comboLowerGuk=cr;}}
if(Z==="Temple of Prenssor"){if(cr>my.comboCazicThule){my.comboCazicThule=cr;}}
if(Z==="Dire Sanctum"){if(cr>my.comboPlaneofHate){my.comboPlaneofHate=cr;}}
if(Z==="Nimgaul"){if(cr>my.comboPlaneofFear){my.comboPlaneofFear=cr;}}
if(cr>my.comboOverall){my.comboOverall=cr;}}
function positionMap(x,d){if(!d){d=1;}
if(x===undefined){x=myZone();d=0;}
var a=[0];var b=[];if(x==="Edenburg"){a=[5];}
if(x==="Salubrin Forest"){a=[30];b=[360,200];}
if(x==="Tendolin Meadows"){a=[50];b=[300,310];}
if(x==="Greenthorn Cavern"){a=[70];b=[360,430];}
if(x==="Riven Grotto"){a=[100];b=[450,480];}
if(x==="Lanfeld Outpost"){a=[150];b=[500,560];}
if(x==="Aspen Grove"){a=[180];}
if(x==="Braxxen's Bastille"){a=[220];b=[565,760];}
if(x==="Kordata Marshlands"){a=[200];b=[455,670];}
if(x==="Arcturin's Crypt"){a=[250];b=[460,830];}
if(x==="Artremia"){a=[300];}
if(x==="Fahlnir Citadel"){a=[290];b=[360,990];}
if(x==="Kordata Ruins"){a=[220];b=[340,740];}
if(x==="Temple of Prenssor"){a=[200];b=[240,660];}
if(x==="Fenwoven"){a=[320];}
if(x==="Viston's Redoubt"){a=[335];b=[265,1095];}
if(x==="Galeblast Fortress"){a=[342];b=[130,1040];}
if(x==="Ashenflow Peak"){a=[350];b=[80,1130];}
if(x==="Dire Sanctum"){a=[355];b=[40,1135];}
if(x==="Nimgaul"){a=[355];b=[20,1150];}
var showZoneName=false;var e1=D.getElementById('zoneMarker');showZoneName=true;if(x==="Edenburg"||x==="Aspen Grove"||x==="Artremia"||x==="Fenwoven"){e1.innerHTML='';showZoneName=false;}
if(x===e1.textContent){showZoneName=false;}
if(showZoneName===true){e1.innerHTML='';var aniZone=spanify(x);e1.innerHTML=aniZone;T.staggerFromTo('.aniSpan',.35,{opacity:0},{force3D:"auto",ease:ez.lin,opacity:1},.02);T.staggerTo('.aniSpan',.1,{delay:.35,color:'#ffd700',textShadow:'0 0 15px #ffd700, 0 0 8px #ffd700, 0 0 4px #ffd700, 0 0 2px #ffd700,0 0 1px #ffd700',force3D:"auto",ease:ez.Qin,onComplete:function(){T.to((this.target),.1,{force3D:"auto",color:'#333311',textShadow:'1px 0 #aa6, 0 1px #aa6, -1px 0 #aa6, 0 -1px #aa6'});}},.03);e1.style.top=b[0]+'px';e1.style.left=b[1]+'px';}
T.to('#NGmap',1.5,{left:a[0]*-1});}
function tweeter(boss){if(typeof(twttr)==='object'){if(!boss){boss="Chief Grimden";}
var e=document.getElementById('tweetIt');T.fromTo(e,1.5,{top:-25},{delay:1,top:10,ease:ez.Bout});T.delayedCall(9,function(){T.to(e,1.5,{top:-25,ease:ez.Bin,onComplete:function(){e.innerHTML='';}});});var df=diff();twttr.widgets.createShareButton('https://nevergrind.com',document.getElementById('tweetIt'),{hashtags:'indiegame, rpg, games, gamedev',count:'none',size:'large',via:'NeverworksGames',text:'I just defeated '+boss+' in Nevergrind!'});QMsg("Share your achievement!");}}
function supportsAudio(){var a=D.createElement('audio');return!!(a.canPlayType&&a.canPlayType('audio/mpeg;').replace(/no/,''));}
$("#gameView").on('mouseenter','.buttons, .NCbuttons, .nonglobal, .allskill',function(){var ind=$("#window3a li:visible").index($(this))+1;var specialKey='<div id="tooltipButton">Hotkey: [ ';if(ind>=11){specialKey+="Shift ";ind-=10;}
if(ind===10){ind=0;}
ind=ind+'';var id=this.id;if(id==="addmonsterId"){ind="D";}else if(id==="toggleattackId"){ind="A";}else if(id==="runId"){specialKey+="Shift ";ind="S";}else if(id==="halflinghideId"||id==="secondwindId"||id==="divineaegisId"||id==="ancestralrampageId"||id==="tunaresglowId"||id==="karanasinfusionId"||id==="sanguinetormentId"||id==="granitevisageId"||id==="shortcircuitId"){ind="S";}
hotkeyTimer.kill();hotkeyTimer=T.delayedCall(.25,function(){var txt=NG.tooltipmsg.innerHTML;NG.tooltipmsg.innerHTML=yellow(specialKey+ind+" ]</div>")+txt;});});$(document).on('keyup',function(e){if(inputFocus===false){if(g.view==="Game"||g.view==="Intro"){if(e.keyCode===32){cancelMySpell();return false;}}
if(g.view==="Game"&&!goldTransferMode){if((e.keyCode>=49&&e.keyCode<=57)||e.keyCode===48){if(castingSpell===0){return false;}
var w=$("#window3a li:visible");if(!e.shiftKey&&!e.ctrlKey){if(e.keyCode===49){var z=w.eq(0).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===50){var z=w.eq(1).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===51){var z=w.eq(2).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===52){var z=w.eq(3).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===53){var z=w.eq(4).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===54){var z=w.eq(5).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===55){var z=w.eq(6).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===56){var z=w.eq(7).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===57){var z=w.eq(8).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===48){var z=w.eq(9).attr("id");g[JOB.SkillMap](z);return false;}}else if(e.shiftKey){if(e.keyCode===49){var z=w.eq(10).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===50){var z=w.eq(11).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===51){var z=w.eq(12).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===52){var z=w.eq(13).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===53){var z=w.eq(14).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===54){var z=w.eq(15).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===55){var z=w.eq(16).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===56){var z=w.eq(17).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===57){var z=w.eq(18).attr("id");g[JOB.SkillMap](z);return false;}else if(e.keyCode===48){var z=w.eq(19).attr("id");g[JOB.SkillMap](z);return false;}}}
if(NG.ttItem.style.display==='block'){refreshTooltipDrop(hoverID);}}}});$(document).on('keydown',function(e){if(g.view==="Game"){if(inputFocus===false){if(e.shiftKey&&!e.CtrlKey){if(NG.ttItem.style.display==='block'){if(hoverClass==='inventory'||hoverClass==="bank"){if(hoverType==="helmet"){refreshTooltipDrop($("#helmet"),true);}else if(hoverType==="neck"){refreshTooltipDrop($("#neck"),true);}else if(hoverType==="ring"){refreshTooltipDrop($("#ring1"),true);}else if(hoverType==="shoulders"){refreshTooltipDrop($("#shoulders"),true);}else if(hoverType==="back"){refreshTooltipDrop($("#back"),true);}else if(hoverType==="chest"){refreshTooltipDrop($("#chest"),true);}else if(hoverType==="bracers"){refreshTooltipDrop($("#bracers"),true);}else if(hoverType==="gloves"){refreshTooltipDrop($("#gloves"),true);}else if(hoverType==="belt"){refreshTooltipDrop($("#belt"),true);}else if(hoverType==="legs"){refreshTooltipDrop($("#legs"),true);}else if(hoverType==="boots"){refreshTooltipDrop($("#boots"),true);}else if(hoverType==="weapons"){refreshTooltipDrop($("#weapon1"),true);}else if(hoverType==="shield"){refreshTooltipDrop($("#weapon2"),true);}else if(hoverType==="range"){refreshTooltipDrop($("#range"),true);}}}}
if(e.keyCode===81){if(!nameFocus){questToggle();}}
if(e.ctrlKey&&e.keyCode===65){if(!nameFocus){return false;}}
if(e.keyCode===68){if(g.view==="Game"){if(!nameFocus){addMonster();}}}
if(e.ctrlKey&&e.keyCode===65&&attackStatus!==0){if(!nameFocus){return false;}}
if(!e.shiftKey&&!e.ctrlKey&&e.keyCode===65){if(!nameFocus){toggleAutoAttackStatus();}}
if(e.shiftKey&&e.keyCode===65){if(!nameFocus){togglePetAutoAttackStatus();}}
if(e.ctrlKey&&e.keyCode===87){return false;}
if(e.ctrlKey&&e.keyCode===49){return false;}
if(e.ctrlKey&&e.keyCode===50){return false;}
if(e.ctrlKey&&e.keyCode===51){return false;}
if(e.ctrlKey&&e.keyCode===52){return false;}
if(e.ctrlKey&&e.keyCode===53){return false;}
if(e.shiftKey&&e.keyCode===82){if(!nameFocus){run();return false;}}
if(!e.shiftKey&&e.keyCode===82){if(!nameFocus){if(chatReply!==''){if(inputFocus===false){inputFocus=true;$("#chatLog").css('bottom',26);$("#chatInput").css('display','block').focus();}
$("#chatInput").val("/w "+chatReply+" ").focus();}
return false;}}
if(e.keyCode===83){if(!nameFocus){executeRacialSkill();return false;}}
if(!e.shiftKey&&e.keyCode===9){if(countMobs()===0){return false;}
if(g.blindStatus===0){Chat("You cannot change targets while lost in a Globe of Darkness.");return false;}
if(confuseStatus===true){return false;}
targetNextMob();return false;}
if(e.shiftKey&&e.keyCode===9){if(countMobs()===0){return false;}
if(g.blindStatus===0){Chat("You cannot change targets while lost in a Globe of Darkness.");return false;}
if(confuseStatus===true){return false;}
targetLastMob();return false;}
if(nameFocus===false){if(e.keyCode===88){optionsToggle();}
if(e.keyCode===67){charToggle();}
if(e.keyCode===73||e.keyCode===71||e.keyCode===70||e.keyCode===69){inventory();}
if(e.keyCode===66||e.keyCode===86){bankToggle();}
if(e.keyCode===77||e.keyCode===90){travelToggle();}
if(e.keyCode===84){showTalents(true);}}}}
if(e.keyCode===27){if(inputFocus){chatClose();}else{if(paused===false){pauseGame();}else{unpauseGame();}}}
if(e.keyCode===13){if(enteredWorld===false){if(focusPassword===true&&loginMode==="login"){authenticate();}
if(focusPasswordVerify===true&&loginMode==="create"){createAccount();}}}
if(enteredWorld===true){if(e.keyCode===13||e.keyCode===191){if(inputFocus===false){if(!nameFocus){inputFocus=true;$("#chatLog").css('bottom',26);$("#chatInput").css('display','block').focus();}}else{if(e.keyCode!==191){chatClose();var e=$("#chatInput");var x=e.val();if(x.length>0){if(x[0]==="/"){if(x.indexOf('/who')===0){var job='';var name='';if(x.length>5){name=x.split(" ");if(name[2]!==undefined){var name2=name[2].toLowerCase();}
name=name[1].toLowerCase();if(name==="warrior"){job="warrior";name='';}else if(name==="monk"){job="monk";name='';}else if(name==="rogue"){job="rogue";name='';}else if(name==="paladin"){job="paladin";name='';}else if(name==="ranger"){job="ranger";name='';}else if(name==="shadow"&&name2==="knight"){job="shadow knight";name='';}else if(name==="bard"){job="bard";name='';}else if(name==="druid"){job="druid";name='';}else if(name==="cleric"){job="cleric";name='';}else if(name==="shaman"){job="shaman";name='';}else if(name==="necromancer"){job="necromancer";name='';}else if(name==="enchanter"){job="enchanter";name='';}else if(name==="magician"){job="magician";name='';}else if(name==="wizard"){job="wizard";name='';}}
chatWho(name,job);}else if(x.indexOf('/camp')===0){camp();}else if(x.indexOf('/help')===0){var x="<div><b><u>Chat Commands:</u></b></div>"+"<div>[url][/url] : embed hyperlink</div>"+"<div>[img][/img] : embed image</div>"+"<div>/who : display all players online</div>"+"<div>/who warrior : display all warriors</div>"+"<div>/who Bob : display Bob's information</div>"+"<div>/w Bob : send Bob a private message</div>"+"<div>/camp : exit the game</div>";Chat2(x,3);}else if(x.indexOf('/system ')===0){x=x.replace('/system ','');chatInsert(x,my.name,'',8);}else if(x.indexOf('/event ')===0){x=x.replace('/event ','');chatInsert(x,my.name,'',0);}else if(x.indexOf('/ban ')===0){x=x.replace('/ban ','');chatBan(x);}else if(x.indexOf('/suspend ')===0){x=x.replace('/suspend ','');chatSuspend(x);}else if(x.indexOf('/active ')===0){x=x.replace('/active ','');chatActive(x);}else if(x.indexOf('/w ')===0){x=x.replace('/w ','');var a=x.split(" ");var to=a[0].charAt(0).toUpperCase()+a[0].slice(1);var name=a[0].toLowerCase();a.shift();var msg=a.join(" ");chatInsert(msg,my.name,name,7);Chat2("To ["+to+"]: "+msg,7);}}else{chatInsert(x,my.name,'',6);}
e.val('');}}}}}
if(e.keyCode===32){if(inputFocus===false){return false;}}
if(e.ctrlKey){if(e.keyCode>=54&&e.keyCode<=56){return false;}}});function chatInit(){$.ajax({url:'php/chat.php',data:{run:"chatInit"}}).done(function(data){chatRow=data*1;}).always(function(){setTimeout(function(){chatUpdate();},1000);});}
function chatUpdate(){$.ajax({url:'php/chat.php',data:{run:"chatUpdate",chatRow:chatRow}}).done(function(data){var a=data.split("|");a.pop();var loops=a.length / 8;for(var i=0;i<loops;i++){chatRow=a.shift()*1;var GM=a.shift()*1;var GMstr='';if(GM){GMstr="*GM ";}
var msg=a.shift();var from=a.shift();var to=a.shift();var color=a.shift()*1;var level=a.shift()*1;var job=a.shift();job=job.replace(' ','');if(to!==''){if(to===my.name.toLowerCase()){if(from!==my.name){chatReply=from;Chat2(GMstr+"["+from+"] whispers: "+msg,color);}}}else{if(color===6){Chat2(GMstr+"[<span class='white'>"+level+"</span>:<span class='"+job+"-chat'>"+from+"</span>]: "+msg,color);}else{Chat2(msg,color);}}}}).always(function(){setTimeout(function(){chatUpdate();},1000);});}
function chatActive(account){$.ajax({url:'php/chatAdmin.php',data:{run:"chatActive",account:account}});}
function chatBan(account){$.ajax({url:'php/chatAdmin.php',data:{run:"chatBan",account:account}});}
function chatSuspend(account){$.ajax({url:'php/chatAdmin.php',data:{run:"chatSuspend",account:account}});}
function chatInsert(msg,from,to,color){if(color===undefined){color=6;}
if(to===undefined){to='';}
$.ajax({url:'php/chatWrite1.php',data:{run:"chatInsert",msg:msg,nameFrom:my.name,nameTo:to,color:color,level:my.level,job:my.job}});}
function chatWho(name,job){$.ajax({url:'php/chat.php',data:{run:"chatWho",name:name,job:job}}).done(function(data){var a=data.split("|");a.pop();var loops=~~(a.length / 6);var z="<div style='white-space:nowrap'>==============================================</div>";var word='people';if(loops===1){word='person';}
var x=z;for(var i=0;i<loops;i++){var level=a.shift();var job=a.shift();var name=a.shift();var hardcoreMode=a.shift();var account=a.shift();var zone=a.shift();var urlName=name.replace(/'/g,'%27');var color="";if(hardcoreMode==='true'){color=" style='color:#ff3a3a'";}
x+="<div"+color+">["+level+" "+job+"] <a target='_blank' style='color:#68c3ff' href='//nevergrind.com/nevergrounds/?character="+urlName+"'>"+name+"</a> - "+zone+" *"+account+"</div>";}
if(loops===0){Chat2(x,7);}else{x+="<div>Your query found "+loops+' '+word+' in Vandamor.</div>';Chat2(x,7);}});}
function chatClose(){inputFocus=false;$(".chatLogs").css('bottom',0);$("#chatInput").css('display','none');}
$("input").on("blur",function(){chatClose();});$(document).ready(function(){$("#spellbardiv").on('click',function(){if(enteredWorld===false){return;}
cancelMySpell();});});function updateOptions(){}
$(function(){$("#options").on('click','.lootFilter',function(){playAudio('button_2');var id=this.id;var e=$(this);var v=this.textContent;if(v==="None"){var x="Normal";Lmy[id]=x;e.html(x);}else if(v==="Normal"){var x="Exceptional";Lmy[id]=x;e.html(x);}else if(v==="Exceptional"){var x="All";Lmy[id]=x;e.html(x);}else{var x="None";Lmy[id]=x;e.html(x);}
save.Lmy();}).on('click','#weatherStatus',function(){playAudio('button_2');var kek=$("#weatherStatus");if(kek.html()==="High"){GLB.videoSetting="Medium";kek.html("Medium");}else if(kek.html()==="Medium"){GLB.videoSetting="Low";kek.html("Low");}else if(kek.html()==="Low"){GLB.videoSetting="High";kek.html("High");}
save.GLB();}).on('click','#autoAttackOption',function(){playAudio('button_2');var kek=$("#autoAttackOption");if(kek.html()==="On"){Lmy.autoAttackOption="Off";kek.html("Off");}else{Lmy.autoAttackOption="On";kek.html("On");}
save.GLB();}).on('click','#spamFilter',function(){playAudio('button_2');var kek=$("#spamFilter");if(kek.html()==="On"){GLB.chatMyHit="Off";kek.html("Off");}else{GLB.chatMyHit="On";kek.html("On");}
save.GLB();}).on('click','#showCombatLog',function(){playAudio('button_2');var kek=$("#showCombatLog");if(kek.html()==="On"){GLB.showCombatLog="Off";kek.html("Off");$("#chatId, #combatId").css('display','none');}else{GLB.showCombatLog="On";kek.html("On");$("#chatId, #combatId").css('display','block');}
save.GLB();}).on('click','#debugMode',function(){playAudio('button_2');var kek=$("#debugMode");if(kek.html()==="On"){GLB.debugMode="Off";kek.html("Off");}else{GLB.debugMode="On";kek.html("On");}
save.GLB();}).on('click','#audioUp',function(){GLB.soundStatus+=10;if(GLB.soundStatus>100){GLB.soundStatus=100;}
$("#soundStatus").html(GLB.soundStatus);save.GLB();playAudio('button_2');}).on('click','#audioDown',function(){GLB.soundStatus-=10;if(GLB.soundStatus<=0){GLB.soundStatus=0;}
$("#soundStatus").html(GLB.soundStatus);save.GLB();playAudio('button_2');}).on('click','#audioUp2',function(){GLB.musicStatus+=10;if(GLB.musicStatus>100){GLB.musicStatus=100;}
var x=GLB.musicStatus;D.getElementById('bgmusic').volume=(M.round(((.5*(x/100))*1)*100)/100);D.getElementById('bgamb1').volume=(M.round(((.2*(x/100))*1)*100)/100);D.getElementById('bgamb2').volume=(M.round(((.2*(x/100))*1)*100)/100);$("#musicStatus").html(x);save.GLB();playAudio('button_2');}).on('click','#audioDown2',function(){GLB.musicStatus-=10;if(GLB.musicStatus<=0){GLB.musicStatus=0;}
var x=GLB.musicStatus;D.getElementById('bgmusic').volume=(M.round(((.5*(x/100))*1)*100)/100);D.getElementById('bgamb1').volume=(M.round(((.2*(x/100))*1)*100)/100);D.getElementById('bgamb2').volume=(M.round(((.2*(x/100))*1)*100)/100);$("#musicStatus").html(x);save.GLB();playAudio('button_2');}).on('click','#tooltipStatus',function(){playAudio('button_2');if(GLB.tooltipMode==="Long"){GLB.tooltipMode="Short";$("#tooltipStatus").html("Short");$("#tooltipmsg").css("display","none");}else if(GLB.tooltipMode==="Short"){GLB.tooltipMode="Off";$("#tooltipStatus").html("Off");$("#tooltipmsg").css("display","none");}else if(GLB.tooltipMode==="Off"){GLB.tooltipMode="Long";$("#tooltipStatus").html("Long");$("#tooltipmsg").css("display","block");}
save.GLB();}).on('click','#hideMenu',function(){playAudio('button_2');if(GLB.hideMenu==="Off"){$("#hideMenu").html("On");GLB.hideMenu="On";T.to(D.getElementById('window5Id'),1,{delay:5,opacity:0});}else{$("#hideMenu").html("Off");GLB.hideMenu="Off";T.set(D.getElementById('window5Id'),{opacity:1});}
save.GLB();}).on('click','#fastDestroy',function(){playAudio('button_2');var kek=$("#fastDestroy");if(kek.text()==="On"){GLB.fastDestroy="Off";kek.html("Off");}else{GLB.fastDestroy="On";kek.html("On");}
save.GLB();});});function displayTooltip(pId){if(GLB.tooltipMode!=="Off"){var e=D.getElementById(pId);var halfParentWidth,adjustX,x;if(pId==="mobDetails"){halfParentWidth=e.parentNode.offsetWidth/2;adjustX=halfParentWidth-150;x=e.parentNode.offsetLeft+adjustX;}else{halfParentWidth=e.offsetWidth/2;adjustX=halfParentWidth-150;x=e.offsetLeft+adjustX;}
if(x<30){x=30;}else if(x>950){x=950;}
var y=e.offsetTop;if(pId==="mobDetails"){y=e.parentNode.offsetTop;}
var ttHeight=NG.tooltip.offsetHeight;if(y>340){y-=(10+ttHeight);}else{var parentHeight=0;if(pId==="myhpbardiv"){parentHeight=96;}else if(pId==="mobBar"){parentHeight=50;}else{parentHeight=e.offsetHeight;}
y+=(parentHeight+10);}
if(pId==="window6"){x=60;y=325;}
NG.tooltip.style.cssText="top:"+y+"px; left:"+x+"px; visibility: visible;";}}
function pauseGame(){if(g.view==="Game"){T.pauseAll();paused=true;D.getElementById('paused').style.display='block';if(travelStatus===0){travelToggle();}}}
function unpauseGame(){if(g.view==="Game"){T.resumeAll();paused=false;D.getElementById('paused').style.display='none';}}
function showTalents(show){statTab="Talents";$(".statButton").css({backgroundPosition:"0 0"});$('#talentStat').css({backgroundPosition:"0 100%"});if(show){charToggle();}}
function Error(foo,fg){var H1=D.createElement('span');H1.className='error';H1.innerHTML=foo+"<br>";if(fg){H1.style.color=fg;}
NG.errorMsg.appendChild(H1);T.delayedCall(2.5,function(){Remove(H1);});}
$(document).ready(function(){$(document).on({mouseenter:function(e){hoverItemStatus=true;mouseTTX=e.pageX-$NG.gameView.offset().left;mouseTTY=e.pageY;refreshTooltipDrop($(this));},mouseleave:function(){hoverItemStatus=false;NG.ttItem.style.display='none';}},".equipment,.inventory,.bank,.city");$("#gameView").on('mouseenter','#window2zoneday,#window3,#window6',function(){NG.ttItem.style.display='none';});$("#gameView").on('mouseenter','.buttons, .NCbuttons',function(e){NG.tooltip.style.visibility="hidden";var x=this.parentNode.parentNode.id;ttTimer.kill();ttTimer=T.delayedCall(1,function(){displayTooltip(x);});})
$NG.window3.on('mouseleave',function(){ttTimer.kill();NG.tooltip.style.visibility="hidden";}).on('mouseenter','.spacers',function(){ttTimer.kill();NG.tooltip.style.visibility="hidden";})
$("#window6").on('mouseleave',function(){ttTimer.kill();NG.tooltip.style.visibility="hidden";});$("#gameView").on('mouseenter','.buffIcons, .mobBuffIcons0, .mobBuffIcons1, .mobBuffIcons2, .mobBuffIcons3',function(e){NG.tooltipname.innerHTML=$(this).data("Name");NG.tooltipmsg.style.display="none";var x=this.parentNode.parentNode.id;displayTooltip(x);}).on('mouseleave','.buffIcons,.mobBuffIcons0,.mobBuffIcons1,.mobBuffIcons2,.mobBuffIcons3',function(){hideMobTooltip();});});function refreshTooltipDrop(that,bypass){if(hoverItemStatus){if(that===undefined){return;var that=$("#"+dropID);}
if(!bypass){hoverID=that;}
var showIt=false;dropSlot=that.parent().index();if(dropSlot!==-1){if(that.hasClass("inventory")&&P.item[dropSlot].name){refreshTooltip(that);showIt=true;hoverClass='inventory';}
if(that.hasClass("equipment")&&P.eq[dropSlot].name){refreshTooltip(that);showIt=true;hoverClass='equipment';}
if(that.hasClass("bank")){var Slot=dropSlot+(activeBankTab*90);if(P.bank[Slot].name){refreshTooltip(that);showIt=true;hoverClass='bank';}}
if(that.hasClass("city")){dropSlot=(that.parent().index()+24);if(P.item[dropSlot].name){refreshTooltip(that);showIt=true;}
hoverClass='inventory';}}
if(showIt===true){if((mouseTTX)<640){NG.ttItem.style.left='800px';}else{NG.ttItem.style.left='160px';}
NG.ttItem.style.display='block';NG.ttItem.style.top=~~((768-$NG.ttItem.height())/2)+'px';}
if(!$("#ttItemName").text()){NG.ttItem.style.display='none';}}}
function refreshTooltip(that){if(that===undefined){var that=$("#"+dropID);}
dropSlot=that.parent().index();if(that.hasClass("inventory")){showTooltip(that,"item");}
if(that.hasClass("equipment")){showTooltip(that,"eq");}
if(that.hasClass("bank")){dropSlot=dropSlot+(activeBankTab*90);showTooltip(that,"bank");}
if(that.hasClass("city")){dropSlot=((that.parent().index())+24);showTooltip(that,"item");}
if(!$("#ttItemName").text()){NG.ttItem.style.display='none';}}
function logItemName(foo,bar){if(bar===0){return'<span class="white">'+foo+'</span>';}else if(bar===1){return'<span class="magical">'+foo+'</span>';}else if(bar===2){return'<span class="rare">'+foo+'</span>';}else if(bar===3){return'<span class="unique">'+foo+'</span>';}else if(bar===4){return'<span class="set">'+foo+'</span>';}}
function animateParticlesDown(color){if(GLB.videoSetting!=="High"){return;}
var s2=img(color+"particle50");var d2=.1;if(isMobile){d2=.15;}
var ez1=ez.Qout;var ez2=ez.Qin;function doit(){if(my.job!=="Bard"){if(castingSpell===1){T.to(p3,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p3);}});T.to(p4,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p4);}});return;}}else{if(bardSingStatus===false){T.to(p3,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p3);}});T.to(p4,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p4);}});return;}}
var p2=cacheAdd(s2,6,357,550);T.to(p2,1,{y:968,scaleX:.5,scaleY:.5,ease:ez2,onComplete:function(){cRem(6,p2);}});var p1=cacheAdd(s2,6,897,550);T.to(p1,1,{y:968,scaleX:.5,scaleY:.5,ease:ez2,onComplete:function(){cRem(6,p1);}});T.delayedCall(d2,doit);}
var p3=can(color+"Light3",6,170,363,0,0,true);T.to(p3,.1,{scaleX:1,scaleY:1,onComplete:function(){T.to(p3,.25,{scaleX:.9,scaleY:.9,repeat:-1,yoyo:true});}});var p4=can(color+"Light3",6,710,363,0,0,true);T.to(p4,.5,{scaleX:1,scaleY:1,onComplete:function(){T.to(p4,.25,{scaleX:.9,scaleY:.9,repeat:-1,yoyo:true});}});doit();}
function animateParticlesUp(color){if(GLB.videoSetting!=="High"){return;}
var s2=img(color+"particle50");var d2=.1;if(isMobile){d2=.15;}
var ez1=ez.Qout;var ez2=ez.Qin;function doit(){if(my.job!=="Bard"){if(castingSpell===1){T.to(p3,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p3);}});T.to(p4,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p4);}});return;}}else{if(bardSingStatus===false){T.to(p3,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p3);}});T.to(p4,.25,{scaleX:0,scaleY:0,ease:ez1,onComplete:function(){cRem(6,p4);}});return;}}
var ranX=~~(M.random()*(6)-3);var ranX2=ranX*7;var x1=(345+ranX2+10);var p2=cacheAdd(s2,6,357,550);T.to(p2,1.25,{y:-90,x:x1,scaleX:.5,scaleY:.5,ease:ez2,onComplete:function(){cRem(6,p2);}});var x2=(885+ranX2+10);var p1=cacheAdd(s2,6,897,550);T.to(p1,1.25,{y:-90,x:x2,scaleX:.5,scaleY:.5,ease:ez2,onComplete:function(){cRem(6,p1);}});T.delayedCall(d2,doit);}
var p3=can(color+"Light3",6,170,363,0,0,true);T.to(p3,.5,{scaleX:1,scaleY:1,onComplete:function(){T.to(p3,.25,{scaleX:.9,scaleY:.9,repeat:-1,yoyo:true});}});var p4=can(color+"Light3",6,710,363,0,0,true);T.to(p4,.5,{scaleX:1,scaleY:1,onComplete:function(){T.to(p4,.25,{scaleX:.9,scaleY:.9,repeat:-1,yoyo:true});}});doit();}
function lore(msg,x1){var e9=D.getElementById('loreMsg');loreTimer.kill();if(msg){loreMsg=msg.split("<br><br>");}
if(g.view==="Game"){if(loreMsg[0]===undefined){$("#lore").css('display','none');$("#loreMsg, #introText").html('');T.set('#loreClick',{bottom:10});if(myZone()==="Salubrin Forest"&&my.difficulty===1&&my.exp===0&&my.level===1){showTutorial();}}else{if(x1===undefined){var x1=0;var _z=myZone();if(_z==="Aspen Grove"||_z==="Braxxen's Bastille"||_z==="Kordata Marshlands"||_z==="Arcturin's Crypt"){x1=-96;}else if(_z==="Artremia"||_z==="Fahlnir Citadel"||_z==="Kordata Ruins"||_z==="Temple of Prenssor"){x1=-192;}else if(_z==="Fenwoven"||_z==="Viston's Redoubt"||_z==="Galeblast Fortress"||_z==="Ashenflow Peak"||_z==="Dire Sanctum"||_z==="Nimgaul"){x1=-288;}}
var m2=loreMsg[0].replace(/<\/span>/g,"");var a1=m2.split(" ");for(var i=0,len=a1.length;i<len;i++){if(a1[i]==="<span"){delete a1[i];}}
var m2=a1.join(" ");var a2=m2.split("class='gold'>");var m2=a2.join("");e9.innerHTML=m2;D.getElementById('lorePortrait').style.backgroundPosition=x1+"px 0";if($("#lore").css('display')==="none"){$("#lore").css('display','block');}
T.to('#loreClick',.5,{startAt:{bottom:10},bottom:15,repeat:-1,yoyo:true});}}else if(g.view==="Intro"){if(loreMsg[0]===undefined){D.getElementById('introText').style.display='none';D.getElementById('introClick').style.display='none';$("#loreMsg, #introText").html('');var _z=myZone();if(_z==="Edenburg"){T.set('#loreClick',{bottom:10});T.to(canWorldMap,3,{scaleX:2.5,scaleY:2.5,x:1320,y:230,ease:ez.lin});T.to('#intro',3,{alpha:0,onComplete:function(){T.set('#intro',{display:'none'});D.getElementById('gameView').style.display='block';T.fromTo('#gameView',1,{opacity:0},{opacity:1});g.view="Game";}});}}else{D.getElementById('introText').style.display='block';D.getElementById('introText').innerHTML=loreMsg[0];T.to('#introClick',.5,{startAt:{bottom:140},bottom:145,repeat:-1,yoyo:true});T.to('#loreClick',.5,{startAt:{bottom:10},bottom:15,repeat:-1,yoyo:true});}}}
function makePortal(){var npc="Miranda";var _z=myZone();if(_z==="Aspen Grove"||_z==="Braxxen's Bastille"||_z==="Kordata Marshlands"||_z==="Arcturin's Crypt"){npc="Rendo";}else if(_z==="Artremia"||_z==="Fahlnir Citadel"||_z==="Kordata Ruins"||_z==="Temple of Prenssor"){npc="Valeska";}else if(_z==="Fenwoven"||_z==="Viston's Redoubt"||_z==="Galeblast Fortress"||_z==="Ashenflow Peak"||_z==="Dire Sanctum"||_z==="Nimgaul"){npc="Arwen";}
Chat(npc+" creates a magic portal to your quest's destination.");var interval=.01;var d=2;if(isMobile===true){interval=.15;d=1;}
var ez1=ez.Qout;function doit(){var angle=M.random()*360;var x1=circX(630,130,angle);var y1=circY(470,130,angle);var p1=can('whiteparticle50',7,x1,y1,25,25);T.to(p1,d,{startAt:{alpha:0},ease:ez1,alpha:1});T.to(p1,d,{x:640,y:480,scaleX:.1,scaleY:.1,ease:ez1,onComplete:function(){cRem(7,p1);}});if(portalStatus===true){T.delayedCall(interval,doit);}}
townPortal=IMG(480,320,320,320,'portal');townPortal.style.opacity=0;townPortal.id="townPortal";NG.gameView.appendChild(townPortal);portalStatus=true;T.to(townPortal,3.5,{rotation:360,repeat:-1,ease:ez.lin});T.fromTo(townPortal,1,{scale:0},{scale:1,ease:ez.Bout,onComplete:function(){T.to(townPortal,3,{scale:.9,yoyo:true,repeat:-1,ease:ez.lin});}});doit();T.to(townPortal,1.25,{opacity:1});g.showPortal=false;}
function travelNextZone(){var z='';var sz=0;var _z=myZone();var _sz=mySubzone();if(_z==="Edenburg"){z="Salubrin Forest";}else if(_z==="Salubrin Forest"){z="Tendolin Meadows";}else if(_z==="Tendolin Meadows"){z="Greenthorn Cavern";sz=1;}else if(_z==="Greenthorn Cavern"){z="Greenthorn Cavern";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Riven Grotto";sz=1;}}else if(_z==="Riven Grotto"){z="Riven Grotto";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Lanfeld Outpost";sz=1;}}else if(_z==="Lanfeld Outpost"){z="Lanfeld Outpost";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Aspen Grove";sz=0;}}else if(_z==="Aspen Grove"){z="Braxxen's Bastille";sz=1;}else if(_z==="Braxxen's Bastille"){z="Braxxen's Bastille";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Kordata Marshlands";sz=1;}}else if(_z==="Kordata Marshlands"){z="Kordata Marshlands";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Arcturin's Crypt";sz=1;}}else if(_z==="Arcturin's Crypt"){z="Arcturin's Crypt";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Artremia";sz=0;}}else if(_z==="Artremia"){z="Fahlnir Citadel";sz=1;}else if(_z==="Fahlnir Citadel"){z="Fahlnir Citadel";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Kordata Ruins";sz=1;}}else if(_z==="Kordata Ruins"){z="Kordata Ruins";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Temple of Prenssor";sz=1;}}else if(_z==="Temple of Prenssor"){z="Temple of Prenssor";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){z="Fenwoven";sz=0;}}else if(_z==="Fenwoven"){z="Viston's Redoubt";sz=1;}else if(_z==="Viston's Redoubt"){z="Viston's Redoubt";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){sz=4;}else if(_sz===4){z="Galeblast Fortress";sz=1;}}else if(_z==="Galeblast Fortress"){z="Galeblast Fortress";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){sz=4;}else if(_sz===4){z="Ashenflow Peak";sz=1;}}else if(_z==="Ashenflow Peak"){z="Ashenflow Peak";if(_sz===1){sz=2;}else if(_sz===2){sz=3;}else if(_sz===3){sz=4;}else if(_sz===4){z="Dire Sanctum";sz=0;}}else if(_z==="Dire Sanctum"){z="Nimgaul";sz=0;}
travelZone(z,sz);}
$("#gameView").on('click','#townPortal',function(){if(countMobs()>0){QMsg("You must leave combat first!");}else{travelNextZone();}});function displayCooldownTime(t){if(t>60){t=M.ceil(t/60)+'m';}
return t;}
function timerTick(z,t,id){if(typeof timers[id]==='object'){timers[id].kill();}
if(t<1){D.getElementById(id).textContent='';}else{if(t%1===0){D.getElementById(id).textContent=displayCooldownTime(t);timers[id]=T.delayedCall(1,function(){timerTick(z,--t,id);});}else{var rem=(t%1);var disp=M.ceil(t/1);D.getElementById(id).textContent=displayCooldownTime(disp);t-=rem;timers[id]=T.delayedCall(rem,function(){timerTick(z,t,id);});}}}
$(document).ready(function(){$("#gameView").on('click','#myName',function(){if(my.level>=20){if(!my.lastName){$("#lastNameWrap").css("display","block");$("#lastName").val("").focus();nameFocus=true;}}else{Error("You cannot change your surname until level 20.");}});$("#window2zoneday,#buffWindow").on('click',function(e){var cleared=clearMyWindows();if(e.target===this&&cityStatus===false&&mobsFound()===false&&cleared===false){addMonster();}});$("#gameView").on('focus','#lastName',function(){nameFocus=true;}).on('blur','#lastName',function(){nameFocus=false;});});$('#worldMap').on('click','.zoneSelectHeader',function(){var that=$(this);var x=that.html();if(x==='I'){viewingAct=1;}else if(x==='II'){viewingAct=2;}else if(x==="III"){viewingAct=3;}else if(x==="IV"){viewingAct=4;}
writeMapHtml();});$("#lore").on('click',function(){if(loreMsg.length>0){loreMsg.shift();lore();}});$("#introText").on('click',function(){if(loreMsg.length>0){loreMsg.shift();lore();}});$("#paused").on('click',function(){unpauseGame();});$(function(){$('html').on('contextmenu',function(e){if(!dev){e.preventDefault();}});$("#gameView").on('click','.winHeader',function(){var x=this.id;if(!g.draggingWindows){if(x==='bankHeader'){bankToggle();}else if(x==='statHeader'){charToggle();}else if(x==='invHeader'){inventory();}else if(x==="questHeader"){questToggle();}else if(x==="optionHeader"){optionsToggle();}else if(x==="battleReportHead"){hideBattleReport();}}});});function debugReportElements(){if(GLB.debugMode==="On"){Chat("Elements - DOM: "+$("*").length+" Canvas1: "+stage[5].getNumChildren()+" Canvas2: "+stage[6].getNumChildren()+" Canvas3: "+stage[7].getNumChildren(),2);}}
var audioAssets=[],audioAssetsNumber=0;function initAudio(){for(var i=0;i<=49;i++){audioAssets[i]='';}}
function audioNum(){if(audioAssetsNumber>49){audioAssetsNumber=0;}
return audioAssetsNumber++;}
function flexTime(val,d){if(d===undefined){d=.25;}
if(val===undefined){val=0;}
GTS.kill();GTS=T.to(timescale,d,{startAt:{rate:val},rate:1,onUpdate:function(){T.globalTimeScale(timescale.rate);}});}
function loadAudio(sound){var found=false;for(var i=0,len=audioAssets.length;i<len;i++){if(audioAssets[i].nodeName==="AUDIO"){if(audioAssets[i].src.indexOf(sound)!==-1){found=true;continue;}}}
if(found===false){var x=audioNum();audioAssets[x]=D.createElement('audio');audioAssets[x].src=soundLocation+sound+"."+audioExt;}}
initAudio();scriptsLoaded=true;
})($,Math,document,location);